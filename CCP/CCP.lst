

HI-TECH Software PIC PRO Macro Assembler V9.83 build 10920 
                                                                                               Tue Dec 06 11:03:54 2022

HI-TECH Software Omniscient Code Generator (PRO mode) build 10920
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	config,global,class=CONFIG,delta=2
     5                           	psect	strings,global,class=STRING,delta=2
     6                           	psect	cinit,global,class=CODE,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	maintext,global,class=CODE,delta=2
    12                           	psect	text531,local,class=CODE,delta=2
    13                           	psect	text534,local,class=CODE,delta=2
    14                           	psect	text536,local,class=CODE,delta=2
    15                           	psect	text537,local,class=CODE,delta=2
    16                           	psect	text539,local,class=CODE,delta=2
    17                           	psect	text557,local,class=CODE,delta=2
    18                           	psect	text560,local,class=CODE,delta=2
    19                           	psect	text562,local,class=CODE,delta=2
    20                           	psect	intentry,global,class=CODE,delta=2
    21                           	psect	text563,local,class=CODE,delta=2
    22                           	psect	pa_nodes,global,class=CODE,delta=2
    23                           	dabs	1,0x7E,2
    24  000A                     	;#
    25                           
    26                           	psect	config
    27  2007  E3C2               	dw	58306	;#
    28                           
    29                           	psect	strings
    30  1000                     __pstrings:	
    31  1000                     stringtab:	
    32                           ;	global	stringdir,stringtab,__stringbase
    33                           
    34  1000                     stringcode:	
    35                           ;	String table - string pointers are 1 byte each
    36                           
    37  1000                     stringdir:	
    38  1000  3010               	movlw	high stringdir
    39  1001  008A               	movwf	10
    40  1002  0804               	movf	4,w
    41  1003  0A84               	incf	4,f
    42  1004  0782               	addwf	2,f
    43  1005                     __stringbase:	
    44  1005  3400               	retlw	0
    45  1006                     __npowers_:	
    46  1006  3400               	retlw	0
    47  1007  3480               	retlw	128
    48  1008  343F               	retlw	63
    49  1009  34CD               	retlw	205
    50  100A  34CC               	retlw	204
    51  100B  343D               	retlw	61
    52  100C  34D7               	retlw	215
    53  100D  3423               	retlw	35
    54  100E  343C               	retlw	60
    55  100F  3412               	retlw	18
    56  1010  3483               	retlw	131
    57  1011  343A               	retlw	58
    58  1012  34B7               	retlw	183
    59  1013  34D1               	retlw	209
    60  1014  3438               	retlw	56
    61  1015  34C6               	retlw	198
    62  1016  3427               	retlw	39
    63  1017  3437               	retlw	55
    64  1018  3438               	retlw	56
    65  1019  3486               	retlw	134
    66  101A  3435               	retlw	53
    67  101B  34C0               	retlw	192
    68  101C  34D6               	retlw	214
    69  101D  3433               	retlw	51
    70  101E  34CC               	retlw	204
    71  101F  342B               	retlw	43
    72  1020  3432               	retlw	50
    73  1021  3470               	retlw	112
    74  1022  3489               	retlw	137
    75  1023  3430               	retlw	48
    76  1024  34E7               	retlw	231
    77  1025  34DB               	retlw	219
    78  1026  342E               	retlw	46
    79  1027  34E5               	retlw	229
    80  1028  343C               	retlw	60
    81  1029  341E               	retlw	30
    82  102A  3442               	retlw	66
    83  102B  34A2               	retlw	162
    84  102C  340D               	retlw	13
    85  102D                     __powers_:	
    86  102D  3400               	retlw	0
    87  102E  3480               	retlw	128
    88  102F  343F               	retlw	63
    89  1030  3400               	retlw	0
    90  1031  3420               	retlw	32
    91  1032  3441               	retlw	65
    92  1033  3400               	retlw	0
    93  1034  34C8               	retlw	200
    94  1035  3442               	retlw	66
    95  1036  3400               	retlw	0
    96  1037  347A               	retlw	122
    97  1038  3444               	retlw	68
    98  1039  3440               	retlw	64
    99  103A  341C               	retlw	28
   100  103B  3446               	retlw	70
   101  103C  3450               	retlw	80
   102  103D  34C3               	retlw	195
   103  103E  3447               	retlw	71
   104  103F  3424               	retlw	36
   105  1040  3474               	retlw	116
   106  1041  3449               	retlw	73
   107  1042  3497               	retlw	151
   108  1043  3418               	retlw	24
   109  1044  344B               	retlw	75
   110  1045  34BC               	retlw	188
   111  1046  34BE               	retlw	190
   112  1047  344C               	retlw	76
   113  1048  346B               	retlw	107
   114  1049  346E               	retlw	110
   115  104A  344E               	retlw	78
   116  104B  3403               	retlw	3
   117  104C  3415               	retlw	21
   118  104D  3450               	retlw	80
   119  104E  3479               	retlw	121
   120  104F  34AD               	retlw	173
   121  1050  3460               	retlw	96
   122  1051  34F3               	retlw	243
   123  1052  3449               	retlw	73
   124  1053  3471               	retlw	113
   125  1054                     _dpowers:	
   126  1054  3401               	retlw	1
   127  1055  3400               	retlw	0
   128  1056  3400               	retlw	0
   129  1057  3400               	retlw	0
   130  1058  340A               	retlw	10
   131  1059  3400               	retlw	0
   132  105A  3400               	retlw	0
   133  105B  3400               	retlw	0
   134  105C  3464               	retlw	100
   135  105D  3400               	retlw	0
   136  105E  3400               	retlw	0
   137  105F  3400               	retlw	0
   138  1060  34E8               	retlw	232
   139  1061  3403               	retlw	3
   140  1062  3400               	retlw	0
   141  1063  3400               	retlw	0
   142  1064  3410               	retlw	16
   143  1065  3427               	retlw	39
   144  1066  3400               	retlw	0
   145  1067  3400               	retlw	0
   146  1068  34A0               	retlw	160
   147  1069  3486               	retlw	134
   148  106A  3401               	retlw	1
   149  106B  3400               	retlw	0
   150  106C  3440               	retlw	64
   151  106D  3442               	retlw	66
   152  106E  340F               	retlw	15
   153  106F  3400               	retlw	0
   154  1070  3480               	retlw	128
   155  1071  3496               	retlw	150
   156  1072  3498               	retlw	152
   157  1073  3400               	retlw	0
   158  1074  3400               	retlw	0
   159  1075  34E1               	retlw	225
   160  1076  34F5               	retlw	245
   161  1077  3405               	retlw	5
   162  1078  3400               	retlw	0
   163  1079  34CA               	retlw	202
   164  107A  349A               	retlw	154
   165  107B  343B               	retlw	59
   166  0015                     _CCPR1	set	21
   167  001B                     _CCPR2	set	27
   168  0017                     _CCP1CON	set	23
   169  001D                     _CCP2CON	set	29
   170  000F                     _TMR1H	set	15
   171  000E                     _TMR1L	set	14
   172  0062                     _CCP1IF	set	98
   173  0068                     _CCP2IF	set	104
   174  005F                     _GIE	set	95
   175  005E                     _PEIE	set	94
   176  0041                     _RD1	set	65
   177  0042                     _RD2	set	66
   178  0043                     _RD3	set	67
   179  0044                     _RD4	set	68
   180  0045                     _RD5	set	69
   181  0046                     _RD6	set	70
   182  0047                     _RD7	set	71
   183  0049                     _RE1	set	73
   184  0084                     _T1CKPS0	set	132
   185  0085                     _T1CKPS1	set	133
   186  0082                     _T1SYNC	set	130
   187  0081                     _TMR1CS	set	129
   188  0086                     _TMR1GE	set	134
   189  0080                     _TMR1ON	set	128
   190  0462                     _CCP1IE	set	1122
   191  0468                     _CCP2IE	set	1128
   192  0438                     _TRISC0	set	1080
   193  0439                     _TRISC1	set	1081
   194  043A                     _TRISC2	set	1082
   195  0441                     _TRISD1	set	1089
   196  0442                     _TRISD2	set	1090
   197  0443                     _TRISD3	set	1091
   198  0444                     _TRISD4	set	1092
   199  0445                     _TRISD5	set	1093
   200  0446                     _TRISD6	set	1094
   201  0447                     _TRISD7	set	1095
   202  0448                     _TRISE0	set	1096
   203  0449                     _TRISE1	set	1097
   204  0188                     _ANSEL	set	392
   205  0189                     _ANSELH	set	393
   206  107C                     STR_1:	
   207  107C  3478               	retlw	120	;'x'
   208  107D  3475               	retlw	117	;'u'
   209  107E  346E               	retlw	110	;'n'
   210  107F  3467               	retlw	103	;'g'
   211  1080  343A               	retlw	58	;':'
   212  1081  3420               	retlw	32	;' '
   213  1082  3425               	retlw	37	;'%'
   214  1083  3430               	retlw	48	;'0'
   215  1084  3438               	retlw	56	;'8'
   216  1085  3475               	retlw	117	;'u'
   217  1086  3400               	retlw	0
   218  1087                     STR_2:	
   219  1087  3466               	retlw	102	;'f'
   220  1088  343A               	retlw	58	;':'
   221  1089  3420               	retlw	32	;' '
   222  108A  3425               	retlw	37	;'%'
   223  108B  3435               	retlw	53	;'5'
   224  108C  342E               	retlw	46	;'.'
   225  108D  3432               	retlw	50	;'2'
   226  108E  3466               	retlw	102	;'f'
   227  108F  3400               	retlw	0
   228                           
   229                           	psect	cinit
   230  07B2                     start_initialization:	
   231                           
   232                           ; Clear objects allocated to BANK0
   233  07B2  01E2               	clrf	__pbssBANK0& (0+127)
   234  07B3  01E3               	clrf	(__pbssBANK0+1)& (0+127)
   235  07B4  01E4               	clrf	(__pbssBANK0+2)& (0+127)
   236  07B5  01E5               	clrf	(__pbssBANK0+3)& (0+127)
   237  07B6  01E6               	clrf	(__pbssBANK0+4)& (0+127)
   238  07B7  01E7               	clrf	(__pbssBANK0+5)& (0+127)
   239  07B8  01E8               	clrf	(__pbssBANK0+6)& (0+127)
   240  07B9  01E9               	clrf	(__pbssBANK0+7)& (0+127)
   241  07BA  01EA               	clrf	(__pbssBANK0+8)& (0+127)
   242  07BB  01EB               	clrf	(__pbssBANK0+9)& (0+127)
   243  07BC  01EC               	clrf	(__pbssBANK0+10)& (0+127)
   244  07BD  01ED               	clrf	(__pbssBANK0+11)& (0+127)
   245  07BE  01EE               	clrf	(__pbssBANK0+12)& (0+127)
   246  07BF  01EF               	clrf	(__pbssBANK0+13)& (0+127)
   247  07C0                     end_of_initialization:	
   248                           ;End of C runtime variable initialization code
   249                           
   250  07C0  0183               	clrf	3
   251  07C1  160A  118A  2E71   	ljmp	_main	;jump to C main() function
   252                           
   253                           	psect	bssBANK0
   254  0062                     __pbssBANK0:	
   255  0062                     _xung:	
   256  0062                     	ds	4
   257  0066                     _d:	
   258  0066                     	ds	3
   259  0069                     _count1:	
   260  0069                     	ds	2
   261  006B                     _count2:	
   262  006B                     	ds	2
   263  006D                     _t:	
   264  006D                     	ds	3
   265                           
   266                           	psect	cstackBANK1
   267  00A0                     __pcstackBANK1:	
   268  00A0                     _printf$3165:	
   269                           
   270                           ; 4 bytes @ 0x0
   271  00A0                     	ds	4
   272  00A4                     printf@ap:	
   273                           
   274                           ; 1 bytes @ 0x4
   275  00A4                     	ds	1
   276  00A5                     printf@integ:	
   277                           
   278                           ; 3 bytes @ 0x5
   279  00A5                     	ds	3
   280  00A8                     printf@_val:	
   281                           
   282                           ; 4 bytes @ 0x8
   283  00A8                     	ds	4
   284  00AC                     printf@f:	
   285                           
   286                           ; 1 bytes @ 0xC
   287  00AC                     	ds	1
   288  00AD                     printf@flag:	
   289                           
   290                           ; 2 bytes @ 0xD
   291  00AD                     	ds	2
   292  00AF                     printf@exp:	
   293                           
   294                           ; 2 bytes @ 0xF
   295  00AF                     	ds	2
   296  00B1                     printf@width:	
   297                           
   298                           ; 2 bytes @ 0x11
   299  00B1                     	ds	2
   300  00B3                     printf@fval:	
   301                           
   302                           ; 3 bytes @ 0x13
   303  00B3                     	ds	3
   304  00B6                     printf@prec:	
   305                           
   306                           ; 2 bytes @ 0x16
   307  00B6                     	ds	2
   308  00B8                     printf@c:	
   309                           
   310                           ; 1 bytes @ 0x18
   311  00B8                     	ds	1
   312                           
   313                           	psect	cstackCOMMON
   314  0070                     __pcstackCOMMON:	
   315  0070                     ?_isprint:	
   316  0070                     ?_isdigit:	
   317                           ; 1 bit 
   318                           
   319  0070                     ?_lcd_init:	
   320                           ; 1 bit 
   321                           
   322  0070                     ?_lcd_putc:	
   323                           ; 0 bytes @ 0x0
   324                           
   325  0070                     ?_main:	
   326                           ; 0 bytes @ 0x0
   327                           
   328  0070                     ?_ngat:	
   329                           ; 0 bytes @ 0x0
   330                           
   331  0070                     ??_ngat:	
   332                           ; 0 bytes @ 0x0
   333                           
   334  0070                     ?_putch:	
   335                           ; 0 bytes @ 0x0
   336                           
   337  0070                     ?_lcd_busy:	
   338                           ; 0 bytes @ 0x0
   339                           
   340                           
   341                           ; 1 bytes @ 0x0
   342  0070                     	ds	2
   343  0072                     ?_lcd_put_byte:	
   344  0072                     ??_lcd_busy:	
   345                           ; 0 bytes @ 0x2
   346                           
   347  0072                     ??_isprint:	
   348                           ; 0 bytes @ 0x2
   349                           
   350  0072                     ??_isdigit:	
   351                           ; 0 bytes @ 0x2
   352                           
   353  0072                     ?___ftge:	
   354                           ; 0 bytes @ 0x2
   355                           
   356  0072                     ?___lbmod:	
   357                           ; 1 bit 
   358                           
   359  0072                     ?_abs:	
   360                           ; 1 bytes @ 0x2
   361                           
   362  0072                     ?___wmul:	
   363                           ; 2 bytes @ 0x2
   364                           
   365  0072                     ?___awmod:	
   366                           ; 2 bytes @ 0x2
   367                           
   368  0072                     ?___ftpack:	
   369                           ; 2 bytes @ 0x2
   370                           
   371  0072                     ?___ftneg:	
   372                           ; 3 bytes @ 0x2
   373                           
   374  0072                     ?__tdiv_to_l_:	
   375                           ; 3 bytes @ 0x2
   376                           
   377  0072                     ?__div_to_l_:	
   378                           ; 4 bytes @ 0x2
   379                           
   380  0072                     ?___lldiv:	
   381                           ; 4 bytes @ 0x2
   382                           
   383  0072                     lcd_put_byte@b:	
   384                           ; 4 bytes @ 0x2
   385                           
   386  0072                     _isdigit$3675:	
   387                           ; 1 bytes @ 0x2
   388                           
   389  0072                     _isprint$3678:	
   390                           ; 1 bytes @ 0x2
   391                           
   392  0072                     ___lbmod@divisor:	
   393                           ; 1 bytes @ 0x2
   394                           
   395  0072                     abs@a:	
   396                           ; 1 bytes @ 0x2
   397                           
   398  0072                     ___wmul@multiplier:	
   399                           ; 2 bytes @ 0x2
   400                           
   401  0072                     ___awmod@divisor:	
   402                           ; 2 bytes @ 0x2
   403                           
   404  0072                     ___ftneg@f1:	
   405                           ; 2 bytes @ 0x2
   406                           
   407  0072                     ___ftge@ff1:	
   408                           ; 3 bytes @ 0x2
   409                           
   410  0072                     __tdiv_to_l_@f1:	
   411                           ; 3 bytes @ 0x2
   412                           
   413  0072                     __div_to_l_@f1:	
   414                           ; 3 bytes @ 0x2
   415                           
   416  0072                     ___ftpack@arg:	
   417                           ; 3 bytes @ 0x2
   418                           
   419  0072                     ___lldiv@divisor:	
   420                           ; 3 bytes @ 0x2
   421                           
   422                           
   423                           ; 4 bytes @ 0x2
   424  0072                     	ds	1
   425  0073                     ??_lcd_put_byte:	
   426  0073                     ??___lbmod:	
   427                           ; 0 bytes @ 0x3
   428                           
   429  0073                     lcd_busy@busy:	
   430                           ; 0 bytes @ 0x3
   431                           
   432  0073                     isdigit@c:	
   433                           ; 1 bytes @ 0x3
   434                           
   435  0073                     isprint@c:	
   436                           ; 1 bytes @ 0x3
   437                           
   438                           
   439                           ; 1 bytes @ 0x3
   440  0073                     	ds	1
   441  0074                     ??_abs:	
   442  0074                     ___lbmod@dividend:	
   443                           ; 0 bytes @ 0x4
   444                           
   445  0074                     ___wmul@multiplicand:	
   446                           ; 1 bytes @ 0x4
   447                           
   448  0074                     ___awmod@dividend:	
   449                           ; 2 bytes @ 0x4
   450                           
   451                           
   452                           ; 2 bytes @ 0x4
   453  0074                     	ds	1
   454  0075                     ??___ftneg:	
   455  0075                     lcd_put_byte@rs:	
   456                           ; 0 bytes @ 0x5
   457                           
   458  0075                     ___lbmod@counter:	
   459                           ; 1 bytes @ 0x5
   460                           
   461  0075                     ___ftpack@exp:	
   462                           ; 1 bytes @ 0x5
   463                           
   464  0075                     ___ftge@ff2:	
   465                           ; 1 bytes @ 0x5
   466                           
   467  0075                     __tdiv_to_l_@f2:	
   468                           ; 3 bytes @ 0x5
   469                           
   470  0075                     __div_to_l_@f2:	
   471                           ; 3 bytes @ 0x5
   472                           
   473                           
   474                           ; 3 bytes @ 0x5
   475  0075                     	ds	1
   476  0076                     ??___wmul:	
   477  0076                     ??___awmod:	
   478                           ; 0 bytes @ 0x6
   479                           
   480  0076                     lcd_put_byte@temp:	
   481                           ; 0 bytes @ 0x6
   482                           
   483  0076                     ___lbmod@rem:	
   484                           ; 1 bytes @ 0x6
   485                           
   486  0076                     ___awmod@counter:	
   487                           ; 1 bytes @ 0x6
   488                           
   489  0076                     ___ftpack@sign:	
   490                           ; 1 bytes @ 0x6
   491                           
   492  0076                     ___wmul@product:	
   493                           ; 1 bytes @ 0x6
   494                           
   495  0076                     ___lldiv@dividend:	
   496                           ; 2 bytes @ 0x6
   497                           
   498                           
   499                           ; 4 bytes @ 0x6
   500  0076                     	ds	1
   501  0077                     ?_lcd_gotoxy:	
   502  0077                     ??___ftpack:	
   503                           ; 0 bytes @ 0x7
   504                           
   505  0077                     ??_lcd_init:	
   506                           ; 0 bytes @ 0x7
   507                           
   508  0077                     ?___lbdiv:	
   509                           ; 0 bytes @ 0x7
   510                           
   511  0077                     lcd_gotoxy@row:	
   512                           ; 1 bytes @ 0x7
   513                           
   514  0077                     ___lbdiv@divisor:	
   515                           ; 1 bytes @ 0x7
   516                           
   517  0077                     ___awmod@sign:	
   518                           ; 1 bytes @ 0x7
   519                           
   520                           
   521                           ; 1 bytes @ 0x7
   522  0077                     	ds	1
   523  0078                     ??_lcd_gotoxy:	
   524  0078                     ??__tdiv_to_l_:	
   525                           ; 0 bytes @ 0x8
   526                           
   527  0078                     ??___lbdiv:	
   528                           ; 0 bytes @ 0x8
   529                           
   530  0078                     ??___ftge:	
   531                           ; 0 bytes @ 0x8
   532                           
   533  0078                     ?___awdiv:	
   534                           ; 0 bytes @ 0x8
   535                           
   536  0078                     lcd_gotoxy@col:	
   537                           ; 2 bytes @ 0x8
   538                           
   539  0078                     ___lbdiv@dividend:	
   540                           ; 1 bytes @ 0x8
   541                           
   542  0078                     ___awdiv@divisor:	
   543                           ; 1 bytes @ 0x8
   544                           
   545                           
   546                           ; 2 bytes @ 0x8
   547  0078                     	ds	1
   548  0079                     lcd_gotoxy@address:	
   549  0079                     ___lbdiv@counter:	
   550                           ; 1 bytes @ 0x9
   551                           
   552                           
   553                           ; 1 bytes @ 0x9
   554  0079                     	ds	1
   555  007A                     ??_lcd_putc:	
   556  007A                     ??___llmod:	
   557                           ; 0 bytes @ 0xA
   558                           
   559  007A                     ??___lldiv:	
   560                           ; 0 bytes @ 0xA
   561                           
   562  007A                     ??___altoft:	
   563                           ; 0 bytes @ 0xA
   564                           
   565  007A                     ??___lltoft:	
   566                           ; 0 bytes @ 0xA
   567                           
   568  007A                     lcd_putc@c:	
   569                           ; 0 bytes @ 0xA
   570                           
   571  007A                     ___lbdiv@quotient:	
   572                           ; 1 bytes @ 0xA
   573                           
   574  007A                     ___llmod@counter:	
   575                           ; 1 bytes @ 0xA
   576                           
   577  007A                     ___altoft@exp:	
   578                           ; 1 bytes @ 0xA
   579                           
   580  007A                     ___lltoft@exp:	
   581                           ; 1 bytes @ 0xA
   582                           
   583  007A                     ___awdiv@dividend:	
   584                           ; 1 bytes @ 0xA
   585                           
   586                           
   587                           ; 2 bytes @ 0xA
   588  007A                     	ds	1
   589  007B                     ??_putch:	
   590  007B                     ?___bmul:	
   591                           ; 0 bytes @ 0xB
   592                           
   593  007B                     putch@c:	
   594                           ; 1 bytes @ 0xB
   595                           
   596  007B                     ___bmul@multiplicand:	
   597                           ; 1 bytes @ 0xB
   598                           
   599  007B                     ___altoft@sign:	
   600                           ; 1 bytes @ 0xB
   601                           
   602                           
   603                           ; 1 bytes @ 0xB
   604  007B                     	ds	1
   605  007C                     ??_fround:	
   606  007C                     ??___bmul:	
   607                           ; 0 bytes @ 0xC
   608                           
   609  007C                     ??___ftsub:	
   610                           ; 0 bytes @ 0xC
   611                           
   612  007C                     ??___awdiv:	
   613                           ; 0 bytes @ 0xC
   614                           
   615                           
   616                           	psect	cstackBANK0
   617  0020                     __pcstackBANK0:	
   618                           ; 0 bytes @ 0xC
   619                           
   620  0020                     ??__div_to_l_:	
   621  0020                     ?___altoft:	
   622                           ; 0 bytes @ 0x0
   623                           
   624  0020                     ?___lltoft:	
   625                           ; 3 bytes @ 0x0
   626                           
   627  0020                     ___bmul@product:	
   628                           ; 3 bytes @ 0x0
   629                           
   630  0020                     ___awdiv@counter:	
   631                           ; 1 bytes @ 0x0
   632                           
   633  0020                     ___lldiv@quotient:	
   634                           ; 1 bytes @ 0x0
   635                           
   636  0020                     ___altoft@c:	
   637                           ; 4 bytes @ 0x0
   638                           
   639  0020                     ___lltoft@c:	
   640                           ; 4 bytes @ 0x0
   641                           
   642  0020                     __tdiv_to_l_@quot:	
   643                           ; 4 bytes @ 0x0
   644                           
   645                           
   646                           ; 4 bytes @ 0x0
   647  0020                     	ds	1
   648  0021                     ___bmul@multiplier:	
   649  0021                     ___awdiv@sign:	
   650                           ; 1 bytes @ 0x1
   651                           
   652                           
   653                           ; 1 bytes @ 0x1
   654  0021                     	ds	1
   655  0022                     ___awdiv@quotient:	
   656                           
   657                           ; 2 bytes @ 0x2
   658  0022                     	ds	2
   659  0024                     ?___fttol:	
   660  0024                     ___lldiv@counter:	
   661                           ; 4 bytes @ 0x4
   662                           
   663  0024                     __tdiv_to_l_@cntr:	
   664                           ; 1 bytes @ 0x4
   665                           
   666  0024                     ___fttol@f1:	
   667                           ; 1 bytes @ 0x4
   668                           
   669                           
   670                           ; 3 bytes @ 0x4
   671  0024                     	ds	1
   672  0025                     ?___llmod:	
   673  0025                     __tdiv_to_l_@exp1:	
   674                           ; 4 bytes @ 0x5
   675                           
   676  0025                     ___llmod@divisor:	
   677                           ; 1 bytes @ 0x5
   678                           
   679                           
   680                           ; 4 bytes @ 0x5
   681  0025                     	ds	3
   682  0028                     ??___fttol:	
   683  0028                     __div_to_l_@quot:	
   684                           ; 0 bytes @ 0x8
   685                           
   686                           
   687                           ; 4 bytes @ 0x8
   688  0028                     	ds	1
   689  0029                     ___llmod@dividend:	
   690                           
   691                           ; 4 bytes @ 0x9
   692  0029                     	ds	2
   693  002B                     ___fttol@sign1:	
   694                           
   695                           ; 1 bytes @ 0xB
   696  002B                     	ds	1
   697  002C                     __div_to_l_@cntr:	
   698  002C                     ___fttol@lval:	
   699                           ; 1 bytes @ 0xC
   700                           
   701                           
   702                           ; 4 bytes @ 0xC
   703  002C                     	ds	1
   704  002D                     __div_to_l_@exp1:	
   705                           
   706                           ; 1 bytes @ 0xD
   707  002D                     	ds	3
   708  0030                     ___fttol@exp1:	
   709                           
   710                           ; 1 bytes @ 0x10
   711  0030                     	ds	1
   712  0031                     ?___ftmul:	
   713  0031                     ___ftmul@f1:	
   714                           ; 3 bytes @ 0x11
   715                           
   716                           
   717                           ; 3 bytes @ 0x11
   718  0031                     	ds	3
   719  0034                     ___ftmul@f2:	
   720                           
   721                           ; 3 bytes @ 0x14
   722  0034                     	ds	3
   723  0037                     ??___ftmul:	
   724                           
   725                           ; 0 bytes @ 0x17
   726  0037                     	ds	3
   727  003A                     ___ftmul@exp:	
   728                           
   729                           ; 1 bytes @ 0x1A
   730  003A                     	ds	1
   731  003B                     ___ftmul@f3_as_product:	
   732                           
   733                           ; 3 bytes @ 0x1B
   734  003B                     	ds	3
   735  003E                     ___ftmul@cntr:	
   736                           
   737                           ; 1 bytes @ 0x1E
   738  003E                     	ds	1
   739  003F                     ___ftmul@sign:	
   740                           
   741                           ; 1 bytes @ 0x1F
   742  003F                     	ds	1
   743  0040                     ?_scale:	
   744  0040                     ?___ftadd:	
   745                           ; 3 bytes @ 0x20
   746                           
   747  0040                     ___ftadd@f1:	
   748                           ; 3 bytes @ 0x20
   749                           
   750                           
   751                           ; 3 bytes @ 0x20
   752  0040                     	ds	3
   753  0043                     ??_scale:	
   754  0043                     ___ftadd@f2:	
   755                           ; 0 bytes @ 0x23
   756                           
   757                           
   758                           ; 3 bytes @ 0x23
   759  0043                     	ds	3
   760  0046                     ??___ftadd:	
   761                           
   762                           ; 0 bytes @ 0x26
   763  0046                     	ds	1
   764  0047                     _scale$4119:	
   765                           
   766                           ; 3 bytes @ 0x27
   767  0047                     	ds	2
   768  0049                     ___ftadd@sign:	
   769                           
   770                           ; 1 bytes @ 0x29
   771  0049                     	ds	1
   772  004A                     scale@scl:	
   773  004A                     ___ftadd@exp2:	
   774                           ; 1 bytes @ 0x2A
   775                           
   776                           
   777                           ; 1 bytes @ 0x2A
   778  004A                     	ds	1
   779  004B                     ___ftadd@exp1:	
   780                           
   781                           ; 1 bytes @ 0x2B
   782  004B                     	ds	1
   783  004C                     ?_fround:	
   784  004C                     ?___ftsub:	
   785                           ; 3 bytes @ 0x2C
   786                           
   787  004C                     ___ftsub@f2:	
   788                           ; 3 bytes @ 0x2C
   789                           
   790                           
   791                           ; 3 bytes @ 0x2C
   792  004C                     	ds	3
   793  004F                     ___ftsub@f1:	
   794  004F                     _fround$4118:	
   795                           ; 3 bytes @ 0x2F
   796                           
   797                           
   798                           ; 3 bytes @ 0x2F
   799  004F                     	ds	3
   800  0052                     _fround$4117:	
   801                           
   802                           ; 3 bytes @ 0x32
   803  0052                     	ds	3
   804  0055                     fround@prec:	
   805                           
   806                           ; 1 bytes @ 0x35
   807  0055                     	ds	1
   808  0056                     ?_printf:	
   809                           
   810                           ; 2 bytes @ 0x36
   811  0056                     	ds	4
   812  005A                     ??_printf:	
   813                           
   814                           ; 0 bytes @ 0x3A
   815  005A                     	ds	5
   816  005F                     ??_main:	
   817                           
   818                           ; 0 bytes @ 0x3F
   819  005F                     	ds	3
   820                           
   821                           	psect	maintext
   822  1671                     __pmaintext:	
   823 ;;Data sizes: Strings 20, constant 118, data 0, bss 14, persistent 0 stack 0
   824 ;;Auto spaces:   Size  Autos    Used
   825 ;; COMMON          14     12      12
   826 ;; BANK0           80     66      80
   827 ;; BANK1           80     25      25
   828 ;; BANK3           96      0       0
   829 ;; BANK2           96      0       0
   830 ;;
   831 ;; Pointer list with targets:
   832 ;; ?___ftpack	float  size(1) Largest target is 3
   833 ;;		 -> t(BANK0[3]), 
   834 ;;
   835 ;; ?___lldiv	unsigned long  size(1) Largest target is 0
   836 ;;
   837 ;; ?___llmod	unsigned long  size(1) Largest target is 3
   838 ;;		 -> t(BANK0[3]), 
   839 ;;
   840 ;; ?___ftsub	float  size(1) Largest target is 0
   841 ;;
   842 ;; ?___lltoft	float  size(1) Largest target is 0
   843 ;;
   844 ;; ?__tdiv_to_l_	unsigned long  size(1) Largest target is 0
   845 ;;
   846 ;; ?__div_to_l_	unsigned long  size(1) Largest target is 0
   847 ;;
   848 ;; ?___fttol	long  size(1) Largest target is 3
   849 ;;		 -> t(BANK0[3]), 
   850 ;;
   851 ;; ?___ftadd	float  size(1) Largest target is 3
   852 ;;		 -> t(BANK0[3]), 
   853 ;;
   854 ;; ?___ftneg	float  size(1) Largest target is 3
   855 ;;		 -> t(BANK0[3]), 
   856 ;;
   857 ;; ?___awmod	int  size(2) Largest target is 40
   858 ;;		 -> dpowers(CODE[40]), t(BANK0[3]), 
   859 ;;
   860 ;; ?___awdiv	int  size(1) Largest target is 0
   861 ;;
   862 ;; ?_scale	int  size(1) Largest target is 0
   863 ;;
   864 ;; ?___wmul	unsigned int  size(1) Largest target is 0
   865 ;;
   866 ;; ?_fround	unsigned int  size(1) Largest target is 0
   867 ;;
   868 ;; ?___ftmul	float  size(1) Largest target is 0
   869 ;;
   870 ;; ?___altoft	float  size(1) Largest target is 0
   871 ;;
   872 ;; ?_abs	int  size(1) Largest target is 0
   873 ;;
   874 ;; printf@f	PTR const unsigned char  size(1) Largest target is 11
   875 ;;		 -> STR_2(CODE[9]), STR_1(CODE[11]), 
   876 ;;
   877 ;; ?_printf	int  size(1) Largest target is 3
   878 ;;		 -> t(BANK0[3]), 
   879 ;;
   880 ;; printf@ap	PTR void [1] size(1) Largest target is 2
   881 ;;		 -> ?_printf(BANK0[2]), 
   882 ;;
   883 ;; S3154$_cp	PTR const unsigned char  size(1) Largest target is 0
   884 ;;
   885 ;; _val._str._cp	PTR const unsigned char  size(1) Largest target is 0
   886 ;;
   887 ;;
   888 ;; Critical Paths under _main in COMMON
   889 ;;
   890 ;;   _main->___altoft
   891 ;;   _printf->_putch
   892 ;;   _printf->___awdiv
   893 ;;   _putch->_lcd_putc
   894 ;;   _lcd_putc->_lcd_gotoxy
   895 ;;   _scale->___awdiv
   896 ;;   _scale->___bmul
   897 ;;   _fround->___bmul
   898 ;;   _lcd_gotoxy->_lcd_put_byte
   899 ;;   _lcd_init->_lcd_put_byte
   900 ;;   ___lltoft->___ftpack
   901 ;;   ___altoft->___ftpack
   902 ;;   ___ftmul->___altoft
   903 ;;   ___ftmul->___awdiv
   904 ;;   ___ftmul->___bmul
   905 ;;   ___ftadd->___bmul
   906 ;;   ___llmod->___lldiv
   907 ;;   ___awdiv->___awmod
   908 ;;   ___fttol->___awdiv
   909 ;;   ___fttol->___bmul
   910 ;;   ___lbdiv->___lbmod
   911 ;;   ___bmul->___lbdiv
   912 ;;
   913 ;; Critical Paths under _ngat in COMMON
   914 ;;
   915 ;;   None.
   916 ;;
   917 ;; Critical Paths under _main in BANK0
   918 ;;
   919 ;;   _main->_printf
   920 ;;   _printf->_fround
   921 ;;   ___ftsub->___ftadd
   922 ;;   _scale->___ftmul
   923 ;;   _fround->___ftadd
   924 ;;   ___ftmul->___fttol
   925 ;;   ___ftadd->___ftmul
   926 ;;   ___llmod->___lldiv
   927 ;;   ___fttol->___awdiv
   928 ;;
   929 ;; Critical Paths under _ngat in BANK0
   930 ;;
   931 ;;   None.
   932 ;;
   933 ;; Critical Paths under _main in BANK1
   934 ;;
   935 ;;   _main->_printf
   936 ;;
   937 ;; Critical Paths under _ngat in BANK1
   938 ;;
   939 ;;   None.
   940 ;;
   941 ;; Critical Paths under _main in BANK3
   942 ;;
   943 ;;   None.
   944 ;;
   945 ;; Critical Paths under _ngat in BANK3
   946 ;;
   947 ;;   None.
   948 ;;
   949 ;; Critical Paths under _main in BANK2
   950 ;;
   951 ;;   None.
   952 ;;
   953 ;; Critical Paths under _ngat in BANK2
   954 ;;
   955 ;;   None.
   956 ;;
   957 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   958 ;;
   959 ;;
   960 ;;Call Graph Tables:
   961 ;;
   962 ;; ---------------------------------------------------------------------------------
   963 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   964 ;; ---------------------------------------------------------------------------------
   965 ;; (0) _main                                                 3     3      0   12469
   966 ;;                                             63 BANK0      3     3      0
   967 ;;                           _lcd_init
   968 ;;                                _abs
   969 ;;                           ___altoft
   970 ;;                            ___ftmul
   971 ;;                         _lcd_gotoxy
   972 ;;                             _printf
   973 ;; ---------------------------------------------------------------------------------
   974 ;; (1) _printf                                              38    34      4   10964
   975 ;;                                             54 BANK0      9     5      4
   976 ;;                                              0 BANK1     25    25      0
   977 ;;                              _putch
   978 ;;                            _isdigit
   979 ;;                             ___wmul
   980 ;;                             ___ftge
   981 ;;                            ___ftneg
   982 ;;                            ___awdiv
   983 ;;                              _scale
   984 ;;                            ___ftmul
   985 ;;                             _fround
   986 ;;                            ___ftadd
   987 ;;                            ___fttol
   988 ;;                         __div_to_l_
   989 ;;                        __tdiv_to_l_
   990 ;;                           ___lltoft
   991 ;;                            ___ftsub
   992 ;;                            ___lldiv
   993 ;;                            ___llmod
   994 ;; ---------------------------------------------------------------------------------
   995 ;; (2) _putch                                                1     1      0     713
   996 ;;                                             11 COMMON     1     1      0
   997 ;;                           _lcd_putc
   998 ;; ---------------------------------------------------------------------------------
   999 ;; (3) _lcd_putc                                             1     1      0     691
  1000 ;;                                             10 COMMON     1     1      0
  1001 ;;                       _lcd_put_byte
  1002 ;;                           _lcd_busy
  1003 ;;                         _lcd_gotoxy
  1004 ;;                            _isprint
  1005 ;; ---------------------------------------------------------------------------------
  1006 ;; (2) ___ftsub                                              6     0      6    1094
  1007 ;;                                             44 BANK0      6     0      6
  1008 ;;                            ___ftadd
  1009 ;;                           ___lltoft (ARG)
  1010 ;; ---------------------------------------------------------------------------------
  1011 ;; (2) _scale                                               14    11      3    1688
  1012 ;;                                             32 BANK0     11     8      3
  1013 ;;                            ___awmod
  1014 ;;                            ___awdiv
  1015 ;;                            ___ftmul
  1016 ;;                             ___bmul
  1017 ;;                            ___fttol (ARG)
  1018 ;; ---------------------------------------------------------------------------------
  1019 ;; (2) _fround                                              13    10      3    1215
  1020 ;;                                             44 BANK0     10     7      3
  1021 ;;                            ___lbmod
  1022 ;;                             ___bmul
  1023 ;;                            ___lbdiv
  1024 ;;                            ___ftmul
  1025 ;;                            ___ftadd (ARG)
  1026 ;; ---------------------------------------------------------------------------------
  1027 ;; (4) _lcd_gotoxy                                           3     2      1     313
  1028 ;;                                              7 COMMON     3     2      1
  1029 ;;                       _lcd_put_byte
  1030 ;;                           _lcd_busy
  1031 ;; ---------------------------------------------------------------------------------
  1032 ;; (1) _lcd_init                                             4     4      0     244
  1033 ;;                                              7 COMMON     3     3      0
  1034 ;;                       _lcd_put_byte
  1035 ;;                           _lcd_busy
  1036 ;; ---------------------------------------------------------------------------------
  1037 ;; (2) ___lltoft                                             5     1      4     278
  1038 ;;                                             10 COMMON     1     1      0
  1039 ;;                                              0 BANK0      4     0      4
  1040 ;;                           ___ftpack
  1041 ;; ---------------------------------------------------------------------------------
  1042 ;; (1) ___altoft                                             6     2      4     347
  1043 ;;                                             10 COMMON     2     2      0
  1044 ;;                                              0 BANK0      4     0      4
  1045 ;;                           ___ftpack
  1046 ;; ---------------------------------------------------------------------------------
  1047 ;; (3) ___ftmul                                             15     9      6     535
  1048 ;;                                             17 BANK0     15     9      6
  1049 ;;                           ___ftpack
  1050 ;;                           ___altoft (ARG)
  1051 ;;                            ___fttol (ARG)
  1052 ;;                            ___awdiv (ARG)
  1053 ;;                            ___awmod (ARG)
  1054 ;;                             ___bmul (ARG)
  1055 ;;                            ___lbdiv (ARG)
  1056 ;;                            ___lbmod (ARG)
  1057 ;; ---------------------------------------------------------------------------------
  1058 ;; (3) ___ftadd                                             12     6      6    1049
  1059 ;;                                             32 BANK0     12     6      6
  1060 ;;                           ___ftpack
  1061 ;;                            ___lbmod (ARG)
  1062 ;;                             ___bmul (ARG)
  1063 ;;                            ___lbdiv (ARG)
  1064 ;;                            ___ftmul (ARG)
  1065 ;; ---------------------------------------------------------------------------------
  1066 ;; (5) _lcd_busy                                             2     2      0      23
  1067 ;;                                              2 COMMON     2     2      0
  1068 ;; ---------------------------------------------------------------------------------
  1069 ;; (5) _lcd_put_byte                                         5     4      1     221
  1070 ;;                                              2 COMMON     5     4      1
  1071 ;; ---------------------------------------------------------------------------------
  1072 ;; (3) ___awmod                                              6     2      4     296
  1073 ;;                                              2 COMMON     6     2      4
  1074 ;; ---------------------------------------------------------------------------------
  1075 ;; (2) ___lldiv                                             13     5      8     162
  1076 ;;                                              2 COMMON     8     0      8
  1077 ;;                                              0 BANK0      5     5      0
  1078 ;; ---------------------------------------------------------------------------------
  1079 ;; (2) ___ftge                                               6     0      6     136
  1080 ;;                                              2 COMMON     6     0      6
  1081 ;; ---------------------------------------------------------------------------------
  1082 ;; (2) ___ftneg                                              3     0      3      45
  1083 ;;                                              2 COMMON     3     0      3
  1084 ;; ---------------------------------------------------------------------------------
  1085 ;; (2) ___llmod                                              9     1      8     159
  1086 ;;                                             10 COMMON     1     1      0
  1087 ;;                                              5 BANK0      8     0      8
  1088 ;;                            ___lldiv (ARG)
  1089 ;; ---------------------------------------------------------------------------------
  1090 ;; (3) ___awdiv                                              8     4      4     300
  1091 ;;                                              8 COMMON     4     0      4
  1092 ;;                                              0 BANK0      4     4      0
  1093 ;;                            ___awmod (ARG)
  1094 ;; ---------------------------------------------------------------------------------
  1095 ;; (2) ___fttol                                             13     9      4     252
  1096 ;;                                              4 BANK0     13     9      4
  1097 ;;                           ___ftpack (ARG)
  1098 ;;                            ___awmod (ARG)
  1099 ;;                            ___awdiv (ARG)
  1100 ;;                             ___bmul (ARG)
  1101 ;; ---------------------------------------------------------------------------------
  1102 ;; (4) ___ftpack                                             8     3      5     209
  1103 ;;                                              2 COMMON     8     3      5
  1104 ;; ---------------------------------------------------------------------------------
  1105 ;; (3) ___lbmod                                              5     4      1     159
  1106 ;;                                              2 COMMON     5     4      1
  1107 ;; ---------------------------------------------------------------------------------
  1108 ;; (3) ___lbdiv                                              4     3      1     162
  1109 ;;                                              7 COMMON     4     3      1
  1110 ;;                            ___lbmod (ARG)
  1111 ;; ---------------------------------------------------------------------------------
  1112 ;; (2) ___wmul                                               6     2      4      92
  1113 ;;                                              2 COMMON     6     2      4
  1114 ;; ---------------------------------------------------------------------------------
  1115 ;; (3) ___bmul                                               3     2      1      68
  1116 ;;                                             11 COMMON     1     0      1
  1117 ;;                                              0 BANK0      2     2      0
  1118 ;;                            ___lbmod (ARG)
  1119 ;;                            ___lbdiv (ARG)
  1120 ;; ---------------------------------------------------------------------------------
  1121 ;; (2) __div_to_l_                                          20    14      6     446
  1122 ;;                                              2 COMMON     6     0      6
  1123 ;;                                              0 BANK0     14    14      0
  1124 ;; ---------------------------------------------------------------------------------
  1125 ;; (2) __tdiv_to_l_                                         15     9      6     303
  1126 ;;                                              2 COMMON     9     3      6
  1127 ;;                                              0 BANK0      6     6      0
  1128 ;; ---------------------------------------------------------------------------------
  1129 ;; (2) _isdigit                                              2     2      0      68
  1130 ;;                                              2 COMMON     2     2      0
  1131 ;; ---------------------------------------------------------------------------------
  1132 ;; (1) _abs                                                  4     2      2      66
  1133 ;;                                              2 COMMON     4     2      2
  1134 ;; ---------------------------------------------------------------------------------
  1135 ;; (4) _isprint                                              2     2      0      68
  1136 ;;                                              2 COMMON     2     2      0
  1137 ;; ---------------------------------------------------------------------------------
  1138 ;; Estimated maximum stack depth 5
  1139 ;; ---------------------------------------------------------------------------------
  1140 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1141 ;; ---------------------------------------------------------------------------------
  1142 ;; (6) _ngat                                                 2     2      0       0
  1143 ;;                                              0 COMMON     2     2      0
  1144 ;; ---------------------------------------------------------------------------------
  1145 ;; Estimated maximum stack depth 6
  1146 ;; ---------------------------------------------------------------------------------
  1147 ;; Call Graph Graphs:
  1148 ;; _main (ROOT)
  1149 ;;   _lcd_init
  1150 ;;     _lcd_put_byte
  1151 ;;     _lcd_busy
  1152 ;;   _abs
  1153 ;;   ___altoft
  1154 ;;     ___ftpack
  1155 ;;   ___ftmul
  1156 ;;     ___ftpack
  1157 ;;     ___altoft (ARG)
  1158 ;;       ___ftpack
  1159 ;;     ___fttol (ARG)
  1160 ;;       ___ftpack (ARG)
  1161 ;;       ___awmod (ARG)
  1162 ;;       ___awdiv (ARG)
  1163 ;;         ___awmod (ARG)
  1164 ;;       ___bmul (ARG)
  1165 ;;         ___lbmod (ARG)
  1166 ;;         ___lbdiv (ARG)
  1167 ;;           ___lbmod (ARG)
  1168 ;;     ___awdiv (ARG)
  1169 ;;       ___awmod (ARG)
  1170 ;;     ___awmod (ARG)
  1171 ;;     ___bmul (ARG)
  1172 ;;       ___lbmod (ARG)
  1173 ;;       ___lbdiv (ARG)
  1174 ;;         ___lbmod (ARG)
  1175 ;;     ___lbdiv (ARG)
  1176 ;;       ___lbmod (ARG)
  1177 ;;     ___lbmod (ARG)
  1178 ;;   _lcd_gotoxy
  1179 ;;     _lcd_put_byte
  1180 ;;     _lcd_busy
  1181 ;;   _printf
  1182 ;;     _putch
  1183 ;;       _lcd_putc
  1184 ;;         _lcd_put_byte
  1185 ;;         _lcd_busy
  1186 ;;         _lcd_gotoxy
  1187 ;;           _lcd_put_byte
  1188 ;;           _lcd_busy
  1189 ;;         _isprint
  1190 ;;     _isdigit
  1191 ;;     ___wmul
  1192 ;;     ___ftge
  1193 ;;     ___ftneg
  1194 ;;     ___awdiv
  1195 ;;       ___awmod (ARG)
  1196 ;;     _scale
  1197 ;;       ___awmod
  1198 ;;       ___awdiv
  1199 ;;         ___awmod (ARG)
  1200 ;;       ___ftmul
  1201 ;;         ___ftpack
  1202 ;;         ___altoft (ARG)
  1203 ;;           ___ftpack
  1204 ;;         ___fttol (ARG)
  1205 ;;           ___ftpack (ARG)
  1206 ;;           ___awmod (ARG)
  1207 ;;           ___awdiv (ARG)
  1208 ;;             ___awmod (ARG)
  1209 ;;           ___bmul (ARG)
  1210 ;;             ___lbmod (ARG)
  1211 ;;             ___lbdiv (ARG)
  1212 ;;               ___lbmod (ARG)
  1213 ;;         ___awdiv (ARG)
  1214 ;;           ___awmod (ARG)
  1215 ;;         ___awmod (ARG)
  1216 ;;         ___bmul (ARG)
  1217 ;;           ___lbmod (ARG)
  1218 ;;           ___lbdiv (ARG)
  1219 ;;             ___lbmod (ARG)
  1220 ;;         ___lbdiv (ARG)
  1221 ;;           ___lbmod (ARG)
  1222 ;;         ___lbmod (ARG)
  1223 ;;       ___bmul
  1224 ;;         ___lbmod (ARG)
  1225 ;;         ___lbdiv (ARG)
  1226 ;;           ___lbmod (ARG)
  1227 ;;       ___fttol (ARG)
  1228 ;;         ___ftpack (ARG)
  1229 ;;         ___awmod (ARG)
  1230 ;;         ___awdiv (ARG)
  1231 ;;           ___awmod (ARG)
  1232 ;;         ___bmul (ARG)
  1233 ;;           ___lbmod (ARG)
  1234 ;;           ___lbdiv (ARG)
  1235 ;;             ___lbmod (ARG)
  1236 ;;     ___ftmul
  1237 ;;       ___ftpack
  1238 ;;       ___altoft (ARG)
  1239 ;;         ___ftpack
  1240 ;;       ___fttol (ARG)
  1241 ;;         ___ftpack (ARG)
  1242 ;;         ___awmod (ARG)
  1243 ;;         ___awdiv (ARG)
  1244 ;;           ___awmod (ARG)
  1245 ;;         ___bmul (ARG)
  1246 ;;           ___lbmod (ARG)
  1247 ;;           ___lbdiv (ARG)
  1248 ;;             ___lbmod (ARG)
  1249 ;;       ___awdiv (ARG)
  1250 ;;         ___awmod (ARG)
  1251 ;;       ___awmod (ARG)
  1252 ;;       ___bmul (ARG)
  1253 ;;         ___lbmod (ARG)
  1254 ;;         ___lbdiv (ARG)
  1255 ;;           ___lbmod (ARG)
  1256 ;;       ___lbdiv (ARG)
  1257 ;;         ___lbmod (ARG)
  1258 ;;       ___lbmod (ARG)
  1259 ;;     _fround
  1260 ;;       ___lbmod
  1261 ;;       ___bmul
  1262 ;;         ___lbmod (ARG)
  1263 ;;         ___lbdiv (ARG)
  1264 ;;           ___lbmod (ARG)
  1265 ;;       ___lbdiv
  1266 ;;         ___lbmod (ARG)
  1267 ;;       ___ftmul
  1268 ;;         ___ftpack
  1269 ;;         ___altoft (ARG)
  1270 ;;           ___ftpack
  1271 ;;         ___fttol (ARG)
  1272 ;;           ___ftpack (ARG)
  1273 ;;           ___awmod (ARG)
  1274 ;;           ___awdiv (ARG)
  1275 ;;             ___awmod (ARG)
  1276 ;;           ___bmul (ARG)
  1277 ;;             ___lbmod (ARG)
  1278 ;;             ___lbdiv (ARG)
  1279 ;;               ___lbmod (ARG)
  1280 ;;         ___awdiv (ARG)
  1281 ;;           ___awmod (ARG)
  1282 ;;         ___awmod (ARG)
  1283 ;;         ___bmul (ARG)
  1284 ;;           ___lbmod (ARG)
  1285 ;;           ___lbdiv (ARG)
  1286 ;;             ___lbmod (ARG)
  1287 ;;         ___lbdiv (ARG)
  1288 ;;           ___lbmod (ARG)
  1289 ;;         ___lbmod (ARG)
  1290 ;;       ___ftadd (ARG)
  1291 ;;         ___ftpack
  1292 ;;         ___lbmod (ARG)
  1293 ;;         ___bmul (ARG)
  1294 ;;           ___lbmod (ARG)
  1295 ;;           ___lbdiv (ARG)
  1296 ;;             ___lbmod (ARG)
  1297 ;;         ___lbdiv (ARG)
  1298 ;;           ___lbmod (ARG)
  1299 ;;         ___ftmul (ARG)
  1300 ;;           ___ftpack
  1301 ;;           ___altoft (ARG)
  1302 ;;             ___ftpack
  1303 ;;           ___fttol (ARG)
  1304 ;;             ___ftpack (ARG)
  1305 ;;             ___awmod (ARG)
  1306 ;;             ___awdiv (ARG)
  1307 ;;               ___awmod (ARG)
  1308 ;;             ___bmul (ARG)
  1309 ;;               ___lbmod (ARG)
  1310 ;;               ___lbdiv (ARG)
  1311 ;;                 ___lbmod (ARG)
  1312 ;;           ___awdiv (ARG)
  1313 ;;             ___awmod (ARG)
  1314 ;;           ___awmod (ARG)
  1315 ;;           ___bmul (ARG)
  1316 ;;             ___lbmod (ARG)
  1317 ;;             ___lbdiv (ARG)
  1318 ;;               ___lbmod (ARG)
  1319 ;;           ___lbdiv (ARG)
  1320 ;;             ___lbmod (ARG)
  1321 ;;           ___lbmod (ARG)
  1322 ;;     ___ftadd
  1323 ;;       ___ftpack
  1324 ;;       ___lbmod (ARG)
  1325 ;;       ___bmul (ARG)
  1326 ;;         ___lbmod (ARG)
  1327 ;;         ___lbdiv (ARG)
  1328 ;;           ___lbmod (ARG)
  1329 ;;       ___lbdiv (ARG)
  1330 ;;         ___lbmod (ARG)
  1331 ;;       ___ftmul (ARG)
  1332 ;;         ___ftpack
  1333 ;;         ___altoft (ARG)
  1334 ;;           ___ftpack
  1335 ;;         ___fttol (ARG)
  1336 ;;           ___ftpack (ARG)
  1337 ;;           ___awmod (ARG)
  1338 ;;           ___awdiv (ARG)
  1339 ;;             ___awmod (ARG)
  1340 ;;           ___bmul (ARG)
  1341 ;;             ___lbmod (ARG)
  1342 ;;             ___lbdiv (ARG)
  1343 ;;               ___lbmod (ARG)
  1344 ;;         ___awdiv (ARG)
  1345 ;;           ___awmod (ARG)
  1346 ;;         ___awmod (ARG)
  1347 ;;         ___bmul (ARG)
  1348 ;;           ___lbmod (ARG)
  1349 ;;           ___lbdiv (ARG)
  1350 ;;             ___lbmod (ARG)
  1351 ;;         ___lbdiv (ARG)
  1352 ;;           ___lbmod (ARG)
  1353 ;;         ___lbmod (ARG)
  1354 ;;     ___fttol
  1355 ;;       ___ftpack (ARG)
  1356 ;;       ___awmod (ARG)
  1357 ;;       ___awdiv (ARG)
  1358 ;;         ___awmod (ARG)
  1359 ;;       ___bmul (ARG)
  1360 ;;         ___lbmod (ARG)
  1361 ;;         ___lbdiv (ARG)
  1362 ;;           ___lbmod (ARG)
  1363 ;;     __div_to_l_
  1364 ;;     __tdiv_to_l_
  1365 ;;     ___lltoft
  1366 ;;       ___ftpack
  1367 ;;     ___ftsub
  1368 ;;       ___ftadd
  1369 ;;         ___ftpack
  1370 ;;         ___lbmod (ARG)
  1371 ;;         ___bmul (ARG)
  1372 ;;           ___lbmod (ARG)
  1373 ;;           ___lbdiv (ARG)
  1374 ;;             ___lbmod (ARG)
  1375 ;;         ___lbdiv (ARG)
  1376 ;;           ___lbmod (ARG)
  1377 ;;         ___ftmul (ARG)
  1378 ;;           ___ftpack
  1379 ;;           ___altoft (ARG)
  1380 ;;             ___ftpack
  1381 ;;           ___fttol (ARG)
  1382 ;;             ___ftpack (ARG)
  1383 ;;             ___awmod (ARG)
  1384 ;;             ___awdiv (ARG)
  1385 ;;               ___awmod (ARG)
  1386 ;;             ___bmul (ARG)
  1387 ;;               ___lbmod (ARG)
  1388 ;;               ___lbdiv (ARG)
  1389 ;;                 ___lbmod (ARG)
  1390 ;;           ___awdiv (ARG)
  1391 ;;             ___awmod (ARG)
  1392 ;;           ___awmod (ARG)
  1393 ;;           ___bmul (ARG)
  1394 ;;             ___lbmod (ARG)
  1395 ;;             ___lbdiv (ARG)
  1396 ;;               ___lbmod (ARG)
  1397 ;;           ___lbdiv (ARG)
  1398 ;;             ___lbmod (ARG)
  1399 ;;           ___lbmod (ARG)
  1400 ;;       ___lltoft (ARG)
  1401 ;;         ___ftpack
  1402 ;;     ___lldiv
  1403 ;;     ___llmod
  1404 ;;       ___lldiv (ARG)
  1405 ;;
  1406 ;; _ngat (ROOT)
  1407 ;;
  1408 ;; Address spaces:
  1409 ;;Name               Size   Autos  Total    Cost      Usage
  1410 ;;BITCOMMON            E      0       0       0        0.0%
  1411 ;;EEDATA             100      0       0       0        0.0%
  1412 ;;NULL                 0      0       0       0        0.0%
  1413 ;;CODE                 0      0       0       0        0.0%
  1414 ;;COMMON               E      C       C       1       85.7%
  1415 ;;BITSFR0              0      0       0       1        0.0%
  1416 ;;SFR0                 0      0       0       1        0.0%
  1417 ;;BITSFR1              0      0       0       2        0.0%
  1418 ;;SFR1                 0      0       0       2        0.0%
  1419 ;;STACK                0      0       5       2        0.0%
  1420 ;;ABS                  0      0      75       3        0.0%
  1421 ;;BITBANK0            50      0       0       4        0.0%
  1422 ;;BITSFR3              0      0       0       4        0.0%
  1423 ;;SFR3                 0      0       0       4        0.0%
  1424 ;;BANK0               50     42      50       5      100.0%
  1425 ;;BITSFR2              0      0       0       5        0.0%
  1426 ;;SFR2                 0      0       0       5        0.0%
  1427 ;;BITBANK1            50      0       0       6        0.0%
  1428 ;;BANK1               50     19      19       7       31.3%
  1429 ;;BITBANK3            60      0       0       8        0.0%
  1430 ;;BANK3               60      0       0       9        0.0%
  1431 ;;BITBANK2            60      0       0      10        0.0%
  1432 ;;BANK2               60      0       0      11        0.0%
  1433 ;;DATA                 0      0      7A      12        0.0%
  1434                           
  1435                           
  1436 ;; *************** function _main *****************
  1437 ;; Defined at:
  1438 ;;		line 20 in file "C:\Users\DELL\Desktop\vxl\mp\dotansodungCCP(2).c"
  1439 ;; Parameters:    Size  Location     Type
  1440 ;;		None
  1441 ;; Auto vars:     Size  Location     Type
  1442 ;;		None
  1443 ;; Return value:  Size  Location     Type
  1444 ;;		None               void
  1445 ;; Registers used:
  1446 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1447 ;; Tracked objects:
  1448 ;;		On entry : 17F/0
  1449 ;;		On exit  : 60/20
  1450 ;;		Unchanged: 0/0
  1451 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1452 ;;      Params:         0       0       0       0       0
  1453 ;;      Locals:         0       0       0       0       0
  1454 ;;      Temps:          0       3       0       0       0
  1455 ;;      Totals:         0       3       0       0       0
  1456 ;;Total ram usage:        3 bytes
  1457 ;; Hardware stack levels required when called:    6
  1458 ;; This function calls:
  1459 ;;		_lcd_init
  1460 ;;		_abs
  1461 ;;		___altoft
  1462 ;;		___ftmul
  1463 ;;		_lcd_gotoxy
  1464 ;;		_printf
  1465 ;; This function is called by:
  1466 ;;		Startup code after reset
  1467 ;; This function uses a non-reentrant model
  1468 ;;
  1469  1671                     _main:	
  1470                           
  1471                           ;dotansodungCCP(2).c: 21: ANSEL = ANSELH = 0;
  1472                           
  1473                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1474  1671  1683               	bsf	3,5	;RP0=1, select bank3
  1475  1672  1703               	bsf	3,6	;RP1=1, select bank3
  1476  1673  0189               	clrf	9	;volatile
  1477  1674  0188               	clrf	8	;volatile
  1478                           
  1479                           ;dotansodungCCP(2).c: 22: lcd_init();
  1480  1675  120A  158A  2300   	fcall	_lcd_init
      +       160A  118A         
  1481                           
  1482                           ;dotansodungCCP(2).c: 23: TRISE0 = 0;TRISE1 = 0; RE1 =0;
  1483  167A  1683               	bsf	3,5	;RP0=1, select bank1
  1484  167B  1009               	bcf	9,0
  1485  167C  1089               	bcf	9,1
  1486  167D  1283               	bcf	3,5	;RP0=0, select bank0
  1487  167E  1089               	bcf	9,1
  1488                           
  1489                           ;dotansodungCCP(2).c: 24: TRISC0 =1;
  1490  167F  1683               	bsf	3,5	;RP0=1, select bank1
  1491  1680  1407               	bsf	7,0
  1492                           
  1493                           ;dotansodungCCP(2).c: 26: TMR1CS = 0;
  1494  1681  1283               	bcf	3,5	;RP0=0, select bank0
  1495  1682  1090               	bcf	16,1
  1496                           
  1497                           ;dotansodungCCP(2).c: 27: T1CKPS1 = 0;T1CKPS0 = 0;
  1498  1683  1290               	bcf	16,5
  1499  1684  1210               	bcf	16,4
  1500                           
  1501                           ;dotansodungCCP(2).c: 28: T1SYNC = 1;
  1502  1685  1510               	bsf	16,2
  1503                           
  1504                           ;dotansodungCCP(2).c: 29: TMR1GE = 0;
  1505  1686  1310               	bcf	16,6
  1506                           
  1507                           ;dotansodungCCP(2).c: 30: TMR1H = 0; TMR1L = 0;
  1508  1687  018F               	clrf	15	;volatile
  1509  1688  018E               	clrf	14	;volatile
  1510                           
  1511                           ;dotansodungCCP(2).c: 31: TMR1ON = 1;
  1512  1689  1410               	bsf	16,0
  1513                           
  1514                           ;dotansodungCCP(2).c: 33: TRISC2 = 1;
  1515  168A  1683               	bsf	3,5	;RP0=1, select bank1
  1516  168B  3005               	movlw	5
  1517  168C  1507               	bsf	7,2
  1518                           
  1519                           ;dotansodungCCP(2).c: 34: TRISC1 = 1;
  1520  168D  1487               	bsf	7,1
  1521                           
  1522                           ;dotansodungCCP(2).c: 35: CCP1CON = 0b00000101;
  1523  168E  1283               	bcf	3,5	;RP0=0, select bank0
  1524  168F  0097               	movwf	23	;volatile
  1525                           
  1526                           ;dotansodungCCP(2).c: 36: CCP2CON = 0b00000100;
  1527  1690  3004               	movlw	4
  1528  1691  009D               	movwf	29	;volatile
  1529                           
  1530                           ;dotansodungCCP(2).c: 38: CCP1IE = 1;
  1531  1692  1683               	bsf	3,5	;RP0=1, select bank1
  1532  1693  150C               	bsf	12,2
  1533                           
  1534                           ;dotansodungCCP(2).c: 39: CCP1IF = 0;
  1535  1694  1283               	bcf	3,5	;RP0=0, select bank0
  1536  1695  110C               	bcf	12,2
  1537                           
  1538                           ;dotansodungCCP(2).c: 41: CCP2IE = 1;
  1539  1696  1683               	bsf	3,5	;RP0=1, select bank1
  1540  1697  140D               	bsf	13,0
  1541                           
  1542                           ;dotansodungCCP(2).c: 42: CCP2IF = 0;
  1543  1698  1283               	bcf	3,5	;RP0=0, select bank0
  1544  1699  100D               	bcf	13,0
  1545                           
  1546                           ;dotansodungCCP(2).c: 44: PEIE = 1;
  1547  169A  170B               	bsf	11,6
  1548                           
  1549                           ;dotansodungCCP(2).c: 45: GIE = 1;
  1550  169B  178B               	bsf	11,7
  1551  169C                     l7211:	
  1552                           
  1553                           ;dotansodungCCP(2).c: 47: {
  1554                           ;dotansodungCCP(2).c: 48: _delay((unsigned long)((100)*(20000000/4000.0)));
  1555  169C  3003               	movlw	3
  1556  169D  1283               	bcf	3,5	;RP0=0, select bank0
  1557  169E  00E1               	movwf	??_main+2
  1558  169F  308A               	movlw	138
  1559  16A0  00E0               	movwf	??_main+1
  1560  16A1  3056               	movlw	86
  1561  16A2  00DF               	movwf	??_main
  1562  16A3                     u3957:	
  1563  16A3  0BDF               	decfsz	??_main,f
  1564  16A4  2EA3               	goto	u3957
  1565  16A5  0BE0               	decfsz	??_main+1,f
  1566  16A6  2EA3               	goto	u3957
  1567  16A7  0BE1               	decfsz	??_main+2,f
  1568  16A8  2EA3               	goto	u3957
  1569  16A9  2EAA               	nop2
  1570                           
  1571                           ;dotansodungCCP(2).c: 49: RE1 = 1;
  1572  16AA  1283               	bcf	3,5	;RP0=0, select bank0
  1573  16AB  1303               	bcf	3,6	;RP1=0, select bank0
  1574  16AC  3007               	movlw	7
  1575  16AD  1489               	bsf	9,1
  1576                           
  1577                           ;dotansodungCCP(2).c: 50: _delay((unsigned long)((1)*(20000000/4000.0)));
  1578  16AE  00E0               	movwf	??_main+1
  1579  16AF  307D               	movlw	125
  1580  16B0  00DF               	movwf	??_main
  1581  16B1                     u3967:	
  1582  16B1  0BDF               	decfsz	??_main,f
  1583  16B2  2EB1               	goto	u3967
  1584  16B3  0BE0               	decfsz	??_main+1,f
  1585  16B4  2EB1               	goto	u3967
  1586                           
  1587                           ;dotansodungCCP(2).c: 51: RE1 = 0;
  1588  16B5  1283               	bcf	3,5	;RP0=0, select bank0
  1589  16B6  1303               	bcf	3,6	;RP1=0, select bank0
  1590  16B7  1089               	bcf	9,1
  1591                           
  1592                           ;dotansodungCCP(2).c: 53: xung = abs(count2 - count1);
  1593  16B8  086C               	movf	_count2+1,w
  1594  16B9  00F3               	movwf	?_abs+1
  1595  16BA  086B               	movf	_count2,w
  1596  16BB  00F2               	movwf	?_abs
  1597  16BC  0869               	movf	_count1,w
  1598  16BD  02F2               	subwf	?_abs,f
  1599  16BE  086A               	movf	_count1+1,w
  1600  16BF  1C03               	skipc
  1601  16C0  03F3               	decf	?_abs+1,f
  1602  16C1  02F3               	subwf	?_abs+1,f
  1603  16C2  120A  118A  27C4   	fcall	_abs
      +       160A  118A         
  1604  16C7  0872               	movf	?_abs,w
  1605  16C8  00E2               	movwf	_xung
  1606  16C9  0873               	movf	?_abs+1,w
  1607  16CA  00E3               	movwf	_xung+1
  1608  16CB  3000               	movlw	0
  1609  16CC  1BE3               	btfsc	_xung+1,7
  1610  16CD  30FF               	movlw	255
  1611  16CE  00E4               	movwf	_xung+2
  1612  16CF  00E5               	movwf	_xung+3
  1613                           
  1614                           ;dotansodungCCP(2).c: 54: t = xung*(1.0/5000000.0);
  1615  16D0  30C0               	movlw	192
  1616  16D1  00B1               	movwf	?___ftmul
  1617  16D2  3056               	movlw	86
  1618  16D3  00B2               	movwf	?___ftmul+1
  1619  16D4  3034               	movlw	52
  1620  16D5  00B3               	movwf	?___ftmul+2
  1621  16D6  0865               	movf	_xung+3,w
  1622  16D7  00A3               	movwf	?___altoft+3
  1623  16D8  0864               	movf	_xung+2,w
  1624  16D9  00A2               	movwf	?___altoft+2
  1625  16DA  0863               	movf	_xung+1,w
  1626  16DB  00A1               	movwf	?___altoft+1
  1627  16DC  0862               	movf	_xung,w
  1628  16DD  00A0               	movwf	?___altoft
  1629  16DE  120A  158A  24A8   	fcall	___altoft
      +       160A  118A         
  1630  16E3  0820               	movf	?___altoft,w
  1631  16E4  00B4               	movwf	?___ftmul+3
  1632  16E5  0821               	movf	?___altoft+1,w
  1633  16E6  00B5               	movwf	?___ftmul+4
  1634  16E7  0822               	movf	?___altoft+2,w
  1635  16E8  00B6               	movwf	?___ftmul+5
  1636  16E9  120A  158A  26EC   	fcall	___ftmul
      +       160A  118A         
  1637  16EE  0831               	movf	?___ftmul,w
  1638  16EF  00ED               	movwf	_t
  1639  16F0  0832               	movf	?___ftmul+1,w
  1640  16F1  00EE               	movwf	_t+1
  1641  16F2  0833               	movf	?___ftmul+2,w
  1642  16F3  00EF               	movwf	_t+2
  1643                           
  1644                           ;dotansodungCCP(2).c: 55: d = (17000.0*t);
  1645  16F4  30D0               	movlw	208
  1646  16F5  00B1               	movwf	?___ftmul
  1647  16F6  3084               	movlw	132
  1648  16F7  00B2               	movwf	?___ftmul+1
  1649  16F8  3046               	movlw	70
  1650  16F9  00B3               	movwf	?___ftmul+2
  1651  16FA  086D               	movf	_t,w
  1652  16FB  00B4               	movwf	?___ftmul+3
  1653  16FC  086E               	movf	_t+1,w
  1654  16FD  00B5               	movwf	?___ftmul+4
  1655  16FE  086F               	movf	_t+2,w
  1656  16FF  00B6               	movwf	?___ftmul+5
  1657  1700  120A  158A  26EC   	fcall	___ftmul
      +       160A  118A         
  1658  1705  0831               	movf	?___ftmul,w
  1659  1706  00E6               	movwf	_d
  1660  1707  0832               	movf	?___ftmul+1,w
  1661  1708  00E7               	movwf	_d+1
  1662  1709  0833               	movf	?___ftmul+2,w
  1663  170A  00E8               	movwf	_d+2
  1664  170B  3000               	movlw	0
  1665                           
  1666                           ;dotansodungCCP(2).c: 56: lcd_gotoxy(0,0);
  1667  170C  01F7               	clrf	?_lcd_gotoxy
  1668  170D  120A  158A  22B9   	fcall	_lcd_gotoxy
      +       160A  118A         
  1669                           
  1670                           ;dotansodungCCP(2).c: 57: printf("xung: %08u",xung);
  1671  1712  0865               	movf	_xung+3,w
  1672  1713  00D9               	movwf	?_printf+3
  1673  1714  0864               	movf	_xung+2,w
  1674  1715  00D8               	movwf	?_printf+2
  1675  1716  0863               	movf	_xung+1,w
  1676  1717  00D7               	movwf	?_printf+1
  1677  1718  0862               	movf	_xung,w
  1678  1719  00D6               	movwf	?_printf
  1679  171A  3077               	movlw	(STR_1-__stringbase)& (0+255)
  1680  171B  120A  118A  200F   	fcall	_printf
      +       160A  118A         
  1681  1720  3000               	movlw	0
  1682                           
  1683                           ;dotansodungCCP(2).c: 58: lcd_gotoxy(0,1);
  1684  1721  01F7               	clrf	?_lcd_gotoxy
  1685  1722  0AF7               	incf	?_lcd_gotoxy,f
  1686  1723  120A  158A  22B9   	fcall	_lcd_gotoxy
      +       160A  118A         
  1687                           
  1688                           ;dotansodungCCP(2).c: 59: printf("f: %5.2f",d);
  1689  1728  0866               	movf	_d,w
  1690  1729  00D6               	movwf	?_printf
  1691  172A  0867               	movf	_d+1,w
  1692  172B  00D7               	movwf	?_printf+1
  1693  172C  0868               	movf	_d+2,w
  1694  172D  00D8               	movwf	?_printf+2
  1695  172E  3082               	movlw	(STR_2-__stringbase)& (0+255)
  1696  172F  120A  118A  200F   	fcall	_printf
      +       160A  118A         
  1697  1734  2E9C               	goto	l7211
  1698  1735                     __end_of_main:	
  1699                           
  1700                           	psect	text531
  1701  000F                     __ptext531:	
  1702 ;; =============== function _main ends ============
  1703                           
  1704                           
  1705 ;; *************** function _printf *****************
  1706 ;; Defined at:
  1707 ;;		line 461 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\lib\doprnt.c"
  1708 ;; Parameters:    Size  Location     Type
  1709 ;;  f               1    wreg     PTR const unsigned char 
  1710 ;;		 -> STR_2(9), STR_1(11), 
  1711 ;; Auto vars:     Size  Location     Type
  1712 ;;  f               1   12[BANK1 ] PTR const unsigned char 
  1713 ;;		 -> STR_2(9), STR_1(11), 
  1714 ;;  _val            4    8[BANK1 ] struct .
  1715 ;;  fval            3   19[BANK1 ] struct .
  1716 ;;  integ           3    5[BANK1 ] struct .
  1717 ;;  ival            3    0        struct .
  1718 ;;  prec            2   22[BANK1 ] int 
  1719 ;;  width           2   17[BANK1 ] int 
  1720 ;;  exp             2   15[BANK1 ] int 
  1721 ;;  flag            2   13[BANK1 ] unsigned short 
  1722 ;;  c               1   24[BANK1 ] char 
  1723 ;;  ap              1    4[BANK1 ] PTR void [1]
  1724 ;;		 -> ?_printf(2), 
  1725 ;;  d               1    0        unsigned char 
  1726 ;; Return value:  Size  Location     Type
  1727 ;;                  2   54[BANK0 ] int 
  1728 ;; Registers used:
  1729 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1730 ;; Tracked objects:
  1731 ;;		On entry : 60/0
  1732 ;;		On exit  : 60/20
  1733 ;;		Unchanged: 0/0
  1734 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1735 ;;      Params:         0       4       0       0       0
  1736 ;;      Locals:         0       0      25       0       0
  1737 ;;      Temps:          0       5       0       0       0
  1738 ;;      Totals:         0       9      25       0       0
  1739 ;;Total ram usage:       34 bytes
  1740 ;; Hardware stack levels used:    1
  1741 ;; Hardware stack levels required when called:    5
  1742 ;; This function calls:
  1743 ;;		_putch
  1744 ;;		_isdigit
  1745 ;;		___wmul
  1746 ;;		___ftge
  1747 ;;		___ftneg
  1748 ;;		___awdiv
  1749 ;;		_scale
  1750 ;;		___ftmul
  1751 ;;		_fround
  1752 ;;		___ftadd
  1753 ;;		___fttol
  1754 ;;		__div_to_l_
  1755 ;;		__tdiv_to_l_
  1756 ;;		___lltoft
  1757 ;;		___ftsub
  1758 ;;		___lldiv
  1759 ;;		___llmod
  1760 ;; This function is called by:
  1761 ;;		_main
  1762 ;; This function uses a non-reentrant model
  1763 ;;
  1764  000F                     _printf:	
  1765                           
  1766                           ; Regs used in _printf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1767                           ;printf@f stored from wreg
  1768  000F  1683               	bsf	3,5	;RP0=1, select bank1
  1769  0010  00AC               	movwf	printf@f^(0+128)
  1770  0011  3056               	movlw	?_printf& (0+255)
  1771  0012  00A4               	movwf	printf@ap^(0+128)
  1772  0013                     l7161:	
  1773  0013  2798               	call	PL32	;select bank 1
  1774  0014  082C               	movf	printf@f^(0+128),w
  1775  0015  0AAC               	incf	printf@f^(0+128),f
  1776  0016  0084               	movwf	4
  1777  0017  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  1778  001C  00B8               	movwf	printf@c^(0+128)
  1779  001D  08B8               	movf	printf@c^(0+128),f
  1780  001E  1903               	btfsc	3,2
  1781  001F  0008               	return
  1782  0020  3A25               	xorlw	37
  1783  0021  1903               	skipnz
  1784  0022  2828               	goto	l6889
  1785  0023  0838               	movf	printf@c^(0+128),w
  1786  0024  254D  120A  118A   	fcall	_putch
  1787  0027  2813               	goto	l7161
  1788  0028                     l6889:	
  1789  0028  01B1               	clrf	printf@width^(0+128)
  1790  0029  01B2               	clrf	(printf@width+1)^(0+128)
  1791  002A  01AD               	clrf	printf@flag^(0+128)
  1792  002B  01AE               	clrf	(printf@flag+1)^(0+128)
  1793  002C  282F               	goto	l6895
  1794  002D                     l2208:	
  1795  002D  152D               	bsf	printf@flag^(0+128),2
  1796  002E  0AAC               	incf	printf@f^(0+128),f
  1797  002F                     l6895:	
  1798  002F  082C               	movf	printf@f^(0+128),w
  1799  0030  0084               	movwf	4
  1800  0031  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  1801                           
  1802                           ; Switch size 1, requested type "space"
  1803                           ; Number of cases is 1, Range of values is 48 to 48
  1804                           ; switch strategies available:
  1805                           ; Name         Instructions Cycles
  1806                           ; simple_byte            4     3 (average)
  1807                           ; direct_byte           14    11 (fixed)
  1808                           ; jumptable            263     9 (fixed)
  1809                           ;	Chosen strategy is simple_byte
  1810  0036  3A30               	xorlw	48	; case 48
  1811  0037  1903               	skipnz
  1812  0038  282D               	goto	l2208
  1813  0039  283A               	goto	l6897
  1814  003A                     l6897:	
  1815  003A  082C               	movf	printf@f^(0+128),w
  1816  003B  0084               	movwf	4
  1817  003C  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  1818  0041  25BB  120A  118A   	fcall	_isdigit
  1819  0044  1C03               	btfss	3,0
  1820  0045  286A               	goto	l6907
  1821  0046  01B1               	clrf	printf@width^(0+128)
  1822  0047  01B2               	clrf	(printf@width+1)^(0+128)
  1823  0048                     l6901:	
  1824  0048  0832               	movf	(printf@width+1)^(0+128),w
  1825  0049  00F3               	movwf	?___wmul+1
  1826  004A  0831               	movf	printf@width^(0+128),w
  1827  004B  00F2               	movwf	?___wmul
  1828  004C  300A               	movlw	10
  1829  004D  00F4               	movwf	?___wmul+2
  1830  004E  01F5               	clrf	?___wmul+3
  1831  004F  25C9               	fcall	___wmul
  1832  0050  082C               	movf	printf@f^(0+128),w
  1833  0051  0084               	movwf	4
  1834  0052  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  1835  0057  2747  120A  118A   	fcall	PL13	;call to abstracted procedure
  1836  005A  00B1               	movwf	printf@width^(0+128)
  1837  005B  2783               	fcall	PL28	;call to abstracted procedure
  1838  005C  00B2               	movwf	(printf@width+1)^(0+128)
  1839  005D  0AAC               	incf	printf@f^(0+128),f
  1840  005E  082C               	movf	printf@f^(0+128),w
  1841  005F  0084               	movwf	4
  1842  0060  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  1843  0065  25BB  120A  118A   	fcall	_isdigit
  1844  0068  1803               	btfsc	3,0
  1845  0069  2848               	goto	l6901
  1846  006A                     l6907:	
  1847  006A  082C               	movf	printf@f^(0+128),w
  1848  006B  0084               	movwf	4
  1849  006C  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  1850  0071  3A2E               	xorlw	46
  1851  0072  1D03               	skipz
  1852  0073  289D               	goto	l6921
  1853  0074  172E               	bsf	(printf@flag^(0+128)+1),6
  1854  0075  0AAC               	incf	printf@f^(0+128),f
  1855  0076  01B6               	clrf	printf@prec^(0+128)
  1856  0077  01B7               	clrf	(printf@prec+1)^(0+128)
  1857  0078                     l6919:	
  1858  0078  082C               	movf	printf@f^(0+128),w
  1859  0079  0084               	movwf	4
  1860  007A  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  1861  007F  25BB  120A  118A   	fcall	_isdigit
  1862  0082  1C03               	btfss	3,0
  1863  0083  28A6               	goto	l6929
  1864  0084  0837               	movf	(printf@prec+1)^(0+128),w
  1865  0085  00F3               	movwf	?___wmul+1
  1866  0086  0836               	movf	printf@prec^(0+128),w
  1867  0087  00F2               	movwf	?___wmul
  1868  0088  300A               	movlw	10
  1869  0089  00F4               	movwf	?___wmul+2
  1870  008A  01F5               	clrf	?___wmul+3
  1871  008B  25C9               	fcall	___wmul
  1872  008C  082C               	movf	printf@f^(0+128),w
  1873  008D  0084               	movwf	4
  1874  008E  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  1875  0093  2747  120A  118A   	fcall	PL13	;call to abstracted procedure
  1876  0096  00B6               	movwf	printf@prec^(0+128)
  1877  0097  2783  120A  118A   	fcall	PL28	;call to abstracted procedure
  1878  009A  00B7               	movwf	(printf@prec+1)^(0+128)
  1879  009B  0AAC               	incf	printf@f^(0+128),f
  1880  009C  2878               	goto	l6919
  1881  009D                     l6921:	
  1882  009D  01B6               	clrf	printf@prec^(0+128)
  1883  009E  01B7               	clrf	(printf@prec+1)^(0+128)
  1884  009F  162E               	bsf	(printf@flag^(0+128)+1),4
  1885  00A0  28A6               	goto	l6929
  1886  00A1                     l2223:	
  1887  00A1  152E               	bsf	(printf@flag^(0+128)+1),2
  1888  00A2  28B9               	goto	l6931
  1889  00A3                     l6925:	
  1890  00A3  30C0               	movlw	192
  1891  00A4  04AD               	iorwf	printf@flag^(0+128),f
  1892  00A5  28B9               	goto	l6931
  1893  00A6                     l6929:	
  1894  00A6  082C               	movf	printf@f^(0+128),w
  1895  00A7  0AAC               	incf	printf@f^(0+128),f
  1896  00A8  0084               	movwf	4
  1897  00A9  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  1898  00AE  00B8               	movwf	printf@c^(0+128)
  1899                           
  1900                           ; Switch size 1, requested type "space"
  1901                           ; Number of cases is 3, Range of values is 0 to 117
  1902                           ; switch strategies available:
  1903                           ; Name         Instructions Cycles
  1904                           ; simple_byte           10     6 (average)
  1905                           ; jumptable            260     6 (fixed)
  1906                           ; rangetable           122     6 (fixed)
  1907                           ; spacedrange          242     9 (fixed)
  1908                           ; locatedrange         118     3 (fixed)
  1909                           ;	Chosen strategy is simple_byte
  1910  00AF  3A00               	xorlw	0	; case 0
  1911  00B0  1903               	skipnz
  1912  00B1  2D4C               	goto	l2302
  1913  00B2  3A66               	xorlw	102	; case 102
  1914  00B3  1903               	skipnz
  1915  00B4  28A1               	goto	l2223
  1916  00B5  3A13               	xorlw	19	; case 117
  1917  00B6  1903               	skipnz
  1918  00B7  28A3               	goto	l6925
  1919  00B8  2813               	goto	l7161
  1920  00B9                     l6931:	
  1921  00B9  1283               	bcf	3,5	;RP0=0, select bank0
  1922  00BA  3007               	movlw	7
  1923  00BB  01DA               	clrf	??_printf
  1924  00BC  1683               	bsf	3,5	;RP0=1, select bank1
  1925  00BD  052E               	andwf	(printf@flag+1)^(0+128),w
  1926  00BE  1283               	bcf	3,5	;RP0=0, select bank0
  1927  00BF  00DB               	movwf	??_printf+1
  1928  00C0  045A               	iorwf	??_printf,w
  1929  00C1  1903               	skipnz
  1930  00C2  2C0F               	goto	l7083
  1931  00C3  1683               	bsf	3,5	;RP0=1, select bank1
  1932  00C4  1E2E               	btfss	(printf@flag+1)^(0+128),4
  1933  00C5  28C9               	goto	l6937
  1934  00C6  3006               	movlw	6
  1935  00C7  00B6               	movwf	printf@prec^(0+128)
  1936  00C8  01B7               	clrf	(printf@prec+1)^(0+128)
  1937  00C9                     l6937:	
  1938  00C9  0824               	movf	printf@ap^(0+128),w
  1939  00CA  0084               	movwf	4
  1940  00CB  1383               	bcf	3,7	;select IRP bank0
  1941  00CC  0800               	movf	0,w
  1942  00CD  00B3               	movwf	printf@fval^(0+128)
  1943  00CE  0A84               	incf	4,f
  1944  00CF  0800               	movf	0,w
  1945  00D0  00B4               	movwf	(printf@fval+1)^(0+128)
  1946  00D1  0A84               	incf	4,f
  1947  00D2  0800               	movf	0,w
  1948  00D3  00B5               	movwf	(printf@fval+2)^(0+128)
  1949  00D4  3003               	movlw	3
  1950  00D5  07A4               	addwf	printf@ap^(0+128),f
  1951  00D6  0833               	movf	printf@fval^(0+128),w
  1952  00D7  00F2               	movwf	?___ftge
  1953  00D8  0834               	movf	(printf@fval+1)^(0+128),w
  1954  00D9  00F3               	movwf	?___ftge+1
  1955  00DA  0835               	movf	(printf@fval+2)^(0+128),w
  1956  00DB  00F4               	movwf	?___ftge+2
  1957  00DC  01F5               	clrf	?___ftge+3
  1958  00DD  01F6               	clrf	?___ftge+4
  1959  00DE  01F7               	clrf	?___ftge+5
  1960  00DF  258F  120A  118A   	fcall	___ftge
  1961  00E2  1803               	btfsc	3,0
  1962  00E3  28F5               	goto	l6947
  1963  00E4  0833               	movf	printf@fval^(0+128),w
  1964  00E5  00F2               	movwf	?___ftneg
  1965  00E6  0834               	movf	(printf@fval+1)^(0+128),w
  1966  00E7  00F3               	movwf	?___ftneg+1
  1967  00E8  0835               	movf	(printf@fval+2)^(0+128),w
  1968  00E9  00F4               	movwf	?___ftneg+2
  1969  00EA  26FE  120A  118A   	fcall	___ftneg
  1970  00ED  0872               	movf	?___ftneg,w
  1971  00EE  00B3               	movwf	printf@fval^(0+128)
  1972  00EF  0873               	movf	?___ftneg+1,w
  1973  00F0  00B4               	movwf	(printf@fval+1)^(0+128)
  1974  00F1  0874               	movf	?___ftneg+2,w
  1975  00F2  00B5               	movwf	(printf@fval+2)^(0+128)
  1976  00F3  3003               	movlw	3
  1977  00F4  04AD               	iorwf	printf@flag^(0+128),f
  1978  00F5                     l6947:	
  1979  00F5  01AF               	clrf	printf@exp^(0+128)
  1980  00F6  01B0               	clrf	(printf@exp+1)^(0+128)
  1981  00F7  0835               	movf	(printf@fval+2)^(0+128),w
  1982  00F8  0434               	iorwf	(printf@fval+1)^(0+128),w
  1983  00F9  0433               	iorwf	printf@fval^(0+128),w
  1984  00FA  1903               	skipnz
  1985  00FB  298C               	goto	l6979
  1986  00FC  30B3               	movlw	low printf@fval
  1987  00FD  0084               	movwf	4
  1988  00FE  2791  120A  118A   	fcall	PL31	;call to abstracted procedure
  1989  0101  0A84               	incf	4,f
  1990  0102  0800               	movf	0,w
  1991  0103  00DC               	movwf	??_printf+2
  1992  0104  0A84               	incf	4,f
  1993  0105  0800               	movf	0,w
  1994  0106  00DD               	movwf	??_printf+3
  1995  0107  300F               	movlw	15
  1996  0108                     u3515:	
  1997  0108  1003               	clrc
  1998  0109  0CDD               	rrf	??_printf+3,f
  1999  010A  0CDC               	rrf	??_printf+2,f
  2000  010B  0CDB               	rrf	??_printf+1,f
  2001  010C  0CDA               	rrf	??_printf,f
  2002  010D  3EFF               	addlw	-1
  2003  010E  1D03               	skipz
  2004  010F  2908               	goto	u3515
  2005  0110  085B               	movf	??_printf+1,w
  2006  0111  1683               	bsf	3,5	;RP0=1, select bank1
  2007  0112  00B0               	movwf	(printf@exp+1)^(0+128)
  2008  0113  1283               	bcf	3,5	;RP0=0, select bank0
  2009  0114  085A               	movf	??_printf,w
  2010  0115  1683               	bsf	3,5	;RP0=1, select bank1
  2011  0116  00AF               	movwf	printf@exp^(0+128)
  2012  0117  3082               	movlw	-126
  2013  0118  01B0               	clrf	(printf@exp+1)^(0+128)
  2014  0119  07AF               	addwf	printf@exp^(0+128),f
  2015  011A  1C03               	skipc
  2016  011B  03B0               	decf	(printf@exp+1)^(0+128),f
  2017  011C  30FF               	movlw	-1
  2018  011D  07AF               	addwf	printf@exp^(0+128),f
  2019  011E  1C03               	skipc
  2020  011F  03B0               	decf	(printf@exp+1)^(0+128),f
  2021  0120  3003               	movlw	3
  2022  0121  00F2               	movwf	?___wmul
  2023  0122  01F3               	clrf	?___wmul+1
  2024  0123  0830               	movf	(printf@exp+1)^(0+128),w
  2025  0124  00F5               	movwf	?___wmul+3
  2026  0125  082F               	movf	printf@exp^(0+128),w
  2027  0126  00F4               	movwf	?___wmul+2
  2028  0127  25C9               	fcall	___wmul
  2029  0128  0873               	movf	?___wmul+1,w
  2030  0129  00B0               	movwf	(printf@exp+1)^(0+128)
  2031  012A  0872               	movf	?___wmul,w
  2032  012B  00AF               	movwf	printf@exp^(0+128)
  2033  012C  300A               	movlw	10
  2034  012D  00F8               	movwf	?___awdiv
  2035  012E  01F9               	clrf	?___awdiv+1
  2036  012F  0830               	movf	(printf@exp+1)^(0+128),w
  2037  0130  00FB               	movwf	?___awdiv+3
  2038  0131  082F               	movf	printf@exp^(0+128),w
  2039  0132  00FA               	movwf	?___awdiv+2
  2040  0133  120A  158A  2669   	fcall	___awdiv
      +       120A  118A         
  2041  0138  0879               	movf	?___awdiv+1,w
  2042  0139  1683               	bsf	3,5	;RP0=1, select bank1
  2043  013A  00B0               	movwf	(printf@exp+1)^(0+128)
  2044  013B  0878               	movf	?___awdiv,w
  2045  013C  00AF               	movwf	printf@exp^(0+128)
  2046  013D  1FB0               	btfss	(printf@exp+1)^(0+128),7
  2047  013E  2943               	goto	l6967
  2048  013F  30FF               	movlw	-1
  2049  0140  07AF               	addwf	printf@exp^(0+128),f
  2050  0141  1C03               	skipc
  2051  0142  03B0               	decf	(printf@exp+1)^(0+128),f
  2052  0143                     l6967:	
  2053  0143  032F               	decf	printf@exp^(0+128),w
  2054  0144  3AFF               	xorlw	255
  2055  0145  120A  158A  24D7   	fcall	_scale
      +       120A  118A         
  2056  014A  2731  120A  118A   	fcall	PL7	;call to abstracted procedure
  2057  014D  275E               	fcall	PL16	;call to abstracted procedure
  2058  014E  1683               	bsf	3,5	;RP0=1, select bank1
  2059  014F  0825               	movf	printf@integ^(0+128),w
  2060  0150  1283               	bcf	3,5	;RP0=0, select bank0
  2061  0151  00B4               	movwf	?___ftmul+3
  2062  0152  1683               	bsf	3,5	;RP0=1, select bank1
  2063  0153  0826               	movf	(printf@integ+1)^(0+128),w
  2064  0154  1283               	bcf	3,5	;RP0=0, select bank0
  2065  0155  00B5               	movwf	?___ftmul+4
  2066  0156  1683               	bsf	3,5	;RP0=1, select bank1
  2067  0157  0827               	movf	(printf@integ+2)^(0+128),w
  2068  0158  1283               	bcf	3,5	;RP0=0, select bank0
  2069  0159  00B6               	movwf	?___ftmul+5
  2070  015A  120A  158A  26EC   	fcall	___ftmul
      +       120A  118A         
  2071  015F  0831               	movf	?___ftmul,w
  2072  0160  1683               	bsf	3,5	;RP0=1, select bank1
  2073  0161  00A5               	movwf	printf@integ^(0+128)
  2074  0162  1283               	bcf	3,5	;RP0=0, select bank0
  2075  0163  0832               	movf	?___ftmul+1,w
  2076  0164  1683               	bsf	3,5	;RP0=1, select bank1
  2077  0165  00A6               	movwf	(printf@integ+1)^(0+128)
  2078  0166  1283               	bcf	3,5	;RP0=0, select bank0
  2079  0167  0833               	movf	?___ftmul+2,w
  2080  0168  1683               	bsf	3,5	;RP0=1, select bank1
  2081  0169  00A7               	movwf	(printf@integ+2)^(0+128)
  2082  016A  277C  120A  118A   	fcall	PL21	;call to abstracted procedure
  2083  016D  3080               	movlw	128
  2084  016E  01F5               	clrf	?___ftge+3
  2085  016F  00F6               	movwf	?___ftge+4
  2086  0170  303F               	movlw	63
  2087  0171  00F7               	movwf	?___ftge+5
  2088  0172  258F  120A  118A   	fcall	___ftge
  2089  0175  1803               	btfsc	3,0
  2090  0176  297C               	goto	l6975
  2091  0177  30FF               	movlw	-1
  2092  0178  07AF               	addwf	printf@exp^(0+128),f
  2093  0179  1C03               	skipc
  2094  017A  03B0               	decf	(printf@exp+1)^(0+128),f
  2095  017B  298C               	goto	l6979
  2096  017C                     l6975:	
  2097  017C  277C  120A  118A   	fcall	PL21	;call to abstracted procedure
  2098  017F  3020               	movlw	32
  2099  0180  01F5               	clrf	?___ftge+3
  2100  0181  00F6               	movwf	?___ftge+4
  2101  0182  3041               	movlw	65
  2102  0183  00F7               	movwf	?___ftge+5
  2103  0184  258F  120A  118A   	fcall	___ftge
  2104  0187  1C03               	btfss	3,0
  2105  0188  298C               	goto	l6979
  2106  0189  0AAF               	incf	printf@exp^(0+128),f
  2107  018A  1903               	skipnz
  2108  018B  0AB0               	incf	(printf@exp+1)^(0+128),f
  2109  018C                     l6979:	
  2110  018C  0837               	movf	(printf@prec+1)^(0+128),w
  2111  018D  3A80               	xorlw	128
  2112  018E  00FF               	movwf	127
  2113  018F  3080               	movlw	128
  2114  0190  027F               	subwf	127,w
  2115  0191  1D03               	skipz
  2116  0192  2995               	goto	u3555
  2117  0193  300D               	movlw	13
  2118  0194  0236               	subwf	printf@prec^(0+128),w
  2119  0195                     u3555:	
  2120  0195  1803               	skipnc
  2121  0196  29C0               	goto	l6983
  2122  0197  2798               	call	PL32	;select bank 1
  2123  0198  0836               	movf	printf@prec^(0+128),w
  2124  0199  120A  158A  2167   	fcall	_fround
      +       120A  118A         
  2125  019E  084C               	movf	?_fround,w
  2126  019F  00C0               	movwf	?___ftadd
  2127  01A0  084D               	movf	?_fround+1,w
  2128  01A1  00C1               	movwf	?___ftadd+1
  2129  01A2  084E               	movf	?_fround+2,w
  2130  01A3  00C2               	movwf	?___ftadd+2
  2131  01A4  1683               	bsf	3,5	;RP0=1, select bank1
  2132  01A5  0833               	movf	printf@fval^(0+128),w
  2133  01A6  1283               	bcf	3,5	;RP0=0, select bank0
  2134  01A7  00C3               	movwf	?___ftadd+3
  2135  01A8  1683               	bsf	3,5	;RP0=1, select bank1
  2136  01A9  0834               	movf	(printf@fval+1)^(0+128),w
  2137  01AA  1283               	bcf	3,5	;RP0=0, select bank0
  2138  01AB  00C4               	movwf	?___ftadd+4
  2139  01AC  1683               	bsf	3,5	;RP0=1, select bank1
  2140  01AD  0835               	movf	(printf@fval+2)^(0+128),w
  2141  01AE  1283               	bcf	3,5	;RP0=0, select bank0
  2142  01AF  00C5               	movwf	?___ftadd+5
  2143  01B0  120A  158A  20A5   	fcall	___ftadd
      +       120A  118A         
  2144  01B5  0840               	movf	?___ftadd,w
  2145  01B6  1683               	bsf	3,5	;RP0=1, select bank1
  2146  01B7  00B3               	movwf	printf@fval^(0+128)
  2147  01B8  1283               	bcf	3,5	;RP0=0, select bank0
  2148  01B9  0841               	movf	?___ftadd+1,w
  2149  01BA  1683               	bsf	3,5	;RP0=1, select bank1
  2150  01BB  00B4               	movwf	(printf@fval+1)^(0+128)
  2151  01BC  1283               	bcf	3,5	;RP0=0, select bank0
  2152  01BD  0842               	movf	?___ftadd+2,w
  2153  01BE  1683               	bsf	3,5	;RP0=1, select bank1
  2154  01BF  00B5               	movwf	(printf@fval+2)^(0+128)
  2155  01C0                     l6983:	
  2156  01C0  2798               	call	PL32	;select bank 1
  2157  01C1  0830               	movf	(printf@exp+1)^(0+128),w
  2158  01C2  3A80               	xorlw	128
  2159  01C3  00FF               	movwf	127
  2160  01C4  3080               	movlw	128
  2161  01C5  027F               	subwf	127,w
  2162  01C6  1D03               	skipz
  2163  01C7  29CA               	goto	u3565
  2164  01C8  300A               	movlw	10
  2165  01C9  022F               	subwf	printf@exp^(0+128),w
  2166  01CA                     u3565:	
  2167  01CA  1803               	skipnc
  2168  01CB  29EB               	goto	l6991
  2169  01CC  2798               	call	PL32	;select bank 1
  2170  01CD  0835               	movf	(printf@fval+2)^(0+128),w
  2171  01CE  0434               	iorwf	(printf@fval+1)^(0+128),w
  2172  01CF  0433               	iorwf	printf@fval^(0+128),w
  2173  01D0  1903               	skipnz
  2174  01D1  2A2C               	goto	l7007
  2175  01D2  0833               	movf	printf@fval^(0+128),w
  2176  01D3  2753  120A  118A   	fcall	PL14	;call to abstracted procedure
  2177  01D6  25E2  120A  118A   	fcall	___fttol
  2178  01D9  0827               	movf	?___fttol+3,w
  2179  01DA  0426               	iorwf	?___fttol+2,w
  2180  01DB  0425               	iorwf	?___fttol+1,w
  2181  01DC  0424               	iorwf	?___fttol,w
  2182  01DD  1D03               	skipz
  2183  01DE  2A2C               	goto	l7007
  2184  01DF  1683               	bsf	3,5	;RP0=1, select bank1
  2185  01E0  0830               	movf	(printf@exp+1)^(0+128),w
  2186  01E1  3A80               	xorlw	128
  2187  01E2  00FF               	movwf	127
  2188  01E3  3080               	movlw	128
  2189  01E4  027F               	subwf	127,w
  2190  01E5  1D03               	skipz
  2191  01E6  29E9               	goto	u3595
  2192  01E7  3002               	movlw	2
  2193  01E8  022F               	subwf	printf@exp^(0+128),w
  2194  01E9                     u3595:	
  2195  01E9  1C03               	skipc
  2196  01EA  2A2C               	goto	l7007
  2197  01EB                     l6991:	
  2198  01EB  2798               	call	PL32	;select bank 1
  2199  01EC  277C  120A  118A   	fcall	PL21	;call to abstracted procedure
  2200  01EF  3070               	movlw	112
  2201  01F0  00F5               	movwf	?___ftge+3
  2202  01F1  3089               	movlw	137
  2203  01F2  00F6               	movwf	?___ftge+4
  2204  01F3  3040               	movlw	64
  2205  01F4  00F7               	movwf	?___ftge+5
  2206  01F5  258F  120A  118A   	fcall	___ftge
  2207  01F8  1803               	btfsc	3,0
  2208  01F9  29FC               	goto	l6995
  2209  01FA  30F7               	movlw	-9
  2210  01FB  29FD               	goto	L1
  2211  01FC                     l6995:	
  2212  01FC  30F8               	movlw	-8
  2213  01FD                     L1:	
  2214  01FD  07AF               	addwf	printf@exp^(0+128),f
  2215  01FE  1C03               	skipc
  2216  01FF  03B0               	decf	(printf@exp+1)^(0+128),f
  2217  0200  082F               	movf	printf@exp^(0+128),w
  2218  0201  120A  158A  24D7   	fcall	_scale
      +       120A  118A         
  2219  0206  2731  120A  118A   	fcall	PL7	;call to abstracted procedure
  2220  0209  00F2               	movwf	?__tdiv_to_l_
  2221  020A  0834               	movf	(printf@fval+1)^(0+128),w
  2222  020B  00F3               	movwf	?__tdiv_to_l_+1
  2223  020C  0835               	movf	(printf@fval+2)^(0+128),w
  2224  020D  00F4               	movwf	?__tdiv_to_l_+2
  2225  020E  0825               	movf	printf@integ^(0+128),w
  2226  020F  00F5               	movwf	?__tdiv_to_l_+3
  2227  0210  0826               	movf	(printf@integ+1)^(0+128),w
  2228  0211  00F6               	movwf	?__tdiv_to_l_+4
  2229  0212  0827               	movf	(printf@integ+2)^(0+128),w
  2230  0213  00F7               	movwf	?__tdiv_to_l_+5
  2231  0214  2686  120A  118A   	fcall	__tdiv_to_l_
  2232  0217  0875               	movf	?__tdiv_to_l_+3,w
  2233  0218  1683               	bsf	3,5	;RP0=1, select bank1
  2234  0219  00A3               	movwf	(_printf$3165+3)^(0+128)
  2235  021A  0874               	movf	?__tdiv_to_l_+2,w
  2236  021B  00A2               	movwf	(_printf$3165+2)^(0+128)
  2237  021C  0873               	movf	?__tdiv_to_l_+1,w
  2238  021D  00A1               	movwf	(_printf$3165+1)^(0+128)
  2239  021E  0872               	movf	?__tdiv_to_l_,w
  2240  021F  00A0               	movwf	_printf$3165^(0+128)
  2241  0220  0823               	movf	(_printf$3165+3)^(0+128),w
  2242  0221  00AB               	movwf	(printf@_val+3)^(0+128)
  2243  0222  0822               	movf	(_printf$3165+2)^(0+128),w
  2244  0223  00AA               	movwf	(printf@_val+2)^(0+128)
  2245  0224  0821               	movf	(_printf$3165+1)^(0+128),w
  2246  0225  00A9               	movwf	(printf@_val+1)^(0+128)
  2247  0226  0820               	movf	_printf$3165^(0+128),w
  2248  0227  00A8               	movwf	printf@_val^(0+128)
  2249  0228  01B3               	clrf	printf@fval^(0+128)
  2250  0229  01B4               	clrf	(printf@fval+1)^(0+128)
  2251  022A  01B5               	clrf	(printf@fval+2)^(0+128)
  2252  022B  2A6F               	goto	l7011
  2253  022C                     l7007:	
  2254  022C  2798               	call	PL32	;select bank 1
  2255  022D  0833               	movf	printf@fval^(0+128),w
  2256  022E  2753  120A  118A   	fcall	PL14	;call to abstracted procedure
  2257  0231  25E2  120A  118A   	fcall	___fttol
  2258  0234  2723               	fcall	PL6	;call to abstracted procedure
  2259  0235  1683               	bsf	3,5	;RP0=1, select bank1
  2260  0236  00A8               	movwf	printf@_val^(0+128)
  2261  0237  082B               	movf	(printf@_val+3)^(0+128),w
  2262  0238  1283               	bcf	3,5	;RP0=0, select bank0
  2263  0239  00A3               	movwf	?___lltoft+3
  2264  023A  1683               	bsf	3,5	;RP0=1, select bank1
  2265  023B  082A               	movf	(printf@_val+2)^(0+128),w
  2266  023C  1283               	bcf	3,5	;RP0=0, select bank0
  2267  023D  00A2               	movwf	?___lltoft+2
  2268  023E  1683               	bsf	3,5	;RP0=1, select bank1
  2269  023F  0829               	movf	(printf@_val+1)^(0+128),w
  2270  0240  1283               	bcf	3,5	;RP0=0, select bank0
  2271  0241  00A1               	movwf	?___lltoft+1
  2272  0242  1683               	bsf	3,5	;RP0=1, select bank1
  2273  0243  0828               	movf	printf@_val^(0+128),w
  2274  0244  1283               	bcf	3,5	;RP0=0, select bank0
  2275  0245  00A0               	movwf	?___lltoft
  2276  0246  120A  158A  248A   	fcall	___lltoft
      +       120A  118A         
  2277  024B  0820               	movf	?___lltoft,w
  2278  024C  00CC               	movwf	?___ftsub
  2279  024D  0821               	movf	?___lltoft+1,w
  2280  024E  00CD               	movwf	?___ftsub+1
  2281  024F  0822               	movf	?___lltoft+2,w
  2282  0250  00CE               	movwf	?___ftsub+2
  2283  0251  1683               	bsf	3,5	;RP0=1, select bank1
  2284  0252  0833               	movf	printf@fval^(0+128),w
  2285  0253  1283               	bcf	3,5	;RP0=0, select bank0
  2286  0254  00CF               	movwf	?___ftsub+3
  2287  0255  1683               	bsf	3,5	;RP0=1, select bank1
  2288  0256  0834               	movf	(printf@fval+1)^(0+128),w
  2289  0257  1283               	bcf	3,5	;RP0=0, select bank0
  2290  0258  00D0               	movwf	?___ftsub+4
  2291  0259  1683               	bsf	3,5	;RP0=1, select bank1
  2292  025A  0835               	movf	(printf@fval+2)^(0+128),w
  2293  025B  1283               	bcf	3,5	;RP0=0, select bank0
  2294  025C  00D1               	movwf	?___ftsub+5
  2295  025D  120A  158A  208F   	fcall	___ftsub
      +       120A  118A         
  2296  0262  084C               	movf	?___ftsub,w
  2297  0263  1683               	bsf	3,5	;RP0=1, select bank1
  2298  0264  00B3               	movwf	printf@fval^(0+128)
  2299  0265  1283               	bcf	3,5	;RP0=0, select bank0
  2300  0266  084D               	movf	?___ftsub+1,w
  2301  0267  1683               	bsf	3,5	;RP0=1, select bank1
  2302  0268  00B4               	movwf	(printf@fval+1)^(0+128)
  2303  0269  1283               	bcf	3,5	;RP0=0, select bank0
  2304  026A  084E               	movf	?___ftsub+2,w
  2305  026B  1683               	bsf	3,5	;RP0=1, select bank1
  2306  026C  00B5               	movwf	(printf@fval+2)^(0+128)
  2307  026D  01AF               	clrf	printf@exp^(0+128)
  2308  026E  01B0               	clrf	(printf@exp+1)^(0+128)
  2309  026F                     l7011:	
  2310  026F  01B8               	clrf	printf@c^(0+128)
  2311  0270  0AB8               	incf	printf@c^(0+128),f
  2312  0271                     l7017:	
  2313  0271  2706               	fcall	PL2	;call to abstracted procedure
  2314  0272  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2315  0277  00DB               	movwf	??_printf+1
  2316  0278  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2317  027D  00DC               	movwf	??_printf+2
  2318  027E  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2319  0283  00DD               	movwf	??_printf+3
  2320  0284  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2321  0289  00DE               	movwf	??_printf+4
  2322  028A  1683               	bsf	3,5	;RP0=1, select bank1
  2323  028B  022B               	subwf	(printf@_val+3)^(0+128),w
  2324  028C  1D03               	skipz
  2325  028D  2A9E               	goto	u3615
  2326  028E  1283               	bcf	3,5	;RP0=0, select bank0
  2327  028F  085D               	movf	??_printf+3,w
  2328  0290  1683               	bsf	3,5	;RP0=1, select bank1
  2329  0291  022A               	subwf	(printf@_val+2)^(0+128),w
  2330  0292  1D03               	skipz
  2331  0293  2A9E               	goto	u3615
  2332  0294  1283               	bcf	3,5	;RP0=0, select bank0
  2333  0295  085C               	movf	??_printf+2,w
  2334  0296  1683               	bsf	3,5	;RP0=1, select bank1
  2335  0297  0229               	subwf	(printf@_val+1)^(0+128),w
  2336  0298  1D03               	skipz
  2337  0299  2A9E               	goto	u3615
  2338  029A  1283               	bcf	3,5	;RP0=0, select bank0
  2339  029B  085B               	movf	??_printf+1,w
  2340  029C  1683               	bsf	3,5	;RP0=1, select bank1
  2341  029D  0228               	subwf	printf@_val^(0+128),w
  2342  029E                     u3615:	
  2343  029E  1C03               	btfss	3,0
  2344  029F  2AA5               	goto	l7025
  2345  02A0  0AB8               	incf	printf@c^(0+128),f
  2346  02A1  0838               	movf	printf@c^(0+128),w
  2347  02A2  3A0A               	xorlw	10
  2348  02A3  1D03               	skipz
  2349  02A4  2A71               	goto	l7017
  2350  02A5                     l7025:	
  2351  02A5  0836               	movf	printf@prec^(0+128),w
  2352  02A6  0738               	addwf	printf@c^(0+128),w
  2353  02A7  1283               	bcf	3,5	;RP0=0, select bank0
  2354  02A8  00DA               	movwf	??_printf
  2355  02A9  1683               	bsf	3,5	;RP0=1, select bank1
  2356  02AA  0837               	movf	(printf@prec+1)^(0+128),w
  2357  02AB  1803               	skipnc
  2358  02AC  0A37               	incf	(printf@prec+1)^(0+128),w
  2359  02AD  1BB8               	btfsc	printf@c^(0+128),7
  2360  02AE  3EFF               	addlw	255
  2361  02AF  1283               	bcf	3,5	;RP0=0, select bank0
  2362  02B0  00DB               	movwf	??_printf+1
  2363  02B1  1683               	bsf	3,5	;RP0=1, select bank1
  2364  02B2  082F               	movf	printf@exp^(0+128),w
  2365  02B3  1283               	bcf	3,5	;RP0=0, select bank0
  2366  02B4  075A               	addwf	??_printf,w
  2367  02B5  00DC               	movwf	??_printf+2
  2368  02B6  1683               	bsf	3,5	;RP0=1, select bank1
  2369  02B7  0830               	movf	(printf@exp+1)^(0+128),w
  2370  02B8  1803               	skipnc
  2371  02B9  0A30               	incf	(printf@exp+1)^(0+128),w
  2372  02BA  1283               	bcf	3,5	;RP0=0, select bank0
  2373  02BB  075B               	addwf	??_printf+1,w
  2374  02BC  00DD               	movwf	??_printf+3
  2375  02BD  085C               	movf	??_printf+2,w
  2376  02BE  1683               	bsf	3,5	;RP0=1, select bank1
  2377  02BF  02B1               	subwf	printf@width^(0+128),f
  2378  02C0  1283               	bcf	3,5	;RP0=0, select bank0
  2379  02C1  085D               	movf	??_printf+3,w
  2380  02C2  1683               	bsf	3,5	;RP0=1, select bank1
  2381  02C3  1C03               	skipc
  2382  02C4  03B2               	decf	(printf@width+1)^(0+128),f
  2383  02C5  02B2               	subwf	(printf@width+1)^(0+128),f
  2384  02C6  0837               	movf	(printf@prec+1)^(0+128),w
  2385  02C7  0436               	iorwf	printf@prec^(0+128),w
  2386  02C8  1903               	skipnz
  2387  02C9  2ACE               	goto	l7031
  2388  02CA  30FF               	movlw	-1
  2389  02CB  07B1               	addwf	printf@width^(0+128),f
  2390  02CC  1C03               	skipc
  2391  02CD  03B2               	decf	(printf@width+1)^(0+128),f
  2392  02CE                     l7031:	
  2393  02CE  082D               	movf	printf@flag^(0+128),w
  2394  02CF  3903               	andlw	3
  2395  02D0  1903               	btfsc	3,2
  2396  02D1  2AD6               	goto	l7035
  2397  02D2  30FF               	movlw	-1
  2398  02D3  07B1               	addwf	printf@width^(0+128),f
  2399  02D4  1C03               	skipc
  2400  02D5  03B2               	decf	(printf@width+1)^(0+128),f
  2401  02D6                     l7035:	
  2402  02D6  192D               	btfsc	printf@flag^(0+128),2
  2403  02D7  2AE2               	goto	l7043
  2404  02D8  2AF7               	goto	l7049
  2405  02D9                     l7039:	
  2406  02D9  3030               	movlw	48
  2407  02DA  254D  120A  118A   	fcall	_putch
  2408  02DD  30FF               	movlw	-1
  2409  02DE  2798               	call	PL32	;select bank 1
  2410  02DF  07B1               	addwf	printf@width^(0+128),f
  2411  02E0  1C03               	skipc
  2412  02E1  03B2               	decf	(printf@width+1)^(0+128),f
  2413  02E2                     l7043:	
  2414  02E2  0832               	movf	(printf@width+1)^(0+128),w
  2415  02E3  3A80               	xorlw	128
  2416  02E4  00FF               	movwf	127
  2417  02E5  3080               	movlw	128
  2418  02E6  027F               	subwf	127,w
  2419  02E7  1D03               	skipz
  2420  02E8  2AEB               	goto	u3665
  2421  02E9  3001               	movlw	1
  2422  02EA  0231               	subwf	printf@width^(0+128),w
  2423  02EB                     u3665:	
  2424  02EB  1C03               	btfss	3,0
  2425  02EC  2B35               	goto	l7057
  2426  02ED  2AD9               	goto	l7039
  2427  02EE                     l7045:	
  2428  02EE  3020               	movlw	32
  2429  02EF  254D  120A  118A   	fcall	_putch
  2430  02F2  30FF               	movlw	-1
  2431  02F3  2798               	call	PL32	;select bank 1
  2432  02F4  07B1               	addwf	printf@width^(0+128),f
  2433  02F5  1C03               	skipc
  2434  02F6  03B2               	decf	(printf@width+1)^(0+128),f
  2435  02F7                     l7049:	
  2436  02F7  0832               	movf	(printf@width+1)^(0+128),w
  2437  02F8  3A80               	xorlw	128
  2438  02F9  00FF               	movwf	127
  2439  02FA  3080               	movlw	128
  2440  02FB  027F               	subwf	127,w
  2441  02FC  1D03               	skipz
  2442  02FD  2B00               	goto	u3675
  2443  02FE  3001               	movlw	1
  2444  02FF  0231               	subwf	printf@width^(0+128),w
  2445  0300                     u3675:	
  2446  0300  1803               	skipnc
  2447  0301  2AEE               	goto	l7045
  2448  0302  2798               	call	PL32	;select bank 1
  2449  0303  082D               	movf	printf@flag^(0+128),w
  2450  0304  3903               	andlw	3
  2451  0305  1903               	btfsc	3,2
  2452  0306  2B35               	goto	l7057
  2453  0307  302D               	movlw	45
  2454  0308  2B32               	goto	L2
  2455  0309                     l7055:	
  2456  0309  2710  120A  118A   	fcall	PL4	;call to abstracted procedure
  2457  030C  2706               	fcall	PL2	;call to abstracted procedure
  2458  030D  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2459  0312  00F2               	movwf	?___lldiv
  2460  0313  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2461  0318  00F3               	movwf	?___lldiv+1
  2462  0319  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2463  031E  00F4               	movwf	?___lldiv+2
  2464  031F  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2465  0324  2718  120A  118A   	fcall	PL5	;call to abstracted procedure
  2466  0327  263D  120A  118A   	fcall	___lldiv
  2467  032A  273E  120A  118A   	fcall	PL12	;call to abstracted procedure
  2468  032D  2551  120A  118A   	fcall	___llmod
  2469  0330  0825               	movf	?___llmod,w
  2470  0331  3E30               	addlw	48
  2471  0332                     L2:	
  2472  0332  254D  120A  118A   	fcall	_putch
  2473  0335                     l7057:	
  2474  0335  2798               	call	PL32	;select bank 1
  2475  0336  03B8               	decf	printf@c^(0+128),f
  2476  0337  0F38               	incfsz	printf@c^(0+128),w
  2477  0338  2B09               	goto	l7055
  2478  0339                     l7063:	
  2479  0339  0830               	movf	(printf@exp+1)^(0+128),w
  2480  033A  3A80               	xorlw	128
  2481  033B  00FF               	movwf	127
  2482  033C  3080               	movlw	128
  2483  033D  027F               	subwf	127,w
  2484  033E  1D03               	skipz
  2485  033F  2B42               	goto	u3705
  2486  0340  3001               	movlw	1
  2487  0341  022F               	subwf	printf@exp^(0+128),w
  2488  0342                     u3705:	
  2489  0342  1C03               	btfss	3,0
  2490  0343  2B4E               	goto	l7065
  2491  0344  3030               	movlw	48
  2492  0345  254D  120A  118A   	fcall	_putch
  2493  0348  30FF               	movlw	-1
  2494  0349  2798               	call	PL32	;select bank 1
  2495  034A  07AF               	addwf	printf@exp^(0+128),f
  2496  034B  1C03               	skipc
  2497  034C  03B0               	decf	(printf@exp+1)^(0+128),f
  2498  034D  2B39               	goto	l7063
  2499  034E                     l7065:	
  2500  034E  2798               	call	PL32	;select bank 1
  2501  034F  0837               	movf	(printf@prec+1)^(0+128),w
  2502  0350  3A80               	xorlw	128
  2503  0351  00FF               	movwf	127
  2504  0352  3080               	movlw	128
  2505  0353  027F               	subwf	127,w
  2506  0354  1D03               	skipz
  2507  0355  2B58               	goto	u3715
  2508  0356  3009               	movlw	9
  2509  0357  0236               	subwf	printf@prec^(0+128),w
  2510  0358                     u3715:	
  2511  0358  1C03               	skipc
  2512  0359  2B5D               	goto	l7069
  2513  035A  3008               	movlw	8
  2514  035B  2798               	call	PL32	;select bank 1
  2515  035C  2B5F               	goto	L3
  2516  035D                     l7069:	
  2517  035D  2798               	call	PL32	;select bank 1
  2518  035E  0836               	movf	printf@prec^(0+128),w
  2519  035F                     L3:	
  2520  035F  00B8               	movwf	printf@c^(0+128)
  2521  0360  1283               	bcf	3,5	;RP0=0, select bank0
  2522  0361  00DA               	movwf	??_printf
  2523  0362  01DB               	clrf	??_printf+1
  2524  0363  1BDA               	btfsc	??_printf,7
  2525  0364  03DB               	decf	??_printf+1,f
  2526  0365  1683               	bsf	3,5	;RP0=1, select bank1
  2527  0366  02B6               	subwf	printf@prec^(0+128),f
  2528  0367  1283               	bcf	3,5	;RP0=0, select bank0
  2529  0368  085B               	movf	??_printf+1,w
  2530  0369  1683               	bsf	3,5	;RP0=1, select bank1
  2531  036A  1C03               	skipc
  2532  036B  03B7               	decf	(printf@prec+1)^(0+128),f
  2533  036C  02B7               	subwf	(printf@prec+1)^(0+128),f
  2534  036D  0838               	movf	printf@c^(0+128),w
  2535  036E  1903               	btfsc	3,2
  2536  036F  2B74               	goto	l2268
  2537  0370  302E               	movlw	46
  2538  0371  254D  120A  118A   	fcall	_putch
  2539  0374                     l2268:	
  2540  0374  2798               	call	PL32	;select bank 1
  2541  0375  0838               	movf	printf@c^(0+128),w
  2542  0376  120A  158A  24D7   	fcall	_scale
      +       120A  118A         
  2543  037B  0840               	movf	?_scale,w
  2544  037C  00B4               	movwf	?___ftmul+3
  2545  037D  0841               	movf	?_scale+1,w
  2546  037E  00B5               	movwf	?___ftmul+4
  2547  037F  0842               	movf	?_scale+2,w
  2548  0380  00B6               	movwf	?___ftmul+5
  2549  0381  1683               	bsf	3,5	;RP0=1, select bank1
  2550  0382  0833               	movf	printf@fval^(0+128),w
  2551  0383  275E               	fcall	PL16	;call to abstracted procedure
  2552  0384  120A  158A  26EC   	fcall	___ftmul
      +       120A  118A         
  2553  0389  0831               	movf	?___ftmul,w
  2554  038A  00A4               	movwf	?___fttol
  2555  038B  0832               	movf	?___ftmul+1,w
  2556  038C  00A5               	movwf	?___fttol+1
  2557  038D  0833               	movf	?___ftmul+2,w
  2558  038E  00A6               	movwf	?___fttol+2
  2559  038F  25E2  120A  118A   	fcall	___fttol
  2560  0392  2723  120A  118A   	fcall	PL6	;call to abstracted procedure
  2561  0395  2BFC               	goto	L4
  2562  0396                     l7073:	
  2563  0396  2710  120A  118A   	fcall	PL4	;call to abstracted procedure
  2564  0399  2706               	fcall	PL2	;call to abstracted procedure
  2565  039A  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2566  039F  00F2               	movwf	?___lldiv
  2567  03A0  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2568  03A5  00F3               	movwf	?___lldiv+1
  2569  03A6  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2570  03AB  00F4               	movwf	?___lldiv+2
  2571  03AC  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2572  03B1  2718  120A  118A   	fcall	PL5	;call to abstracted procedure
  2573  03B4  263D  120A  118A   	fcall	___lldiv
  2574  03B7  273E  120A  118A   	fcall	PL12	;call to abstracted procedure
  2575  03BA  2551  120A  118A   	fcall	___llmod
  2576  03BD  0825               	movf	?___llmod,w
  2577  03BE  3E30               	addlw	48
  2578  03BF  254D  120A  118A   	fcall	_putch
  2579  03C2  2798               	call	PL32	;select bank 1
  2580  03C3  2706               	fcall	PL2	;call to abstracted procedure
  2581  03C4  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2582  03C9  00A5               	movwf	?___llmod
  2583  03CA  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2584  03CF  00A6               	movwf	?___llmod+1
  2585  03D0  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2586  03D5  00A7               	movwf	?___llmod+2
  2587  03D6  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2588  03DB  00A8               	movwf	?___llmod+3
  2589  03DC  1683               	bsf	3,5	;RP0=1, select bank1
  2590  03DD  082B               	movf	(printf@_val+3)^(0+128),w
  2591  03DE  1283               	bcf	3,5	;RP0=0, select bank0
  2592  03DF  00AC               	movwf	?___llmod+7
  2593  03E0  1683               	bsf	3,5	;RP0=1, select bank1
  2594  03E1  082A               	movf	(printf@_val+2)^(0+128),w
  2595  03E2  1283               	bcf	3,5	;RP0=0, select bank0
  2596  03E3  00AB               	movwf	?___llmod+6
  2597  03E4  1683               	bsf	3,5	;RP0=1, select bank1
  2598  03E5  0829               	movf	(printf@_val+1)^(0+128),w
  2599  03E6  1283               	bcf	3,5	;RP0=0, select bank0
  2600  03E7  00AA               	movwf	?___llmod+5
  2601  03E8  1683               	bsf	3,5	;RP0=1, select bank1
  2602  03E9  0828               	movf	printf@_val^(0+128),w
  2603  03EA  1283               	bcf	3,5	;RP0=0, select bank0
  2604  03EB  00A9               	movwf	?___llmod+4
  2605  03EC  2551  120A  118A   	fcall	___llmod
  2606  03EF  0828               	movf	?___llmod+3,w
  2607  03F0  1683               	bsf	3,5	;RP0=1, select bank1
  2608  03F1  00AB               	movwf	(printf@_val+3)^(0+128)
  2609  03F2  1283               	bcf	3,5	;RP0=0, select bank0
  2610  03F3  0827               	movf	?___llmod+2,w
  2611  03F4  1683               	bsf	3,5	;RP0=1, select bank1
  2612  03F5  00AA               	movwf	(printf@_val+2)^(0+128)
  2613  03F6  1283               	bcf	3,5	;RP0=0, select bank0
  2614  03F7  0826               	movf	?___llmod+1,w
  2615  03F8  1683               	bsf	3,5	;RP0=1, select bank1
  2616  03F9  00A9               	movwf	(printf@_val+1)^(0+128)
  2617  03FA  1283               	bcf	3,5	;RP0=0, select bank0
  2618  03FB  0825               	movf	?___llmod,w
  2619  03FC                     L4:	
  2620  03FC  1683               	bsf	3,5	;RP0=1, select bank1
  2621  03FD  00A8               	movwf	printf@_val^(0+128)
  2622  03FE  03B8               	decf	printf@c^(0+128),f
  2623  03FF  0F38               	incfsz	printf@c^(0+128),w
  2624  0400  2B96               	goto	l7073
  2625  0401                     l7081:	
  2626  0401  0837               	movf	(printf@prec+1)^(0+128),w
  2627  0402  0436               	iorwf	printf@prec^(0+128),w
  2628  0403  1903               	btfsc	3,2
  2629  0404  2813               	goto	l7161
  2630  0405  3030               	movlw	48
  2631  0406  254D  120A  118A   	fcall	_putch
  2632  0409  30FF               	movlw	-1
  2633  040A  2798               	call	PL32	;select bank 1
  2634  040B  07B6               	addwf	printf@prec^(0+128),f
  2635  040C  1C03               	skipc
  2636  040D  03B7               	decf	(printf@prec+1)^(0+128),f
  2637  040E  2C01               	goto	l7081
  2638  040F                     l7083:	
  2639  040F  1683               	bsf	3,5	;RP0=1, select bank1
  2640  0410  0824               	movf	printf@ap^(0+128),w
  2641  0411  0084               	movwf	4
  2642  0412  1383               	bcf	3,7	;select IRP bank0
  2643  0413  2791  120A  118A   	fcall	PL31	;call to abstracted procedure
  2644  0416  085A               	movf	??_printf,w
  2645  0417  1683               	bsf	3,5	;RP0=1, select bank1
  2646  0418  00A8               	movwf	printf@_val^(0+128)
  2647  0419  1283               	bcf	3,5	;RP0=0, select bank0
  2648  041A  085B               	movf	??_printf+1,w
  2649  041B  1683               	bsf	3,5	;RP0=1, select bank1
  2650  041C  00A9               	movwf	(printf@_val^(0+128)+1)
  2651  041D  01AA               	clrf	(printf@_val^(0+128)+2)
  2652  041E  01AB               	clrf	(printf@_val^(0+128)+3)
  2653  041F  0AA4               	incf	printf@ap^(0+128),f
  2654  0420  0AA4               	incf	printf@ap^(0+128),f
  2655  0421  0837               	movf	(printf@prec+1)^(0+128),w
  2656  0422  0436               	iorwf	printf@prec^(0+128),w
  2657  0423  1D03               	skipz
  2658  0424  2C2D               	goto	l7093
  2659  0425  082B               	movf	(printf@_val+3)^(0+128),w
  2660  0426  042A               	iorwf	(printf@_val+2)^(0+128),w
  2661  0427  0429               	iorwf	(printf@_val+1)^(0+128),w
  2662  0428  0428               	iorwf	printf@_val^(0+128),w
  2663  0429  1903               	btfsc	3,2
  2664  042A  0AB6               	incf	printf@prec^(0+128),f
  2665  042B  1903               	skipnz
  2666  042C  0AB7               	incf	(printf@prec+1)^(0+128),f
  2667  042D                     l7093:	
  2668  042D  01B8               	clrf	printf@c^(0+128)
  2669  042E  0AB8               	incf	printf@c^(0+128),f
  2670  042F                     l7099:	
  2671  042F  2706               	fcall	PL2	;call to abstracted procedure
  2672  0430  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2673  0435  00DB               	movwf	??_printf+1
  2674  0436  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2675  043B  00DC               	movwf	??_printf+2
  2676  043C  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2677  0441  00DD               	movwf	??_printf+3
  2678  0442  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2679  0447  00DE               	movwf	??_printf+4
  2680  0448  1683               	bsf	3,5	;RP0=1, select bank1
  2681  0449  022B               	subwf	(printf@_val+3)^(0+128),w
  2682  044A  1D03               	skipz
  2683  044B  2C5C               	goto	u3775
  2684  044C  1283               	bcf	3,5	;RP0=0, select bank0
  2685  044D  085D               	movf	??_printf+3,w
  2686  044E  1683               	bsf	3,5	;RP0=1, select bank1
  2687  044F  022A               	subwf	(printf@_val+2)^(0+128),w
  2688  0450  1D03               	skipz
  2689  0451  2C5C               	goto	u3775
  2690  0452  1283               	bcf	3,5	;RP0=0, select bank0
  2691  0453  085C               	movf	??_printf+2,w
  2692  0454  1683               	bsf	3,5	;RP0=1, select bank1
  2693  0455  0229               	subwf	(printf@_val+1)^(0+128),w
  2694  0456  1D03               	skipz
  2695  0457  2C5C               	goto	u3775
  2696  0458  1283               	bcf	3,5	;RP0=0, select bank0
  2697  0459  085B               	movf	??_printf+1,w
  2698  045A  1683               	bsf	3,5	;RP0=1, select bank1
  2699  045B  0228               	subwf	printf@_val^(0+128),w
  2700  045C                     u3775:	
  2701  045C  1C03               	btfss	3,0
  2702  045D  2C63               	goto	l7107
  2703  045E  0AB8               	incf	printf@c^(0+128),f
  2704  045F  0838               	movf	printf@c^(0+128),w
  2705  0460  3A0A               	xorlw	10
  2706  0461  1D03               	skipz
  2707  0462  2C2F               	goto	l7099
  2708  0463                     l7107:	
  2709  0463  0838               	movf	printf@c^(0+128),w
  2710  0464  2769  120A  118A   	fcall	PL18	;call to abstracted procedure
  2711  0467  0837               	movf	(printf@prec+1)^(0+128),w
  2712  0468  3A80               	xorlw	128
  2713  0469  1283               	bcf	3,5	;RP0=0, select bank0
  2714  046A  025C               	subwf	??_printf+2,w
  2715  046B  1D03               	skipz
  2716  046C  2C71               	goto	u3795
  2717  046D  1683               	bsf	3,5	;RP0=1, select bank1
  2718  046E  0836               	movf	printf@prec^(0+128),w
  2719  046F  1283               	bcf	3,5	;RP0=0, select bank0
  2720  0470  025A               	subwf	??_printf,w
  2721  0471                     u3795:	
  2722  0471  1803               	skipnc
  2723  0472  2C77               	goto	l7111
  2724  0473  2798               	call	PL32	;select bank 1
  2725  0474  0836               	movf	printf@prec^(0+128),w
  2726  0475  00B8               	movwf	printf@c^(0+128)
  2727  0476  2C8F               	goto	l7115
  2728  0477                     l7111:	
  2729  0477  1683               	bsf	3,5	;RP0=1, select bank1
  2730  0478  2773  120A  118A   	fcall	PL20	;call to abstracted procedure
  2731  047B  0837               	movf	(printf@prec+1)^(0+128),w
  2732  047C  3A80               	xorlw	128
  2733  047D  1283               	bcf	3,5	;RP0=0, select bank0
  2734  047E  00DC               	movwf	??_printf+2
  2735  047F  085B               	movf	??_printf+1,w
  2736  0480  3A80               	xorlw	128
  2737  0481  025C               	subwf	??_printf+2,w
  2738  0482  1D03               	skipz
  2739  0483  2C87               	goto	u3805
  2740  0484  085A               	movf	??_printf,w
  2741  0485  1683               	bsf	3,5	;RP0=1, select bank1
  2742  0486  0236               	subwf	printf@prec^(0+128),w
  2743  0487                     u3805:	
  2744  0487  1803               	skipnc
  2745  0488  2C8F               	goto	l7115
  2746  0489  2798               	call	PL32	;select bank 1
  2747  048A  0838               	movf	printf@c^(0+128),w
  2748  048B  00B6               	movwf	printf@prec^(0+128)
  2749  048C  01B7               	clrf	(printf@prec+1)^(0+128)
  2750  048D  1BB6               	btfsc	printf@prec^(0+128),7
  2751  048E  03B7               	decf	(printf@prec+1)^(0+128),f
  2752  048F                     l7115:	
  2753  048F  2798               	call	PL32	;select bank 1
  2754  0490  0832               	movf	(printf@width+1)^(0+128),w
  2755  0491  0431               	iorwf	printf@width^(0+128),w
  2756  0492  1903               	skipnz
  2757  0493  2C9C               	goto	l7121
  2758  0494  082D               	movf	printf@flag^(0+128),w
  2759  0495  3903               	andlw	3
  2760  0496  1903               	btfsc	3,2
  2761  0497  2C9C               	goto	l7121
  2762  0498  30FF               	movlw	-1
  2763  0499  07B1               	addwf	printf@width^(0+128),f
  2764  049A  1C03               	skipc
  2765  049B  03B2               	decf	(printf@width+1)^(0+128),f
  2766  049C                     l7121:	
  2767  049C  1F2E               	btfss	(printf@flag+1)^(0+128),6
  2768  049D  2CB9               	goto	l7129
  2769  049E  0837               	movf	(printf@prec+1)^(0+128),w
  2770  049F  3A80               	xorlw	128
  2771  04A0  1283               	bcf	3,5	;RP0=0, select bank0
  2772  04A1  00DA               	movwf	??_printf
  2773  04A2  1683               	bsf	3,5	;RP0=1, select bank1
  2774  04A3  0832               	movf	(printf@width+1)^(0+128),w
  2775  04A4  3A80               	xorlw	128
  2776  04A5  1283               	bcf	3,5	;RP0=0, select bank0
  2777  04A6  025A               	subwf	??_printf,w
  2778  04A7  1D03               	skipz
  2779  04A8  2CAC               	goto	u3845
  2780  04A9  1683               	bsf	3,5	;RP0=1, select bank1
  2781  04AA  0831               	movf	printf@width^(0+128),w
  2782  04AB  0236               	subwf	printf@prec^(0+128),w
  2783  04AC                     u3845:	
  2784  04AC  1803               	skipnc
  2785  04AD  2CB6               	goto	l7127
  2786  04AE  2798               	call	PL32	;select bank 1
  2787  04AF  0836               	movf	printf@prec^(0+128),w
  2788  04B0  02B1               	subwf	printf@width^(0+128),f
  2789  04B1  0837               	movf	(printf@prec+1)^(0+128),w
  2790  04B2  1C03               	skipc
  2791  04B3  03B2               	decf	(printf@width+1)^(0+128),f
  2792  04B4  02B2               	subwf	(printf@width+1)^(0+128),f
  2793  04B5  2CB9               	goto	l7129
  2794  04B6                     l7127:	
  2795  04B6  2798               	call	PL32	;select bank 1
  2796  04B7  01B1               	clrf	printf@width^(0+128)
  2797  04B8  01B2               	clrf	(printf@width+1)^(0+128)
  2798  04B9                     l7129:	
  2799  04B9  0838               	movf	printf@c^(0+128),w
  2800  04BA  2769  120A  118A   	fcall	PL18	;call to abstracted procedure
  2801  04BD  0832               	movf	(printf@width+1)^(0+128),w
  2802  04BE  3A80               	xorlw	128
  2803  04BF  1283               	bcf	3,5	;RP0=0, select bank0
  2804  04C0  025C               	subwf	??_printf+2,w
  2805  04C1  1D03               	skipz
  2806  04C2  2CC7               	goto	u3855
  2807  04C3  1683               	bsf	3,5	;RP0=1, select bank1
  2808  04C4  0831               	movf	printf@width^(0+128),w
  2809  04C5  1283               	bcf	3,5	;RP0=0, select bank0
  2810  04C6  025A               	subwf	??_printf,w
  2811  04C7                     u3855:	
  2812  04C7  1803               	skipnc
  2813  04C8  2CD5               	goto	l7133
  2814  04C9  1683               	bsf	3,5	;RP0=1, select bank1
  2815  04CA  2773  120A  118A   	fcall	PL20	;call to abstracted procedure
  2816  04CD  02B1               	subwf	printf@width^(0+128),f
  2817  04CE  1283               	bcf	3,5	;RP0=0, select bank0
  2818  04CF  085B               	movf	??_printf+1,w
  2819  04D0  1683               	bsf	3,5	;RP0=1, select bank1
  2820  04D1  1C03               	skipc
  2821  04D2  03B2               	decf	(printf@width+1)^(0+128),f
  2822  04D3  02B2               	subwf	(printf@width+1)^(0+128),f
  2823  04D4  2CD8               	goto	l7135
  2824  04D5                     l7133:	
  2825  04D5  2798               	call	PL32	;select bank 1
  2826  04D6  01B1               	clrf	printf@width^(0+128)
  2827  04D7  01B2               	clrf	(printf@width+1)^(0+128)
  2828  04D8                     l7135:	
  2829  04D8  1D2D               	btfss	printf@flag^(0+128),2
  2830  04D9  2CF1               	goto	l7147
  2831  04DA  082D               	movf	printf@flag^(0+128),w
  2832  04DB  3903               	andlw	3
  2833  04DC  1903               	btfsc	3,2
  2834  04DD  2CE2               	goto	l7141
  2835  04DE  302D               	movlw	45
  2836  04DF  254D  120A  118A   	fcall	_putch
  2837  04E2                     l7141:	
  2838  04E2  2798               	call	PL32	;select bank 1
  2839  04E3                     L6:	
  2840  04E3  0832               	movf	(printf@width+1)^(0+128),w
  2841  04E4  0431               	iorwf	printf@width^(0+128),w
  2842  04E5  1903               	skipnz
  2843  04E6  2D0A               	goto	l7159
  2844  04E7  3030               	movlw	48
  2845  04E8  254D  120A  118A   	fcall	_putch
  2846  04EB  30FF               	movlw	-1
  2847  04EC  2798               	call	PL32	;select bank 1
  2848  04ED  07B1               	addwf	printf@width^(0+128),f
  2849  04EE  1C03               	skipc
  2850  04EF  03B2               	decf	(printf@width+1)^(0+128),f
  2851  04F0  2CE3               	goto	L6
  2852  04F1                     l7147:	
  2853  04F1  0832               	movf	(printf@width+1)^(0+128),w
  2854  04F2  0431               	iorwf	printf@width^(0+128),w
  2855  04F3  1903               	skipnz
  2856  04F4  2D02               	goto	l7153
  2857  04F5                     l7149:	
  2858  04F5  3020               	movlw	32
  2859  04F6  254D  120A  118A   	fcall	_putch
  2860  04F9  30FF               	movlw	-1
  2861  04FA  2798               	call	PL32	;select bank 1
  2862  04FB  07B1               	addwf	printf@width^(0+128),f
  2863  04FC  1C03               	skipc
  2864  04FD  03B2               	decf	(printf@width+1)^(0+128),f
  2865  04FE  0832               	movf	(printf@width+1)^(0+128),w
  2866  04FF  0431               	iorwf	printf@width^(0+128),w
  2867  0500  1D03               	skipz
  2868  0501  2CF5               	goto	l7149
  2869  0502                     l7153:	
  2870  0502  082D               	movf	printf@flag^(0+128),w
  2871  0503  3903               	andlw	3
  2872  0504  1903               	btfsc	3,2
  2873  0505  2D0A               	goto	l7159
  2874  0506  302D               	movlw	45
  2875  0507                     L5:	
  2876  0507  254D  120A  118A   	fcall	_putch
  2877  050A                     l7159:	
  2878  050A  30FF               	movlw	-1
  2879  050B  2798               	call	PL32	;select bank 1
  2880  050C  07B6               	addwf	printf@prec^(0+128),f
  2881  050D  1C03               	skipc
  2882  050E  03B7               	decf	(printf@prec+1)^(0+128),f
  2883  050F  0A36               	incf	printf@prec^(0+128),w
  2884  0510  1903               	skipnz
  2885  0511  0A37               	incf	(printf@prec+1)^(0+128),w
  2886  0512  1903               	btfsc	3,2
  2887  0513  2813               	goto	l7161
  2888  0514  300A               	movlw	10
  2889  0515  1283               	bcf	3,5	;RP0=0, select bank0
  2890  0516  00A5               	movwf	?___llmod
  2891  0517  01A6               	clrf	?___llmod+1
  2892  0518  01A7               	clrf	?___llmod+2
  2893  0519  01A8               	clrf	?___llmod+3
  2894  051A  1683               	bsf	3,5	;RP0=1, select bank1
  2895  051B  0836               	movf	printf@prec^(0+128),w
  2896  051C  1283               	bcf	3,5	;RP0=0, select bank0
  2897  051D  00DA               	movwf	??_printf
  2898  051E  1003               	clrc
  2899  051F  0DDA               	rlf	??_printf,f
  2900  0520  1003               	clrc
  2901  0521  0D5A               	rlf	??_printf,w
  2902  0522  3E4F               	addlw	low (_dpowers-__stringbase)
  2903  0523  0084               	movwf	4
  2904  0524  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2905  0529  00F2               	movwf	?___lldiv
  2906  052A  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2907  052F  00F3               	movwf	?___lldiv+1
  2908  0530  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2909  0535  00F4               	movwf	?___lldiv+2
  2910  0536  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2911  053B  2718  120A  118A   	fcall	PL5	;call to abstracted procedure
  2912  053E  263D  120A  118A   	fcall	___lldiv
  2913  0541  273E  120A  118A   	fcall	PL12	;call to abstracted procedure
  2914  0544  2551  120A  118A   	fcall	___llmod
  2915  0547  0825               	movf	?___llmod,w
  2916  0548  3E30               	addlw	48
  2917  0549  1683               	bsf	3,5	;RP0=1, select bank1
  2918  054A  00B8               	movwf	printf@c^(0+128)
  2919  054B  2D07               	goto	L5
  2920  054C                     l2302:	
  2921  054C  0008               	return
  2922  054D                     __end_of_printf:	
  2923  054D                     __ptext532:	
  2924 ;; =============== function _printf ends ============
  2925                           
  2926                           
  2927 ;; *************** function _putch *****************
  2928 ;; Defined at:
  2929 ;;		line 77 in file "C:\Users\DELL\Desktop\vxl\mp\dotansodungCCP(2).c"
  2930 ;; Parameters:    Size  Location     Type
  2931 ;;  c               1    wreg     unsigned char 
  2932 ;; Auto vars:     Size  Location     Type
  2933 ;;  c               1   11[COMMON] unsigned char 
  2934 ;; Return value:  Size  Location     Type
  2935 ;;		None               void
  2936 ;; Registers used:
  2937 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2938 ;; Tracked objects:
  2939 ;;		On entry : 0/20
  2940 ;;		On exit  : 0/0
  2941 ;;		Unchanged: 0/0
  2942 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2943 ;;      Params:         0       0       0       0       0
  2944 ;;      Locals:         1       0       0       0       0
  2945 ;;      Temps:          0       0       0       0       0
  2946 ;;      Totals:         1       0       0       0       0
  2947 ;;Total ram usage:        1 bytes
  2948 ;; Hardware stack levels used:    1
  2949 ;; Hardware stack levels required when called:    4
  2950 ;; This function calls:
  2951 ;;		_lcd_putc
  2952 ;; This function is called by:
  2953 ;;		_printf
  2954 ;; This function uses a non-reentrant model
  2955 ;;
  2956  054D                     _putch:	
  2957                           
  2958                           ; Regs used in _putch: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2959                           ;putch@c stored from wreg
  2960  054D  00FB               	movwf	putch@c
  2961                           
  2962                           ;dotansodungCCP(2).c: 78: lcd_putc(c);
  2963  054E  120A  158A  2AD1   	ljmp	_lcd_putc
  2964  0551                     __end_of_putch:	
  2965  0551                     __ptext549:	
  2966 ;; =============== function ___ftneg ends ============
  2967                           
  2968                           
  2969 ;; *************** function ___llmod *****************
  2970 ;; Defined at:
  2971 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\llmod.c"
  2972 ;; Parameters:    Size  Location     Type
  2973 ;;  divisor         4    5[BANK0 ] unsigned long 
  2974 ;;  dividend        4    9[BANK0 ] unsigned long 
  2975 ;; Auto vars:     Size  Location     Type
  2976 ;;  counter         1   10[COMMON] unsigned char 
  2977 ;; Return value:  Size  Location     Type
  2978 ;;                  4    5[BANK0 ] unsigned long 
  2979 ;; Registers used:
  2980 ;;		wreg, status,2, status,0
  2981 ;; Tracked objects:
  2982 ;;		On entry : 60/0
  2983 ;;		On exit  : 60/0
  2984 ;;		Unchanged: FFF9F/0
  2985 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2986 ;;      Params:         0       8       0       0       0
  2987 ;;      Locals:         1       0       0       0       0
  2988 ;;      Temps:          0       0       0       0       0
  2989 ;;      Totals:         1       8       0       0       0
  2990 ;;Total ram usage:        9 bytes
  2991 ;; Hardware stack levels used:    1
  2992 ;; Hardware stack levels required when called:    1
  2993 ;; This function calls:
  2994 ;;		Nothing
  2995 ;; This function is called by:
  2996 ;;		_printf
  2997 ;; This function uses a non-reentrant model
  2998 ;;
  2999  0551                     ___llmod:	
  3000                           
  3001                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  3002  0551  0828               	movf	___llmod@divisor+3,w
  3003  0552  0427               	iorwf	___llmod@divisor+2,w
  3004  0553  0426               	iorwf	___llmod@divisor+1,w
  3005  0554  0425               	iorwf	___llmod@divisor,w
  3006  0555  1903               	skipnz
  3007  0556  2D86               	goto	l6441
  3008  0557  01FA               	clrf	___llmod@counter
  3009  0558                     L13:	
  3010  0558  0AFA               	incf	___llmod@counter,f
  3011  0559  1BA8               	btfsc	___llmod@divisor+3,7
  3012  055A  2D61               	goto	l6433
  3013  055B  1003               	clrc
  3014  055C  0DA5               	rlf	___llmod@divisor,f
  3015  055D  0DA6               	rlf	___llmod@divisor+1,f
  3016  055E  0DA7               	rlf	___llmod@divisor+2,f
  3017  055F  0DA8               	rlf	___llmod@divisor+3,f
  3018  0560  2D58               	goto	L13
  3019  0561                     l6433:	
  3020  0561  0828               	movf	___llmod@divisor+3,w
  3021  0562  022C               	subwf	___llmod@dividend+3,w
  3022  0563  1D03               	skipz
  3023  0564  2D6F               	goto	u2585
  3024  0565  0827               	movf	___llmod@divisor+2,w
  3025  0566  022B               	subwf	___llmod@dividend+2,w
  3026  0567  1D03               	skipz
  3027  0568  2D6F               	goto	u2585
  3028  0569  0826               	movf	___llmod@divisor+1,w
  3029  056A  022A               	subwf	___llmod@dividend+1,w
  3030  056B  1D03               	skipz
  3031  056C  2D6F               	goto	u2585
  3032  056D  0825               	movf	___llmod@divisor,w
  3033  056E  0229               	subwf	___llmod@dividend,w
  3034  056F                     u2585:	
  3035  056F  1C03               	skipc
  3036  0570  2D80               	goto	L14
  3037  0571  0825               	movf	___llmod@divisor,w
  3038  0572  02A9               	subwf	___llmod@dividend,f
  3039  0573  0826               	movf	___llmod@divisor+1,w
  3040  0574  1C03               	skipc
  3041  0575  0F26               	incfsz	___llmod@divisor+1,w
  3042  0576  02AA               	subwf	___llmod@dividend+1,f
  3043  0577  0827               	movf	___llmod@divisor+2,w
  3044  0578  1C03               	skipc
  3045  0579  0F27               	incfsz	___llmod@divisor+2,w
  3046  057A  02AB               	subwf	___llmod@dividend+2,f
  3047  057B  0828               	movf	___llmod@divisor+3,w
  3048  057C  1C03               	skipc
  3049  057D  0F28               	incfsz	___llmod@divisor+3,w
  3050  057E  02AC               	subwf	___llmod@dividend+3,f
  3051  057F  1003               	clrc
  3052  0580                     L14:	
  3053  0580  0CA8               	rrf	___llmod@divisor+3,f
  3054  0581  0CA7               	rrf	___llmod@divisor+2,f
  3055  0582  0CA6               	rrf	___llmod@divisor+1,f
  3056  0583  0CA5               	rrf	___llmod@divisor,f
  3057  0584  0BFA               	decfsz	___llmod@counter,f
  3058  0585  2D61               	goto	l6433
  3059  0586                     l6441:	
  3060  0586  082C               	movf	___llmod@dividend+3,w
  3061  0587  00A8               	movwf	?___llmod+3
  3062  0588  082B               	movf	___llmod@dividend+2,w
  3063  0589  00A7               	movwf	?___llmod+2
  3064  058A  082A               	movf	___llmod@dividend+1,w
  3065  058B  00A6               	movwf	?___llmod+1
  3066  058C  0829               	movf	___llmod@dividend,w
  3067  058D  00A5               	movwf	?___llmod
  3068  058E  0008               	return
  3069  058F                     __end_of___llmod:	
  3070  058F                     __ptext547:	
  3071 ;; =============== function ___lldiv ends ============
  3072                           
  3073                           
  3074 ;; *************** function ___ftge *****************
  3075 ;; Defined at:
  3076 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\ftge.c"
  3077 ;; Parameters:    Size  Location     Type
  3078 ;;  ff1             3    2[COMMON] float 
  3079 ;;  ff2             3    5[COMMON] float 
  3080 ;; Auto vars:     Size  Location     Type
  3081 ;;		None
  3082 ;; Return value:  Size  Location     Type
  3083 ;;		None               void
  3084 ;; Registers used:
  3085 ;;		wreg, status,2, status,0
  3086 ;; Tracked objects:
  3087 ;;		On entry : 60/20
  3088 ;;		On exit  : 60/20
  3089 ;;		Unchanged: FFF9F/0
  3090 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3091 ;;      Params:         6       0       0       0       0
  3092 ;;      Locals:         0       0       0       0       0
  3093 ;;      Temps:          0       0       0       0       0
  3094 ;;      Totals:         6       0       0       0       0
  3095 ;;Total ram usage:        6 bytes
  3096 ;; Hardware stack levels used:    1
  3097 ;; Hardware stack levels required when called:    1
  3098 ;; This function calls:
  3099 ;;		Nothing
  3100 ;; This function is called by:
  3101 ;;		_printf
  3102 ;; This function uses a non-reentrant model
  3103 ;;
  3104  058F                     ___ftge:	
  3105                           
  3106                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  3107  058F  1FF4               	btfss	___ftge@ff1+2,7
  3108  0590  2D9E               	goto	l6457
  3109  0591  0872               	movf	___ftge@ff1,w
  3110  0592  3C00               	sublw	0
  3111  0593  00F2               	movwf	___ftge@ff1
  3112  0594  0873               	movf	___ftge@ff1+1,w
  3113  0595  1C03               	skipc
  3114  0596  0F73               	incfsz	___ftge@ff1+1,w
  3115  0597  3C00               	sublw	0
  3116  0598  00F3               	movwf	___ftge@ff1+1
  3117  0599  0874               	movf	___ftge@ff1+2,w
  3118  059A  1C03               	skipc
  3119  059B  0F74               	incfsz	___ftge@ff1+2,w
  3120  059C  3C80               	sublw	128
  3121  059D  00F4               	movwf	___ftge@ff1+2
  3122  059E                     l6457:	
  3123  059E  1FF7               	btfss	___ftge@ff2+2,7
  3124  059F  2DAD               	goto	l6461
  3125  05A0  0875               	movf	___ftge@ff2,w
  3126  05A1  3C00               	sublw	0
  3127  05A2  00F5               	movwf	___ftge@ff2
  3128  05A3  0876               	movf	___ftge@ff2+1,w
  3129  05A4  1C03               	skipc
  3130  05A5  0F76               	incfsz	___ftge@ff2+1,w
  3131  05A6  3C00               	sublw	0
  3132  05A7  00F6               	movwf	___ftge@ff2+1
  3133  05A8  0877               	movf	___ftge@ff2+2,w
  3134  05A9  1C03               	skipc
  3135  05AA  0F77               	incfsz	___ftge@ff2+2,w
  3136  05AB  3C80               	sublw	128
  3137  05AC  00F7               	movwf	___ftge@ff2+2
  3138  05AD                     l6461:	
  3139  05AD  3080               	movlw	128
  3140  05AE  06F4               	xorwf	___ftge@ff1+2,f
  3141  05AF  06F7               	xorwf	___ftge@ff2+2,f
  3142  05B0  0877               	movf	___ftge@ff2+2,w
  3143  05B1  0274               	subwf	___ftge@ff1+2,w
  3144  05B2  1D03               	skipz
  3145  05B3  0008               	return
  3146  05B4  0876               	movf	___ftge@ff2+1,w
  3147  05B5  0273               	subwf	___ftge@ff1+1,w
  3148  05B6  1D03               	skipz
  3149  05B7  0008               	return
  3150  05B8  0875               	movf	___ftge@ff2,w
  3151  05B9  0272               	subwf	___ftge@ff1,w
  3152  05BA  0008               	return
  3153  05BB                     __end_of___ftge:	
  3154  05BB                     __ptext559:	
  3155 ;; =============== function __tdiv_to_l_ ends ============
  3156                           
  3157                           
  3158 ;; *************** function _isdigit *****************
  3159 ;; Defined at:
  3160 ;;		line 13 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\isdigit.c"
  3161 ;; Parameters:    Size  Location     Type
  3162 ;;  c               1    wreg     unsigned char 
  3163 ;; Auto vars:     Size  Location     Type
  3164 ;;  c               1    3[COMMON] unsigned char 
  3165 ;; Return value:  Size  Location     Type
  3166 ;;		None               void
  3167 ;; Registers used:
  3168 ;;		wreg, status,2, status,0
  3169 ;; Tracked objects:
  3170 ;;		On entry : 60/20
  3171 ;;		On exit  : 60/20
  3172 ;;		Unchanged: FFF9F/0
  3173 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3174 ;;      Params:         0       0       0       0       0
  3175 ;;      Locals:         2       0       0       0       0
  3176 ;;      Temps:          0       0       0       0       0
  3177 ;;      Totals:         2       0       0       0       0
  3178 ;;Total ram usage:        2 bytes
  3179 ;; Hardware stack levels used:    1
  3180 ;; Hardware stack levels required when called:    1
  3181 ;; This function calls:
  3182 ;;		Nothing
  3183 ;; This function is called by:
  3184 ;;		_printf
  3185 ;; This function uses a non-reentrant model
  3186 ;;
  3187  05BB                     _isdigit:	
  3188                           
  3189                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  3190                           ;isdigit@c stored from wreg
  3191  05BB  00F3               	movwf	isdigit@c
  3192  05BC  303A               	movlw	58
  3193  05BD  01F2               	clrf	_isdigit$3675
  3194  05BE  0273               	subwf	isdigit@c,w
  3195  05BF  1803               	skipnc
  3196  05C0  2DC7               	goto	l6143
  3197  05C1  3030               	movlw	48
  3198  05C2  0273               	subwf	isdigit@c,w
  3199  05C3  1C03               	skipc
  3200  05C4  2DC7               	goto	l6143
  3201  05C5  01F2               	clrf	_isdigit$3675
  3202  05C6  0AF2               	incf	_isdigit$3675,f
  3203  05C7                     l6143:	
  3204  05C7  0C72               	rrf	_isdigit$3675,w
  3205  05C8  0008               	return
  3206  05C9                     __end_of_isdigit:	
  3207  05C9                     __ptext555:	
  3208 ;; =============== function ___lbdiv ends ============
  3209                           
  3210                           
  3211 ;; *************** function ___wmul *****************
  3212 ;; Defined at:
  3213 ;;		line 3 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\wmul.c"
  3214 ;; Parameters:    Size  Location     Type
  3215 ;;  multiplier      2    2[COMMON] unsigned int 
  3216 ;;  multiplicand    2    4[COMMON] unsigned int 
  3217 ;; Auto vars:     Size  Location     Type
  3218 ;;  product         2    6[COMMON] unsigned int 
  3219 ;; Return value:  Size  Location     Type
  3220 ;;                  2    2[COMMON] unsigned int 
  3221 ;; Registers used:
  3222 ;;		wreg, status,2, status,0
  3223 ;; Tracked objects:
  3224 ;;		On entry : 60/20
  3225 ;;		On exit  : 60/20
  3226 ;;		Unchanged: FFF9F/0
  3227 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3228 ;;      Params:         4       0       0       0       0
  3229 ;;      Locals:         2       0       0       0       0
  3230 ;;      Temps:          0       0       0       0       0
  3231 ;;      Totals:         6       0       0       0       0
  3232 ;;Total ram usage:        6 bytes
  3233 ;; Hardware stack levels used:    1
  3234 ;; Hardware stack levels required when called:    1
  3235 ;; This function calls:
  3236 ;;		Nothing
  3237 ;; This function is called by:
  3238 ;;		_fround
  3239 ;;		_scale
  3240 ;;		_printf
  3241 ;; This function uses a non-reentrant model
  3242 ;;
  3243  05C9                     ___wmul:	
  3244                           
  3245                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  3246  05C9  01F6               	clrf	___wmul@product
  3247  05CA  01F7               	clrf	___wmul@product+1
  3248  05CB                     l6259:	
  3249  05CB  1C72               	btfss	___wmul@multiplier,0
  3250  05CC  2DD3               	goto	l6263
  3251  05CD  0874               	movf	___wmul@multiplicand,w
  3252  05CE  07F6               	addwf	___wmul@product,f
  3253  05CF  1803               	skipnc
  3254  05D0  0AF7               	incf	___wmul@product+1,f
  3255  05D1  0875               	movf	___wmul@multiplicand+1,w
  3256  05D2  07F7               	addwf	___wmul@product+1,f
  3257  05D3                     l6263:	
  3258  05D3  1003               	clrc
  3259  05D4  0DF4               	rlf	___wmul@multiplicand,f
  3260  05D5  0DF5               	rlf	___wmul@multiplicand+1,f
  3261  05D6  1003               	clrc
  3262  05D7  0CF3               	rrf	___wmul@multiplier+1,f
  3263  05D8  0CF2               	rrf	___wmul@multiplier,f
  3264  05D9  0873               	movf	___wmul@multiplier+1,w
  3265  05DA  0472               	iorwf	___wmul@multiplier,w
  3266  05DB  1D03               	skipz
  3267  05DC  2DCB               	goto	l6259
  3268  05DD  0877               	movf	___wmul@product+1,w
  3269  05DE  00F3               	movwf	?___wmul+1
  3270  05DF  0876               	movf	___wmul@product,w
  3271  05E0  00F2               	movwf	?___wmul
  3272  05E1  0008               	return
  3273  05E2                     __end_of___wmul:	
  3274  05E2                     __ptext551:	
  3275 ;; =============== function ___awdiv ends ============
  3276                           
  3277                           
  3278 ;; *************** function ___fttol *****************
  3279 ;; Defined at:
  3280 ;;		line 45 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\fttol.c"
  3281 ;; Parameters:    Size  Location     Type
  3282 ;;  f1              3    4[BANK0 ] float 
  3283 ;; Auto vars:     Size  Location     Type
  3284 ;;  lval            4   12[BANK0 ] unsigned long 
  3285 ;;  exp1            1   16[BANK0 ] unsigned char 
  3286 ;;  sign1           1   11[BANK0 ] unsigned char 
  3287 ;; Return value:  Size  Location     Type
  3288 ;;                  4    4[BANK0 ] long 
  3289 ;; Registers used:
  3290 ;;		wreg, status,2, status,0
  3291 ;; Tracked objects:
  3292 ;;		On entry : 60/0
  3293 ;;		On exit  : 60/0
  3294 ;;		Unchanged: FFF9F/0
  3295 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3296 ;;      Params:         0       4       0       0       0
  3297 ;;      Locals:         0       6       0       0       0
  3298 ;;      Temps:          0       3       0       0       0
  3299 ;;      Totals:         0      13       0       0       0
  3300 ;;Total ram usage:       13 bytes
  3301 ;; Hardware stack levels used:    1
  3302 ;; Hardware stack levels required when called:    1
  3303 ;; This function calls:
  3304 ;;		Nothing
  3305 ;; This function is called by:
  3306 ;;		_printf
  3307 ;; This function uses a non-reentrant model
  3308 ;;
  3309  05E2                     ___fttol:	
  3310                           
  3311                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  3312  05E2  278A  120A  118A   	fcall	PL29	;call to abstracted procedure
  3313  05E5  1003               	clrc
  3314  05E6  0D29               	rlf	??___fttol+1,w
  3315  05E7  0D2A               	rlf	??___fttol+2,w
  3316  05E8  00B0               	movwf	___fttol@exp1
  3317  05E9  08B0               	movf	___fttol@exp1,f
  3318  05EA  1D03               	skipz
  3319  05EB  2DF1               	goto	l6347
  3320  05EC                     l6345:	
  3321  05EC  01A4               	clrf	?___fttol
  3322  05ED  01A5               	clrf	?___fttol+1
  3323  05EE  01A6               	clrf	?___fttol+2
  3324  05EF  01A7               	clrf	?___fttol+3
  3325  05F0  0008               	return
  3326  05F1                     l6347:	
  3327  05F1  278A  120A  118A   	fcall	PL29	;call to abstracted procedure
  3328  05F4  3017               	movlw	23
  3329  05F5                     u2425:	
  3330  05F5  1003               	clrc
  3331  05F6  0CAA               	rrf	??___fttol+2,f
  3332  05F7  0CA9               	rrf	??___fttol+1,f
  3333  05F8  0CA8               	rrf	??___fttol,f
  3334  05F9  3EFF               	addlw	-1
  3335  05FA  1D03               	skipz
  3336  05FB  2DF5               	goto	u2425
  3337  05FC  0828               	movf	??___fttol,w
  3338  05FD  00AB               	movwf	___fttol@sign1
  3339  05FE  17A5               	bsf	___fttol@f1+1,7
  3340  05FF  01A6               	clrf	___fttol@f1+2
  3341  0600  0824               	movf	___fttol@f1,w
  3342  0601  00AC               	movwf	___fttol@lval
  3343  0602  0825               	movf	___fttol@f1+1,w
  3344  0603  00AD               	movwf	___fttol@lval+1
  3345  0604  0826               	movf	___fttol@f1+2,w
  3346  0605  00AE               	movwf	___fttol@lval+2
  3347  0606  308E               	movlw	142
  3348  0607  01AF               	clrf	___fttol@lval+3
  3349  0608  02B0               	subwf	___fttol@exp1,f
  3350  0609  1FB0               	btfss	___fttol@exp1,7
  3351  060A  2E18               	goto	l6367
  3352  060B  0830               	movf	___fttol@exp1,w
  3353  060C  3A80               	xorlw	128
  3354  060D  3E8F               	addlw	143
  3355  060E  1C03               	btfss	3,0
  3356  060F  2DEC               	goto	l6345
  3357  0610                     l6363:	
  3358  0610  1003               	clrc
  3359  0611  0CAF               	rrf	___fttol@lval+3,f
  3360  0612  0CAE               	rrf	___fttol@lval+2,f
  3361  0613  0CAD               	rrf	___fttol@lval+1,f
  3362  0614  0CAC               	rrf	___fttol@lval,f
  3363  0615  0FB0               	incfsz	___fttol@exp1,f
  3364  0616  2E10               	goto	l6363
  3365  0617  2E26               	goto	l6373
  3366  0618                     l6367:	
  3367  0618  3018               	movlw	24
  3368  0619  0230               	subwf	___fttol@exp1,w
  3369  061A  1803               	btfsc	3,0
  3370  061B  2DEC               	goto	l6345
  3371  061C                     l3426:	
  3372  061C  08B0               	movf	___fttol@exp1,f
  3373  061D  1903               	btfsc	3,2
  3374  061E  2E26               	goto	l6373
  3375  061F  1003               	clrc
  3376  0620  0DAC               	rlf	___fttol@lval,f
  3377  0621  0DAD               	rlf	___fttol@lval+1,f
  3378  0622  0DAE               	rlf	___fttol@lval+2,f
  3379  0623  0DAF               	rlf	___fttol@lval+3,f
  3380  0624  03B0               	decf	___fttol@exp1,f
  3381  0625  2E1C               	goto	l3426
  3382  0626                     l6373:	
  3383  0626  082B               	movf	___fttol@sign1,w
  3384  0627  1903               	btfsc	3,2
  3385  0628  2E34               	goto	l6377
  3386  0629  09AC               	comf	___fttol@lval,f
  3387  062A  09AD               	comf	___fttol@lval+1,f
  3388  062B  09AE               	comf	___fttol@lval+2,f
  3389  062C  09AF               	comf	___fttol@lval+3,f
  3390  062D  0AAC               	incf	___fttol@lval,f
  3391  062E  1903               	skipnz
  3392  062F  0AAD               	incf	___fttol@lval+1,f
  3393  0630  1903               	skipnz
  3394  0631  0AAE               	incf	___fttol@lval+2,f
  3395  0632  1903               	skipnz
  3396  0633  0AAF               	incf	___fttol@lval+3,f
  3397  0634                     l6377:	
  3398  0634  082F               	movf	___fttol@lval+3,w
  3399  0635  00A7               	movwf	?___fttol+3
  3400  0636  082E               	movf	___fttol@lval+2,w
  3401  0637  00A6               	movwf	?___fttol+2
  3402  0638  082D               	movf	___fttol@lval+1,w
  3403  0639  00A5               	movwf	?___fttol+1
  3404  063A  082C               	movf	___fttol@lval,w
  3405  063B  00A4               	movwf	?___fttol
  3406  063C  0008               	return
  3407  063D                     __end_of___fttol:	
  3408  063D                     __ptext546:	
  3409 ;; =============== function ___awmod ends ============
  3410                           
  3411                           
  3412 ;; *************** function ___lldiv *****************
  3413 ;; Defined at:
  3414 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\lldiv.c"
  3415 ;; Parameters:    Size  Location     Type
  3416 ;;  divisor         4    2[COMMON] unsigned long 
  3417 ;;  dividend        4    6[COMMON] unsigned long 
  3418 ;; Auto vars:     Size  Location     Type
  3419 ;;  quotient        4    0[BANK0 ] unsigned long 
  3420 ;;  counter         1    4[BANK0 ] unsigned char 
  3421 ;; Return value:  Size  Location     Type
  3422 ;;                  4    2[COMMON] unsigned long 
  3423 ;; Registers used:
  3424 ;;		wreg, status,2, status,0
  3425 ;; Tracked objects:
  3426 ;;		On entry : 60/20
  3427 ;;		On exit  : 60/0
  3428 ;;		Unchanged: FFF9F/0
  3429 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3430 ;;      Params:         8       0       0       0       0
  3431 ;;      Locals:         0       5       0       0       0
  3432 ;;      Temps:          0       0       0       0       0
  3433 ;;      Totals:         8       5       0       0       0
  3434 ;;Total ram usage:       13 bytes
  3435 ;; Hardware stack levels used:    1
  3436 ;; Hardware stack levels required when called:    1
  3437 ;; This function calls:
  3438 ;;		Nothing
  3439 ;; This function is called by:
  3440 ;;		_printf
  3441 ;; This function uses a non-reentrant model
  3442 ;;
  3443  063D                     ___lldiv:	
  3444                           
  3445                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  3446  063D  1283               	bcf	3,5	;RP0=0, select bank0
  3447  063E  01A0               	clrf	___lldiv@quotient
  3448  063F  01A1               	clrf	___lldiv@quotient+1
  3449  0640  01A2               	clrf	___lldiv@quotient+2
  3450  0641  01A3               	clrf	___lldiv@quotient+3
  3451  0642  0875               	movf	___lldiv@divisor+3,w
  3452  0643  0474               	iorwf	___lldiv@divisor+2,w
  3453  0644  0473               	iorwf	___lldiv@divisor+1,w
  3454  0645  0472               	iorwf	___lldiv@divisor,w
  3455  0646  1903               	skipnz
  3456  0647  2E7D               	goto	l6495
  3457  0648  01A4               	clrf	___lldiv@counter
  3458  0649                     L10:	
  3459  0649  0AA4               	incf	___lldiv@counter,f
  3460  064A  1BF5               	btfsc	___lldiv@divisor+3,7
  3461  064B  2E52               	goto	l6483
  3462  064C  1003               	clrc
  3463  064D  0DF2               	rlf	___lldiv@divisor,f
  3464  064E  0DF3               	rlf	___lldiv@divisor+1,f
  3465  064F  0DF4               	rlf	___lldiv@divisor+2,f
  3466  0650  0DF5               	rlf	___lldiv@divisor+3,f
  3467  0651  2E49               	goto	L10
  3468  0652                     l6483:	
  3469  0652  1003               	clrc
  3470  0653  0DA0               	rlf	___lldiv@quotient,f
  3471  0654  0DA1               	rlf	___lldiv@quotient+1,f
  3472  0655  0DA2               	rlf	___lldiv@quotient+2,f
  3473  0656  0DA3               	rlf	___lldiv@quotient+3,f
  3474  0657  0875               	movf	___lldiv@divisor+3,w
  3475  0658  0279               	subwf	___lldiv@dividend+3,w
  3476  0659  1D03               	skipz
  3477  065A  2E65               	goto	u2665
  3478  065B  0874               	movf	___lldiv@divisor+2,w
  3479  065C  0278               	subwf	___lldiv@dividend+2,w
  3480  065D  1D03               	skipz
  3481  065E  2E65               	goto	u2665
  3482  065F  0873               	movf	___lldiv@divisor+1,w
  3483  0660  0277               	subwf	___lldiv@dividend+1,w
  3484  0661  1D03               	skipz
  3485  0662  2E65               	goto	u2665
  3486  0663  0872               	movf	___lldiv@divisor,w
  3487  0664  0276               	subwf	___lldiv@dividend,w
  3488  0665                     u2665:	
  3489  0665  1C03               	skipc
  3490  0666  2E77               	goto	L11
  3491  0667  0872               	movf	___lldiv@divisor,w
  3492  0668  02F6               	subwf	___lldiv@dividend,f
  3493  0669  0873               	movf	___lldiv@divisor+1,w
  3494  066A  1C03               	skipc
  3495  066B  0F73               	incfsz	___lldiv@divisor+1,w
  3496  066C  02F7               	subwf	___lldiv@dividend+1,f
  3497  066D  0874               	movf	___lldiv@divisor+2,w
  3498  066E  1C03               	skipc
  3499  066F  0F74               	incfsz	___lldiv@divisor+2,w
  3500  0670  02F8               	subwf	___lldiv@dividend+2,f
  3501  0671  0875               	movf	___lldiv@divisor+3,w
  3502  0672  1C03               	skipc
  3503  0673  0F75               	incfsz	___lldiv@divisor+3,w
  3504  0674  02F9               	subwf	___lldiv@dividend+3,f
  3505  0675  1420               	bsf	___lldiv@quotient,0
  3506  0676  1003               	clrc
  3507  0677                     L11:	
  3508  0677  0CF5               	rrf	___lldiv@divisor+3,f
  3509  0678  0CF4               	rrf	___lldiv@divisor+2,f
  3510  0679  0CF3               	rrf	___lldiv@divisor+1,f
  3511  067A  0CF2               	rrf	___lldiv@divisor,f
  3512  067B  0BA4               	decfsz	___lldiv@counter,f
  3513  067C  2E52               	goto	l6483
  3514  067D                     l6495:	
  3515  067D  0823               	movf	___lldiv@quotient+3,w
  3516  067E  00F5               	movwf	?___lldiv+3
  3517  067F  0822               	movf	___lldiv@quotient+2,w
  3518  0680  00F4               	movwf	?___lldiv+2
  3519  0681  0821               	movf	___lldiv@quotient+1,w
  3520  0682  00F3               	movwf	?___lldiv+1
  3521  0683  0820               	movf	___lldiv@quotient,w
  3522  0684  00F2               	movwf	?___lldiv
  3523  0685  0008               	return
  3524  0686                     __end_of___lldiv:	
  3525  0686                     __ptext558:	
  3526 ;; =============== function __div_to_l_ ends ============
  3527                           
  3528                           
  3529 ;; *************** function __tdiv_to_l_ *****************
  3530 ;; Defined at:
  3531 ;;		line 61 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\ftdivl.c"
  3532 ;; Parameters:    Size  Location     Type
  3533 ;;  f1              3    2[COMMON] float 
  3534 ;;  f2              3    5[COMMON] float 
  3535 ;; Auto vars:     Size  Location     Type
  3536 ;;  quot            4    0[BANK0 ] unsigned long 
  3537 ;;  exp1            1    5[BANK0 ] unsigned char 
  3538 ;;  cntr            1    4[BANK0 ] unsigned char 
  3539 ;; Return value:  Size  Location     Type
  3540 ;;                  4    2[COMMON] unsigned long 
  3541 ;; Registers used:
  3542 ;;		wreg, status,2, status,0
  3543 ;; Tracked objects:
  3544 ;;		On entry : 60/20
  3545 ;;		On exit  : 60/0
  3546 ;;		Unchanged: FFF9F/0
  3547 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3548 ;;      Params:         6       0       0       0       0
  3549 ;;      Locals:         0       6       0       0       0
  3550 ;;      Temps:          3       0       0       0       0
  3551 ;;      Totals:         9       6       0       0       0
  3552 ;;Total ram usage:       15 bytes
  3553 ;; Hardware stack levels used:    1
  3554 ;; Hardware stack levels required when called:    1
  3555 ;; This function calls:
  3556 ;;		Nothing
  3557 ;; This function is called by:
  3558 ;;		_printf
  3559 ;; This function uses a non-reentrant model
  3560 ;;
  3561  0686                     __tdiv_to_l_:	
  3562                           
  3563                           ; Regs used in __tdiv_to_l_: [wreg+status,2+status,0]
  3564  0686  0872               	movf	__tdiv_to_l_@f1,w
  3565  0687  00F8               	movwf	??__tdiv_to_l_
  3566  0688  0873               	movf	__tdiv_to_l_@f1+1,w
  3567  0689  00F9               	movwf	??__tdiv_to_l_+1
  3568  068A  0874               	movf	__tdiv_to_l_@f1+2,w
  3569  068B  00FA               	movwf	??__tdiv_to_l_+2
  3570  068C  1003               	clrc
  3571  068D  0D79               	rlf	??__tdiv_to_l_+1,w
  3572  068E  0D7A               	rlf	??__tdiv_to_l_+2,w
  3573  068F  1283               	bcf	3,5	;RP0=0, select bank0
  3574  0690  00A5               	movwf	__tdiv_to_l_@exp1
  3575  0691  08A5               	movf	__tdiv_to_l_@exp1,f
  3576  0692  1D03               	skipz
  3577  0693  2E99               	goto	l6151
  3578  0694                     l6149:	
  3579  0694  01F2               	clrf	?__tdiv_to_l_
  3580  0695  01F3               	clrf	?__tdiv_to_l_+1
  3581  0696  01F4               	clrf	?__tdiv_to_l_+2
  3582  0697  01F5               	clrf	?__tdiv_to_l_+3
  3583  0698  0008               	return
  3584  0699                     l6151:	
  3585  0699  0875               	movf	__tdiv_to_l_@f2,w
  3586  069A  00F8               	movwf	??__tdiv_to_l_
  3587  069B  0876               	movf	__tdiv_to_l_@f2+1,w
  3588  069C  00F9               	movwf	??__tdiv_to_l_+1
  3589  069D  0877               	movf	__tdiv_to_l_@f2+2,w
  3590  069E  00FA               	movwf	??__tdiv_to_l_+2
  3591  069F  1003               	clrc
  3592  06A0  0D79               	rlf	??__tdiv_to_l_+1,w
  3593  06A1  0D7A               	rlf	??__tdiv_to_l_+2,w
  3594  06A2  00A4               	movwf	__tdiv_to_l_@cntr
  3595  06A3  08A4               	movf	__tdiv_to_l_@cntr,f
  3596  06A4  1903               	btfsc	3,2
  3597  06A5  2E94               	goto	l6149
  3598  06A6  307F               	movlw	127
  3599  06A7  17F3               	bsf	__tdiv_to_l_@f1+1,7
  3600  06A8  01F4               	clrf	__tdiv_to_l_@f1+2
  3601  06A9  17F6               	bsf	__tdiv_to_l_@f2+1,7
  3602  06AA  01F7               	clrf	__tdiv_to_l_@f2+2
  3603  06AB  01A0               	clrf	__tdiv_to_l_@quot
  3604  06AC  01A1               	clrf	__tdiv_to_l_@quot+1
  3605  06AD  01A2               	clrf	__tdiv_to_l_@quot+2
  3606  06AE  01A3               	clrf	__tdiv_to_l_@quot+3
  3607  06AF  02A5               	subwf	__tdiv_to_l_@exp1,f
  3608  06B0  3098               	movlw	152
  3609  06B1  0724               	addwf	__tdiv_to_l_@cntr,w
  3610  06B2  00F8               	movwf	??__tdiv_to_l_
  3611  06B3  02A5               	subwf	__tdiv_to_l_@exp1,f
  3612  06B4  3018               	movlw	24
  3613  06B5  00A4               	movwf	__tdiv_to_l_@cntr
  3614  06B6                     l6165:	
  3615  06B6  1003               	clrc
  3616  06B7  0DA0               	rlf	__tdiv_to_l_@quot,f
  3617  06B8  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  3618  06B9  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  3619  06BA  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  3620  06BB  0877               	movf	__tdiv_to_l_@f2+2,w
  3621  06BC  0274               	subwf	__tdiv_to_l_@f1+2,w
  3622  06BD  1D03               	skipz
  3623  06BE  2EC5               	goto	u2075
  3624  06BF  0876               	movf	__tdiv_to_l_@f2+1,w
  3625  06C0  0273               	subwf	__tdiv_to_l_@f1+1,w
  3626  06C1  1D03               	skipz
  3627  06C2  2EC5               	goto	u2075
  3628  06C3  0875               	movf	__tdiv_to_l_@f2,w
  3629  06C4  0272               	subwf	__tdiv_to_l_@f1,w
  3630  06C5                     u2075:	
  3631  06C5  1C03               	skipc
  3632  06C6  2ED3               	goto	L19
  3633  06C7  0875               	movf	__tdiv_to_l_@f2,w
  3634  06C8  02F2               	subwf	__tdiv_to_l_@f1,f
  3635  06C9  0876               	movf	__tdiv_to_l_@f2+1,w
  3636  06CA  1C03               	skipc
  3637  06CB  0F76               	incfsz	__tdiv_to_l_@f2+1,w
  3638  06CC  02F3               	subwf	__tdiv_to_l_@f1+1,f
  3639  06CD  0877               	movf	__tdiv_to_l_@f2+2,w
  3640  06CE  1C03               	skipc
  3641  06CF  0A77               	incf	__tdiv_to_l_@f2+2,w
  3642  06D0  02F4               	subwf	__tdiv_to_l_@f1+2,f
  3643  06D1  1420               	bsf	__tdiv_to_l_@quot,0
  3644  06D2  1003               	clrc
  3645  06D3                     L19:	
  3646  06D3  0DF2               	rlf	__tdiv_to_l_@f1,f
  3647  06D4  0DF3               	rlf	__tdiv_to_l_@f1+1,f
  3648  06D5  0DF4               	rlf	__tdiv_to_l_@f1+2,f
  3649  06D6  0BA4               	decfsz	__tdiv_to_l_@cntr,f
  3650  06D7  2EB6               	goto	l6165
  3651  06D8  1FA5               	btfss	__tdiv_to_l_@exp1,7
  3652  06D9  2EE7               	goto	l6185
  3653  06DA  0825               	movf	__tdiv_to_l_@exp1,w
  3654  06DB  3A80               	xorlw	128
  3655  06DC  3E97               	addlw	151
  3656  06DD  1C03               	btfss	3,0
  3657  06DE  2E94               	goto	l6149
  3658  06DF                     l6181:	
  3659  06DF  1003               	clrc
  3660  06E0  0CA3               	rrf	__tdiv_to_l_@quot+3,f
  3661  06E1  0CA2               	rrf	__tdiv_to_l_@quot+2,f
  3662  06E2  0CA1               	rrf	__tdiv_to_l_@quot+1,f
  3663  06E3  0CA0               	rrf	__tdiv_to_l_@quot,f
  3664  06E4  0FA5               	incfsz	__tdiv_to_l_@exp1,f
  3665  06E5  2EDF               	goto	l6181
  3666  06E6  2EF5               	goto	l6191
  3667  06E7                     l6185:	
  3668  06E7  3018               	movlw	24
  3669  06E8  0225               	subwf	__tdiv_to_l_@exp1,w
  3670  06E9  1803               	btfsc	3,0
  3671  06EA  2E94               	goto	l6149
  3672  06EB                     l3564:	
  3673  06EB  08A5               	movf	__tdiv_to_l_@exp1,f
  3674  06EC  1903               	btfsc	3,2
  3675  06ED  2EF5               	goto	l6191
  3676  06EE  1003               	clrc
  3677  06EF  0DA0               	rlf	__tdiv_to_l_@quot,f
  3678  06F0  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  3679  06F1  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  3680  06F2  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  3681  06F3  03A5               	decf	__tdiv_to_l_@exp1,f
  3682  06F4  2EEB               	goto	l3564
  3683  06F5                     l6191:	
  3684  06F5  0823               	movf	__tdiv_to_l_@quot+3,w
  3685  06F6  00F5               	movwf	?__tdiv_to_l_+3
  3686  06F7  0822               	movf	__tdiv_to_l_@quot+2,w
  3687  06F8  00F4               	movwf	?__tdiv_to_l_+2
  3688  06F9  0821               	movf	__tdiv_to_l_@quot+1,w
  3689  06FA  00F3               	movwf	?__tdiv_to_l_+1
  3690  06FB  0820               	movf	__tdiv_to_l_@quot,w
  3691  06FC  00F2               	movwf	?__tdiv_to_l_
  3692  06FD  0008               	return
  3693  06FE                     __end_of__tdiv_to_l_:	
  3694  06FE                     __ptext548:	
  3695 ;; =============== function ___ftge ends ============
  3696                           
  3697                           
  3698 ;; *************** function ___ftneg *****************
  3699 ;; Defined at:
  3700 ;;		line 16 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\ftneg.c"
  3701 ;; Parameters:    Size  Location     Type
  3702 ;;  f1              3    2[COMMON] float 
  3703 ;; Auto vars:     Size  Location     Type
  3704 ;;		None
  3705 ;; Return value:  Size  Location     Type
  3706 ;;                  3    2[COMMON] float 
  3707 ;; Registers used:
  3708 ;;		wreg
  3709 ;; Tracked objects:
  3710 ;;		On entry : 160/20
  3711 ;;		On exit  : 160/20
  3712 ;;		Unchanged: FFE9F/0
  3713 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3714 ;;      Params:         3       0       0       0       0
  3715 ;;      Locals:         0       0       0       0       0
  3716 ;;      Temps:          0       0       0       0       0
  3717 ;;      Totals:         3       0       0       0       0
  3718 ;;Total ram usage:        3 bytes
  3719 ;; Hardware stack levels used:    1
  3720 ;; Hardware stack levels required when called:    1
  3721 ;; This function calls:
  3722 ;;		Nothing
  3723 ;; This function is called by:
  3724 ;;		_printf
  3725 ;; This function uses a non-reentrant model
  3726 ;;
  3727  06FE                     ___ftneg:	
  3728                           
  3729                           ; Regs used in ___ftneg: [wreg]
  3730  06FE  0874               	movf	___ftneg@f1+2,w
  3731  06FF  0473               	iorwf	___ftneg@f1+1,w
  3732  0700  0472               	iorwf	___ftneg@f1,w
  3733  0701  1903               	skipnz
  3734  0702  0008               	return
  3735  0703  3080               	movlw	128
  3736  0704  06F4               	xorwf	___ftneg@f1+2,f
  3737  0705  0008               	return
  3738  0706                     __end_of___ftneg:	
  3739  0706                     PL2:	
  3740  0706  0838               	movf	printf@c^(0+128),w
  3741  0707  1283               	bcf	3,5	;RP0=0, select bank0
  3742  0708  00DA               	movwf	??_printf
  3743  0709  1003               	clrc
  3744  070A  0DDA               	rlf	??_printf,f
  3745  070B  1003               	clrc
  3746  070C  0D5A               	rlf	??_printf,w
  3747  070D  3E4F               	addlw	low (_dpowers-__stringbase)
  3748  070E  0084               	movwf	4
  3749  070F  0008               	return
  3750  0710                     PL4:	
  3751  0710  300A               	movlw	10
  3752  0711  1283               	bcf	3,5	;RP0=0, select bank0
  3753  0712  00A5               	movwf	?___llmod
  3754  0713  01A6               	clrf	?___llmod+1
  3755  0714  01A7               	clrf	?___llmod+2
  3756  0715  01A8               	clrf	?___llmod+3
  3757  0716  1683               	bsf	3,5	;RP0=1, select bank1
  3758  0717  0008               	return
  3759  0718                     PL5:	
  3760  0718  00F5               	movwf	?___lldiv+3
  3761  0719  1683               	bsf	3,5	;RP0=1, select bank1
  3762  071A  082B               	movf	(printf@_val+3)^(0+128),w
  3763  071B  00F9               	movwf	?___lldiv+7
  3764  071C  082A               	movf	(printf@_val+2)^(0+128),w
  3765  071D  00F8               	movwf	?___lldiv+6
  3766  071E  0829               	movf	(printf@_val+1)^(0+128),w
  3767  071F  00F7               	movwf	?___lldiv+5
  3768  0720  0828               	movf	printf@_val^(0+128),w
  3769  0721  00F6               	movwf	?___lldiv+4
  3770  0722  0008               	return
  3771  0723                     PL6:	
  3772  0723  0827               	movf	?___fttol+3,w
  3773  0724  1683               	bsf	3,5	;RP0=1, select bank1
  3774  0725  00AB               	movwf	(printf@_val+3)^(0+128)
  3775  0726  1283               	bcf	3,5	;RP0=0, select bank0
  3776  0727  0826               	movf	?___fttol+2,w
  3777  0728  1683               	bsf	3,5	;RP0=1, select bank1
  3778  0729  00AA               	movwf	(printf@_val+2)^(0+128)
  3779  072A  1283               	bcf	3,5	;RP0=0, select bank0
  3780  072B  0825               	movf	?___fttol+1,w
  3781  072C  1683               	bsf	3,5	;RP0=1, select bank1
  3782  072D  00A9               	movwf	(printf@_val+1)^(0+128)
  3783  072E  1283               	bcf	3,5	;RP0=0, select bank0
  3784  072F  0824               	movf	?___fttol,w
  3785  0730  0008               	return
  3786  0731                     PL7:	
  3787  0731  0840               	movf	?_scale,w
  3788  0732  1683               	bsf	3,5	;RP0=1, select bank1
  3789  0733  00A5               	movwf	printf@integ^(0+128)
  3790  0734  1283               	bcf	3,5	;RP0=0, select bank0
  3791  0735  0841               	movf	?_scale+1,w
  3792  0736  1683               	bsf	3,5	;RP0=1, select bank1
  3793  0737  00A6               	movwf	(printf@integ+1)^(0+128)
  3794  0738  1283               	bcf	3,5	;RP0=0, select bank0
  3795  0739  0842               	movf	?_scale+2,w
  3796  073A  1683               	bsf	3,5	;RP0=1, select bank1
  3797  073B  00A7               	movwf	(printf@integ+2)^(0+128)
  3798  073C  0833               	movf	printf@fval^(0+128),w
  3799  073D  0008               	return
  3800  073E                     PL12:	
  3801  073E  0875               	movf	?___lldiv+3,w
  3802  073F  00AC               	movwf	?___llmod+7
  3803  0740  0874               	movf	?___lldiv+2,w
  3804  0741  00AB               	movwf	?___llmod+6
  3805  0742  0873               	movf	?___lldiv+1,w
  3806  0743  00AA               	movwf	?___llmod+5
  3807  0744  0872               	movf	?___lldiv,w
  3808  0745  00A9               	movwf	?___llmod+4
  3809  0746  0008               	return
  3810  0747                     PL13:	
  3811  0747  0772               	addwf	?___wmul,w
  3812  0748  1283               	bcf	3,5	;RP0=0, select bank0
  3813  0749  00DA               	movwf	??_printf
  3814  074A  3000               	movlw	0
  3815  074B  1803               	skipnc
  3816  074C  3001               	movlw	1
  3817  074D  0773               	addwf	?___wmul+1,w
  3818  074E  00DB               	movwf	??_printf+1
  3819  074F  085A               	movf	??_printf,w
  3820  0750  3ED0               	addlw	208
  3821  0751  1683               	bsf	3,5	;RP0=1, select bank1
  3822  0752  0008               	return
  3823  0753                     PL14:	
  3824  0753  1283               	bcf	3,5	;RP0=0, select bank0
  3825  0754  00A4               	movwf	?___fttol
  3826  0755  1683               	bsf	3,5	;RP0=1, select bank1
  3827  0756  0834               	movf	(printf@fval+1)^(0+128),w
  3828  0757  1283               	bcf	3,5	;RP0=0, select bank0
  3829  0758  00A5               	movwf	?___fttol+1
  3830  0759  1683               	bsf	3,5	;RP0=1, select bank1
  3831  075A  0835               	movf	(printf@fval+2)^(0+128),w
  3832  075B  1283               	bcf	3,5	;RP0=0, select bank0
  3833  075C  00A6               	movwf	?___fttol+2
  3834  075D  0008               	return
  3835  075E                     PL16:	
  3836  075E  1283               	bcf	3,5	;RP0=0, select bank0
  3837  075F  00B1               	movwf	?___ftmul
  3838  0760  1683               	bsf	3,5	;RP0=1, select bank1
  3839  0761  0834               	movf	(printf@fval+1)^(0+128),w
  3840  0762  1283               	bcf	3,5	;RP0=0, select bank0
  3841  0763  00B2               	movwf	?___ftmul+1
  3842  0764  1683               	bsf	3,5	;RP0=1, select bank1
  3843  0765  0835               	movf	(printf@fval+2)^(0+128),w
  3844  0766  1283               	bcf	3,5	;RP0=0, select bank0
  3845  0767  00B3               	movwf	?___ftmul+2
  3846  0768  0008               	return
  3847  0769                     PL18:	
  3848  0769  1283               	bcf	3,5	;RP0=0, select bank0
  3849  076A  00DA               	movwf	??_printf
  3850  076B  01DB               	clrf	??_printf+1
  3851  076C  1BDA               	btfsc	??_printf,7
  3852  076D  03DB               	decf	??_printf+1,f
  3853  076E  085B               	movf	??_printf+1,w
  3854  076F  3A80               	xorlw	128
  3855  0770  00DC               	movwf	??_printf+2
  3856  0771  1683               	bsf	3,5	;RP0=1, select bank1
  3857  0772  0008               	return
  3858  0773                     PL20:	
  3859  0773  1303               	bcf	3,6	;RP1=0, select bank1
  3860  0774  0838               	movf	printf@c^(0+128),w
  3861  0775  1283               	bcf	3,5	;RP0=0, select bank0
  3862  0776  00DA               	movwf	??_printf
  3863  0777  01DB               	clrf	??_printf+1
  3864  0778  1BDA               	btfsc	??_printf,7
  3865  0779  03DB               	decf	??_printf+1,f
  3866  077A  1683               	bsf	3,5	;RP0=1, select bank1
  3867  077B  0008               	return
  3868  077C                     PL21:	
  3869  077C  0825               	movf	printf@integ^(0+128),w
  3870  077D  00F2               	movwf	?___ftge
  3871  077E  0826               	movf	(printf@integ+1)^(0+128),w
  3872  077F  00F3               	movwf	?___ftge+1
  3873  0780  0827               	movf	(printf@integ+2)^(0+128),w
  3874  0781  00F4               	movwf	?___ftge+2
  3875  0782  0008               	return
  3876  0783                     PL28:	
  3877  0783  1283               	bcf	3,5	;RP0=0, select bank0
  3878  0784  085B               	movf	??_printf+1,w
  3879  0785  1803               	skipnc
  3880  0786  3E01               	addlw	1
  3881  0787  3EFF               	addlw	255
  3882  0788  1683               	bsf	3,5	;RP0=1, select bank1
  3883  0789  0008               	return
  3884  078A                     PL29:	
  3885  078A  0824               	movf	___fttol@f1,w
  3886  078B  00A8               	movwf	??___fttol
  3887  078C  0825               	movf	___fttol@f1+1,w
  3888  078D  00A9               	movwf	??___fttol+1
  3889  078E  0826               	movf	___fttol@f1+2,w
  3890  078F  00AA               	movwf	??___fttol+2
  3891  0790  0008               	return
  3892  0791                     PL31:	
  3893  0791  0800               	movf	0,w
  3894  0792  1283               	bcf	3,5	;RP0=0, select bank0
  3895  0793  00DA               	movwf	??_printf
  3896  0794  0A84               	incf	4,f
  3897  0795  0800               	movf	0,w
  3898  0796  00DB               	movwf	??_printf+1
  3899  0797  0008               	return
  3900  0798                     PL32:	
  3901  0798  1683               	bsf	3,5	;RP0=1, select bank1
  3902  0799  1303               	bcf	3,6	;RP1=0, select bank1
  3903  079A  0008               	return
  3904                           
  3905                           	psect	text534
  3906  088F                     __ptext534:	
  3907 ;; =============== function _lcd_putc ends ============
  3908                           
  3909                           
  3910 ;; *************** function ___ftsub *****************
  3911 ;; Defined at:
  3912 ;;		line 17 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\ftsub.c"
  3913 ;; Parameters:    Size  Location     Type
  3914 ;;  f2              3   44[BANK0 ] float 
  3915 ;;  f1              3   47[BANK0 ] float 
  3916 ;; Auto vars:     Size  Location     Type
  3917 ;;		None
  3918 ;; Return value:  Size  Location     Type
  3919 ;;                  3   44[BANK0 ] float 
  3920 ;; Registers used:
  3921 ;;		wreg, status,2, status,0, pclath, cstack
  3922 ;; Tracked objects:
  3923 ;;		On entry : 60/0
  3924 ;;		On exit  : 60/0
  3925 ;;		Unchanged: FFF9F/0
  3926 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3927 ;;      Params:         0       6       0       0       0
  3928 ;;      Locals:         0       0       0       0       0
  3929 ;;      Temps:          0       0       0       0       0
  3930 ;;      Totals:         0       6       0       0       0
  3931 ;;Total ram usage:        6 bytes
  3932 ;; Hardware stack levels used:    1
  3933 ;; Hardware stack levels required when called:    3
  3934 ;; This function calls:
  3935 ;;		___ftadd
  3936 ;; This function is called by:
  3937 ;;		_printf
  3938 ;; This function uses a non-reentrant model
  3939 ;;
  3940  088F                     ___ftsub:	
  3941                           
  3942                           ; Regs used in ___ftsub: [wreg+status,2+status,0+pclath+cstack]
  3943  088F  3080               	movlw	128
  3944  0890  06CE               	xorwf	___ftsub@f2+2,f
  3945  0891  084F               	movf	___ftsub@f1,w
  3946  0892  00C0               	movwf	?___ftadd
  3947  0893  0850               	movf	___ftsub@f1+1,w
  3948  0894  00C1               	movwf	?___ftadd+1
  3949  0895  0851               	movf	___ftsub@f1+2,w
  3950  0896  00C2               	movwf	?___ftadd+2
  3951  0897  084C               	movf	___ftsub@f2,w
  3952  0898  00C3               	movwf	?___ftadd+3
  3953  0899  084D               	movf	___ftsub@f2+1,w
  3954  089A  00C4               	movwf	?___ftadd+4
  3955  089B  084E               	movf	___ftsub@f2+2,w
  3956  089C  00C5               	movwf	?___ftadd+5
  3957  089D  20A5               	fcall	___ftadd
  3958  089E  0840               	movf	?___ftadd,w
  3959  089F  00CC               	movwf	?___ftsub
  3960  08A0  0841               	movf	?___ftadd+1,w
  3961  08A1  00CD               	movwf	?___ftsub+1
  3962  08A2  0842               	movf	?___ftadd+2,w
  3963  08A3  00CE               	movwf	?___ftsub+2
  3964  08A4  0008               	return
  3965  08A5                     __end_of___ftsub:	
  3966  08A5                     __ptext542:	
  3967 ;; =============== function ___ftmul ends ============
  3968                           
  3969                           
  3970 ;; *************** function ___ftadd *****************
  3971 ;; Defined at:
  3972 ;;		line 87 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\ftadd.c"
  3973 ;; Parameters:    Size  Location     Type
  3974 ;;  f1              3   32[BANK0 ] float 
  3975 ;;  f2              3   35[BANK0 ] float 
  3976 ;; Auto vars:     Size  Location     Type
  3977 ;;  exp1            1   43[BANK0 ] unsigned char 
  3978 ;;  exp2            1   42[BANK0 ] unsigned char 
  3979 ;;  sign            1   41[BANK0 ] unsigned char 
  3980 ;; Return value:  Size  Location     Type
  3981 ;;                  3   32[BANK0 ] float 
  3982 ;; Registers used:
  3983 ;;		wreg, status,2, status,0, pclath, cstack
  3984 ;; Tracked objects:
  3985 ;;		On entry : 60/0
  3986 ;;		On exit  : 60/0
  3987 ;;		Unchanged: FFF9F/0
  3988 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3989 ;;      Params:         0       6       0       0       0
  3990 ;;      Locals:         0       3       0       0       0
  3991 ;;      Temps:          0       3       0       0       0
  3992 ;;      Totals:         0      12       0       0       0
  3993 ;;Total ram usage:       12 bytes
  3994 ;; Hardware stack levels used:    1
  3995 ;; Hardware stack levels required when called:    2
  3996 ;; This function calls:
  3997 ;;		___ftpack
  3998 ;; This function is called by:
  3999 ;;		_printf
  4000 ;;		___ftsub
  4001 ;; This function uses a non-reentrant model
  4002 ;;
  4003  08A5                     ___ftadd:	
  4004                           
  4005                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  4006  08A5  0840               	movf	___ftadd@f1,w
  4007  08A6  00C6               	movwf	??___ftadd
  4008  08A7  0841               	movf	___ftadd@f1+1,w
  4009  08A8  00C7               	movwf	??___ftadd+1
  4010  08A9  0842               	movf	___ftadd@f1+2,w
  4011  08AA  00C8               	movwf	??___ftadd+2
  4012  08AB  1003               	clrc
  4013  08AC  0D47               	rlf	??___ftadd+1,w
  4014  08AD  0D48               	rlf	??___ftadd+2,w
  4015  08AE  00CB               	movwf	___ftadd@exp1
  4016  08AF  0843               	movf	___ftadd@f2,w
  4017  08B0  00C6               	movwf	??___ftadd
  4018  08B1  0844               	movf	___ftadd@f2+1,w
  4019  08B2  00C7               	movwf	??___ftadd+1
  4020  08B3  0845               	movf	___ftadd@f2+2,w
  4021  08B4  00C8               	movwf	??___ftadd+2
  4022  08B5  1003               	clrc
  4023  08B6  0D47               	rlf	??___ftadd+1,w
  4024  08B7  0D48               	rlf	??___ftadd+2,w
  4025  08B8  00CA               	movwf	___ftadd@exp2
  4026  08B9  084B               	movf	___ftadd@exp1,w
  4027  08BA  1903               	btfsc	3,2
  4028  08BB  28C8               	goto	l6593
  4029  08BC  084A               	movf	___ftadd@exp2,w
  4030  08BD  024B               	subwf	___ftadd@exp1,w
  4031  08BE  084A               	movf	___ftadd@exp2,w
  4032  08BF  1803               	skipnc
  4033  08C0  28D0               	goto	L7
  4034  08C1  00C6               	movwf	??___ftadd
  4035  08C2  084B               	movf	___ftadd@exp1,w
  4036  08C3  02C6               	subwf	??___ftadd,f
  4037  08C4  3019               	movlw	25
  4038  08C5  0246               	subwf	??___ftadd,w
  4039  08C6  1C03               	skipc
  4040  08C7  28CF               	goto	l6597
  4041  08C8                     l6593:	
  4042  08C8  0843               	movf	___ftadd@f2,w
  4043  08C9  00C0               	movwf	?___ftadd
  4044  08CA  0844               	movf	___ftadd@f2+1,w
  4045  08CB  00C1               	movwf	?___ftadd+1
  4046  08CC  0845               	movf	___ftadd@f2+2,w
  4047  08CD  00C2               	movwf	?___ftadd+2
  4048  08CE  0008               	return
  4049  08CF                     l6597:	
  4050  08CF  084A               	movf	___ftadd@exp2,w
  4051  08D0                     L7:	
  4052  08D0  1903               	btfsc	3,2
  4053  08D1  0008               	return
  4054  08D2  084B               	movf	___ftadd@exp1,w
  4055  08D3  024A               	subwf	___ftadd@exp2,w
  4056  08D4  1803               	skipnc
  4057  08D5  28DE               	goto	l6603
  4058  08D6  084B               	movf	___ftadd@exp1,w
  4059  08D7  00C6               	movwf	??___ftadd
  4060  08D8  084A               	movf	___ftadd@exp2,w
  4061  08D9  02C6               	subwf	??___ftadd,f
  4062  08DA  3019               	movlw	25
  4063  08DB  0246               	subwf	??___ftadd,w
  4064  08DC  1803               	btfsc	3,0
  4065  08DD  0008               	return
  4066  08DE                     l6603:	
  4067  08DE  3006               	movlw	6
  4068  08DF  00C9               	movwf	___ftadd@sign
  4069  08E0  1BC2               	btfsc	___ftadd@f1+2,7
  4070  08E1  17C9               	bsf	___ftadd@sign,7
  4071  08E2  1BC5               	btfsc	___ftadd@f2+2,7
  4072  08E3  1749               	bsf	___ftadd@sign,6
  4073  08E4  17C1               	bsf	___ftadd@f1+1,7
  4074  08E5  01C2               	clrf	___ftadd@f1+2
  4075  08E6  17C4               	bsf	___ftadd@f2+1,7
  4076  08E7  01C5               	clrf	___ftadd@f2+2
  4077  08E8  084A               	movf	___ftadd@exp2,w
  4078  08E9  024B               	subwf	___ftadd@exp1,w
  4079  08EA  1803               	skipnc
  4080  08EB  2905               	goto	l6625
  4081  08EC                     l6615:	
  4082  08EC  1003               	clrc
  4083  08ED  0DC3               	rlf	___ftadd@f2,f
  4084  08EE  0DC4               	rlf	___ftadd@f2+1,f
  4085  08EF  0DC5               	rlf	___ftadd@f2+2,f
  4086  08F0  03CA               	decf	___ftadd@exp2,f
  4087  08F1  084A               	movf	___ftadd@exp2,w
  4088  08F2  064B               	xorwf	___ftadd@exp1,w
  4089  08F3  1903               	skipnz
  4090  08F4  2900               	goto	l6623
  4091  08F5  03C9               	decf	___ftadd@sign,f
  4092  08F6  0849               	movf	___ftadd@sign,w
  4093  08F7  3907               	andlw	7
  4094  08F8  1903               	btfsc	3,2
  4095  08F9  2900               	goto	l6623
  4096  08FA  28EC               	goto	l6615
  4097  08FB                     l6621:	
  4098  08FB  1003               	clrc
  4099  08FC  0CC2               	rrf	___ftadd@f1+2,f
  4100  08FD  0CC1               	rrf	___ftadd@f1+1,f
  4101  08FE  0CC0               	rrf	___ftadd@f1,f
  4102  08FF  0ACB               	incf	___ftadd@exp1,f
  4103  0900                     l6623:	
  4104  0900  084B               	movf	___ftadd@exp1,w
  4105  0901  064A               	xorwf	___ftadd@exp2,w
  4106  0902  1903               	btfsc	3,2
  4107  0903  2921               	goto	l3370
  4108  0904  28FB               	goto	l6621
  4109  0905                     l6625:	
  4110  0905  084B               	movf	___ftadd@exp1,w
  4111  0906  024A               	subwf	___ftadd@exp2,w
  4112  0907  1803               	skipnc
  4113  0908  2921               	goto	l3370
  4114  0909                     l6627:	
  4115  0909  1003               	clrc
  4116  090A  0DC0               	rlf	___ftadd@f1,f
  4117  090B  0DC1               	rlf	___ftadd@f1+1,f
  4118  090C  0DC2               	rlf	___ftadd@f1+2,f
  4119  090D  03CB               	decf	___ftadd@exp1,f
  4120  090E  084A               	movf	___ftadd@exp2,w
  4121  090F  064B               	xorwf	___ftadd@exp1,w
  4122  0910  1903               	skipnz
  4123  0911  291D               	goto	l6635
  4124  0912  03C9               	decf	___ftadd@sign,f
  4125  0913  0849               	movf	___ftadd@sign,w
  4126  0914  3907               	andlw	7
  4127  0915  1903               	btfsc	3,2
  4128  0916  291D               	goto	l6635
  4129  0917  2909               	goto	l6627
  4130  0918                     l6633:	
  4131  0918  1003               	clrc
  4132  0919  0CC5               	rrf	___ftadd@f2+2,f
  4133  091A  0CC4               	rrf	___ftadd@f2+1,f
  4134  091B  0CC3               	rrf	___ftadd@f2,f
  4135  091C  0ACA               	incf	___ftadd@exp2,f
  4136  091D                     l6635:	
  4137  091D  084B               	movf	___ftadd@exp1,w
  4138  091E  064A               	xorwf	___ftadd@exp2,w
  4139  091F  1D03               	skipz
  4140  0920  2918               	goto	l6633
  4141  0921                     l3370:	
  4142  0921  1FC9               	btfss	___ftadd@sign,7
  4143  0922  292C               	goto	l6641
  4144  0923  30FF               	movlw	255
  4145  0924  06C0               	xorwf	___ftadd@f1,f
  4146  0925  06C1               	xorwf	___ftadd@f1+1,f
  4147  0926  06C2               	xorwf	___ftadd@f1+2,f
  4148  0927  0AC0               	incf	___ftadd@f1,f
  4149  0928  1903               	skipnz
  4150  0929  0AC1               	incf	___ftadd@f1+1,f
  4151  092A  1903               	skipnz
  4152  092B  0AC2               	incf	___ftadd@f1+2,f
  4153  092C                     l6641:	
  4154  092C  1F49               	btfss	___ftadd@sign,6
  4155  092D  2937               	goto	l6647
  4156  092E  30FF               	movlw	255
  4157  092F  06C3               	xorwf	___ftadd@f2,f
  4158  0930  06C4               	xorwf	___ftadd@f2+1,f
  4159  0931  06C5               	xorwf	___ftadd@f2+2,f
  4160  0932  0AC3               	incf	___ftadd@f2,f
  4161  0933  1903               	skipnz
  4162  0934  0AC4               	incf	___ftadd@f2+1,f
  4163  0935  1903               	skipnz
  4164  0936  0AC5               	incf	___ftadd@f2+2,f
  4165  0937                     l6647:	
  4166  0937  01C9               	clrf	___ftadd@sign
  4167  0938  0840               	movf	___ftadd@f1,w
  4168  0939  07C3               	addwf	___ftadd@f2,f
  4169  093A  0841               	movf	___ftadd@f1+1,w
  4170  093B  1103               	clrz
  4171  093C  1803               	skipnc
  4172  093D  0A41               	incf	___ftadd@f1+1,w
  4173  093E  1D03               	btfss	3,2
  4174  093F  07C4               	addwf	___ftadd@f2+1,f
  4175  0940  0842               	movf	___ftadd@f1+2,w
  4176  0941  1103               	clrz
  4177  0942  1803               	skipnc
  4178  0943  0A42               	incf	___ftadd@f1+2,w
  4179  0944  1D03               	btfss	3,2
  4180  0945  07C5               	addwf	___ftadd@f2+2,f
  4181  0946  1FC5               	btfss	___ftadd@f2+2,7
  4182  0947  2953               	goto	l6659
  4183  0948  30FF               	movlw	255
  4184  0949  06C3               	xorwf	___ftadd@f2,f
  4185  094A  06C4               	xorwf	___ftadd@f2+1,f
  4186  094B  06C5               	xorwf	___ftadd@f2+2,f
  4187  094C  0AC3               	incf	___ftadd@f2,f
  4188  094D  1903               	skipnz
  4189  094E  0AC4               	incf	___ftadd@f2+1,f
  4190  094F  1903               	skipnz
  4191  0950  0AC5               	incf	___ftadd@f2+2,f
  4192  0951  01C9               	clrf	___ftadd@sign
  4193  0952  0AC9               	incf	___ftadd@sign,f
  4194  0953                     l6659:	
  4195  0953  0843               	movf	___ftadd@f2,w
  4196  0954  00F2               	movwf	?___ftpack
  4197  0955  0844               	movf	___ftadd@f2+1,w
  4198  0956  00F3               	movwf	?___ftpack+1
  4199  0957  0845               	movf	___ftadd@f2+2,w
  4200  0958  00F4               	movwf	?___ftpack+2
  4201  0959  084B               	movf	___ftadd@exp1,w
  4202  095A  00F5               	movwf	?___ftpack+3
  4203  095B  0849               	movf	___ftadd@sign,w
  4204  095C  00F6               	movwf	?___ftpack+4
  4205  095D  120A  158A  2769   	fcall	___ftpack
  4206  0960  0872               	movf	?___ftpack,w
  4207  0961  00C0               	movwf	?___ftadd
  4208  0962  0873               	movf	?___ftpack+1,w
  4209  0963  00C1               	movwf	?___ftadd+1
  4210  0964  0874               	movf	?___ftpack+2,w
  4211  0965  00C2               	movwf	?___ftadd+2
  4212  0966  0008               	return
  4213  0967                     __end_of___ftadd:	
  4214                           
  4215                           	psect	text536
  4216  0967                     __ptext536:	
  4217 ;; =============== function _scale ends ============
  4218                           
  4219                           
  4220 ;; *************** function _fround *****************
  4221 ;; Defined at:
  4222 ;;		line 406 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\lib\doprnt.c"
  4223 ;; Parameters:    Size  Location     Type
  4224 ;;  prec            1    wreg     unsigned char 
  4225 ;; Auto vars:     Size  Location     Type
  4226 ;;  prec            1   53[BANK0 ] unsigned char 
  4227 ;; Return value:  Size  Location     Type
  4228 ;;                  3   44[BANK0 ] unsigned char 
  4229 ;; Registers used:
  4230 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4231 ;; Tracked objects:
  4232 ;;		On entry : 60/20
  4233 ;;		On exit  : 60/0
  4234 ;;		Unchanged: FFF9F/0
  4235 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4236 ;;      Params:         0       3       0       0       0
  4237 ;;      Locals:         0       7       0       0       0
  4238 ;;      Temps:          0       0       0       0       0
  4239 ;;      Totals:         0      10       0       0       0
  4240 ;;Total ram usage:       10 bytes
  4241 ;; Hardware stack levels used:    1
  4242 ;; Hardware stack levels required when called:    3
  4243 ;; This function calls:
  4244 ;;		___lbmod
  4245 ;;		___bmul
  4246 ;;		___lbdiv
  4247 ;;		___ftmul
  4248 ;; This function is called by:
  4249 ;;		_printf
  4250 ;; This function uses a non-reentrant model
  4251 ;;
  4252  0967                     _fround:	
  4253                           
  4254                           ; Regs used in _fround: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4255                           ;fround@prec stored from wreg
  4256  0967  1283               	bcf	3,5	;RP0=0, select bank0
  4257  0968  00D5               	movwf	fround@prec
  4258  0969  306E               	movlw	110
  4259  096A  0255               	subwf	fround@prec,w
  4260  096B  1C03               	skipc
  4261  096C  29F2               	goto	l6805
  4262  096D  3003               	movlw	3
  4263  096E  00FB               	movwf	?___bmul
  4264  096F  300A               	movlw	10
  4265  0970  00F7               	movwf	?___lbdiv
  4266  0971  3064               	movlw	100
  4267  0972  00F2               	movwf	?___lbmod
  4268  0973  0855               	movf	fround@prec,w
  4269  0974  2287  120A  158A   	fcall	___lbmod
  4270  0977  226C               	fcall	___lbdiv
  4271  0978  120A  158A  275B   	fcall	___bmul
      +       120A  158A         
  4272  097D  3E1C               	addlw	low ((__npowers_-__stringbase+27))
  4273  097E  0084               	movwf	4
  4274  097F  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  4275  0984  00B1               	movwf	?___ftmul
  4276  0985  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  4277  098A  00B2               	movwf	?___ftmul+1
  4278  098B  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  4279  0990  00B3               	movwf	?___ftmul+2
  4280  0991  3003               	movlw	3
  4281  0992  00FB               	movwf	?___bmul
  4282  0993  3064               	movlw	100
  4283  0994  00F7               	movwf	?___lbdiv
  4284  0995  0855               	movf	fround@prec,w
  4285  0996  226C               	fcall	___lbdiv
  4286  0997  120A  158A  275B   	fcall	___bmul
      +       120A  158A         
  4287  099C  3E37               	addlw	low ((__npowers_-__stringbase+54))
  4288  099D  0084               	movwf	4
  4289  099E  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  4290  09A3  00B4               	movwf	?___ftmul+3
  4291  09A4  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  4292  09A9  00B5               	movwf	?___ftmul+4
  4293  09AA  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  4294  09AF  00B6               	movwf	?___ftmul+5
  4295  09B0  120A  158A  26EC   	fcall	___ftmul
      +       120A  158A         
  4296  09B5  22B2  120A  158A   	fcall	PL27	;call to abstracted procedure
  4297  09B8  3003               	movlw	3
  4298  09B9  00FB               	movwf	?___bmul
  4299  09BA  300A               	movlw	10
  4300  09BB  00F2               	movwf	?___lbmod
  4301  09BC  0855               	movf	fround@prec,w
  4302  09BD  2287               	fcall	___lbmod
  4303  09BE  120A  158A  275B   	fcall	___bmul
      +       120A  158A         
  4304  09C3  3E01               	addlw	low (__npowers_-__stringbase)
  4305  09C4  0084               	movwf	4
  4306  09C5  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  4307  09CA  00B1               	movwf	?___ftmul
  4308  09CB  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  4309  09D0  00B2               	movwf	?___ftmul+1
  4310  09D1  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  4311  09D6  22AA               	fcall	PL24	;call to abstracted procedure
  4312  09D7  120A  158A  26EC   	fcall	___ftmul
      +       120A  158A         
  4313  09DC  0831               	movf	?___ftmul,w
  4314  09DD  00CF               	movwf	_fround$4118
  4315  09DE  0832               	movf	?___ftmul+1,w
  4316  09DF  00D0               	movwf	_fround$4118+1
  4317  09E0  0833               	movf	?___ftmul+2,w
  4318  09E1  00D1               	movwf	_fround$4118+2
  4319  09E2  303F               	movlw	63
  4320  09E3  01B1               	clrf	?___ftmul
  4321  09E4  01B2               	clrf	?___ftmul+1
  4322  09E5  00B3               	movwf	?___ftmul+2
  4323  09E6  084F               	movf	_fround$4118,w
  4324  09E7  00B4               	movwf	?___ftmul+3
  4325  09E8  0850               	movf	_fround$4118+1,w
  4326  09E9  00B5               	movwf	?___ftmul+4
  4327  09EA  0851               	movf	_fround$4118+2,w
  4328  09EB  00B6               	movwf	?___ftmul+5
  4329  09EC  120A  158A  26EC   	fcall	___ftmul
      +       120A  158A         
  4330  09F1  2AA3               	ljmp	PL17	;call to abstracted procedure
  4331  09F2                     l6805:	
  4332  09F2  300B               	movlw	11
  4333  09F3  0255               	subwf	fround@prec,w
  4334  09F4  1C03               	skipc
  4335  09F5  2A46               	goto	l6813
  4336  09F6  3003               	movlw	3
  4337  09F7  00FB               	movwf	?___bmul
  4338  09F8  300A               	movlw	10
  4339  09F9  00F2               	movwf	?___lbmod
  4340  09FA  0855               	movf	fround@prec,w
  4341  09FB  2287               	fcall	___lbmod
  4342  09FC  120A  158A  275B   	fcall	___bmul
      +       120A  158A         
  4343  0A01  3E01               	addlw	low (__npowers_-__stringbase)
  4344  0A02  0084               	movwf	4
  4345  0A03  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  4346  0A08  00B1               	movwf	?___ftmul
  4347  0A09  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  4348  0A0E  00B2               	movwf	?___ftmul+1
  4349  0A0F  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  4350  0A14  00B3               	movwf	?___ftmul+2
  4351  0A15  3003               	movlw	3
  4352  0A16  00FB               	movwf	?___bmul
  4353  0A17  300A               	movlw	10
  4354  0A18  00F7               	movwf	?___lbdiv
  4355  0A19  0855               	movf	fround@prec,w
  4356  0A1A  226C               	fcall	___lbdiv
  4357  0A1B  120A  158A  275B   	fcall	___bmul
      +       120A  158A         
  4358  0A20  3E1C               	addlw	low ((__npowers_-__stringbase+27))
  4359  0A21  0084               	movwf	4
  4360  0A22  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  4361  0A27  00B4               	movwf	?___ftmul+3
  4362  0A28  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  4363  0A2D  00B5               	movwf	?___ftmul+4
  4364  0A2E  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  4365  0A33  00B6               	movwf	?___ftmul+5
  4366  0A34  120A  158A  26EC   	fcall	___ftmul
      +       120A  158A         
  4367  0A39  22B2  120A  158A   	fcall	PL27	;call to abstracted procedure
  4368  0A3C  303F               	movlw	63
  4369  0A3D  01B1               	clrf	?___ftmul
  4370  0A3E  01B2               	clrf	?___ftmul+1
  4371  0A3F  22AA               	fcall	PL24	;call to abstracted procedure
  4372  0A40  120A  158A  26EC   	fcall	___ftmul
      +       120A  158A         
  4373  0A45  2AA3               	ljmp	PL17	;call to abstracted procedure
  4374  0A46                     l6813:	
  4375  0A46  303F               	movlw	63
  4376  0A47  01B1               	clrf	?___ftmul
  4377  0A48  01B2               	clrf	?___ftmul+1
  4378  0A49  00B3               	movwf	?___ftmul+2
  4379  0A4A  3003               	movlw	3
  4380  0A4B  00FB               	movwf	?___bmul
  4381  0A4C  0855               	movf	fround@prec,w
  4382  0A4D  120A  158A  275B   	fcall	___bmul
      +       120A  158A         
  4383  0A52  3E01               	addlw	low (__npowers_-__stringbase)
  4384  0A53  0084               	movwf	4
  4385  0A54  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  4386  0A59  00B4               	movwf	?___ftmul+3
  4387  0A5A  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  4388  0A5F  00B5               	movwf	?___ftmul+4
  4389  0A60  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  4390  0A65  00B6               	movwf	?___ftmul+5
  4391  0A66  120A  158A  26EC   	fcall	___ftmul
      +       120A  158A         
  4392  0A6B  2AA3               	ljmp	PL17	;call to abstracted procedure
  4393  0A6C                     __end_of_fround:	
  4394  0A6C                     __ptext554:	
  4395 ;; =============== function ___lbmod ends ============
  4396                           
  4397                           
  4398 ;; *************** function ___lbdiv *****************
  4399 ;; Defined at:
  4400 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\lbdiv.c"
  4401 ;; Parameters:    Size  Location     Type
  4402 ;;  dividend        1    wreg     unsigned char 
  4403 ;;  divisor         1    7[COMMON] unsigned char 
  4404 ;; Auto vars:     Size  Location     Type
  4405 ;;  dividend        1    8[COMMON] unsigned char 
  4406 ;;  quotient        1   10[COMMON] unsigned char 
  4407 ;;  counter         1    9[COMMON] unsigned char 
  4408 ;; Return value:  Size  Location     Type
  4409 ;;                  1    wreg      unsigned char 
  4410 ;; Registers used:
  4411 ;;		wreg, status,2, status,0
  4412 ;; Tracked objects:
  4413 ;;		On entry : 60/0
  4414 ;;		On exit  : 60/0
  4415 ;;		Unchanged: FFF9F/0
  4416 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4417 ;;      Params:         1       0       0       0       0
  4418 ;;      Locals:         3       0       0       0       0
  4419 ;;      Temps:          0       0       0       0       0
  4420 ;;      Totals:         4       0       0       0       0
  4421 ;;Total ram usage:        4 bytes
  4422 ;; Hardware stack levels used:    1
  4423 ;; Hardware stack levels required when called:    1
  4424 ;; This function calls:
  4425 ;;		Nothing
  4426 ;; This function is called by:
  4427 ;;		_fround
  4428 ;; This function uses a non-reentrant model
  4429 ;;
  4430  0A6C                     ___lbdiv:	
  4431                           
  4432                           ; Regs used in ___lbdiv: [wreg+status,2+status,0]
  4433                           ;___lbdiv@dividend stored from wreg
  4434  0A6C  00F8               	movwf	___lbdiv@dividend
  4435  0A6D  01FA               	clrf	___lbdiv@quotient
  4436  0A6E  0877               	movf	___lbdiv@divisor,w
  4437  0A6F  1903               	btfsc	3,2
  4438  0A70  2A85               	goto	l6293
  4439  0A71  01F9               	clrf	___lbdiv@counter
  4440  0A72                     l6279:	
  4441  0A72  0AF9               	incf	___lbdiv@counter,f
  4442  0A73  1BF7               	btfsc	___lbdiv@divisor,7
  4443  0A74  2A78               	goto	l3339
  4444  0A75  1003               	clrc
  4445  0A76  0DF7               	rlf	___lbdiv@divisor,f
  4446  0A77  2A72               	goto	l6279
  4447  0A78                     l3339:	
  4448  0A78  1003               	clrc
  4449  0A79  0DFA               	rlf	___lbdiv@quotient,f
  4450  0A7A  0877               	movf	___lbdiv@divisor,w
  4451  0A7B  0278               	subwf	___lbdiv@dividend,w
  4452  0A7C  1C03               	skipc
  4453  0A7D  2A82               	goto	L18
  4454  0A7E  0877               	movf	___lbdiv@divisor,w
  4455  0A7F  02F8               	subwf	___lbdiv@dividend,f
  4456  0A80  147A               	bsf	___lbdiv@quotient,0
  4457  0A81  1003               	clrc
  4458  0A82                     L18:	
  4459  0A82  0CF7               	rrf	___lbdiv@divisor,f
  4460  0A83  0BF9               	decfsz	___lbdiv@counter,f
  4461  0A84  2A78               	goto	l3339
  4462  0A85                     l6293:	
  4463  0A85  087A               	movf	___lbdiv@quotient,w
  4464  0A86  0008               	return
  4465  0A87                     __end_of___lbdiv:	
  4466  0A87                     __ptext553:	
  4467 ;; =============== function ___ftpack ends ============
  4468                           
  4469                           
  4470 ;; *************** function ___lbmod *****************
  4471 ;; Defined at:
  4472 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\lbmod.c"
  4473 ;; Parameters:    Size  Location     Type
  4474 ;;  dividend        1    wreg     unsigned char 
  4475 ;;  divisor         1    2[COMMON] unsigned char 
  4476 ;; Auto vars:     Size  Location     Type
  4477 ;;  dividend        1    4[COMMON] unsigned char 
  4478 ;;  rem             1    6[COMMON] unsigned char 
  4479 ;;  counter         1    5[COMMON] unsigned char 
  4480 ;; Return value:  Size  Location     Type
  4481 ;;                  1    wreg      unsigned char 
  4482 ;; Registers used:
  4483 ;;		wreg, status,2, status,0
  4484 ;; Tracked objects:
  4485 ;;		On entry : 60/0
  4486 ;;		On exit  : 60/0
  4487 ;;		Unchanged: FFF9F/0
  4488 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4489 ;;      Params:         1       0       0       0       0
  4490 ;;      Locals:         3       0       0       0       0
  4491 ;;      Temps:          1       0       0       0       0
  4492 ;;      Totals:         5       0       0       0       0
  4493 ;;Total ram usage:        5 bytes
  4494 ;; Hardware stack levels used:    1
  4495 ;; Hardware stack levels required when called:    1
  4496 ;; This function calls:
  4497 ;;		Nothing
  4498 ;; This function is called by:
  4499 ;;		_fround
  4500 ;; This function uses a non-reentrant model
  4501 ;;
  4502  0A87                     ___lbmod:	
  4503                           
  4504                           ; Regs used in ___lbmod: [wreg+status,2+status,0]
  4505                           ;___lbmod@dividend stored from wreg
  4506  0A87  00F4               	movwf	___lbmod@dividend
  4507  0A88  3008               	movlw	8
  4508  0A89  00F5               	movwf	___lbmod@counter
  4509  0A8A  01F6               	clrf	___lbmod@rem
  4510  0A8B                     l6301:	
  4511  0A8B  0874               	movf	___lbmod@dividend,w
  4512  0A8C  00F3               	movwf	??___lbmod
  4513  0A8D  3007               	movlw	7
  4514  0A8E  1003               	clrc
  4515  0A8F                     L17:	
  4516  0A8F  0CF3               	rrf	??___lbmod,f
  4517  0A90  3EFF               	addlw	-1
  4518  0A91  1003               	clrc
  4519  0A92  1D03               	skipz
  4520  0A93  2A8F               	goto	L17
  4521  0A94  0D76               	rlf	___lbmod@rem,w
  4522  0A95  0473               	iorwf	??___lbmod,w
  4523  0A96  00F6               	movwf	___lbmod@rem
  4524  0A97  1003               	clrc
  4525  0A98  0DF4               	rlf	___lbmod@dividend,f
  4526  0A99  0872               	movf	___lbmod@divisor,w
  4527  0A9A  0276               	subwf	___lbmod@rem,w
  4528  0A9B  1C03               	skipc
  4529  0A9C  2A9F               	goto	l6309
  4530  0A9D  0872               	movf	___lbmod@divisor,w
  4531  0A9E  02F6               	subwf	___lbmod@rem,f
  4532  0A9F                     l6309:	
  4533  0A9F  0BF5               	decfsz	___lbmod@counter,f
  4534  0AA0  2A8B               	goto	l6301
  4535  0AA1  0876               	movf	___lbmod@rem,w
  4536  0AA2  0008               	return
  4537  0AA3                     __end_of___lbmod:	
  4538  0AA3                     PL17:	
  4539  0AA3  0831               	movf	?___ftmul,w
  4540  0AA4  00CC               	movwf	?_fround
  4541  0AA5  0832               	movf	?___ftmul+1,w
  4542  0AA6  00CD               	movwf	?_fround+1
  4543  0AA7  0833               	movf	?___ftmul+2,w
  4544  0AA8  00CE               	movwf	?_fround+2
  4545  0AA9  0008               	return
  4546  0AAA                     PL24:	
  4547  0AAA  00B3               	movwf	?___ftmul+2
  4548  0AAB  0852               	movf	_fround$4117,w
  4549  0AAC  00B4               	movwf	?___ftmul+3
  4550  0AAD  0853               	movf	_fround$4117+1,w
  4551  0AAE  00B5               	movwf	?___ftmul+4
  4552  0AAF  0854               	movf	_fround$4117+2,w
  4553  0AB0  00B6               	movwf	?___ftmul+5
  4554  0AB1  0008               	return
  4555  0AB2                     PL27:	
  4556  0AB2  0831               	movf	?___ftmul,w
  4557  0AB3  00D2               	movwf	_fround$4117
  4558  0AB4  0832               	movf	?___ftmul+1,w
  4559  0AB5  00D3               	movwf	_fround$4117+1
  4560  0AB6  0833               	movf	?___ftmul+2,w
  4561  0AB7  00D4               	movwf	_fround$4117+2
  4562  0AB8  0008               	return
  4563                           
  4564                           	psect	text537
  4565  0AB9                     __ptext537:	
  4566 ;; =============== function _fround ends ============
  4567                           
  4568                           
  4569 ;; *************** function _lcd_gotoxy *****************
  4570 ;; Defined at:
  4571 ;;		line 162 in file "C:\Users\DELL\Desktop\baitap_ttvxl\CCP\lcd(16).c"
  4572 ;; Parameters:    Size  Location     Type
  4573 ;;  col             1    wreg     unsigned char 
  4574 ;;  row             1    7[COMMON] unsigned char 
  4575 ;; Auto vars:     Size  Location     Type
  4576 ;;  col             1    8[COMMON] unsigned char 
  4577 ;;  address         1    9[COMMON] unsigned char 
  4578 ;; Return value:  Size  Location     Type
  4579 ;;		None               void
  4580 ;; Registers used:
  4581 ;;		wreg, status,2, status,0, pclath, cstack
  4582 ;; Tracked objects:
  4583 ;;		On entry : 0/0
  4584 ;;		On exit  : 60/0
  4585 ;;		Unchanged: 0/0
  4586 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4587 ;;      Params:         1       0       0       0       0
  4588 ;;      Locals:         2       0       0       0       0
  4589 ;;      Temps:          0       0       0       0       0
  4590 ;;      Totals:         3       0       0       0       0
  4591 ;;Total ram usage:        3 bytes
  4592 ;; Hardware stack levels used:    1
  4593 ;; Hardware stack levels required when called:    2
  4594 ;; This function calls:
  4595 ;;		_lcd_put_byte
  4596 ;;		_lcd_busy
  4597 ;; This function is called by:
  4598 ;;		_lcd_putc
  4599 ;;		_main
  4600 ;; This function uses a non-reentrant model
  4601 ;;
  4602  0AB9                     _lcd_gotoxy:	
  4603                           
  4604                           ; Regs used in _lcd_gotoxy: [wreg+status,2+status,0+pclath+cstack]
  4605                           ;lcd_gotoxy@col stored from wreg
  4606  0AB9  00F8               	movwf	lcd_gotoxy@col
  4607                           
  4608                           ;lcd(16).c: 163: unsigned char address;
  4609                           ;lcd(16).c: 165: if(row!=0)
  4610  0ABA  0877               	movf	lcd_gotoxy@row,w
  4611  0ABB  1903               	btfsc	3,2
  4612  0ABC  2AC0               	goto	l6787
  4613                           
  4614                           ;lcd(16).c: 166: address=0x40;
  4615  0ABD  3040               	movlw	64
  4616  0ABE  00F9               	movwf	lcd_gotoxy@address
  4617  0ABF  2AC1               	goto	l6789
  4618  0AC0                     l6787:	
  4619                           
  4620                           ;lcd(16).c: 167: else
  4621                           ;lcd(16).c: 168: address=0;
  4622  0AC0  01F9               	clrf	lcd_gotoxy@address
  4623  0AC1                     l6789:	
  4624                           
  4625                           ;lcd(16).c: 170: address += col;
  4626  0AC1  0878               	movf	lcd_gotoxy@col,w
  4627  0AC2  07F9               	addwf	lcd_gotoxy@address,f
  4628                           
  4629                           ;lcd(16).c: 171: lcd_put_byte(0,0x80|address);
  4630  0AC3  0879               	movf	lcd_gotoxy@address,w
  4631  0AC4  3880               	iorlw	128
  4632  0AC5  00F2               	movwf	?_lcd_put_byte
  4633  0AC6  3000               	movlw	0
  4634  0AC7  23BB  120A  158A   	fcall	_lcd_put_byte
  4635  0ACA                     l6793:	
  4636                           ;lcd(16).c: 172: while(lcd_busy());
  4637                           
  4638  0ACA  244B  120A  158A   	fcall	_lcd_busy
  4639  0ACD  3800               	iorlw	0
  4640  0ACE  1903               	btfsc	3,2
  4641  0ACF  0008               	return
  4642  0AD0  2ACA               	goto	l6793
  4643  0AD1                     __end_of_lcd_gotoxy:	
  4644  0AD1                     __ptext533:	
  4645 ;; =============== function _putch ends ============
  4646                           
  4647                           
  4648 ;; *************** function _lcd_putc *****************
  4649 ;; Defined at:
  4650 ;;		line 143 in file "C:\Users\DELL\Desktop\baitap_ttvxl\CCP\lcd(16).c"
  4651 ;; Parameters:    Size  Location     Type
  4652 ;;  c               1    wreg     unsigned char 
  4653 ;; Auto vars:     Size  Location     Type
  4654 ;;  c               1   10[COMMON] unsigned char 
  4655 ;; Return value:  Size  Location     Type
  4656 ;;		None               void
  4657 ;; Registers used:
  4658 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4659 ;; Tracked objects:
  4660 ;;		On entry : 0/20
  4661 ;;		On exit  : 0/0
  4662 ;;		Unchanged: 0/0
  4663 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4664 ;;      Params:         0       0       0       0       0
  4665 ;;      Locals:         1       0       0       0       0
  4666 ;;      Temps:          0       0       0       0       0
  4667 ;;      Totals:         1       0       0       0       0
  4668 ;;Total ram usage:        1 bytes
  4669 ;; Hardware stack levels used:    1
  4670 ;; Hardware stack levels required when called:    3
  4671 ;; This function calls:
  4672 ;;		_lcd_put_byte
  4673 ;;		_lcd_busy
  4674 ;;		_lcd_gotoxy
  4675 ;;		_isprint
  4676 ;; This function is called by:
  4677 ;;		_putch
  4678 ;; This function uses a non-reentrant model
  4679 ;;
  4680  0AD1                     _lcd_putc:	
  4681                           
  4682                           ; Regs used in _lcd_putc: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4683                           ;lcd_putc@c stored from wreg
  4684  0AD1  00FA               	movwf	lcd_putc@c
  4685                           
  4686                           ;lcd(16).c: 144: switch(c){
  4687  0AD2  2AF7               	goto	l6879
  4688  0AD3                     l6865:	
  4689  0AD3  3000               	movlw	0
  4690                           
  4691                           ;lcd(16).c: 146: lcd_put_byte(0, 1);
  4692  0AD4  01F2               	clrf	?_lcd_put_byte
  4693  0AD5  0AF2               	incf	?_lcd_put_byte,f
  4694  0AD6  23BB  120A  158A   	fcall	_lcd_put_byte
  4695  0AD9                     l6867:	
  4696                           ;lcd(16).c: 147: while(lcd_busy());
  4697                           
  4698  0AD9  244B  120A  158A   	fcall	_lcd_busy
  4699  0ADC  3800               	iorlw	0
  4700  0ADD  1903               	btfsc	3,2
  4701  0ADE  0008               	return
  4702  0ADF  2AD9               	goto	l6867
  4703  0AE0                     l6869:	
  4704  0AE0  3000               	movlw	0
  4705                           
  4706                           ;lcd(16).c: 150: lcd_gotoxy(0, 1);
  4707  0AE1  01F7               	clrf	?_lcd_gotoxy
  4708  0AE2  0AF7               	incf	?_lcd_gotoxy,f
  4709  0AE3  2AB9               	ljmp	_lcd_gotoxy
  4710  0AE4                     l6871:	
  4711                           ;lcd(16).c: 151: break;
  4712                           
  4713                           
  4714                           ;lcd(16).c: 153: if(isprint(c)){
  4715  0AE4  087A               	movf	lcd_putc@c,w
  4716  0AE5  2472  120A  158A   	fcall	_isprint
  4717  0AE8  1C03               	btfss	3,0
  4718  0AE9  0008               	return
  4719                           
  4720                           ;lcd(16).c: 154: lcd_put_byte(1, c);
  4721  0AEA  087A               	movf	lcd_putc@c,w
  4722  0AEB  00F2               	movwf	?_lcd_put_byte
  4723  0AEC  3001               	movlw	1
  4724  0AED  23BB  120A  158A   	fcall	_lcd_put_byte
  4725  0AF0                     l6875:	
  4726                           ;lcd(16).c: 155: while(lcd_busy());
  4727                           
  4728  0AF0  244B  120A  158A   	fcall	_lcd_busy
  4729  0AF3  3800               	iorlw	0
  4730  0AF4  1903               	btfsc	3,2
  4731  0AF5  0008               	return
  4732  0AF6  2AF0               	goto	l6875
  4733  0AF7                     l6879:	
  4734  0AF7  087A               	movf	lcd_putc@c,w
  4735                           
  4736                           ; Switch size 1, requested type "space"
  4737                           ; Number of cases is 2, Range of values is 10 to 12
  4738                           ; switch strategies available:
  4739                           ; Name         Instructions Cycles
  4740                           ; simple_byte            7     4 (average)
  4741                           ; direct_byte           20    11 (fixed)
  4742                           ; jumptable            263     9 (fixed)
  4743                           ;	Chosen strategy is simple_byte
  4744  0AF8  3A0A               	xorlw	10	; case 10
  4745  0AF9  1903               	skipnz
  4746  0AFA  2AE0               	goto	l6869
  4747  0AFB  3A06               	xorlw	6	; case 12
  4748  0AFC  1903               	skipnz
  4749  0AFD  2AD3               	goto	l6865
  4750  0AFE  2AE4               	goto	l6871
  4751  0AFF  0008               	return
  4752  0B00                     __end_of_lcd_putc:	
  4753  0B00                     __ptext538:	
  4754 ;; =============== function _lcd_gotoxy ends ============
  4755                           
  4756                           
  4757 ;; *************** function _lcd_init *****************
  4758 ;; Defined at:
  4759 ;;		line 5 in file "C:\Users\DELL\Desktop\baitap_ttvxl\CCP\lcd(16).c"
  4760 ;; Parameters:    Size  Location     Type
  4761 ;;		None
  4762 ;; Auto vars:     Size  Location     Type
  4763 ;;  i               1    0        unsigned char 
  4764 ;; Return value:  Size  Location     Type
  4765 ;;		None               void
  4766 ;; Registers used:
  4767 ;;		wreg, status,2, status,0, pclath, cstack
  4768 ;; Tracked objects:
  4769 ;;		On entry : 17F/60
  4770 ;;		On exit  : 60/0
  4771 ;;		Unchanged: 0/0
  4772 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4773 ;;      Params:         0       0       0       0       0
  4774 ;;      Locals:         0       0       0       0       0
  4775 ;;      Temps:          3       0       0       0       0
  4776 ;;      Totals:         3       0       0       0       0
  4777 ;;Total ram usage:        3 bytes
  4778 ;; Hardware stack levels used:    1
  4779 ;; Hardware stack levels required when called:    2
  4780 ;; This function calls:
  4781 ;;		_lcd_put_byte
  4782 ;;		_lcd_busy
  4783 ;; This function is called by:
  4784 ;;		_main
  4785 ;; This function uses a non-reentrant model
  4786 ;;
  4787  0B00                     _lcd_init:	
  4788                           
  4789                           ;lcd(16).c: 6: unsigned char i;
  4790                           ;lcd(16).c: 7: TRISD3 = 0;
  4791                           
  4792                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
  4793  0B00  1303               	bcf	3,6	;RP1=0, select bank1
  4794  0B01  1188               	bcf	8,3
  4795                           
  4796                           ;lcd(16).c: 8: TRISD1 = 0;
  4797  0B02  1088               	bcf	8,1
  4798                           
  4799                           ;lcd(16).c: 9: TRISD2 = 0;
  4800  0B03  1108               	bcf	8,2
  4801                           
  4802                           ;lcd(16).c: 10: TRISD4 = 0;
  4803  0B04  1208               	bcf	8,4
  4804                           
  4805                           ;lcd(16).c: 11: TRISD5 = 0;
  4806  0B05  1288               	bcf	8,5
  4807                           
  4808                           ;lcd(16).c: 12: TRISD6 = 0;
  4809  0B06  1308               	bcf	8,6
  4810                           
  4811                           ;lcd(16).c: 13: TRISD7 = 0;
  4812  0B07  1388               	bcf	8,7
  4813                           
  4814                           ;lcd(16).c: 14: RD3 = 0;
  4815  0B08  1283               	bcf	3,5	;RP0=0, select bank0
  4816  0B09  3003               	movlw	3
  4817  0B0A  1188               	bcf	8,3
  4818                           
  4819                           ;lcd(16).c: 15: RD1 = 0;
  4820  0B0B  1088               	bcf	8,1
  4821                           
  4822                           ;lcd(16).c: 16: RD2 = 0;
  4823  0B0C  1108               	bcf	8,2
  4824                           
  4825                           ;lcd(16).c: 18: _delay((unsigned long)((100)*(20000000/4000.0)));
  4826  0B0D  00F9               	movwf	??_lcd_init+2
  4827  0B0E  308A               	movlw	138
  4828  0B0F  00F8               	movwf	??_lcd_init+1
  4829  0B10  3056               	movlw	86
  4830  0B11  00F7               	movwf	??_lcd_init
  4831  0B12                     u3977:	
  4832  0B12  0BF7               	decfsz	??_lcd_init,f
  4833  0B13  2B12               	goto	u3977
  4834  0B14  0BF8               	decfsz	??_lcd_init+1,f
  4835  0B15  2B12               	goto	u3977
  4836  0B16  0BF9               	decfsz	??_lcd_init+2,f
  4837  0B17  2B12               	goto	u3977
  4838  0B18  2B19               	nop2
  4839                           
  4840                           ;lcd(16).c: 21: lcd_put_byte(0,0x30);
  4841  0B19  3030               	movlw	48
  4842  0B1A  00F2               	movwf	?_lcd_put_byte
  4843  0B1B  3000               	movlw	0
  4844  0B1C  23BB  120A  158A   	fcall	_lcd_put_byte
  4845                           
  4846                           ;lcd(16).c: 22: _delay((unsigned long)((50)*(20000000/4000.0)));
  4847  0B1F  3002               	movlw	2
  4848  0B20  00F9               	movwf	??_lcd_init+2
  4849  0B21  3045               	movlw	69
  4850  0B22  00F8               	movwf	??_lcd_init+1
  4851  0B23  30A9               	movlw	169
  4852  0B24  00F7               	movwf	??_lcd_init
  4853  0B25                     u3987:	
  4854  0B25  0BF7               	decfsz	??_lcd_init,f
  4855  0B26  2B25               	goto	u3987
  4856  0B27  0BF8               	decfsz	??_lcd_init+1,f
  4857  0B28  2B25               	goto	u3987
  4858  0B29  0BF9               	decfsz	??_lcd_init+2,f
  4859  0B2A  2B25               	goto	u3987
  4860  0B2B  2B2C               	nop2
  4861                           
  4862                           ;lcd(16).c: 23: lcd_put_byte(0,0x30);
  4863  0B2C  3030               	movlw	48
  4864  0B2D  00F2               	movwf	?_lcd_put_byte
  4865  0B2E  3000               	movlw	0
  4866  0B2F  23BB  120A  158A   	fcall	_lcd_put_byte
  4867                           
  4868                           ;lcd(16).c: 24: _delay((unsigned long)((50)*(20000000/4000.0)));
  4869  0B32  3002               	movlw	2
  4870  0B33  00F9               	movwf	??_lcd_init+2
  4871  0B34  3045               	movlw	69
  4872  0B35  00F8               	movwf	??_lcd_init+1
  4873  0B36  30A9               	movlw	169
  4874  0B37  00F7               	movwf	??_lcd_init
  4875  0B38                     u3997:	
  4876  0B38  0BF7               	decfsz	??_lcd_init,f
  4877  0B39  2B38               	goto	u3997
  4878  0B3A  0BF8               	decfsz	??_lcd_init+1,f
  4879  0B3B  2B38               	goto	u3997
  4880  0B3C  0BF9               	decfsz	??_lcd_init+2,f
  4881  0B3D  2B38               	goto	u3997
  4882  0B3E  2B3F               	nop2
  4883                           
  4884                           ;lcd(16).c: 25: lcd_put_byte(0,0x32);
  4885  0B3F  3032               	movlw	50
  4886  0B40  00F2               	movwf	?_lcd_put_byte
  4887  0B41  3000               	movlw	0
  4888  0B42  23BB  120A  158A   	fcall	_lcd_put_byte
  4889                           
  4890                           ;lcd(16).c: 26: _delay((unsigned long)((100)*(20000000/4000.0)));
  4891  0B45  3003               	movlw	3
  4892  0B46  00F9               	movwf	??_lcd_init+2
  4893  0B47  308A               	movlw	138
  4894  0B48  00F8               	movwf	??_lcd_init+1
  4895  0B49  3056               	movlw	86
  4896  0B4A  00F7               	movwf	??_lcd_init
  4897  0B4B                     u4007:	
  4898  0B4B  0BF7               	decfsz	??_lcd_init,f
  4899  0B4C  2B4B               	goto	u4007
  4900  0B4D  0BF8               	decfsz	??_lcd_init+1,f
  4901  0B4E  2B4B               	goto	u4007
  4902  0B4F  0BF9               	decfsz	??_lcd_init+2,f
  4903  0B50  2B4B               	goto	u4007
  4904  0B51  2B52               	nop2
  4905                           
  4906                           ;lcd(16).c: 27: _delay((unsigned long)((100)*(20000000/4000.0)));
  4907  0B52  3003               	movlw	3
  4908  0B53  00F9               	movwf	??_lcd_init+2
  4909  0B54  308A               	movlw	138
  4910  0B55  00F8               	movwf	??_lcd_init+1
  4911  0B56  3056               	movlw	86
  4912  0B57  00F7               	movwf	??_lcd_init
  4913  0B58                     u4017:	
  4914  0B58  0BF7               	decfsz	??_lcd_init,f
  4915  0B59  2B58               	goto	u4017
  4916  0B5A  0BF8               	decfsz	??_lcd_init+1,f
  4917  0B5B  2B58               	goto	u4017
  4918  0B5C  0BF9               	decfsz	??_lcd_init+2,f
  4919  0B5D  2B58               	goto	u4017
  4920  0B5E  2B5F               	nop2
  4921                           
  4922                           ;lcd(16).c: 28: _delay((unsigned long)((100)*(20000000/4000.0)));
  4923  0B5F  3003               	movlw	3
  4924  0B60  00F9               	movwf	??_lcd_init+2
  4925  0B61  308A               	movlw	138
  4926  0B62  00F8               	movwf	??_lcd_init+1
  4927  0B63  3056               	movlw	86
  4928  0B64  00F7               	movwf	??_lcd_init
  4929  0B65                     u4027:	
  4930  0B65  0BF7               	decfsz	??_lcd_init,f
  4931  0B66  2B65               	goto	u4027
  4932  0B67  0BF8               	decfsz	??_lcd_init+1,f
  4933  0B68  2B65               	goto	u4027
  4934  0B69  0BF9               	decfsz	??_lcd_init+2,f
  4935  0B6A  2B65               	goto	u4027
  4936  0B6B  2B6C               	nop2
  4937  0B6C                     l6757:	
  4938                           ;lcd(16).c: 30: while(lcd_busy());
  4939                           
  4940  0B6C  244B  120A  158A   	fcall	_lcd_busy
  4941  0B6F  3800               	iorlw	0
  4942  0B70  1D03               	skipz
  4943  0B71  2B6C               	goto	l6757
  4944                           
  4945                           ;lcd(16).c: 31: lcd_put_byte(0,0b00101100 & 0b00111000);
  4946  0B72  3028               	movlw	40
  4947  0B73  00F2               	movwf	?_lcd_put_byte
  4948  0B74  3000               	movlw	0
  4949  0B75  23BB  120A  158A   	fcall	_lcd_put_byte
  4950  0B78                     l6761:	
  4951                           ;lcd(16).c: 32: while(lcd_busy());
  4952                           
  4953  0B78  244B  120A  158A   	fcall	_lcd_busy
  4954  0B7B  3800               	iorlw	0
  4955  0B7C  1D03               	skipz
  4956  0B7D  2B78               	goto	l6761
  4957                           
  4958                           ;lcd(16).c: 34: lcd_put_byte(0,0b00001011&0b00001101&0b00001110);
  4959  0B7E  3008               	movlw	8
  4960  0B7F  00F2               	movwf	?_lcd_put_byte
  4961  0B80  3000               	movlw	0
  4962  0B81  23BB  120A  158A   	fcall	_lcd_put_byte
  4963  0B84                     l6765:	
  4964                           ;lcd(16).c: 35: while(lcd_busy());
  4965                           
  4966  0B84  244B  120A  158A   	fcall	_lcd_busy
  4967  0B87  3800               	iorlw	0
  4968  0B88  1D03               	skipz
  4969  0B89  2B84               	goto	l6765
  4970                           
  4971                           ;lcd(16).c: 36: lcd_put_byte(0,0b00001111&0b00001101&0b00001110);
  4972  0B8A  300C               	movlw	12
  4973  0B8B  00F2               	movwf	?_lcd_put_byte
  4974  0B8C  3000               	movlw	0
  4975  0B8D  23BB  120A  158A   	fcall	_lcd_put_byte
  4976  0B90                     l6769:	
  4977                           ;lcd(16).c: 37: while(lcd_busy());
  4978                           
  4979  0B90  244B  120A  158A   	fcall	_lcd_busy
  4980  0B93  3800               	iorlw	0
  4981  0B94  1D03               	skipz
  4982  0B95  2B90               	goto	l6769
  4983  0B96  3000               	movlw	0
  4984                           
  4985                           ;lcd(16).c: 39: lcd_put_byte(0,0x01);
  4986  0B97  01F2               	clrf	?_lcd_put_byte
  4987  0B98  0AF2               	incf	?_lcd_put_byte,f
  4988  0B99  23BB  120A  158A   	fcall	_lcd_put_byte
  4989  0B9C                     l6773:	
  4990                           ;lcd(16).c: 40: while(lcd_busy());
  4991                           
  4992  0B9C  244B  120A  158A   	fcall	_lcd_busy
  4993  0B9F  3800               	iorlw	0
  4994  0BA0  1D03               	skipz
  4995  0BA1  2B9C               	goto	l6773
  4996                           
  4997                           ;lcd(16).c: 41: lcd_put_byte(0,0b00000100);
  4998  0BA2  3004               	movlw	4
  4999  0BA3  00F2               	movwf	?_lcd_put_byte
  5000  0BA4  3000               	movlw	0
  5001  0BA5  23BB  120A  158A   	fcall	_lcd_put_byte
  5002  0BA8                     l6777:	
  5003                           ;lcd(16).c: 42: while(lcd_busy());
  5004                           
  5005  0BA8  244B  120A  158A   	fcall	_lcd_busy
  5006  0BAB  3800               	iorlw	0
  5007  0BAC  1D03               	skipz
  5008  0BAD  2BA8               	goto	l6777
  5009  0BAE  3000               	movlw	0
  5010                           
  5011                           ;lcd(16).c: 43: lcd_put_byte(0,0x01);
  5012  0BAF  01F2               	clrf	?_lcd_put_byte
  5013  0BB0  0AF2               	incf	?_lcd_put_byte,f
  5014  0BB1  23BB  120A  158A   	fcall	_lcd_put_byte
  5015  0BB4                     l6781:	
  5016                           ;lcd(16).c: 44: while(lcd_busy());
  5017                           
  5018  0BB4  244B  120A  158A   	fcall	_lcd_busy
  5019  0BB7  3800               	iorlw	0
  5020  0BB8  1903               	btfsc	3,2
  5021  0BB9  0008               	return
  5022  0BBA  2BB4               	goto	l6781
  5023  0BBB                     __end_of_lcd_init:	
  5024  0BBB                     __ptext544:	
  5025 ;; =============== function _lcd_busy ends ============
  5026                           
  5027                           
  5028 ;; *************** function _lcd_put_byte *****************
  5029 ;; Defined at:
  5030 ;;		line 106 in file "C:\Users\DELL\Desktop\baitap_ttvxl\CCP\lcd(16).c"
  5031 ;; Parameters:    Size  Location     Type
  5032 ;;  rs              1    wreg     unsigned char 
  5033 ;;  b               1    2[COMMON] unsigned char 
  5034 ;; Auto vars:     Size  Location     Type
  5035 ;;  rs              1    5[COMMON] unsigned char 
  5036 ;;  temp            1    6[COMMON] struct _BYTE_VAL
  5037 ;; Return value:  Size  Location     Type
  5038 ;;		None               void
  5039 ;; Registers used:
  5040 ;;		wreg, status,2, status,0
  5041 ;; Tracked objects:
  5042 ;;		On entry : 0/20
  5043 ;;		On exit  : 60/0
  5044 ;;		Unchanged: 0/0
  5045 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5046 ;;      Params:         1       0       0       0       0
  5047 ;;      Locals:         2       0       0       0       0
  5048 ;;      Temps:          2       0       0       0       0
  5049 ;;      Totals:         5       0       0       0       0
  5050 ;;Total ram usage:        5 bytes
  5051 ;; Hardware stack levels used:    1
  5052 ;; Hardware stack levels required when called:    1
  5053 ;; This function calls:
  5054 ;;		Nothing
  5055 ;; This function is called by:
  5056 ;;		_lcd_init
  5057 ;;		_lcd_putc
  5058 ;;		_lcd_gotoxy
  5059 ;; This function uses a non-reentrant model
  5060 ;;
  5061  0BBB                     _lcd_put_byte:	
  5062                           
  5063                           ; Regs used in _lcd_put_byte: [wreg+status,2+status,0]
  5064                           ;lcd_put_byte@rs stored from wreg
  5065  0BBB  00F5               	movwf	lcd_put_byte@rs
  5066                           
  5067                           ;lcd(16).c: 107: BYTE_VAL temp;
  5068                           ;lcd(16).c: 109: TRISD4 = 0;
  5069  0BBC  1683               	bsf	3,5	;RP0=1, select bank1
  5070  0BBD  1303               	bcf	3,6	;RP1=0, select bank1
  5071  0BBE  1208               	bcf	8,4
  5072                           
  5073                           ;lcd(16).c: 110: TRISD5 = 0;
  5074  0BBF  1288               	bcf	8,5
  5075                           
  5076                           ;lcd(16).c: 111: TRISD6 = 0;
  5077  0BC0  1308               	bcf	8,6
  5078                           
  5079                           ;lcd(16).c: 112: TRISD7 = 0;
  5080  0BC1  1388               	bcf	8,7
  5081                           
  5082                           ;lcd(16).c: 114: RD1 = 0;
  5083  0BC2  1283               	bcf	3,5	;RP0=0, select bank0
  5084  0BC3  1088               	bcf	8,1
  5085                           
  5086                           ;lcd(16).c: 115: if(rs) RD1 = 1;
  5087  0BC4  0875               	movf	lcd_put_byte@rs,w
  5088  0BC5  1D03               	skipz
  5089  0BC6  1488               	bsf	8,1
  5090                           
  5091                           ;lcd(16).c: 117: _delay((unsigned long)((20)*(20000000/4000000.0)));
  5092  0BC7  3021               	movlw	33
  5093  0BC8  00F3               	movwf	??_lcd_put_byte
  5094  0BC9                     u4077:	
  5095  0BC9  0BF3               	decfsz	??_lcd_put_byte,f
  5096  0BCA  2BC9               	goto	u4077
  5097  0BCB  2487               	call	PL33	;select bank 0
  5098                           
  5099                           ;lcd(16).c: 118: RD2 = 0;
  5100  0BCC  3021               	movlw	33
  5101  0BCD  1108               	bcf	8,2
  5102                           
  5103                           ;lcd(16).c: 119: _delay((unsigned long)((20)*(20000000/4000000.0)));
  5104  0BCE  00F3               	movwf	??_lcd_put_byte
  5105  0BCF                     u4087:	
  5106  0BCF  0BF3               	decfsz	??_lcd_put_byte,f
  5107  0BD0  2BCF               	goto	u4087
  5108  0BD1  2487               	call	PL33	;select bank 0
  5109                           
  5110                           ;lcd(16).c: 120: RD3 = 0;
  5111  0BD2  1188               	bcf	8,3
  5112                           
  5113                           ;lcd(16).c: 122: temp.Val = b;
  5114  0BD3  0872               	movf	lcd_put_byte@b,w
  5115  0BD4  00F6               	movwf	lcd_put_byte@temp
  5116                           
  5117                           ;lcd(16).c: 125: RD4 = temp.bits.b4;
  5118  0BD5  0E76               	swapf	lcd_put_byte@temp,w
  5119  0BD6  3901               	andlw	1
  5120  0BD7  00F3               	movwf	??_lcd_put_byte
  5121  0BD8  0C73               	rrf	??_lcd_put_byte,w
  5122  0BD9  1C03               	btfss	3,0
  5123  0BDA  2BDE               	goto	u2760
  5124  0BDB  2487               	call	PL33	;select bank 0
  5125  0BDC  1608               	bsf	8,4
  5126  0BDD  2BE0               	goto	l6549
  5127  0BDE                     u2760:	
  5128  0BDE  2487               	call	PL33	;select bank 0
  5129  0BDF  1208               	bcf	8,4
  5130  0BE0                     l6549:	
  5131                           
  5132                           ;lcd(16).c: 126: RD5 = temp.bits.b5;
  5133  0BE0  0E76               	swapf	lcd_put_byte@temp,w
  5134  0BE1  00F3               	movwf	??_lcd_put_byte
  5135  0BE2  0C73               	rrf	??_lcd_put_byte,w
  5136  0BE3  3901               	andlw	1
  5137  0BE4  00F4               	movwf	??_lcd_put_byte+1
  5138  0BE5  0C74               	rrf	??_lcd_put_byte+1,w
  5139  0BE6  1C03               	btfss	3,0
  5140  0BE7  2BEB               	goto	u2780
  5141  0BE8  2487               	call	PL33	;select bank 0
  5142  0BE9  1688               	bsf	8,5
  5143  0BEA  2BED               	goto	l6551
  5144  0BEB                     u2780:	
  5145  0BEB  2487               	call	PL33	;select bank 0
  5146  0BEC  1288               	bcf	8,5
  5147  0BED                     l6551:	
  5148                           
  5149                           ;lcd(16).c: 127: RD6 = temp.bits.b6;
  5150  0BED  0E76               	swapf	lcd_put_byte@temp,w
  5151  0BEE  2480  120A  158A   	fcall	PL30	;call to abstracted procedure
  5152  0BF1  1C03               	btfss	3,0
  5153  0BF2  2BF6               	goto	u2800
  5154  0BF3  2487               	call	PL33	;select bank 0
  5155  0BF4  1708               	bsf	8,6
  5156  0BF5  2BF8               	goto	l6553
  5157  0BF6                     u2800:	
  5158  0BF6  2487               	call	PL33	;select bank 0
  5159  0BF7  1308               	bcf	8,6
  5160  0BF8                     l6553:	
  5161                           
  5162                           ;lcd(16).c: 128: RD7 = temp.bits.b7;
  5163  0BF8  0D76               	rlf	lcd_put_byte@temp,w
  5164  0BF9  0D76               	rlf	lcd_put_byte@temp,w
  5165  0BFA  3901               	andlw	1
  5166  0BFB  00F3               	movwf	??_lcd_put_byte
  5167  0BFC  0C73               	rrf	??_lcd_put_byte,w
  5168  0BFD  1C03               	btfss	3,0
  5169  0BFE  2C02               	goto	u2820
  5170  0BFF  2487               	call	PL33	;select bank 0
  5171  0C00  1788               	bsf	8,7
  5172  0C01  2C04               	goto	u2834
  5173  0C02                     u2820:	
  5174  0C02  2487               	call	PL33	;select bank 0
  5175  0C03  1388               	bcf	8,7
  5176  0C04                     u2834:	
  5177                           
  5178                           ;lcd(16).c: 129: _delay((unsigned long)((20)*(20000000/4000000.0)));
  5179  0C04  3021               	movlw	33
  5180  0C05  00F3               	movwf	??_lcd_put_byte
  5181  0C06                     u4097:	
  5182  0C06  0BF3               	decfsz	??_lcd_put_byte,f
  5183  0C07  2C06               	goto	u4097
  5184  0C08  2487               	call	PL33	;select bank 0
  5185                           
  5186                           ;lcd(16).c: 130: RD3 = 1;
  5187  0C09  3021               	movlw	33
  5188  0C0A  1588               	bsf	8,3
  5189                           
  5190                           ;lcd(16).c: 131: _delay((unsigned long)((20)*(20000000/4000000.0)));
  5191  0C0B  00F3               	movwf	??_lcd_put_byte
  5192  0C0C                     u4107:	
  5193  0C0C  0BF3               	decfsz	??_lcd_put_byte,f
  5194  0C0D  2C0C               	goto	u4107
  5195  0C0E  2487               	call	PL33	;select bank 0
  5196                           
  5197                           ;lcd(16).c: 132: RD3 = 0;
  5198  0C0F  1188               	bcf	8,3
  5199                           
  5200                           ;lcd(16).c: 134: RD4 = temp.bits.b0;
  5201  0C10  0876               	movf	lcd_put_byte@temp,w
  5202  0C11  3901               	andlw	1
  5203  0C12  00F3               	movwf	??_lcd_put_byte
  5204  0C13  0C73               	rrf	??_lcd_put_byte,w
  5205  0C14  1C03               	btfss	3,0
  5206  0C15  2C19               	goto	u2840
  5207  0C16  2487               	call	PL33	;select bank 0
  5208  0C17  1608               	bsf	8,4
  5209  0C18  2C1B               	goto	l6561
  5210  0C19                     u2840:	
  5211  0C19  2487               	call	PL33	;select bank 0
  5212  0C1A  1208               	bcf	8,4
  5213  0C1B                     l6561:	
  5214                           
  5215                           ;lcd(16).c: 135: RD5 = temp.bits.b1;
  5216  0C1B  0C76               	rrf	lcd_put_byte@temp,w
  5217  0C1C  3901               	andlw	1
  5218  0C1D  00F3               	movwf	??_lcd_put_byte
  5219  0C1E  0C73               	rrf	??_lcd_put_byte,w
  5220  0C1F  1C03               	btfss	3,0
  5221  0C20  2C24               	goto	u2860
  5222  0C21  2487               	call	PL33	;select bank 0
  5223  0C22  1688               	bsf	8,5
  5224  0C23  2C26               	goto	l6563
  5225  0C24                     u2860:	
  5226  0C24  2487               	call	PL33	;select bank 0
  5227  0C25  1288               	bcf	8,5
  5228  0C26                     l6563:	
  5229                           
  5230                           ;lcd(16).c: 136: RD6 = temp.bits.b2;
  5231  0C26  0C76               	rrf	lcd_put_byte@temp,w
  5232  0C27  00F3               	movwf	??_lcd_put_byte
  5233  0C28  0C73               	rrf	??_lcd_put_byte,w
  5234  0C29  3901               	andlw	1
  5235  0C2A  00F4               	movwf	??_lcd_put_byte+1
  5236  0C2B  0C74               	rrf	??_lcd_put_byte+1,w
  5237  0C2C  1C03               	btfss	3,0
  5238  0C2D  2C31               	goto	u2880
  5239  0C2E  2487               	call	PL33	;select bank 0
  5240  0C2F  1708               	bsf	8,6
  5241  0C30  2C33               	goto	l6565
  5242  0C31                     u2880:	
  5243  0C31  2487               	call	PL33	;select bank 0
  5244  0C32  1308               	bcf	8,6
  5245  0C33                     l6565:	
  5246                           
  5247                           ;lcd(16).c: 137: RD7 = temp.bits.b3;
  5248  0C33  0C76               	rrf	lcd_put_byte@temp,w
  5249  0C34  2480  120A  158A   	fcall	PL30	;call to abstracted procedure
  5250  0C37  1C03               	btfss	3,0
  5251  0C38  2C3C               	goto	u2900
  5252  0C39  2487               	call	PL33	;select bank 0
  5253  0C3A  1788               	bsf	8,7
  5254  0C3B  2C3E               	goto	u2914
  5255  0C3C                     u2900:	
  5256  0C3C  2487               	call	PL33	;select bank 0
  5257  0C3D  1388               	bcf	8,7
  5258  0C3E                     u2914:	
  5259                           
  5260                           ;lcd(16).c: 138: _delay((unsigned long)((20)*(20000000/4000000.0)));
  5261  0C3E  3021               	movlw	33
  5262  0C3F  00F3               	movwf	??_lcd_put_byte
  5263  0C40                     u4117:	
  5264  0C40  0BF3               	decfsz	??_lcd_put_byte,f
  5265  0C41  2C40               	goto	u4117
  5266  0C42  2487               	call	PL33	;select bank 0
  5267                           
  5268                           ;lcd(16).c: 139: RD3 = 1;
  5269  0C43  3021               	movlw	33
  5270  0C44  1588               	bsf	8,3
  5271                           
  5272                           ;lcd(16).c: 140: _delay((unsigned long)((20)*(20000000/4000000.0)));
  5273  0C45  00F3               	movwf	??_lcd_put_byte
  5274  0C46                     u4127:	
  5275  0C46  0BF3               	decfsz	??_lcd_put_byte,f
  5276  0C47  2C46               	goto	u4127
  5277  0C48  2487               	call	PL33	;select bank 0
  5278                           
  5279                           ;lcd(16).c: 141: RD3 = 0;
  5280  0C49  1188               	bcf	8,3
  5281  0C4A  0008               	return
  5282  0C4B                     __end_of_lcd_put_byte:	
  5283  0C4B                     __ptext543:	
  5284 ;; =============== function ___ftadd ends ============
  5285                           
  5286                           
  5287 ;; *************** function _lcd_busy *****************
  5288 ;; Defined at:
  5289 ;;		line 47 in file "C:\Users\DELL\Desktop\baitap_ttvxl\CCP\lcd(16).c"
  5290 ;; Parameters:    Size  Location     Type
  5291 ;;		None
  5292 ;; Auto vars:     Size  Location     Type
  5293 ;;  busy            1    3[COMMON] unsigned char 
  5294 ;; Return value:  Size  Location     Type
  5295 ;;                  1    wreg      unsigned char 
  5296 ;; Registers used:
  5297 ;;		wreg
  5298 ;; Tracked objects:
  5299 ;;		On entry : 0/0
  5300 ;;		On exit  : 60/0
  5301 ;;		Unchanged: 0/0
  5302 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5303 ;;      Params:         0       0       0       0       0
  5304 ;;      Locals:         1       0       0       0       0
  5305 ;;      Temps:          1       0       0       0       0
  5306 ;;      Totals:         2       0       0       0       0
  5307 ;;Total ram usage:        2 bytes
  5308 ;; Hardware stack levels used:    1
  5309 ;; Hardware stack levels required when called:    1
  5310 ;; This function calls:
  5311 ;;		Nothing
  5312 ;; This function is called by:
  5313 ;;		_lcd_init
  5314 ;;		_lcd_putc
  5315 ;;		_lcd_gotoxy
  5316 ;; This function uses a non-reentrant model
  5317 ;;
  5318  0C4B                     _lcd_busy:	
  5319                           
  5320                           ;lcd(16).c: 48: unsigned char busy;
  5321                           ;lcd(16).c: 50: TRISD4 = 1;
  5322                           
  5323                           ; Regs used in _lcd_busy: [wreg]
  5324  0C4B  1683               	bsf	3,5	;RP0=1, select bank1
  5325  0C4C  1303               	bcf	3,6	;RP1=0, select bank1
  5326  0C4D  1608               	bsf	8,4
  5327                           
  5328                           ;lcd(16).c: 51: TRISD5 = 1;
  5329  0C4E  1688               	bsf	8,5
  5330                           
  5331                           ;lcd(16).c: 52: TRISD6 = 1;
  5332  0C4F  1708               	bsf	8,6
  5333                           
  5334                           ;lcd(16).c: 53: TRISD7 = 1;
  5335  0C50  1788               	bsf	8,7
  5336                           
  5337                           ;lcd(16).c: 55: RD2 = 1;
  5338  0C51  1283               	bcf	3,5	;RP0=0, select bank0
  5339  0C52  3021               	movlw	33
  5340  0C53  1508               	bsf	8,2
  5341                           
  5342                           ;lcd(16).c: 56: RD1 = 0;
  5343  0C54  1088               	bcf	8,1
  5344                           
  5345                           ;lcd(16).c: 57: _delay((unsigned long)((20)*(20000000/4000000.0)));
  5346  0C55  00F2               	movwf	??_lcd_busy
  5347  0C56                     u4037:	
  5348  0C56  0BF2               	decfsz	??_lcd_busy,f
  5349  0C57  2C56               	goto	u4037
  5350  0C58  2487               	call	PL33	;select bank 0
  5351                           
  5352                           ;lcd(16).c: 58: RD3 = 1;
  5353  0C59  3021               	movlw	33
  5354  0C5A  1588               	bsf	8,3
  5355                           
  5356                           ;lcd(16).c: 59: _delay((unsigned long)((20)*(20000000/4000000.0)));
  5357  0C5B  00F2               	movwf	??_lcd_busy
  5358  0C5C                     u4047:	
  5359  0C5C  0BF2               	decfsz	??_lcd_busy,f
  5360  0C5D  2C5C               	goto	u4047
  5361                           
  5362                           ;lcd(16).c: 61: busy = RD7;
  5363  0C5E  3000               	movlw	0
  5364  0C5F  2487               	call	PL33	;select bank 0
  5365  0C60  1B88               	btfsc	8,7
  5366  0C61  3001               	movlw	1
  5367  0C62  00F3               	movwf	lcd_busy@busy
  5368  0C63  3021               	movlw	33
  5369                           
  5370                           ;lcd(16).c: 63: RD3 = 0;
  5371  0C64  1188               	bcf	8,3
  5372                           
  5373                           ;lcd(16).c: 64: _delay((unsigned long)((20)*(20000000/4000000.0)));
  5374  0C65  00F2               	movwf	??_lcd_busy
  5375  0C66                     u4057:	
  5376  0C66  0BF2               	decfsz	??_lcd_busy,f
  5377  0C67  2C66               	goto	u4057
  5378  0C68  2487               	call	PL33	;select bank 0
  5379                           
  5380                           ;lcd(16).c: 65: RD3 = 1;
  5381  0C69  3021               	movlw	33
  5382  0C6A  1588               	bsf	8,3
  5383                           
  5384                           ;lcd(16).c: 66: _delay((unsigned long)((20)*(20000000/4000000.0)));
  5385  0C6B  00F2               	movwf	??_lcd_busy
  5386  0C6C                     u4067:	
  5387  0C6C  0BF2               	decfsz	??_lcd_busy,f
  5388  0C6D  2C6C               	goto	u4067
  5389  0C6E  2487               	call	PL33	;select bank 0
  5390                           
  5391                           ;lcd(16).c: 67: RD3 = 0;
  5392  0C6F  1188               	bcf	8,3
  5393                           
  5394                           ;lcd(16).c: 70: return busy;
  5395  0C70  0873               	movf	lcd_busy@busy,w
  5396  0C71  0008               	return
  5397  0C72                     __end_of_lcd_busy:	
  5398  0C72                     __ptext561:	
  5399 ;; =============== function _abs ends ============
  5400                           
  5401                           
  5402 ;; *************** function _isprint *****************
  5403 ;; Defined at:
  5404 ;;		line 13 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\isprint.c"
  5405 ;; Parameters:    Size  Location     Type
  5406 ;;  c               1    wreg     unsigned char 
  5407 ;; Auto vars:     Size  Location     Type
  5408 ;;  c               1    3[COMMON] unsigned char 
  5409 ;; Return value:  Size  Location     Type
  5410 ;;		None               void
  5411 ;; Registers used:
  5412 ;;		wreg, status,2, status,0
  5413 ;; Tracked objects:
  5414 ;;		On entry : 0/20
  5415 ;;		On exit  : 0/20
  5416 ;;		Unchanged: FFFFF/0
  5417 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5418 ;;      Params:         0       0       0       0       0
  5419 ;;      Locals:         2       0       0       0       0
  5420 ;;      Temps:          0       0       0       0       0
  5421 ;;      Totals:         2       0       0       0       0
  5422 ;;Total ram usage:        2 bytes
  5423 ;; Hardware stack levels used:    1
  5424 ;; Hardware stack levels required when called:    1
  5425 ;; This function calls:
  5426 ;;		Nothing
  5427 ;; This function is called by:
  5428 ;;		_lcd_putc
  5429 ;; This function uses a non-reentrant model
  5430 ;;
  5431  0C72                     _isprint:	
  5432                           
  5433                           ; Regs used in _isprint: [wreg+status,2+status,0]
  5434                           ;isprint@c stored from wreg
  5435  0C72  00F3               	movwf	isprint@c
  5436  0C73  307F               	movlw	127
  5437  0C74  01F2               	clrf	_isprint$3678
  5438  0C75  0273               	subwf	isprint@c,w
  5439  0C76  1803               	skipnc
  5440  0C77  2C7E               	goto	l6113
  5441  0C78  3020               	movlw	32
  5442  0C79  0273               	subwf	isprint@c,w
  5443  0C7A  1C03               	skipc
  5444  0C7B  2C7E               	goto	l6113
  5445  0C7C  01F2               	clrf	_isprint$3678
  5446  0C7D  0AF2               	incf	_isprint$3678,f
  5447  0C7E                     l6113:	
  5448  0C7E  0C72               	rrf	_isprint$3678,w
  5449  0C7F  0008               	return
  5450  0C80                     __end_of_isprint:	
  5451  0C80                     PL30:	
  5452  0C80  00F3               	movwf	??_lcd_put_byte
  5453  0C81  0CF3               	rrf	??_lcd_put_byte,f
  5454  0C82  0C73               	rrf	??_lcd_put_byte,w
  5455  0C83  3901               	andlw	1
  5456  0C84  00F4               	movwf	??_lcd_put_byte+1
  5457  0C85  0C74               	rrf	??_lcd_put_byte+1,w
  5458  0C86  0008               	return
  5459  0C87                     PL33:	
  5460  0C87  1283               	bcf	3,5	;RP0=0, select bank0
  5461  0C88  1303               	bcf	3,6	;RP1=0, select bank0
  5462  0C89  0008               	return
  5463                           
  5464                           	psect	text539
  5465  0C8A                     __ptext539:	
  5466 ;; =============== function _lcd_init ends ============
  5467                           
  5468                           
  5469 ;; *************** function ___lltoft *****************
  5470 ;; Defined at:
  5471 ;;		line 36 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\lltoft.c"
  5472 ;; Parameters:    Size  Location     Type
  5473 ;;  c               4    0[BANK0 ] unsigned long 
  5474 ;; Auto vars:     Size  Location     Type
  5475 ;;  exp             1   10[COMMON] unsigned char 
  5476 ;; Return value:  Size  Location     Type
  5477 ;;                  3    0[BANK0 ] float 
  5478 ;; Registers used:
  5479 ;;		wreg, status,2, status,0, pclath, cstack
  5480 ;; Tracked objects:
  5481 ;;		On entry : 60/0
  5482 ;;		On exit  : 60/0
  5483 ;;		Unchanged: FFF9F/0
  5484 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5485 ;;      Params:         0       4       0       0       0
  5486 ;;      Locals:         1       0       0       0       0
  5487 ;;      Temps:          0       0       0       0       0
  5488 ;;      Totals:         1       4       0       0       0
  5489 ;;Total ram usage:        5 bytes
  5490 ;; Hardware stack levels used:    1
  5491 ;; Hardware stack levels required when called:    2
  5492 ;; This function calls:
  5493 ;;		___ftpack
  5494 ;; This function is called by:
  5495 ;;		_printf
  5496 ;; This function uses a non-reentrant model
  5497 ;;
  5498  0C8A                     ___lltoft:	
  5499                           
  5500                           ; Regs used in ___lltoft: [wreg+status,2+status,0+pclath+cstack]
  5501  0C8A  308E               	movlw	142
  5502  0C8B  00FA               	movwf	___lltoft@exp
  5503  0C8C                     l6739:	
  5504  0C8C  30FF               	movlw	255
  5505  0C8D  0523               	andwf	___lltoft@c+3,w
  5506  0C8E  1903               	btfsc	3,2
  5507  0C8F  2C97               	goto	l6741
  5508  0C90  1003               	clrc
  5509  0C91  0CA3               	rrf	___lltoft@c+3,f
  5510  0C92  0CA2               	rrf	___lltoft@c+2,f
  5511  0C93  0CA1               	rrf	___lltoft@c+1,f
  5512  0C94  0CA0               	rrf	___lltoft@c,f
  5513  0C95  0AFA               	incf	___lltoft@exp,f
  5514  0C96  2C8C               	goto	l6739
  5515  0C97                     l6741:	
  5516  0C97  0820               	movf	___lltoft@c,w
  5517  0C98  00F2               	movwf	?___ftpack
  5518  0C99  0821               	movf	___lltoft@c+1,w
  5519  0C9A  00F3               	movwf	?___ftpack+1
  5520  0C9B  0822               	movf	___lltoft@c+2,w
  5521  0C9C  00F4               	movwf	?___ftpack+2
  5522  0C9D  087A               	movf	___lltoft@exp,w
  5523  0C9E  00F5               	movwf	?___ftpack+3
  5524  0C9F  01F6               	clrf	?___ftpack+4
  5525  0CA0  2769               	fcall	___ftpack
  5526  0CA1  0872               	movf	?___ftpack,w
  5527  0CA2  00A0               	movwf	?___lltoft
  5528  0CA3  0873               	movf	?___ftpack+1,w
  5529  0CA4  00A1               	movwf	?___lltoft+1
  5530  0CA5  0874               	movf	?___ftpack+2,w
  5531  0CA6  00A2               	movwf	?___lltoft+2
  5532  0CA7  0008               	return
  5533  0CA8                     __end_of___lltoft:	
  5534  0CA8                     __ptext540:	
  5535 ;; =============== function ___lltoft ends ============
  5536                           
  5537                           
  5538 ;; *************** function ___altoft *****************
  5539 ;; Defined at:
  5540 ;;		line 43 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\altoft.c"
  5541 ;; Parameters:    Size  Location     Type
  5542 ;;  c               4    0[BANK0 ] long 
  5543 ;; Auto vars:     Size  Location     Type
  5544 ;;  sign            1   11[COMMON] unsigned char 
  5545 ;;  exp             1   10[COMMON] unsigned char 
  5546 ;; Return value:  Size  Location     Type
  5547 ;;                  3    0[BANK0 ] float 
  5548 ;; Registers used:
  5549 ;;		wreg, status,2, status,0, pclath, cstack
  5550 ;; Tracked objects:
  5551 ;;		On entry : 60/0
  5552 ;;		On exit  : 60/0
  5553 ;;		Unchanged: FFF9F/0
  5554 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5555 ;;      Params:         0       4       0       0       0
  5556 ;;      Locals:         2       0       0       0       0
  5557 ;;      Temps:          0       0       0       0       0
  5558 ;;      Totals:         2       4       0       0       0
  5559 ;;Total ram usage:        6 bytes
  5560 ;; Hardware stack levels used:    1
  5561 ;; Hardware stack levels required when called:    2
  5562 ;; This function calls:
  5563 ;;		___ftpack
  5564 ;; This function is called by:
  5565 ;;		_main
  5566 ;; This function uses a non-reentrant model
  5567 ;;
  5568  0CA8                     ___altoft:	
  5569  0CA8  308E               	movlw	142
  5570                           
  5571                           ; Regs used in ___altoft: [wreg+status,2+status,0+pclath+cstack]
  5572  0CA9  01FB               	clrf	___altoft@sign
  5573  0CAA  00FA               	movwf	___altoft@exp
  5574  0CAB  1FA3               	btfss	___altoft@c+3,7
  5575  0CAC  2CBA               	goto	l6729
  5576  0CAD  09A0               	comf	___altoft@c,f
  5577  0CAE  09A1               	comf	___altoft@c+1,f
  5578  0CAF  09A2               	comf	___altoft@c+2,f
  5579  0CB0  09A3               	comf	___altoft@c+3,f
  5580  0CB1  0AA0               	incf	___altoft@c,f
  5581  0CB2  1903               	skipnz
  5582  0CB3  0AA1               	incf	___altoft@c+1,f
  5583  0CB4  1903               	skipnz
  5584  0CB5  0AA2               	incf	___altoft@c+2,f
  5585  0CB6  1903               	skipnz
  5586  0CB7  0AA3               	incf	___altoft@c+3,f
  5587  0CB8  01FB               	clrf	___altoft@sign
  5588  0CB9  0AFB               	incf	___altoft@sign,f
  5589  0CBA                     l6729:	
  5590  0CBA  30FF               	movlw	255
  5591  0CBB  0523               	andwf	___altoft@c+3,w
  5592  0CBC  1903               	btfsc	3,2
  5593  0CBD  2CC5               	goto	l6731
  5594  0CBE  1003               	clrc
  5595  0CBF  0CA3               	rrf	___altoft@c+3,f
  5596  0CC0  0CA2               	rrf	___altoft@c+2,f
  5597  0CC1  0CA1               	rrf	___altoft@c+1,f
  5598  0CC2  0CA0               	rrf	___altoft@c,f
  5599  0CC3  0AFA               	incf	___altoft@exp,f
  5600  0CC4  2CBA               	goto	l6729
  5601  0CC5                     l6731:	
  5602  0CC5  0820               	movf	___altoft@c,w
  5603  0CC6  00F2               	movwf	?___ftpack
  5604  0CC7  0821               	movf	___altoft@c+1,w
  5605  0CC8  00F3               	movwf	?___ftpack+1
  5606  0CC9  0822               	movf	___altoft@c+2,w
  5607  0CCA  00F4               	movwf	?___ftpack+2
  5608  0CCB  087A               	movf	___altoft@exp,w
  5609  0CCC  00F5               	movwf	?___ftpack+3
  5610  0CCD  087B               	movf	___altoft@sign,w
  5611  0CCE  00F6               	movwf	?___ftpack+4
  5612  0CCF  2769               	fcall	___ftpack
  5613  0CD0  0872               	movf	?___ftpack,w
  5614  0CD1  00A0               	movwf	?___altoft
  5615  0CD2  0873               	movf	?___ftpack+1,w
  5616  0CD3  00A1               	movwf	?___altoft+1
  5617  0CD4  0874               	movf	?___ftpack+2,w
  5618  0CD5  00A2               	movwf	?___altoft+2
  5619  0CD6  0008               	return
  5620  0CD7                     __end_of___altoft:	
  5621  0CD7                     __ptext535:	
  5622 ;; =============== function ___ftsub ends ============
  5623                           
  5624                           
  5625 ;; *************** function _scale *****************
  5626 ;; Defined at:
  5627 ;;		line 422 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\lib\doprnt.c"
  5628 ;; Parameters:    Size  Location     Type
  5629 ;;  scl             1    wreg     char 
  5630 ;; Auto vars:     Size  Location     Type
  5631 ;;  scl             1   42[BANK0 ] char 
  5632 ;; Return value:  Size  Location     Type
  5633 ;;                  3   32[BANK0 ] char 
  5634 ;; Registers used:
  5635 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5636 ;; Tracked objects:
  5637 ;;		On entry : 60/20
  5638 ;;		On exit  : 60/0
  5639 ;;		Unchanged: FFF9F/0
  5640 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5641 ;;      Params:         0       3       0       0       0
  5642 ;;      Locals:         0       4       0       0       0
  5643 ;;      Temps:          0       4       0       0       0
  5644 ;;      Totals:         0      11       0       0       0
  5645 ;;Total ram usage:       11 bytes
  5646 ;; Hardware stack levels used:    1
  5647 ;; Hardware stack levels required when called:    3
  5648 ;; This function calls:
  5649 ;;		___awmod
  5650 ;;		___awdiv
  5651 ;;		___ftmul
  5652 ;;		___bmul
  5653 ;; This function is called by:
  5654 ;;		_printf
  5655 ;; This function uses a non-reentrant model
  5656 ;;
  5657  0CD7                     _scale:	
  5658                           
  5659                           ; Regs used in _scale: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5660                           ;scale@scl stored from wreg
  5661  0CD7  1283               	bcf	3,5	;RP0=0, select bank0
  5662  0CD8  00CA               	movwf	scale@scl
  5663  0CD9  1FCA               	btfss	scale@scl,7
  5664  0CDA  2DA3               	goto	l6839
  5665  0CDB  09CA               	comf	scale@scl,f
  5666  0CDC  0ACA               	incf	scale@scl,f
  5667  0CDD  084A               	movf	scale@scl,w
  5668  0CDE  3A80               	xorlw	128
  5669  0CDF  3E12               	addlw	-238
  5670  0CE0  1C03               	skipc
  5671  0CE1  2D47               	goto	l6829
  5672  0CE2  300A               	movlw	10
  5673  0CE3  27CB  120A  158A   	fcall	PL15	;call to abstracted procedure
  5674  0CE6  26AF  120A  158A   	fcall	___awmod
  5675  0CE9  0873               	movf	?___awmod+1,w
  5676  0CEA  00FB               	movwf	?___awdiv+3
  5677  0CEB  0872               	movf	?___awmod,w
  5678  0CEC  00FA               	movwf	?___awdiv+2
  5679  0CED  2669  120A  158A   	fcall	___awdiv
  5680  0CF0  27E0               	fcall	PL22	;call to abstracted procedure
  5681  0CF1  3E1C               	addlw	low ((__npowers_-__stringbase+27))
  5682  0CF2  0084               	movwf	4
  5683  0CF3  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5684  0CF8  00B1               	movwf	?___ftmul
  5685  0CF9  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5686  0CFE  00B2               	movwf	?___ftmul+1
  5687  0CFF  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5688  0D04  27E8  120A  158A   	fcall	PL23	;call to abstracted procedure
  5689  0D07  1BFA               	btfsc	?___awdiv+2,7
  5690  0D08  03FB               	decf	?___awdiv+3,f
  5691  0D09  2669  120A  158A   	fcall	___awdiv
  5692  0D0C  27AF               	fcall	PL9	;call to abstracted procedure
  5693  0D0D  3E37               	addlw	low ((__npowers_-__stringbase+54))
  5694  0D0E  0084               	movwf	4
  5695  0D0F  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5696  0D14  00B4               	movwf	?___ftmul+3
  5697  0D15  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5698  0D1A  00B5               	movwf	?___ftmul+4
  5699  0D1B  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5700  0D20  00B6               	movwf	?___ftmul+5
  5701  0D21  26EC  120A  158A   	fcall	___ftmul
  5702  0D24  27B7  120A  158A   	fcall	PL10	;call to abstracted procedure
  5703  0D27  1BF4               	btfsc	?___awmod+2,7
  5704  0D28  03F5               	decf	?___awmod+3,f
  5705  0D29  26AF  120A  158A   	fcall	___awmod
  5706  0D2C  27A7               	fcall	PL8	;call to abstracted procedure
  5707  0D2D  3E01               	addlw	low (__npowers_-__stringbase)
  5708  0D2E  0084               	movwf	4
  5709  0D2F  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5710  0D34  00B1               	movwf	?___ftmul
  5711  0D35  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5712  0D3A  00B2               	movwf	?___ftmul+1
  5713  0D3B  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5714  0D40  27F0  120A  158A   	fcall	PL25	;call to abstracted procedure
  5715  0D43  26EC  120A  158A   	fcall	___ftmul
  5716  0D46  2FC4               	ljmp	PL11	;call to abstracted procedure
  5717  0D47                     l6829:	
  5718  0D47  084A               	movf	scale@scl,w
  5719  0D48  3A80               	xorlw	128
  5720  0D49  3E75               	addlw	-139
  5721  0D4A  1C03               	skipc
  5722  0D4B  2D8C               	goto	l6835
  5723  0D4C  300A               	movlw	10
  5724  0D4D  00F2               	movwf	?___awmod
  5725  0D4E  01F3               	clrf	?___awmod+1
  5726  0D4F  084A               	movf	scale@scl,w
  5727  0D50  00F4               	movwf	?___awmod+2
  5728  0D51  01F5               	clrf	?___awmod+3
  5729  0D52  1BF4               	btfsc	?___awmod+2,7
  5730  0D53  03F5               	decf	?___awmod+3,f
  5731  0D54  26AF  120A  158A   	fcall	___awmod
  5732  0D57  27A7               	fcall	PL8	;call to abstracted procedure
  5733  0D58  3E01               	addlw	low (__npowers_-__stringbase)
  5734  0D59  0084               	movwf	4
  5735  0D5A  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5736  0D5F  00B1               	movwf	?___ftmul
  5737  0D60  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5738  0D65  00B2               	movwf	?___ftmul+1
  5739  0D66  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5740  0D6B  27F8  120A  158A   	fcall	PL26	;call to abstracted procedure
  5741  0D6E  1BFA               	btfsc	?___awdiv+2,7
  5742  0D6F  03FB               	decf	?___awdiv+3,f
  5743  0D70  2669  120A  158A   	fcall	___awdiv
  5744  0D73  27AF               	fcall	PL9	;call to abstracted procedure
  5745  0D74  3E1C               	addlw	low ((__npowers_-__stringbase+27))
  5746  0D75  0084               	movwf	4
  5747  0D76  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5748  0D7B  00B4               	movwf	?___ftmul+3
  5749  0D7C  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5750  0D81  00B5               	movwf	?___ftmul+4
  5751  0D82  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5752  0D87  00B6               	movwf	?___ftmul+5
  5753  0D88  26EC  120A  158A   	fcall	___ftmul
  5754  0D8B  2FC4               	ljmp	PL11	;call to abstracted procedure
  5755  0D8C                     l6835:	
  5756  0D8C  3003               	movlw	3
  5757  0D8D  00FB               	movwf	?___bmul
  5758  0D8E  084A               	movf	scale@scl,w
  5759  0D8F  275B               	fcall	___bmul
  5760  0D90  3E01               	addlw	low (__npowers_-__stringbase)
  5761  0D91  0084               	movwf	4
  5762  0D92  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5763  0D97  00C0               	movwf	?_scale
  5764  0D98  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5765  0D9D  00C1               	movwf	?_scale+1
  5766  0D9E  160A  118A  2000   	fcall	stringdir
  5767  0DA1  00C2               	movwf	?_scale+2
  5768  0DA2  0008               	return
  5769  0DA3                     l6839:	
  5770  0DA3  084A               	movf	scale@scl,w
  5771  0DA4  3A80               	xorlw	128
  5772  0DA5  3E12               	addlw	-238
  5773  0DA6  1C03               	skipc
  5774  0DA7  2E0D               	goto	l6847
  5775  0DA8  300A               	movlw	10
  5776  0DA9  27CB  120A  158A   	fcall	PL15	;call to abstracted procedure
  5777  0DAC  26AF  120A  158A   	fcall	___awmod
  5778  0DAF  0873               	movf	?___awmod+1,w
  5779  0DB0  00FB               	movwf	?___awdiv+3
  5780  0DB1  0872               	movf	?___awmod,w
  5781  0DB2  00FA               	movwf	?___awdiv+2
  5782  0DB3  2669  120A  158A   	fcall	___awdiv
  5783  0DB6  27E0               	fcall	PL22	;call to abstracted procedure
  5784  0DB7  3E43               	addlw	low ((__powers_-__stringbase+27))
  5785  0DB8  0084               	movwf	4
  5786  0DB9  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5787  0DBE  00B1               	movwf	?___ftmul
  5788  0DBF  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5789  0DC4  00B2               	movwf	?___ftmul+1
  5790  0DC5  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5791  0DCA  27E8  120A  158A   	fcall	PL23	;call to abstracted procedure
  5792  0DCD  1BFA               	btfsc	?___awdiv+2,7
  5793  0DCE  03FB               	decf	?___awdiv+3,f
  5794  0DCF  2669  120A  158A   	fcall	___awdiv
  5795  0DD2  27AF               	fcall	PL9	;call to abstracted procedure
  5796  0DD3  3E5E               	addlw	low ((__powers_-__stringbase+54))
  5797  0DD4  0084               	movwf	4
  5798  0DD5  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5799  0DDA  00B4               	movwf	?___ftmul+3
  5800  0DDB  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5801  0DE0  00B5               	movwf	?___ftmul+4
  5802  0DE1  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5803  0DE6  00B6               	movwf	?___ftmul+5
  5804  0DE7  26EC  120A  158A   	fcall	___ftmul
  5805  0DEA  27B7  120A  158A   	fcall	PL10	;call to abstracted procedure
  5806  0DED  1BF4               	btfsc	?___awmod+2,7
  5807  0DEE  03F5               	decf	?___awmod+3,f
  5808  0DEF  26AF  120A  158A   	fcall	___awmod
  5809  0DF2  27A7               	fcall	PL8	;call to abstracted procedure
  5810  0DF3  3E28               	addlw	low (__powers_-__stringbase)
  5811  0DF4  0084               	movwf	4
  5812  0DF5  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5813  0DFA  00B1               	movwf	?___ftmul
  5814  0DFB  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5815  0E00  00B2               	movwf	?___ftmul+1
  5816  0E01  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5817  0E06  27F0  120A  158A   	fcall	PL25	;call to abstracted procedure
  5818  0E09  26EC  120A  158A   	fcall	___ftmul
  5819  0E0C  2FC4               	ljmp	PL11	;call to abstracted procedure
  5820  0E0D                     l6847:	
  5821  0E0D  084A               	movf	scale@scl,w
  5822  0E0E  3A80               	xorlw	128
  5823  0E0F  3E75               	addlw	-139
  5824  0E10  1C03               	skipc
  5825  0E11  2E52               	goto	l6853
  5826  0E12  300A               	movlw	10
  5827  0E13  00F2               	movwf	?___awmod
  5828  0E14  01F3               	clrf	?___awmod+1
  5829  0E15  084A               	movf	scale@scl,w
  5830  0E16  00F4               	movwf	?___awmod+2
  5831  0E17  01F5               	clrf	?___awmod+3
  5832  0E18  1BF4               	btfsc	?___awmod+2,7
  5833  0E19  03F5               	decf	?___awmod+3,f
  5834  0E1A  26AF  120A  158A   	fcall	___awmod
  5835  0E1D  27A7               	fcall	PL8	;call to abstracted procedure
  5836  0E1E  3E28               	addlw	low (__powers_-__stringbase)
  5837  0E1F  0084               	movwf	4
  5838  0E20  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5839  0E25  00B1               	movwf	?___ftmul
  5840  0E26  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5841  0E2B  00B2               	movwf	?___ftmul+1
  5842  0E2C  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5843  0E31  27F8  120A  158A   	fcall	PL26	;call to abstracted procedure
  5844  0E34  1BFA               	btfsc	?___awdiv+2,7
  5845  0E35  03FB               	decf	?___awdiv+3,f
  5846  0E36  2669  120A  158A   	fcall	___awdiv
  5847  0E39  27AF               	fcall	PL9	;call to abstracted procedure
  5848  0E3A  3E43               	addlw	low ((__powers_-__stringbase+27))
  5849  0E3B  0084               	movwf	4
  5850  0E3C  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5851  0E41  00B4               	movwf	?___ftmul+3
  5852  0E42  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5853  0E47  00B5               	movwf	?___ftmul+4
  5854  0E48  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5855  0E4D  00B6               	movwf	?___ftmul+5
  5856  0E4E  26EC  120A  158A   	fcall	___ftmul
  5857  0E51  2FC4               	ljmp	PL11	;call to abstracted procedure
  5858  0E52                     l6853:	
  5859  0E52  3003               	movlw	3
  5860  0E53  00FB               	movwf	?___bmul
  5861  0E54  084A               	movf	scale@scl,w
  5862  0E55  275B               	fcall	___bmul
  5863  0E56  3E28               	addlw	low (__powers_-__stringbase)
  5864  0E57  0084               	movwf	4
  5865  0E58  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5866  0E5D  00C0               	movwf	?_scale
  5867  0E5E  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5868  0E63  00C1               	movwf	?_scale+1
  5869  0E64  160A  118A  2000   	fcall	stringdir
  5870  0E67  00C2               	movwf	?_scale+2
  5871  0E68  0008               	return
  5872  0E69                     __end_of_scale:	
  5873  0E69                     __ptext550:	
  5874 ;; =============== function ___llmod ends ============
  5875                           
  5876                           
  5877 ;; *************** function ___awdiv *****************
  5878 ;; Defined at:
  5879 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\awdiv.c"
  5880 ;; Parameters:    Size  Location     Type
  5881 ;;  divisor         2    8[COMMON] int 
  5882 ;;  dividend        2   10[COMMON] int 
  5883 ;; Auto vars:     Size  Location     Type
  5884 ;;  quotient        2    2[BANK0 ] int 
  5885 ;;  sign            1    1[BANK0 ] unsigned char 
  5886 ;;  counter         1    0[BANK0 ] unsigned char 
  5887 ;; Return value:  Size  Location     Type
  5888 ;;                  2    8[COMMON] int 
  5889 ;; Registers used:
  5890 ;;		wreg, status,2, status,0
  5891 ;; Tracked objects:
  5892 ;;		On entry : 40/20
  5893 ;;		On exit  : 60/0
  5894 ;;		Unchanged: FFF9F/0
  5895 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5896 ;;      Params:         4       0       0       0       0
  5897 ;;      Locals:         0       4       0       0       0
  5898 ;;      Temps:          0       0       0       0       0
  5899 ;;      Totals:         4       4       0       0       0
  5900 ;;Total ram usage:        8 bytes
  5901 ;; Hardware stack levels used:    1
  5902 ;; Hardware stack levels required when called:    1
  5903 ;; This function calls:
  5904 ;;		Nothing
  5905 ;; This function is called by:
  5906 ;;		_scale
  5907 ;;		_printf
  5908 ;; This function uses a non-reentrant model
  5909 ;;
  5910  0E69                     ___awdiv:	
  5911                           
  5912                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  5913  0E69  1283               	bcf	3,5	;RP0=0, select bank0
  5914  0E6A  01A1               	clrf	___awdiv@sign
  5915  0E6B  1FF9               	btfss	___awdiv@divisor+1,7
  5916  0E6C  2E74               	goto	l6389
  5917  0E6D  09F8               	comf	___awdiv@divisor,f
  5918  0E6E  09F9               	comf	___awdiv@divisor+1,f
  5919  0E6F  0AF8               	incf	___awdiv@divisor,f
  5920  0E70  1903               	skipnz
  5921  0E71  0AF9               	incf	___awdiv@divisor+1,f
  5922  0E72  01A1               	clrf	___awdiv@sign
  5923  0E73  0AA1               	incf	___awdiv@sign,f
  5924  0E74                     l6389:	
  5925  0E74  1FFB               	btfss	___awdiv@dividend+1,7
  5926  0E75  2E7D               	goto	l6395
  5927  0E76  09FA               	comf	___awdiv@dividend,f
  5928  0E77  09FB               	comf	___awdiv@dividend+1,f
  5929  0E78  0AFA               	incf	___awdiv@dividend,f
  5930  0E79  1903               	skipnz
  5931  0E7A  0AFB               	incf	___awdiv@dividend+1,f
  5932  0E7B  3001               	movlw	1
  5933  0E7C  06A1               	xorwf	___awdiv@sign,f
  5934  0E7D                     l6395:	
  5935  0E7D  01A2               	clrf	___awdiv@quotient
  5936  0E7E  01A3               	clrf	___awdiv@quotient+1
  5937  0E7F  0879               	movf	___awdiv@divisor+1,w
  5938  0E80  0478               	iorwf	___awdiv@divisor,w
  5939  0E81  1903               	skipnz
  5940  0E82  2EA2               	goto	l6417
  5941  0E83  01A0               	clrf	___awdiv@counter
  5942  0E84                     L15:	
  5943  0E84  0AA0               	incf	___awdiv@counter,f
  5944  0E85  1BF9               	btfsc	___awdiv@divisor+1,7
  5945  0E86  2E8B               	goto	l6405
  5946  0E87  1003               	clrc
  5947  0E88  0DF8               	rlf	___awdiv@divisor,f
  5948  0E89  0DF9               	rlf	___awdiv@divisor+1,f
  5949  0E8A  2E84               	goto	L15
  5950  0E8B                     l6405:	
  5951  0E8B  1003               	clrc
  5952  0E8C  0DA2               	rlf	___awdiv@quotient,f
  5953  0E8D  0DA3               	rlf	___awdiv@quotient+1,f
  5954  0E8E  0879               	movf	___awdiv@divisor+1,w
  5955  0E8F  027B               	subwf	___awdiv@dividend+1,w
  5956  0E90  1D03               	skipz
  5957  0E91  2E94               	goto	u2535
  5958  0E92  0878               	movf	___awdiv@divisor,w
  5959  0E93  027A               	subwf	___awdiv@dividend,w
  5960  0E94                     u2535:	
  5961  0E94  1C03               	skipc
  5962  0E95  2E9E               	goto	L16
  5963  0E96  0878               	movf	___awdiv@divisor,w
  5964  0E97  02FA               	subwf	___awdiv@dividend,f
  5965  0E98  0879               	movf	___awdiv@divisor+1,w
  5966  0E99  1C03               	skipc
  5967  0E9A  03FB               	decf	___awdiv@dividend+1,f
  5968  0E9B  02FB               	subwf	___awdiv@dividend+1,f
  5969  0E9C  1422               	bsf	___awdiv@quotient,0
  5970  0E9D  1003               	clrc
  5971  0E9E                     L16:	
  5972  0E9E  0CF9               	rrf	___awdiv@divisor+1,f
  5973  0E9F  0CF8               	rrf	___awdiv@divisor,f
  5974  0EA0  0BA0               	decfsz	___awdiv@counter,f
  5975  0EA1  2E8B               	goto	l6405
  5976  0EA2                     l6417:	
  5977  0EA2  0821               	movf	___awdiv@sign,w
  5978  0EA3  1903               	btfsc	3,2
  5979  0EA4  2EAA               	goto	l6421
  5980  0EA5  09A2               	comf	___awdiv@quotient,f
  5981  0EA6  09A3               	comf	___awdiv@quotient+1,f
  5982  0EA7  0AA2               	incf	___awdiv@quotient,f
  5983  0EA8  1903               	skipnz
  5984  0EA9  0AA3               	incf	___awdiv@quotient+1,f
  5985  0EAA                     l6421:	
  5986  0EAA  0823               	movf	___awdiv@quotient+1,w
  5987  0EAB  00F9               	movwf	?___awdiv+1
  5988  0EAC  0822               	movf	___awdiv@quotient,w
  5989  0EAD  00F8               	movwf	?___awdiv
  5990  0EAE  0008               	return
  5991  0EAF                     __end_of___awdiv:	
  5992  0EAF                     __ptext545:	
  5993 ;; =============== function _lcd_put_byte ends ============
  5994                           
  5995                           
  5996 ;; *************** function ___awmod *****************
  5997 ;; Defined at:
  5998 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\awmod.c"
  5999 ;; Parameters:    Size  Location     Type
  6000 ;;  divisor         2    2[COMMON] int 
  6001 ;;  dividend        2    4[COMMON] int 
  6002 ;; Auto vars:     Size  Location     Type
  6003 ;;  sign            1    7[COMMON] unsigned char 
  6004 ;;  counter         1    6[COMMON] unsigned char 
  6005 ;; Return value:  Size  Location     Type
  6006 ;;                  2    2[COMMON] int 
  6007 ;; Registers used:
  6008 ;;		wreg, status,2, status,0
  6009 ;; Tracked objects:
  6010 ;;		On entry : 60/0
  6011 ;;		On exit  : 60/0
  6012 ;;		Unchanged: FFF9F/0
  6013 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6014 ;;      Params:         4       0       0       0       0
  6015 ;;      Locals:         2       0       0       0       0
  6016 ;;      Temps:          0       0       0       0       0
  6017 ;;      Totals:         6       0       0       0       0
  6018 ;;Total ram usage:        6 bytes
  6019 ;; Hardware stack levels used:    1
  6020 ;; Hardware stack levels required when called:    1
  6021 ;; This function calls:
  6022 ;;		Nothing
  6023 ;; This function is called by:
  6024 ;;		_scale
  6025 ;; This function uses a non-reentrant model
  6026 ;;
  6027  0EAF                     ___awmod:	
  6028                           
  6029                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  6030  0EAF  01F7               	clrf	___awmod@sign
  6031  0EB0  1FF5               	btfss	___awmod@dividend+1,7
  6032  0EB1  2EB9               	goto	l6507
  6033  0EB2  09F4               	comf	___awmod@dividend,f
  6034  0EB3  09F5               	comf	___awmod@dividend+1,f
  6035  0EB4  0AF4               	incf	___awmod@dividend,f
  6036  0EB5  1903               	skipnz
  6037  0EB6  0AF5               	incf	___awmod@dividend+1,f
  6038  0EB7  01F7               	clrf	___awmod@sign
  6039  0EB8  0AF7               	incf	___awmod@sign,f
  6040  0EB9                     l6507:	
  6041  0EB9  1FF3               	btfss	___awmod@divisor+1,7
  6042  0EBA  2EC0               	goto	l6511
  6043  0EBB  09F2               	comf	___awmod@divisor,f
  6044  0EBC  09F3               	comf	___awmod@divisor+1,f
  6045  0EBD  0AF2               	incf	___awmod@divisor,f
  6046  0EBE  1903               	skipnz
  6047  0EBF  0AF3               	incf	___awmod@divisor+1,f
  6048  0EC0                     l6511:	
  6049  0EC0  0873               	movf	___awmod@divisor+1,w
  6050  0EC1  0472               	iorwf	___awmod@divisor,w
  6051  0EC2  1903               	skipnz
  6052  0EC3  2EDF               	goto	l6527
  6053  0EC4  01F6               	clrf	___awmod@counter
  6054  0EC5                     L8:	
  6055  0EC5  0AF6               	incf	___awmod@counter,f
  6056  0EC6  1BF3               	btfsc	___awmod@divisor+1,7
  6057  0EC7  2ECC               	goto	l6519
  6058  0EC8  1003               	clrc
  6059  0EC9  0DF2               	rlf	___awmod@divisor,f
  6060  0ECA  0DF3               	rlf	___awmod@divisor+1,f
  6061  0ECB  2EC5               	goto	L8
  6062  0ECC                     l6519:	
  6063  0ECC  0873               	movf	___awmod@divisor+1,w
  6064  0ECD  0275               	subwf	___awmod@dividend+1,w
  6065  0ECE  1D03               	skipz
  6066  0ECF  2ED2               	goto	u2725
  6067  0ED0  0872               	movf	___awmod@divisor,w
  6068  0ED1  0274               	subwf	___awmod@dividend,w
  6069  0ED2                     u2725:	
  6070  0ED2  1C03               	skipc
  6071  0ED3  2EDB               	goto	L9
  6072  0ED4  0872               	movf	___awmod@divisor,w
  6073  0ED5  02F4               	subwf	___awmod@dividend,f
  6074  0ED6  0873               	movf	___awmod@divisor+1,w
  6075  0ED7  1C03               	skipc
  6076  0ED8  03F5               	decf	___awmod@dividend+1,f
  6077  0ED9  02F5               	subwf	___awmod@dividend+1,f
  6078  0EDA  1003               	clrc
  6079  0EDB                     L9:	
  6080  0EDB  0CF3               	rrf	___awmod@divisor+1,f
  6081  0EDC  0CF2               	rrf	___awmod@divisor,f
  6082  0EDD  0BF6               	decfsz	___awmod@counter,f
  6083  0EDE  2ECC               	goto	l6519
  6084  0EDF                     l6527:	
  6085  0EDF  0877               	movf	___awmod@sign,w
  6086  0EE0  1903               	btfsc	3,2
  6087  0EE1  2EE7               	goto	l6531
  6088  0EE2  09F4               	comf	___awmod@dividend,f
  6089  0EE3  09F5               	comf	___awmod@dividend+1,f
  6090  0EE4  0AF4               	incf	___awmod@dividend,f
  6091  0EE5  1903               	skipnz
  6092  0EE6  0AF5               	incf	___awmod@dividend+1,f
  6093  0EE7                     l6531:	
  6094  0EE7  0875               	movf	___awmod@dividend+1,w
  6095  0EE8  00F3               	movwf	?___awmod+1
  6096  0EE9  0874               	movf	___awmod@dividend,w
  6097  0EEA  00F2               	movwf	?___awmod
  6098  0EEB  0008               	return
  6099  0EEC                     __end_of___awmod:	
  6100  0EEC                     __ptext541:	
  6101 ;; =============== function ___altoft ends ============
  6102                           
  6103                           
  6104 ;; *************** function ___ftmul *****************
  6105 ;; Defined at:
  6106 ;;		line 52 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\ftmul.c"
  6107 ;; Parameters:    Size  Location     Type
  6108 ;;  f1              3   17[BANK0 ] float 
  6109 ;;  f2              3   20[BANK0 ] float 
  6110 ;; Auto vars:     Size  Location     Type
  6111 ;;  f3_as_produc    3   27[BANK0 ] unsigned um
  6112 ;;  sign            1   31[BANK0 ] unsigned char 
  6113 ;;  cntr            1   30[BANK0 ] unsigned char 
  6114 ;;  exp             1   26[BANK0 ] unsigned char 
  6115 ;; Return value:  Size  Location     Type
  6116 ;;                  3   17[BANK0 ] float 
  6117 ;; Registers used:
  6118 ;;		wreg, status,2, status,0, pclath, cstack
  6119 ;; Tracked objects:
  6120 ;;		On entry : 60/0
  6121 ;;		On exit  : 60/0
  6122 ;;		Unchanged: FFF9F/0
  6123 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6124 ;;      Params:         0       6       0       0       0
  6125 ;;      Locals:         0       6       0       0       0
  6126 ;;      Temps:          0       3       0       0       0
  6127 ;;      Totals:         0      15       0       0       0
  6128 ;;Total ram usage:       15 bytes
  6129 ;; Hardware stack levels used:    1
  6130 ;; Hardware stack levels required when called:    2
  6131 ;; This function calls:
  6132 ;;		___ftpack
  6133 ;; This function is called by:
  6134 ;;		_main
  6135 ;;		_fround
  6136 ;;		_scale
  6137 ;;		_printf
  6138 ;; This function uses a non-reentrant model
  6139 ;;
  6140  0EEC                     ___ftmul:	
  6141                           
  6142                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  6143  0EEC  0831               	movf	___ftmul@f1,w
  6144  0EED  00B7               	movwf	??___ftmul
  6145  0EEE  0832               	movf	___ftmul@f1+1,w
  6146  0EEF  00B8               	movwf	??___ftmul+1
  6147  0EF0  0833               	movf	___ftmul@f1+2,w
  6148  0EF1  00B9               	movwf	??___ftmul+2
  6149  0EF2  1003               	clrc
  6150  0EF3  0D38               	rlf	??___ftmul+1,w
  6151  0EF4  0D39               	rlf	??___ftmul+2,w
  6152  0EF5  00BA               	movwf	___ftmul@exp
  6153  0EF6  08BA               	movf	___ftmul@exp,f
  6154  0EF7  1D03               	skipz
  6155  0EF8  2EFD               	goto	l6669
  6156  0EF9  01B1               	clrf	?___ftmul
  6157  0EFA  01B2               	clrf	?___ftmul+1
  6158  0EFB  01B3               	clrf	?___ftmul+2
  6159  0EFC  0008               	return
  6160  0EFD                     l6669:	
  6161  0EFD  0834               	movf	___ftmul@f2,w
  6162  0EFE  00B7               	movwf	??___ftmul
  6163  0EFF  0835               	movf	___ftmul@f2+1,w
  6164  0F00  00B8               	movwf	??___ftmul+1
  6165  0F01  0836               	movf	___ftmul@f2+2,w
  6166  0F02  00B9               	movwf	??___ftmul+2
  6167  0F03  1003               	clrc
  6168  0F04  0D38               	rlf	??___ftmul+1,w
  6169  0F05  0D39               	rlf	??___ftmul+2,w
  6170  0F06  00BF               	movwf	___ftmul@sign
  6171  0F07  08BF               	movf	___ftmul@sign,f
  6172  0F08  1D03               	skipz
  6173  0F09  2F0E               	goto	l6675
  6174  0F0A  01B1               	clrf	?___ftmul
  6175  0F0B  01B2               	clrf	?___ftmul+1
  6176  0F0C  01B3               	clrf	?___ftmul+2
  6177  0F0D  0008               	return
  6178  0F0E                     l6675:	
  6179  0F0E  083F               	movf	___ftmul@sign,w
  6180  0F0F  3E7B               	addlw	123
  6181  0F10  07BA               	addwf	___ftmul@exp,f
  6182  0F11  0833               	movf	___ftmul@f1+2,w
  6183  0F12  00BF               	movwf	___ftmul@sign
  6184  0F13  0836               	movf	___ftmul@f2+2,w
  6185  0F14  06BF               	xorwf	___ftmul@sign,f
  6186  0F15  3080               	movlw	128
  6187  0F16  05BF               	andwf	___ftmul@sign,f
  6188  0F17  3007               	movlw	7
  6189  0F18  17B2               	bsf	___ftmul@f1+1,7
  6190  0F19  17B5               	bsf	___ftmul@f2+1,7
  6191  0F1A  01B6               	clrf	___ftmul@f2+2
  6192  0F1B  01BB               	clrf	___ftmul@f3_as_product
  6193  0F1C  01BC               	clrf	___ftmul@f3_as_product+1
  6194  0F1D  01BD               	clrf	___ftmul@f3_as_product+2
  6195  0F1E  00BE               	movwf	___ftmul@cntr
  6196  0F1F                     l6693:	
  6197  0F1F  1C31               	btfss	___ftmul@f1,0
  6198  0F20  2F29               	goto	l6697
  6199  0F21  0834               	movf	___ftmul@f2,w
  6200  0F22  27D6  120A  158A   	fcall	PL19	;call to abstracted procedure
  6201  0F25  1803               	skipnc
  6202  0F26  0A36               	incf	___ftmul@f2+2,w
  6203  0F27  1D03               	btfss	3,2
  6204  0F28  07BD               	addwf	___ftmul@f3_as_product+2,f
  6205  0F29                     l6697:	
  6206  0F29  1003               	clrc
  6207  0F2A  0CB3               	rrf	___ftmul@f1+2,f
  6208  0F2B  0CB2               	rrf	___ftmul@f1+1,f
  6209  0F2C  0CB1               	rrf	___ftmul@f1,f
  6210  0F2D  1003               	clrc
  6211  0F2E  0DB4               	rlf	___ftmul@f2,f
  6212  0F2F  0DB5               	rlf	___ftmul@f2+1,f
  6213  0F30  0DB6               	rlf	___ftmul@f2+2,f
  6214  0F31  0BBE               	decfsz	___ftmul@cntr,f
  6215  0F32  2F1F               	goto	l6693
  6216  0F33  3009               	movlw	9
  6217  0F34  00BE               	movwf	___ftmul@cntr
  6218  0F35                     l6705:	
  6219  0F35  1C31               	btfss	___ftmul@f1,0
  6220  0F36  2F3F               	goto	l6709
  6221  0F37  0834               	movf	___ftmul@f2,w
  6222  0F38  27D6  120A  158A   	fcall	PL19	;call to abstracted procedure
  6223  0F3B  1803               	skipnc
  6224  0F3C  0A36               	incf	___ftmul@f2+2,w
  6225  0F3D  1D03               	btfss	3,2
  6226  0F3E  07BD               	addwf	___ftmul@f3_as_product+2,f
  6227  0F3F                     l6709:	
  6228  0F3F  1003               	clrc
  6229  0F40  0CB3               	rrf	___ftmul@f1+2,f
  6230  0F41  0CB2               	rrf	___ftmul@f1+1,f
  6231  0F42  0CB1               	rrf	___ftmul@f1,f
  6232  0F43  1003               	clrc
  6233  0F44  0CBD               	rrf	___ftmul@f3_as_product+2,f
  6234  0F45  0CBC               	rrf	___ftmul@f3_as_product+1,f
  6235  0F46  0CBB               	rrf	___ftmul@f3_as_product,f
  6236  0F47  0BBE               	decfsz	___ftmul@cntr,f
  6237  0F48  2F35               	goto	l6705
  6238  0F49  083B               	movf	___ftmul@f3_as_product,w
  6239  0F4A  00F2               	movwf	?___ftpack
  6240  0F4B  083C               	movf	___ftmul@f3_as_product+1,w
  6241  0F4C  00F3               	movwf	?___ftpack+1
  6242  0F4D  083D               	movf	___ftmul@f3_as_product+2,w
  6243  0F4E  00F4               	movwf	?___ftpack+2
  6244  0F4F  083A               	movf	___ftmul@exp,w
  6245  0F50  00F5               	movwf	?___ftpack+3
  6246  0F51  083F               	movf	___ftmul@sign,w
  6247  0F52  00F6               	movwf	?___ftpack+4
  6248  0F53  2769               	fcall	___ftpack
  6249  0F54  0872               	movf	?___ftpack,w
  6250  0F55  00B1               	movwf	?___ftmul
  6251  0F56  0873               	movf	?___ftpack+1,w
  6252  0F57  00B2               	movwf	?___ftmul+1
  6253  0F58  0874               	movf	?___ftpack+2,w
  6254  0F59  00B3               	movwf	?___ftmul+2
  6255  0F5A  0008               	return
  6256  0F5B                     __end_of___ftmul:	
  6257  0F5B                     __ptext556:	
  6258 ;; =============== function ___wmul ends ============
  6259                           
  6260                           
  6261 ;; *************** function ___bmul *****************
  6262 ;; Defined at:
  6263 ;;		line 3 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\bmul.c"
  6264 ;; Parameters:    Size  Location     Type
  6265 ;;  multiplier      1    wreg     unsigned char 
  6266 ;;  multiplicand    1   11[COMMON] unsigned char 
  6267 ;; Auto vars:     Size  Location     Type
  6268 ;;  multiplier      1    1[BANK0 ] unsigned char 
  6269 ;;  product         1    0[BANK0 ] unsigned char 
  6270 ;; Return value:  Size  Location     Type
  6271 ;;                  1    wreg      unsigned char 
  6272 ;; Registers used:
  6273 ;;		wreg, status,2, status,0
  6274 ;; Tracked objects:
  6275 ;;		On entry : 60/0
  6276 ;;		On exit  : 60/0
  6277 ;;		Unchanged: FFF9F/0
  6278 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6279 ;;      Params:         1       0       0       0       0
  6280 ;;      Locals:         0       2       0       0       0
  6281 ;;      Temps:          0       0       0       0       0
  6282 ;;      Totals:         1       2       0       0       0
  6283 ;;Total ram usage:        3 bytes
  6284 ;; Hardware stack levels used:    1
  6285 ;; Hardware stack levels required when called:    1
  6286 ;; This function calls:
  6287 ;;		Nothing
  6288 ;; This function is called by:
  6289 ;;		_fround
  6290 ;;		_scale
  6291 ;; This function uses a non-reentrant model
  6292 ;;
  6293  0F5B                     ___bmul:	
  6294                           
  6295                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  6296                           ;___bmul@multiplier stored from wreg
  6297  0F5B  00A1               	movwf	___bmul@multiplier
  6298  0F5C  01A0               	clrf	___bmul@product
  6299  0F5D                     l6243:	
  6300  0F5D  087B               	movf	___bmul@multiplicand,w
  6301  0F5E  1821               	btfsc	___bmul@multiplier,0
  6302  0F5F  07A0               	addwf	___bmul@product,f
  6303  0F60  1003               	clrc
  6304  0F61  0DFB               	rlf	___bmul@multiplicand,f
  6305  0F62  1003               	clrc
  6306  0F63  0CA1               	rrf	___bmul@multiplier,f
  6307  0F64  08A1               	movf	___bmul@multiplier,f
  6308  0F65  1D03               	skipz
  6309  0F66  2F5D               	goto	l6243
  6310  0F67  0820               	movf	___bmul@product,w
  6311  0F68  0008               	return
  6312  0F69                     __end_of___bmul:	
  6313  0F69                     __ptext552:	
  6314 ;; =============== function ___fttol ends ============
  6315                           
  6316                           
  6317 ;; *************** function ___ftpack *****************
  6318 ;; Defined at:
  6319 ;;		line 63 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\float.c"
  6320 ;; Parameters:    Size  Location     Type
  6321 ;;  arg             3    2[COMMON] unsigned um
  6322 ;;  exp             1    5[COMMON] unsigned char 
  6323 ;;  sign            1    6[COMMON] unsigned char 
  6324 ;; Auto vars:     Size  Location     Type
  6325 ;;		None
  6326 ;; Return value:  Size  Location     Type
  6327 ;;                  3    2[COMMON] float 
  6328 ;; Registers used:
  6329 ;;		wreg, status,2, status,0
  6330 ;; Tracked objects:
  6331 ;;		On entry : 60/0
  6332 ;;		On exit  : 60/0
  6333 ;;		Unchanged: FFF9F/0
  6334 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6335 ;;      Params:         5       0       0       0       0
  6336 ;;      Locals:         0       0       0       0       0
  6337 ;;      Temps:          3       0       0       0       0
  6338 ;;      Totals:         8       0       0       0       0
  6339 ;;Total ram usage:        8 bytes
  6340 ;; Hardware stack levels used:    1
  6341 ;; Hardware stack levels required when called:    1
  6342 ;; This function calls:
  6343 ;;		Nothing
  6344 ;; This function is called by:
  6345 ;;		___ftadd
  6346 ;;		___ftmul
  6347 ;;		___altoft
  6348 ;;		___lltoft
  6349 ;; This function uses a non-reentrant model
  6350 ;;
  6351  0F69                     ___ftpack:	
  6352                           
  6353                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  6354  0F69  0875               	movf	___ftpack@exp,w
  6355  0F6A  1903               	btfsc	3,2
  6356  0F6B  2F71               	goto	l6319
  6357  0F6C  0874               	movf	___ftpack@arg+2,w
  6358  0F6D  0473               	iorwf	___ftpack@arg+1,w
  6359  0F6E  0472               	iorwf	___ftpack@arg,w
  6360  0F6F  1D03               	skipz
  6361  0F70  2F7A               	goto	l6325
  6362  0F71                     l6319:	
  6363  0F71  01F2               	clrf	?___ftpack
  6364  0F72  01F3               	clrf	?___ftpack+1
  6365  0F73  01F4               	clrf	?___ftpack+2
  6366  0F74  0008               	return
  6367  0F75                     l6323:	
  6368  0F75  0AF5               	incf	___ftpack@exp,f
  6369  0F76  1003               	clrc
  6370  0F77  0CF4               	rrf	___ftpack@arg+2,f
  6371  0F78  0CF3               	rrf	___ftpack@arg+1,f
  6372  0F79  0CF2               	rrf	___ftpack@arg,f
  6373  0F7A                     l6325:	
  6374  0F7A  30FE               	movlw	254
  6375  0F7B  0574               	andwf	___ftpack@arg+2,w
  6376  0F7C  1903               	btfsc	3,2
  6377  0F7D  2F89               	goto	l6329
  6378  0F7E  2F75               	goto	l6323
  6379  0F7F                     l6327:	
  6380  0F7F  0AF5               	incf	___ftpack@exp,f
  6381  0F80  0AF2               	incf	___ftpack@arg,f
  6382  0F81  1903               	skipnz
  6383  0F82  0AF3               	incf	___ftpack@arg+1,f
  6384  0F83  1903               	skipnz
  6385  0F84  0AF4               	incf	___ftpack@arg+2,f
  6386  0F85  1003               	clrc
  6387  0F86  0CF4               	rrf	___ftpack@arg+2,f
  6388  0F87  0CF3               	rrf	___ftpack@arg+1,f
  6389  0F88  0CF2               	rrf	___ftpack@arg,f
  6390  0F89                     l6329:	
  6391  0F89  30FF               	movlw	255
  6392  0F8A  0574               	andwf	___ftpack@arg+2,w
  6393  0F8B  1903               	btfsc	3,2
  6394  0F8C  2F93               	goto	l6333
  6395  0F8D  2F7F               	goto	l6327
  6396  0F8E                     l6331:	
  6397  0F8E  03F5               	decf	___ftpack@exp,f
  6398  0F8F  1003               	clrc
  6399  0F90  0DF2               	rlf	___ftpack@arg,f
  6400  0F91  0DF3               	rlf	___ftpack@arg+1,f
  6401  0F92  0DF4               	rlf	___ftpack@arg+2,f
  6402  0F93                     l6333:	
  6403  0F93  1FF3               	btfss	___ftpack@arg+1,7
  6404  0F94  2F8E               	goto	l6331
  6405  0F95  1C75               	btfss	___ftpack@exp,0
  6406  0F96  13F3               	bcf	___ftpack@arg+1,7
  6407  0F97  1003               	clrc
  6408  0F98  0CF5               	rrf	___ftpack@exp,f
  6409  0F99  0875               	movf	___ftpack@exp,w
  6410  0F9A  00F9               	movwf	??___ftpack+2
  6411  0F9B  01F8               	clrf	??___ftpack+1
  6412  0F9C  01F7               	clrf	??___ftpack
  6413  0F9D  0877               	movf	??___ftpack,w
  6414  0F9E  04F2               	iorwf	___ftpack@arg,f
  6415  0F9F  0878               	movf	??___ftpack+1,w
  6416  0FA0  04F3               	iorwf	___ftpack@arg+1,f
  6417  0FA1  0879               	movf	??___ftpack+2,w
  6418  0FA2  04F4               	iorwf	___ftpack@arg+2,f
  6419  0FA3  0876               	movf	___ftpack@sign,w
  6420  0FA4  1D03               	skipz
  6421  0FA5  17F4               	bsf	___ftpack@arg+2,7
  6422  0FA6  0008               	return
  6423  0FA7                     __end_of___ftpack:	
  6424  0FA7                     PL8:	
  6425  0FA7  0872               	movf	?___awmod,w
  6426  0FA8  00C3               	movwf	??_scale
  6427  0FA9  0873               	movf	?___awmod+1,w
  6428  0FAA  00C4               	movwf	??_scale+1
  6429  0FAB  0843               	movf	??_scale,w
  6430  0FAC  0743               	addwf	??_scale,w
  6431  0FAD  0743               	addwf	??_scale,w
  6432  0FAE  0008               	return
  6433  0FAF                     PL9:	
  6434  0FAF  0878               	movf	?___awdiv,w
  6435  0FB0  00C5               	movwf	??_scale+2
  6436  0FB1  0879               	movf	?___awdiv+1,w
  6437  0FB2  00C6               	movwf	??_scale+3
  6438  0FB3  0845               	movf	??_scale+2,w
  6439  0FB4  0745               	addwf	??_scale+2,w
  6440  0FB5  0745               	addwf	??_scale+2,w
  6441  0FB6  0008               	return
  6442  0FB7                     PL10:	
  6443  0FB7  0831               	movf	?___ftmul,w
  6444  0FB8  00C7               	movwf	_scale$4119
  6445  0FB9  0832               	movf	?___ftmul+1,w
  6446  0FBA  00C8               	movwf	_scale$4119+1
  6447  0FBB  0833               	movf	?___ftmul+2,w
  6448  0FBC  00C9               	movwf	_scale$4119+2
  6449  0FBD  300A               	movlw	10
  6450  0FBE  00F2               	movwf	?___awmod
  6451  0FBF  01F3               	clrf	?___awmod+1
  6452  0FC0  084A               	movf	scale@scl,w
  6453  0FC1  00F4               	movwf	?___awmod+2
  6454  0FC2  01F5               	clrf	?___awmod+3
  6455  0FC3  0008               	return
  6456  0FC4                     PL11:	
  6457  0FC4  0831               	movf	?___ftmul,w
  6458  0FC5  00C0               	movwf	?_scale
  6459  0FC6  0832               	movf	?___ftmul+1,w
  6460  0FC7  00C1               	movwf	?_scale+1
  6461  0FC8  0833               	movf	?___ftmul+2,w
  6462  0FC9  00C2               	movwf	?_scale+2
  6463  0FCA  0008               	return
  6464  0FCB                     PL15:	
  6465  0FCB  00F8               	movwf	?___awdiv
  6466  0FCC  01F9               	clrf	?___awdiv+1
  6467  0FCD  084A               	movf	scale@scl,w
  6468  0FCE  00F4               	movwf	?___awmod+2
  6469  0FCF  01F5               	clrf	?___awmod+3
  6470  0FD0  1BF4               	btfsc	?___awmod+2,7
  6471  0FD1  03F5               	decf	?___awmod+3,f
  6472  0FD2  3064               	movlw	100
  6473  0FD3  00F2               	movwf	?___awmod
  6474  0FD4  01F3               	clrf	?___awmod+1
  6475  0FD5  0008               	return
  6476  0FD6                     PL19:	
  6477  0FD6  07BB               	addwf	___ftmul@f3_as_product,f
  6478  0FD7  0835               	movf	___ftmul@f2+1,w
  6479  0FD8  1103               	clrz
  6480  0FD9  1803               	skipnc
  6481  0FDA  0A35               	incf	___ftmul@f2+1,w
  6482  0FDB  1D03               	btfss	3,2
  6483  0FDC  07BC               	addwf	___ftmul@f3_as_product+1,f
  6484  0FDD  0836               	movf	___ftmul@f2+2,w
  6485  0FDE  1103               	clrz
  6486  0FDF  0008               	return
  6487  0FE0                     PL22:	
  6488  0FE0  0878               	movf	?___awdiv,w
  6489  0FE1  00C3               	movwf	??_scale
  6490  0FE2  0879               	movf	?___awdiv+1,w
  6491  0FE3  00C4               	movwf	??_scale+1
  6492  0FE4  0843               	movf	??_scale,w
  6493  0FE5  0743               	addwf	??_scale,w
  6494  0FE6  0743               	addwf	??_scale,w
  6495  0FE7  0008               	return
  6496  0FE8                     PL23:	
  6497  0FE8  00B3               	movwf	?___ftmul+2
  6498  0FE9  3064               	movlw	100
  6499  0FEA  00F8               	movwf	?___awdiv
  6500  0FEB  01F9               	clrf	?___awdiv+1
  6501  0FEC  084A               	movf	scale@scl,w
  6502  0FED  00FA               	movwf	?___awdiv+2
  6503  0FEE  01FB               	clrf	?___awdiv+3
  6504  0FEF  0008               	return
  6505  0FF0                     PL25:	
  6506  0FF0  00B3               	movwf	?___ftmul+2
  6507  0FF1  0847               	movf	_scale$4119,w
  6508  0FF2  00B4               	movwf	?___ftmul+3
  6509  0FF3  0848               	movf	_scale$4119+1,w
  6510  0FF4  00B5               	movwf	?___ftmul+4
  6511  0FF5  0849               	movf	_scale$4119+2,w
  6512  0FF6  00B6               	movwf	?___ftmul+5
  6513  0FF7  0008               	return
  6514  0FF8                     PL26:	
  6515  0FF8  00B3               	movwf	?___ftmul+2
  6516  0FF9  300A               	movlw	10
  6517  0FFA  00F8               	movwf	?___awdiv
  6518  0FFB  01F9               	clrf	?___awdiv+1
  6519  0FFC  084A               	movf	scale@scl,w
  6520  0FFD  00FA               	movwf	?___awdiv+2
  6521  0FFE  01FB               	clrf	?___awdiv+3
  6522  0FFF  0008               	return
  6523                           
  6524                           	psect	text557
  6525  1735                     __ptext557:	
  6526 ;; =============== function ___bmul ends ============
  6527                           
  6528                           
  6529 ;; *************** function __div_to_l_ *****************
  6530 ;; Defined at:
  6531 ;;		line 61 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\fldivl.c"
  6532 ;; Parameters:    Size  Location     Type
  6533 ;;  f1              3    2[COMMON] unsigned char 
  6534 ;;  f2              3    5[COMMON] unsigned char 
  6535 ;; Auto vars:     Size  Location     Type
  6536 ;;  quot            4    8[BANK0 ] unsigned long 
  6537 ;;  exp1            1   13[BANK0 ] unsigned char 
  6538 ;;  cntr            1   12[BANK0 ] unsigned char 
  6539 ;; Return value:  Size  Location     Type
  6540 ;;                  4    2[COMMON] unsigned long 
  6541 ;; Registers used:
  6542 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  6543 ;; Tracked objects:
  6544 ;;		On entry : 0/0
  6545 ;;		On exit  : 60/0
  6546 ;;		Unchanged: FFF9F/0
  6547 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6548 ;;      Params:         6       0       0       0       0
  6549 ;;      Locals:         0       6       0       0       0
  6550 ;;      Temps:          0       8       0       0       0
  6551 ;;      Totals:         6      14       0       0       0
  6552 ;;Total ram usage:       20 bytes
  6553 ;; Hardware stack levels used:    1
  6554 ;; Hardware stack levels required when called:    1
  6555 ;; This function calls:
  6556 ;;		Nothing
  6557 ;; This function is called by:
  6558 ;;		_printf
  6559 ;; This function uses a non-reentrant model
  6560 ;;
  6561  1735                     __div_to_l_:	
  6562                           
  6563                           ; Regs used in __div_to_l_: [wreg-fsr0h+status,2+status,0]
  6564  1735  3072               	movlw	low __div_to_l_@f1
  6565  1736  0084               	movwf	4
  6566  1737  0800               	movf	0,w
  6567  1738  1283               	bcf	3,5	;RP0=0, select bank0
  6568  1739  1303               	bcf	3,6	;RP1=0, select bank0
  6569  173A  00A0               	movwf	??__div_to_l_
  6570  173B  0A84               	incf	4,f
  6571  173C  0800               	movf	0,w
  6572  173D  00A1               	movwf	??__div_to_l_+1
  6573  173E  0A84               	incf	4,f
  6574  173F  0800               	movf	0,w
  6575  1740  00A2               	movwf	??__div_to_l_+2
  6576  1741  0A84               	incf	4,f
  6577  1742  0800               	movf	0,w
  6578  1743  00A3               	movwf	??__div_to_l_+3
  6579  1744  1003               	clrc
  6580  1745  0D22               	rlf	??__div_to_l_+2,w
  6581  1746  0D23               	rlf	??__div_to_l_+3,w
  6582  1747  00AD               	movwf	__div_to_l_@exp1
  6583  1748  08AD               	movf	__div_to_l_@exp1,f
  6584  1749  1D03               	skipz
  6585  174A  2F50               	goto	l6199
  6586  174B                     l6197:	
  6587  174B  01F2               	clrf	?__div_to_l_
  6588  174C  01F3               	clrf	?__div_to_l_+1
  6589  174D  01F4               	clrf	?__div_to_l_+2
  6590  174E  01F5               	clrf	?__div_to_l_+3
  6591  174F  0008               	return
  6592  1750                     l6199:	
  6593  1750  3075               	movlw	low __div_to_l_@f2
  6594  1751  27F3  160A  118A   	fcall	PL3	;call to abstracted procedure
  6595  1754  1003               	clrc
  6596  1755  0D22               	rlf	??__div_to_l_+2,w
  6597  1756  0D23               	rlf	??__div_to_l_+3,w
  6598  1757  00AC               	movwf	__div_to_l_@cntr
  6599  1758  08AC               	movf	__div_to_l_@cntr,f
  6600  1759  1903               	btfsc	3,2
  6601  175A  2F4B               	goto	l6197
  6602  175B  3072               	movlw	low __div_to_l_@f1
  6603  175C  0084               	movwf	4
  6604  175D  3080               	movlw	128
  6605  175E  0A84               	incf	4,f
  6606  175F  0A84               	incf	4,f
  6607  1760  0480               	iorwf	0,f
  6608  1761  3072               	movlw	low __div_to_l_@f1
  6609  1762  0A84               	incf	4,f
  6610  1763  0084               	movwf	4
  6611  1764  3075               	movlw	low __div_to_l_@f2
  6612  1765  0A84               	incf	4,f
  6613  1766  0A84               	incf	4,f
  6614  1767  0A84               	incf	4,f
  6615  1768  0180               	clrf	0
  6616  1769  0084               	movwf	4
  6617  176A  3080               	movlw	128
  6618  176B  0A84               	incf	4,f
  6619  176C  0A84               	incf	4,f
  6620  176D  0480               	iorwf	0,f
  6621  176E  3075               	movlw	low __div_to_l_@f2
  6622  176F  0A84               	incf	4,f
  6623  1770  0084               	movwf	4
  6624  1771  307F               	movlw	127
  6625  1772  0A84               	incf	4,f
  6626  1773  0A84               	incf	4,f
  6627  1774  0A84               	incf	4,f
  6628  1775  0180               	clrf	0
  6629  1776  01A8               	clrf	__div_to_l_@quot
  6630  1777  01A9               	clrf	__div_to_l_@quot+1
  6631  1778  01AA               	clrf	__div_to_l_@quot+2
  6632  1779  01AB               	clrf	__div_to_l_@quot+3
  6633  177A  02AD               	subwf	__div_to_l_@exp1,f
  6634  177B  30A0               	movlw	160
  6635  177C  072C               	addwf	__div_to_l_@cntr,w
  6636  177D  00A0               	movwf	??__div_to_l_
  6637  177E  02AD               	subwf	__div_to_l_@exp1,f
  6638  177F  3020               	movlw	32
  6639  1780  00AC               	movwf	__div_to_l_@cntr
  6640  1781                     l6213:	
  6641  1781  3075               	movlw	low __div_to_l_@f2
  6642  1782  1003               	clrc
  6643  1783  0DA8               	rlf	__div_to_l_@quot,f
  6644  1784  0DA9               	rlf	__div_to_l_@quot+1,f
  6645  1785  0DAA               	rlf	__div_to_l_@quot+2,f
  6646  1786  0DAB               	rlf	__div_to_l_@quot+3,f
  6647  1787  27F3  160A  118A   	fcall	PL3	;call to abstracted procedure
  6648  178A  3072               	movlw	low __div_to_l_@f1
  6649  178B  0084               	movwf	4
  6650  178C  0800               	movf	0,w
  6651  178D  00A4               	movwf	??__div_to_l_+4
  6652  178E  0A84               	incf	4,f
  6653  178F  0800               	movf	0,w
  6654  1790  00A5               	movwf	??__div_to_l_+5
  6655  1791  0A84               	incf	4,f
  6656  1792  0800               	movf	0,w
  6657  1793  00A6               	movwf	??__div_to_l_+6
  6658  1794  0A84               	incf	4,f
  6659  1795  0800               	movf	0,w
  6660  1796  00A7               	movwf	??__div_to_l_+7
  6661  1797  0823               	movf	??__div_to_l_+3,w
  6662  1798  0227               	subwf	??__div_to_l_+7,w
  6663  1799  1D03               	skipz
  6664  179A  2FA5               	goto	u2165
  6665  179B  0822               	movf	??__div_to_l_+2,w
  6666  179C  0226               	subwf	??__div_to_l_+6,w
  6667  179D  1D03               	skipz
  6668  179E  2FA5               	goto	u2165
  6669  179F  0821               	movf	??__div_to_l_+1,w
  6670  17A0  0225               	subwf	??__div_to_l_+5,w
  6671  17A1  1D03               	skipz
  6672  17A2  2FA5               	goto	u2165
  6673  17A3  0820               	movf	??__div_to_l_,w
  6674  17A4  0224               	subwf	??__div_to_l_+4,w
  6675  17A5                     u2165:	
  6676  17A5  1C03               	skipc
  6677  17A6  2FC1               	goto	l3599
  6678  17A7  3075               	movlw	low __div_to_l_@f2
  6679  17A8  27F3  160A  118A   	fcall	PL3	;call to abstracted procedure
  6680  17AB  3072               	movlw	low __div_to_l_@f1
  6681  17AC  0084               	movwf	4
  6682  17AD  0820               	movf	??__div_to_l_,w
  6683  17AE  0280               	subwf	0,f
  6684  17AF  0A84               	incf	4,f
  6685  17B0  0821               	movf	??__div_to_l_+1,w
  6686  17B1  1C03               	skipc
  6687  17B2  0F21               	incfsz	??__div_to_l_+1,w
  6688  17B3  0280               	subwf	0,f
  6689  17B4  0A84               	incf	4,f
  6690  17B5  0822               	movf	??__div_to_l_+2,w
  6691  17B6  1C03               	skipc
  6692  17B7  0F22               	incfsz	??__div_to_l_+2,w
  6693  17B8  0280               	subwf	0,f
  6694  17B9  0A84               	incf	4,f
  6695  17BA  0823               	movf	??__div_to_l_+3,w
  6696  17BB  1C03               	skipc
  6697  17BC  0A23               	incf	??__div_to_l_+3,w
  6698  17BD  0280               	subwf	0,f
  6699  17BE  3003               	movlw	3
  6700  17BF  0284               	subwf	4,f
  6701  17C0  1428               	bsf	__div_to_l_@quot,0
  6702  17C1                     l3599:	
  6703  17C1  3072               	movlw	low __div_to_l_@f1
  6704  17C2  0084               	movwf	4
  6705  17C3  1003               	clrc
  6706  17C4  0D80               	rlf	0,f
  6707  17C5  0A84               	incf	4,f
  6708  17C6  0D80               	rlf	0,f
  6709  17C7  0A84               	incf	4,f
  6710  17C8  0D80               	rlf	0,f
  6711  17C9  0A84               	incf	4,f
  6712  17CA  0D80               	rlf	0,f
  6713  17CB  0BAC               	decfsz	__div_to_l_@cntr,f
  6714  17CC  2F81               	goto	l6213
  6715  17CD  1FAD               	btfss	__div_to_l_@exp1,7
  6716  17CE  2FDC               	goto	l6231
  6717  17CF  082D               	movf	__div_to_l_@exp1,w
  6718  17D0  3A80               	xorlw	128
  6719  17D1  3E9F               	addlw	159
  6720  17D2  1C03               	btfss	3,0
  6721  17D3  2F4B               	goto	l6197
  6722  17D4                     l6227:	
  6723  17D4  1003               	clrc
  6724  17D5  0CAB               	rrf	__div_to_l_@quot+3,f
  6725  17D6  0CAA               	rrf	__div_to_l_@quot+2,f
  6726  17D7  0CA9               	rrf	__div_to_l_@quot+1,f
  6727  17D8  0CA8               	rrf	__div_to_l_@quot,f
  6728  17D9  0FAD               	incfsz	__div_to_l_@exp1,f
  6729  17DA  2FD4               	goto	l6227
  6730  17DB  2FEA               	goto	l6237
  6731  17DC                     l6231:	
  6732  17DC  3020               	movlw	32
  6733  17DD  022D               	subwf	__div_to_l_@exp1,w
  6734  17DE  1803               	btfsc	3,0
  6735  17DF  2F4B               	goto	l6197
  6736  17E0                     l3607:	
  6737  17E0  08AD               	movf	__div_to_l_@exp1,f
  6738  17E1  1903               	btfsc	3,2
  6739  17E2  2FEA               	goto	l6237
  6740  17E3  1003               	clrc
  6741  17E4  0DA8               	rlf	__div_to_l_@quot,f
  6742  17E5  0DA9               	rlf	__div_to_l_@quot+1,f
  6743  17E6  0DAA               	rlf	__div_to_l_@quot+2,f
  6744  17E7  0DAB               	rlf	__div_to_l_@quot+3,f
  6745  17E8  03AD               	decf	__div_to_l_@exp1,f
  6746  17E9  2FE0               	goto	l3607
  6747  17EA                     l6237:	
  6748  17EA  082B               	movf	__div_to_l_@quot+3,w
  6749  17EB  00F5               	movwf	?__div_to_l_+3
  6750  17EC  082A               	movf	__div_to_l_@quot+2,w
  6751  17ED  00F4               	movwf	?__div_to_l_+2
  6752  17EE  0829               	movf	__div_to_l_@quot+1,w
  6753  17EF  00F3               	movwf	?__div_to_l_+1
  6754  17F0  0828               	movf	__div_to_l_@quot,w
  6755  17F1  00F2               	movwf	?__div_to_l_
  6756  17F2  0008               	return
  6757  17F3                     __end_of__div_to_l_:	
  6758  17F3                     PL3:	
  6759  17F3  0084               	movwf	4
  6760  17F4  0800               	movf	0,w
  6761  17F5  00A0               	movwf	??__div_to_l_
  6762  17F6  0A84               	incf	4,f
  6763  17F7  0800               	movf	0,w
  6764  17F8  00A1               	movwf	??__div_to_l_+1
  6765  17F9  0A84               	incf	4,f
  6766  17FA  0800               	movf	0,w
  6767  17FB  00A2               	movwf	??__div_to_l_+2
  6768  17FC  0A84               	incf	4,f
  6769  17FD  0800               	movf	0,w
  6770  17FE  00A3               	movwf	??__div_to_l_+3
  6771  17FF  0008               	return
  6772                           
  6773                           	psect	text560
  6774  07C4                     __ptext560:	
  6775 ;; =============== function _isdigit ends ============
  6776                           
  6777                           
  6778 ;; *************** function _abs *****************
  6779 ;; Defined at:
  6780 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\abs.c"
  6781 ;; Parameters:    Size  Location     Type
  6782 ;;  a               2    2[COMMON] int 
  6783 ;; Auto vars:     Size  Location     Type
  6784 ;;		None
  6785 ;; Return value:  Size  Location     Type
  6786 ;;                  2    2[COMMON] int 
  6787 ;; Registers used:
  6788 ;;		wreg, status,2, status,0
  6789 ;; Tracked objects:
  6790 ;;		On entry : 60/0
  6791 ;;		On exit  : 60/0
  6792 ;;		Unchanged: FFF9F/0
  6793 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6794 ;;      Params:         2       0       0       0       0
  6795 ;;      Locals:         0       0       0       0       0
  6796 ;;      Temps:          2       0       0       0       0
  6797 ;;      Totals:         4       0       0       0       0
  6798 ;;Total ram usage:        4 bytes
  6799 ;; Hardware stack levels used:    1
  6800 ;; Hardware stack levels required when called:    1
  6801 ;; This function calls:
  6802 ;;		Nothing
  6803 ;; This function is called by:
  6804 ;;		_main
  6805 ;; This function uses a non-reentrant model
  6806 ;;
  6807  07C4                     _abs:	
  6808                           
  6809                           ; Regs used in _abs: [wreg+status,2+status,0]
  6810  07C4  1FF3               	btfss	abs@a+1,7
  6811  07C5  0008               	return
  6812  07C6  0972               	comf	abs@a,w
  6813  07C7  00F4               	movwf	??_abs
  6814  07C8  0973               	comf	abs@a+1,w
  6815  07C9  00F5               	movwf	??_abs+1
  6816  07CA  0AF4               	incf	??_abs,f
  6817  07CB  1903               	skipnz
  6818  07CC  0AF5               	incf	??_abs+1,f
  6819  07CD  0874               	movf	??_abs,w
  6820  07CE  00F2               	movwf	?_abs
  6821  07CF  0875               	movf	??_abs+1,w
  6822  07D0  00F3               	movwf	?_abs+1
  6823  07D1  0008               	return
  6824  07D2                     __end_of_abs:	
  6825                           
  6826                           	psect	text562
  6827  079B                     __ptext562:	
  6828 ;; =============== function _isprint ends ============
  6829                           
  6830                           
  6831 ;; *************** function _ngat *****************
  6832 ;; Defined at:
  6833 ;;		line 63 in file "C:\Users\DELL\Desktop\vxl\mp\dotansodungCCP(2).c"
  6834 ;; Parameters:    Size  Location     Type
  6835 ;;		None
  6836 ;; Auto vars:     Size  Location     Type
  6837 ;;		None
  6838 ;; Return value:  Size  Location     Type
  6839 ;;		None               void
  6840 ;; Registers used:
  6841 ;;		wreg
  6842 ;; Tracked objects:
  6843 ;;		On entry : 0/0
  6844 ;;		On exit  : 60/0
  6845 ;;		Unchanged: FFF9F/0
  6846 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6847 ;;      Params:         0       0       0       0       0
  6848 ;;      Locals:         0       0       0       0       0
  6849 ;;      Temps:          2       0       0       0       0
  6850 ;;      Totals:         2       0       0       0       0
  6851 ;;Total ram usage:        2 bytes
  6852 ;; Hardware stack levels used:    1
  6853 ;; This function calls:
  6854 ;;		Nothing
  6855 ;; This function is called by:
  6856 ;;		Interrupt level 1
  6857 ;; This function uses a non-reentrant model
  6858 ;;
  6859  079B                     _ngat:	
  6860                           
  6861                           ;dotansodungCCP(2).c: 64: if(CCP1IF)
  6862  079B  1283               	bcf	3,5	;RP0=0, select bank0
  6863  079C  1303               	bcf	3,6	;RP1=0, select bank0
  6864  079D  1D0C               	btfss	12,2
  6865  079E  2FA3               	goto	i1l6127
  6866                           
  6867                           ;dotansodungCCP(2).c: 65: {
  6868                           ;dotansodungCCP(2).c: 66: count1 = CCPR1;
  6869  079F  0816               	movf	22,w	;volatile
  6870  07A0  00EA               	movwf	_count1+1	;volatile
  6871  07A1  0815               	movf	21,w	;volatile
  6872  07A2  00E9               	movwf	_count1	;volatile
  6873  07A3                     i1l6127:	
  6874                           
  6875                           ;dotansodungCCP(2).c: 67: }
  6876                           ;dotansodungCCP(2).c: 68: if(CCP2IF)
  6877  07A3  1C0D               	btfss	13,0
  6878  07A4  2FA9               	goto	i1l6131
  6879                           
  6880                           ;dotansodungCCP(2).c: 69: {
  6881                           ;dotansodungCCP(2).c: 70: count2 = CCPR2;
  6882  07A5  081C               	movf	28,w	;volatile
  6883  07A6  00EC               	movwf	_count2+1	;volatile
  6884  07A7  081B               	movf	27,w	;volatile
  6885  07A8  00EB               	movwf	_count2	;volatile
  6886  07A9                     i1l6131:	
  6887                           
  6888                           ;dotansodungCCP(2).c: 71: }
  6889                           ;dotansodungCCP(2).c: 72: CCP1IF = 0;
  6890  07A9  110C               	bcf	12,2
  6891                           
  6892                           ;dotansodungCCP(2).c: 73: CCP2IF = 0;
  6893  07AA  100D               	bcf	13,0
  6894  07AB  0871               	movf	??_ngat+1,w
  6895  07AC  008A               	movwf	10
  6896  07AD  0E70               	swapf	??_ngat^(0+-128),w
  6897  07AE  0083               	movwf	3
  6898  07AF  0EFE               	swapf	126,f
  6899  07B0  0E7E               	swapf	126,w
  6900  07B1  0009               	retfie
  6901  07B2                     __end_of_ngat:	
  6902                           
  6903                           	psect	intentry
  6904  0004                     __pintentry:	
  6905                           ; Regs used in _ngat: [wreg]
  6906                           
  6907  0004                     interrupt_function:	
  6908  007E                     saved_w	set	btemp
  6909  0004  00FE               	movwf	btemp
  6910  0005  0E03               	swapf	3,w
  6911  0006  00F0               	movwf	??_ngat
  6912  0007  080A               	movf	10,w
  6913  0008  00F1               	movwf	??_ngat+1
  6914  0009  120A  118A  2F9B   	ljmp	_ngat
  6915                           
  6916                           	psect	text563
  6917  0000                     __ptext563:	
  6918 ;; =============== function _ngat ends ============
  6919                           
  6920  007E                     btemp	set	126	;btemp
  6921  007E                     wtemp0	set	126


HI-TECH Software PICC Macro Assembler V9.83 build 10920 
Symbol Table                                                                                   Tue Dec 06 11:03:54 2022

         ___altoft@exp 007A                      _d 0066                      _t 006D                      pc 0002  
       ___bmul@product 0020          ___altoft@sign 007B           ___awdiv@sign 0021                     fsr 0004  
  ___wmul@multiplicand 0074           ___ftadd@exp1 004B           ___ftadd@exp2 004A          ?_lcd_put_byte 0072  
         ___ftadd@sign 0049                    _GIE 005F                    _RD1 0041                    _RD2 0042  
                  _RE1 0049                    _RD3 0043                    _RD4 0044                    _RD5 0045  
                  _RD6 0046                    _RD7 0047                    _abs 07C4                    fsr0 0004  
                  indf 0000           ___awmod@sign 0077                   ?_abs 0072                   l1056 0000  
                 l1090 0000                   l1067 0000                   l1059 0000                   l2302 054C  
                 l2223 00A1                   l2208 002D                   l2166 0000                   l3312 0000  
                 l3306 0000                   l2268 0374                   l3342 0000                   l3600 0000  
                 l3426 061C                   l3370 0921                   l3291 0000                   l3339 0A78  
                 l3348 0000                   l3541 0000                   l3607 17E0                   l3527 0000  
                 l3296 0000                   l3392 0000                   l6113 0C7E                   l6105 0000  
                 l3473 0000                   l7001 0000                   l6107 0000                   l6211 0000  
                 l3459 0000                   l7011 026F                   l7003 0000                   l3564 06EB  
                 l6117 0000                   l3557 0000                   l6221 0000                   l6213 1781  
                 l6205 0000                   l6301 0A8B                   l3469 0000                   l3549 0000  
                 l7005 0000                   l6143 05C7                   l6135 0000                   l6151 0699  
                 l6231 17DC                   l6215 0000                   l6207 0000                   l6311 0000  
                 l6303 0000                   l7111 0477                   l7031 02CE                   l7023 0000  
                 l7007 022C                   l3488 0000                   l6137 0000                   l6161 0000  
                 l6209 0000                   l6241 0000                   l6305 0000                   l7121 049C  
                 l7105 0000                   l7041 0000                   l7025 02A5                   l7017 0271  
                 l7009 0000                   l7201 0000                   l6171 0000                   l6163 0000  
                 l6155 0000                   l6147 0000                   l6227 17D4                   l6219 0000  
                 l6251 0000                   l6243 0F5D                   l6331 0F8E                   l6323 0F75  
                 l6315 0000                   l6411 0000                   l7115 048F                   l7107 0463  
                 l7043 02E2                   l7035 02D6                   l7027 0000                   l7211 169C  
                 l7203 0000                   l6181 06DF                   l6165 06B6                   l6157 0000  
                 l6149 0694                   l6237 17EA                   l6229 0000                   l6309 0A9F  
                 l6341 0000                   l6333 0F93                   l6325 0F7A                   l6317 0000  
                 l6421 0EAA                   l6405 0E8B                   l6501 0000                   l7141 04E2  
                 l7133 04D5                   l7061 0000                   l7045 02EE                   l7221 0000  
                 l7213 0000                   l7205 0000                   l6191 06F5                   l6183 0000  
                 l6175 0000                   l6167 0000                   l6159 0000                   l3599 17C1  
                 l6263 05D3                   l6327 0F7F                   l6319 0F71                   l6351 0000  
                 l6343 0000                   l6415 0000                   l6407 0000                   l6511 0EC0  
                 l7151 0000                   l7135 04D8                   l7127 04B6                   l7071 0000  
                 l7063 0339                   l7055 0309                   l7047 0000                   l7039 02D9  
                 l7231 0000                   l7223 0000                   l7215 0000                   l7207 0000  
                 l6185 06E7                   l6249 0000                   l6265 0000                   l6257 0000  
                 l6273 0000                   l6337 0000                   l6329 0F89                   l6353 0000  
                 l6345 05EC                   l6417 0EA2                   l6433 0561                   l6441 0586  
                 l6425 0000                   l6505 0000                   l7153 0502                   l7145 0000  
                 l7129 04B9                   l7081 0401                   l7073 0396                   l7065 034E  
                 l7057 0335                   l7049 02F7                   l7161 0013                   l7225 0000  
                 l7217 0000                   l7209 0000                   l6195 0000                   l6267 0000  
                 l6259 05CB                   l6291 0000                   l6283 0000                   l6275 0000  
                 l6339 0000                   l6363 0610                   l6355 0000                   l6347 05F1  
                 l6419 0000                   l6531 0EE7                   l6507 0EB9                   l6611 0000  
                 l6603 08DE                   l7147 04F1                   l7083 040F                   l7227 0000  
                 l7219 0000                   l7171 0000                   l7163 0000                   l6197 174B  
                 l6277 0000                   l6293 0A85                   l6373 0626                   l6365 0000  
                 l6357 0000                   l6349 0000                   l6381 0000                   l6445 0000  
                 l6461 05AD                   l6453 0000                   l6525 0000                   l6621 08FB  
                 l6613 0000                   l6605 0000                   l6701 0000                   l7149 04F5  
                 l7093 042D                   l7085 0000                   l7069 035D                   l7229 0000  
                 l7181 0000                   l7173 0000                   l7165 0000                   l6199 1750  
                 l6287 0000                   l6279 0A72                   l6375 0000                   l6367 0618  
                 l6383 0000                   l6439 0000                   l6463 0000                   l6519 0ECC  
                 l6527 0EDF                   l6551 0BED                   l6543 0000                   l6535 0000  
                 l6623 0900                   l6615 08EC                   l6711 0000                   l6703 0000  
                 l7159 050A                   l7087 0000                   l7079 0000                   l7191 0000  
                 l7183 0000                   l7175 0000                   l7167 0000                   l6297 0000  
                 l6377 0634                   l6393 0000                   l6465 0000                   l6457 059E  
                 l6473 0000                   l6529 0000                   l6561 0C1B                   l6553 0BF8  
                 l6545 0000                   l6537 0000                   l6641 092C                   l6633 0918  
                 l6617 0000                   l6625 0905                   l6713 0000                   l6705 0F35  
                 l6721 0000                   l7193 0000                   l7185 0000                   l7177 0000  
                 l7169 0000                   l6299 0000                   l6395 0E7D                   l6387 0000  
                 l6483 0652                   l6475 0000                   l6563 0C26                   l6555 0000  
                 l6547 0000                   l6539 0000                   l6571 0000                   l6651 0000  
                 l6635 091D                   l6627 0909                   l6715 0000                   l6731 0CC5  
                 l6723 0000                   l7099 042F                   l7195 0000                   l7187 0000  
                 l7179 0000                   l6397 0000                   l6389 0E74                   l6493 0000  
                 l6485 0000                   l6565 0C33                   l6557 0000                   l6549 0BE0  
                 l6581 0000                   l6573 0000                   l6645 0000                   l6629 0000  
                 l6709 0F3F                   l6741 0C97                   l6813 0A46                   l6805 09F2  
                 l6821 0000                   l6901 0048                   l7197 0000                   l7189 0000  
                 l6495 067D                   l6567 0000                   l6559 0000                   l6575 0000  
                 l6655 0000                   l6647 0937                   l6639 0000                   l6663 0000  
                 l6719 0000                   l6735 0000                   l6751 0000                   l6911 0000  
                 l6903 0000                   l7199 0000                   l6489 0000                   l6569 0000  
                 l6577 0000                   l6657 0000                   l6649 0000                   l6593 08C8  
                 l6585 0000                   l6681 0000                   l6729 0CBA                   l6761 0B78  
                 l6753 0000                   l6745 0000                   l6809 0000                   l6817 0000  
                 l6913 0000                   l6921 009D                   l6905 0000                   l6499 0000  
                 l6579 0000                   l6659 0953                   l6587 0000                   l6691 0000  
                 l6683 0000                   l6675 0F0E                   l6739 0C8C                   l6755 0000  
                 l6747 0000                   l6835 0D8C                   l6931 00B9                   l6923 0000  
                 l6907 006A                   l6597 08CF                   l6589 0000                   l6693 0F1F  
                 l6685 0000                   l6677 0000                   l6669 0EFD                   l6781 0BB4  
                 l6773 0B9C                   l6765 0B84                   l6757 0B6C                   l6749 0000  
                 l6853 0E52                   l6829 0D47                   l6941 0000                   l6925 00A3  
                 l6917 0000                   l6599 0000                   l6687 0000                   l6679 0000  
                 l6791 0000                   l6783 0000                   l6847 0E0D                   l6839 0DA3  
                 l6871 0AE4                   l6863 0000                   l6919 0078                   l6697 0F29  
                 l6689 0000                   l6777 0BA8                   l6769 0B90                   l6793 0ACA  
                 l6785 0000                   l6857 0000                   l6865 0AD3                   l6881 0000  
                 l6961 0000                   l6953 0000                   l6945 0000                   l6937 00C9  
                 l6929 00A6                   l6699 0000                   l6787 0AC0                   l6795 0000  
                 l6859 0000                   l6875 0AF0                   l6867 0AD9                   l6971 0000  
                 l6963 0000                   l6955 0000                   l6947 00F5                   l6939 0000  
                 l6891 0000                   l6883 0000                   l6789 0AC1                   l6869 0AE0  
                 l6957 0000                   l6949 0000                   l6799 0000                   l6879 0AF7  
                 l6991 01EB                   l6983 01C0                   l6975 017C                   l6967 0143  
                 l6959 0000                   l6895 002F                   l6969 0000                   l6897 003A  
                 l6889 0028                   l6995 01FC                   l6979 018C                   STR_1 107C  
                 STR_2 1087                   u2075 06C5                   u2420 0000                   u2165 17A5  
                 u4007 0B4B                   u2425 05F5                   u4017 0B58                   u4107 0C0C  
                 u4027 0B65                   u4117 0C40                   u4037 0C56                   u3510 0000  
                 u2535 0E94                   u4127 0C46                   u4047 0C5C                   u2800 0BF6  
                 u4057 0C66                   u4067 0C6C                   u3515 0108                   u2900 0C3C  
                 u2820 0C02                   u2725 0ED2                   u4077 0BC9                   u4087 0BCF  
                 u3615 029E                   u2840 0C19                   u2760 0BDE                   u2585 056F  
                 u2665 0665                   u4097 0C06                   u3705 0342                   u2914 0C3E  
                 u2834 0C04                   u3715 0358                   u3555 0195                   _PEIE 005E  
                 u2860 0C24                   u2780 0BEB                   u3805 0487                   u3565 01CA  
                 u2880 0C31                   u3665 02EB                   u3675 0300                   u3595 01E9  
                 u3845 04AC                   u3855 04C7                   u3775 045C                   u3795 0471  
                 u3957 16A3                   u3967 16B1                   u3977 0B12                   u3987 0B25  
                 u3997 0B38                   abs@a 0072                   _main 1671                   _ngat 079B  
         ___ftpack@arg 0072           ___ftpack@exp 0075           lcd_busy@busy 0073                   btemp 007E  
                 _xung 0062                   start 000C      ___bmul@multiplier 0021           ___ftmul@cntr 003E  
         ___ftmul@sign 003F           ___fttol@exp1 0030                  ??_abs 0074           ___fttol@lval 002C  
       ??_lcd_put_byte 0073                  ?_main 0070                  ?_ngat 0070        __end_of___awdiv 0EAF  
      __end_of___lbdiv 0A87        __end_of___ftadd 0967                  _CCPR1 0015                  _CCPR2 001B  
      __end_of___awmod 0EEC        __end_of___lbmod 0AA3        __end_of___ftneg 0706                  _ANSEL 0188  
      __end_of___lldiv 0686        __end_of___ftmul 0F5B        ___awdiv@divisor 0078        __end_of___llmod 058F  
      __end_of___ftsub 08A5        __end_of___fttol 063D        ___awdiv@counter 0020                  _TMR1H 000F  
                _TMR1L 000E           ___lltoft@exp 007A                  _scale 0CD7        __end_of_isdigit 05C9  
        ___ftpack@sign 0076                  _putch 054D        __end_of_isprint 0C80                  pclath 000A  
                status 0003                  wtemp0 007E        ___lbdiv@divisor 0077        ___lbdiv@counter 0079  
         __end_of_main 1735           __end_of_ngat 07B2          lcd_gotoxy@col 0078          lcd_gotoxy@row 0077  
               ??_main 005F          ___fttol@sign1 002B                 ??_ngat 0070   __size_of__tdiv_to_l_ 0078  
               _CCP1IE 0462                 _CCP1IF 0062                 _CCP2IE 0468                 _CCP2IF 0068  
     __end_of___altoft 0CD7       ___llmod@dividend 0029                 ?_scale 0040       ___awdiv@dividend 007A  
               ?_putch 0070       __end_of___ftpack 0FA7                 _ANSELH 0189       __end_of___lltoft 0CA8  
               i1l2163 0000                 i1l6131 07A9                 i1l6123 0000                 _T1SYNC 0082  
               i1l6133 0000                 i1l6127 07A3                 _TMR1GE 0086                 _TMR1CS 0081  
               _TMR1ON 0080                 _TRISC0 0438                 _TRISC1 0439                 _TRISC2 043A  
               _TRISD1 0441                 _TRISE0 0448                 _TRISD2 0442                 _TRISE1 0449  
               _TRISD3 0443                 _TRISD4 0444                 _TRISD5 0445                 _TRISD6 0446  
               _TRISD7 0447       __end_of_lcd_busy 0C72       __end_of_lcd_init 0BBB       __end_of_lcd_putc 0B00  
               ___bmul 0F5B                 ___ftge 058F                 ___wmul 05C9              ??___awdiv 007C  
            ??___lbdiv 0078              ??___ftadd 0046              ??___awmod 0076              ??___lbmod 0073  
            ??___ftneg 0075              ??___lldiv 007A              ??___ftmul 0037              ??___llmod 007A  
            ??___ftsub 007C              ??___fttol 0028                 _count1 0069                 _count2 006B  
               _fround 0967       ___awdiv@quotient 0022        ___awmod@divisor 0072        ___awmod@counter 0076  
               _printf 000F          lcd_put_byte@b 0072  ___ftmul@f3_as_product 003B              ??_isdigit 0072  
               saved_w 007E              ??_isprint 0072                 putch@c 007B       ___lbdiv@dividend 0078  
      ___lbmod@divisor 0072             ___altoft@c 0020        ___lbmod@counter 0075   __end_of_lcd_put_byte 0C4B  
           ___ftadd@f1 0040             ___ftadd@f2 0043             ___ftge@ff1 0072             ___ftge@ff2 0075  
           ___ftneg@f1 0072    ___bmul@multiplicand 007B             ___ftmul@f1 0031             ___ftmul@f2 0034  
           ___ftsub@f1 004F             ___ftsub@f2 004C             ___fttol@f1 0024         __pcstackCOMMON 0070  
           ___lltoft@c 0020          __end_of_scale 0E69          __end_of_putch 0551       ___lbdiv@quotient 007A  
           __div_to_l_ 1735      lcd_gotoxy@address 0079        __div_to_l_@exp1 002D        __div_to_l_@cntr 002C  
              ??_scale 0043        __div_to_l_@quot 0028                ??_putch 007B             __pbssBANK0 0062  
        __div_to_l_@f1 0072          __div_to_l_@f2 0075             __pmaintext 1671                ?___bmul 007B  
              ?___ftge 0072                ?___wmul 0072             __pintentry 0004                _CCP1CON 0017  
              _CCP2CON 001D              ?___altoft 0020                ?_fround 004C              ?___ftpack 0072  
              ?_printf 0056              ?___lltoft 0020                _T1CKPS0 0084                _T1CKPS1 0085  
           _lcd_gotoxy 0AB9              ?_lcd_busy 0070              ?_lcd_init 0070              ?_lcd_putc 0070  
           _scale$4119 0047        __size_of___bmul 000E        __size_of___ftge 002C                ___awdiv 0E69  
              ___lbdiv 0A6C                ___ftadd 08A5                ___awmod 0EAF                ___lbmod 0A87  
              ___ftneg 06FE                ___lldiv 063D        __size_of___wmul 0019                ___ftmul 0EEC  
              ___llmod 0551                ___ftsub 088F                ___fttol 05E2             ??___altoft 007A  
           ??___ftpack 0077        __size_of_fround 0105             ??___lltoft 007A        __size_of_printf 053E  
          ?__div_to_l_ 0072                _dpowers 1054           __size_of_abs 000E                _isdigit 05BB  
     ___awmod@dividend 0074                _isprint 0C72  __size_of_lcd_put_byte 0090             ??_lcd_busy 0072  
           ??_lcd_init 0077             ??_lcd_putc 007A   end_of_initialization 07C0         lcd_put_byte@rs 0075  
      ___lldiv@divisor 0072        ___lldiv@counter 0024                printf@c 00B8                printf@f 00AC  
       __tdiv_to_l_@f1 0072         __tdiv_to_l_@f2 0075          ??__tdiv_to_l_ 0078           _lcd_put_byte 0BBB  
     ___lbmod@dividend 0074            ?_lcd_gotoxy 0077            ___lbmod@rem 0076            printf@integ 00A5  
          printf@width 00B1    __size_of__div_to_l_ 00BE            ___ftmul@exp 003A         __end_of___bmul 0F69  
       __end_of___ftge 05BB         __end_of___wmul 05E2         __end_of_fround 0A6C         __end_of_printf 054D  
  start_initialization 07B2    __end_of__tdiv_to_l_ 06FE            __end_of_abs 07D2        ___llmod@divisor 0025  
      ___llmod@counter 007A               ??___bmul 007C               ??___ftge 0078    __size_of_lcd_gotoxy 0018  
             ??___wmul 0076               ??_fround 007C               ??_printf 005A      __size_of___altoft 002F  
           fround@prec 0055      __size_of___ftpack 003E      __size_of___lltoft 001E          __pcstackBANK0 0020  
        __pcstackBANK1 00A0           _isdigit$3675 0072      __size_of_lcd_busy 0027      __size_of_lcd_init 00BB  
    __size_of_lcd_putc 002F               ?___awdiv 0078               ?___lbdiv 0077               ?___ftadd 0040  
            __ptext531 000F               ?___awmod 0072              __ptext540 0CA8              __ptext532 054D  
            __ptext541 0EEC              __ptext533 0AD1              __ptext550 0E69              __ptext542 08A5  
            __ptext534 088F              __ptext551 05E2              __ptext543 0C4B              __ptext535 0CD7  
            __ptext560 07C4              __ptext552 0F69              __ptext544 0BBB              __ptext536 0967  
            __ptext561 0C72              __ptext553 0A87              __ptext545 0EAF              __ptext537 0AB9  
            __ptext562 079B              __ptext554 0A6C              __ptext546 063D              __ptext538 0B00  
            __ptext563 0000              __ptext555 05C9              __ptext547 058F              __ptext539 0C8A  
             ?___lbmod 0072              __ptext556 0F5B              __ptext548 06FE              __ptext557 1735  
            __ptext549 0551              __ptext558 0686              __ptext559 05BB               ?___ftneg 0072  
             ?___lldiv 0072               ?___ftmul 0031               ?___llmod 0025               ?___ftsub 004C  
            __npowers_ 1006               ?___fttol 0024              __pstrings 1000            __tdiv_to_l_ 0686  
         ??__div_to_l_ 0020               ?_isdigit 0070               ?_isprint 0070         __size_of_scale 0192  
       __size_of_putch 0004      interrupt_function 0004         ___wmul@product 0076     __end_of__div_to_l_ 17F3  
          __stringbase 1005      ___wmul@multiplier 0072             printf@_val 00A8             printf@flag 00AD  
           printf@fval 00B3             printf@prec 00B6              lcd_putc@c 007A           ??_lcd_gotoxy 0078  
     lcd_put_byte@temp 0076           _isprint$3678 0072     __end_of_lcd_gotoxy 0AD1       __size_of___awdiv 0046  
     __size_of___lbdiv 001B       __size_of___ftadd 00C2       __size_of___awmod 003D       __size_of___lbmod 001C  
     __size_of___ftneg 0008       __size_of___lldiv 0049               ___altoft 0CA8       __size_of___ftmul 006F  
     __size_of___llmod 003E       __size_of___ftsub 0016       __size_of___fttol 005B               ___ftpack 0F69  
          _fround$4117 0052            _fround$4118 004F               ___lltoft 0C8A       __size_of_isdigit 000E  
     __size_of_isprint 000E               __powers_ 102D               _lcd_busy 0C4B               _lcd_init 0B00  
             _lcd_putc 0AD1          __size_of_main 00C4          __size_of_ngat 0017              printf@exp 00AF  
             isdigit@c 0073               scale@scl 004A               intlevel1 0000       __tdiv_to_l_@exp1 0025  
     __tdiv_to_l_@cntr 0024       __tdiv_to_l_@quot 0020       ___lldiv@dividend 0076               isprint@c 0073  
            stringcode 1000               printf@ap 00A4           ?__tdiv_to_l_ 0072            _printf$3165 00A0  
     ___lldiv@quotient 0020               stringdir 1000               stringtab 1000  
