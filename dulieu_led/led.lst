

HI-TECH Software PIC PRO Macro Assembler V9.83 build 10920 
                                                                                               Tue Dec 06 11:34:29 2022

HI-TECH Software Omniscient Code Generator (PRO mode) build 10920
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	config,global,class=CONFIG,delta=2
     5                           	psect	strings,global,class=STRING,delta=2
     6                           	psect	cinit,global,class=CODE,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	maintext,global,class=CODE,delta=2
    13                           	psect	text676,local,class=CODE,delta=2
    14                           	psect	text677,local,class=CODE,delta=2
    15                           	psect	text678,local,class=CODE,delta=2
    16                           	psect	text679,local,class=CODE,delta=2
    17                           	psect	text681,local,class=CODE,delta=2
    18                           	psect	text683,local,class=CODE,delta=2
    19                           	psect	text686,local,class=CODE,delta=2
    20                           	psect	text691,local,class=CODE,delta=2
    21                           	psect	text696,local,class=CODE,delta=2
    22                           	psect	text697,local,class=CODE,delta=2
    23                           	psect	text699,local,class=CODE,delta=2
    24                           	psect	text701,local,class=CODE,delta=2
    25                           	psect	text707,local,class=CODE,delta=2
    26                           	psect	text708,local,class=CODE,delta=2
    27                           	psect	text711,local,class=CODE,delta=2
    28                           	psect	text712,local,class=CODE,delta=2
    29                           	psect	text714,local,class=CODE,delta=2
    30                           	psect	intentry,global,class=CODE,delta=2
    31                           	psect	functab,global,reloc=256,class=CODE,delta=2
    32                           	psect	pa_nodes,global,class=CODE,delta=2
    33                           	dabs	1,0x7E,2
    34  000A                     	;#
    35                           
    36                           	psect	config
    37  2007  E3C2               	dw	58306	;#
    38                           
    39                           	psect	strings
    40  000F                     __pstrings:	
    41  000F                     stringtab:	
    42                           ;	global	stringdir,stringtab,__stringbase
    43                           
    44  000F                     stringcode:	
    45                           ;	String table - string pointers are 1 byte each
    46                           
    47  000F                     stringdir:	
    48  000F  3000               	movlw	high stringdir
    49  0010  008A               	movwf	10
    50  0011  0804               	movf	4,w
    51  0012  0A84               	incf	4,f
    52  0013  0782               	addwf	2,f
    53  0014                     __stringbase:	
    54  0014  3400               	retlw	0
    55  0015                     __npowers_:	
    56  0015  3400               	retlw	0
    57  0016  3480               	retlw	128
    58  0017  343F               	retlw	63
    59  0018  34CD               	retlw	205
    60  0019  34CC               	retlw	204
    61  001A  343D               	retlw	61
    62  001B  34D7               	retlw	215
    63  001C  3423               	retlw	35
    64  001D  343C               	retlw	60
    65  001E  3412               	retlw	18
    66  001F  3483               	retlw	131
    67  0020  343A               	retlw	58
    68  0021  34B7               	retlw	183
    69  0022  34D1               	retlw	209
    70  0023  3438               	retlw	56
    71  0024  34C6               	retlw	198
    72  0025  3427               	retlw	39
    73  0026  3437               	retlw	55
    74  0027  3438               	retlw	56
    75  0028  3486               	retlw	134
    76  0029  3435               	retlw	53
    77  002A  34C0               	retlw	192
    78  002B  34D6               	retlw	214
    79  002C  3433               	retlw	51
    80  002D  34CC               	retlw	204
    81  002E  342B               	retlw	43
    82  002F  3432               	retlw	50
    83  0030  3470               	retlw	112
    84  0031  3489               	retlw	137
    85  0032  3430               	retlw	48
    86  0033  34E7               	retlw	231
    87  0034  34DB               	retlw	219
    88  0035  342E               	retlw	46
    89  0036  34E5               	retlw	229
    90  0037  343C               	retlw	60
    91  0038  341E               	retlw	30
    92  0039  3442               	retlw	66
    93  003A  34A2               	retlw	162
    94  003B  340D               	retlw	13
    95  003C                     __powers_:	
    96  003C  3400               	retlw	0
    97  003D  3480               	retlw	128
    98  003E  343F               	retlw	63
    99  003F  3400               	retlw	0
   100  0040  3420               	retlw	32
   101  0041  3441               	retlw	65
   102  0042  3400               	retlw	0
   103  0043  34C8               	retlw	200
   104  0044  3442               	retlw	66
   105  0045  3400               	retlw	0
   106  0046  347A               	retlw	122
   107  0047  3444               	retlw	68
   108  0048  3440               	retlw	64
   109  0049  341C               	retlw	28
   110  004A  3446               	retlw	70
   111  004B  3450               	retlw	80
   112  004C  34C3               	retlw	195
   113  004D  3447               	retlw	71
   114  004E  3424               	retlw	36
   115  004F  3474               	retlw	116
   116  0050  3449               	retlw	73
   117  0051  3497               	retlw	151
   118  0052  3418               	retlw	24
   119  0053  344B               	retlw	75
   120  0054  34BC               	retlw	188
   121  0055  34BE               	retlw	190
   122  0056  344C               	retlw	76
   123  0057  346B               	retlw	107
   124  0058  346E               	retlw	110
   125  0059  344E               	retlw	78
   126  005A  3403               	retlw	3
   127  005B  3415               	retlw	21
   128  005C  3450               	retlw	80
   129  005D  3479               	retlw	121
   130  005E  34AD               	retlw	173
   131  005F  3460               	retlw	96
   132  0060  34F3               	retlw	243
   133  0061  3449               	retlw	73
   134  0062  3471               	retlw	113
   135  0063                     _dpowers:	
   136  0063  3401               	retlw	1
   137  0064  3400               	retlw	0
   138  0065  3400               	retlw	0
   139  0066  3400               	retlw	0
   140  0067  340A               	retlw	10
   141  0068  3400               	retlw	0
   142  0069  3400               	retlw	0
   143  006A  3400               	retlw	0
   144  006B  3464               	retlw	100
   145  006C  3400               	retlw	0
   146  006D  3400               	retlw	0
   147  006E  3400               	retlw	0
   148  006F  34E8               	retlw	232
   149  0070  3403               	retlw	3
   150  0071  3400               	retlw	0
   151  0072  3400               	retlw	0
   152  0073  3410               	retlw	16
   153  0074  3427               	retlw	39
   154  0075  3400               	retlw	0
   155  0076  3400               	retlw	0
   156  0077  34A0               	retlw	160
   157  0078  3486               	retlw	134
   158  0079  3401               	retlw	1
   159  007A  3400               	retlw	0
   160  007B  3440               	retlw	64
   161  007C  3442               	retlw	66
   162  007D  340F               	retlw	15
   163  007E  3400               	retlw	0
   164  007F  3480               	retlw	128
   165  0080  3496               	retlw	150
   166  0081  3498               	retlw	152
   167  0082  3400               	retlw	0
   168  0083  3400               	retlw	0
   169  0084  34E1               	retlw	225
   170  0085  34F5               	retlw	245
   171  0086  3405               	retlw	5
   172  0087  3400               	retlw	0
   173  0088  34CA               	retlw	202
   174  0089  349A               	retlw	154
   175  008A  343B               	retlw	59
   176  000E                     _TMR1	set	14
   177  0017                     _CCP1CON	set	23
   178  0015                     _CCPR1L	set	21
   179  001A                     _RCREG	set	26
   180  0001                     _TMR0	set	1
   181  0011                     _TMR2	set	17
   182  0019                     _TXREG	set	25
   183  00C4                     _CREN	set	196
   184  00BC                     _DC1B0	set	188
   185  00BD                     _DC1B1	set	189
   186  005F                     _GIE	set	95
   187  002B                     _RA3	set	43
   188  002C                     _RA4	set	44
   189  0065                     _RCIF	set	101
   190  0041                     _RD1	set	65
   191  0042                     _RD2	set	66
   192  0043                     _RD3	set	67
   193  0044                     _RD4	set	68
   194  0045                     _RD5	set	69
   195  0046                     _RD6	set	70
   196  0047                     _RD7	set	71
   197  00C6                     _RX9	set	198
   198  00C7                     _SPEN	set	199
   199  005D                     _T0IE	set	93
   200  005A                     _T0IF	set	90
   201  0084                     _T1CKPS0	set	132
   202  0085                     _T1CKPS1	set	133
   203  0082                     _T1SYNC	set	130
   204  0090                     _T2CKPS0	set	144
   205  0091                     _T2CKPS1	set	145
   206  0081                     _TMR1CS	set	129
   207  0086                     _TMR1GE	set	134
   208  0080                     _TMR1ON	set	128
   209  0092                     _TMR2ON	set	146
   210  0064                     _TXIF	set	100
   211  0092                     _PR2	set	146
   212  0099                     _SPBRG	set	153
   213  009A                     _SPBRGH	set	154
   214  04C2                     _BRGH	set	1218
   215  0408                     _PS0	set	1032
   216  0409                     _PS1	set	1033
   217  040A                     _PS2	set	1034
   218  040B                     _PSA	set	1035
   219  04C4                     _SYNC	set	1220
   220  040D                     _T0CS	set	1037
   221  042B                     _TRISA3	set	1067
   222  042C                     _TRISA4	set	1068
   223  0438                     _TRISC0	set	1080
   224  043A                     _TRISC2	set	1082
   225  0441                     _TRISD1	set	1089
   226  0442                     _TRISD2	set	1090
   227  0443                     _TRISD3	set	1091
   228  0444                     _TRISD4	set	1092
   229  0445                     _TRISD5	set	1093
   230  0446                     _TRISD6	set	1094
   231  0447                     _TRISD7	set	1095
   232  04C6                     _TX9	set	1222
   233  04C5                     _TXEN	set	1221
   234  0188                     _ANSEL	set	392
   235  0189                     _ANSELH	set	393
   236  0C3B                     _BRG16	set	3131
   237  008B                     STR_5:	
   238  008B  3420               	retlw	32	;' '
   239  008C  344F               	retlw	79	;'O'
   240  008D  3474               	retlw	116	;'t'
   241  008E  3468               	retlw	104	;'h'
   242  008F  3465               	retlw	101	;'e'
   243  0090  3472               	retlw	114	;'r'
   244  0091  3420               	retlw	32	;' '
   245  0092  346E               	retlw	110	;'n'
   246  0093  3475               	retlw	117	;'u'
   247  0094  346D               	retlw	109	;'m'
   248  0095  3462               	retlw	98	;'b'
   249  0096  3465               	retlw	101	;'e'
   250  0097  3472               	retlw	114	;'r'
   251  0098  3473               	retlw	115	;'s'
   252  0099  3420               	retlw	32	;' '
   253  009A  3400               	retlw	0
   254  009B                     STR_1:	
   255  009B  3420               	retlw	32	;' '
   256  009C  344E               	retlw	78	;'N'
   257  009D  3475               	retlw	117	;'u'
   258  009E  346D               	retlw	109	;'m'
   259  009F  3462               	retlw	98	;'b'
   260  00A0  3465               	retlw	101	;'e'
   261  00A1  3472               	retlw	114	;'r'
   262  00A2  3420               	retlw	32	;' '
   263  00A3  3431               	retlw	49	;'1'
   264  00A4  3420               	retlw	32	;' '
   265  00A5  3400               	retlw	0
   266  00A6                     STR_2:	
   267  00A6  3420               	retlw	32	;' '
   268  00A7  344E               	retlw	78	;'N'
   269  00A8  3475               	retlw	117	;'u'
   270  00A9  346D               	retlw	109	;'m'
   271  00AA  3462               	retlw	98	;'b'
   272  00AB  3465               	retlw	101	;'e'
   273  00AC  3472               	retlw	114	;'r'
   274  00AD  3420               	retlw	32	;' '
   275  00AE  3432               	retlw	50	;'2'
   276  00AF  3420               	retlw	32	;' '
   277  00B0  3400               	retlw	0
   278  00B1                     STR_3:	
   279  00B1  3420               	retlw	32	;' '
   280  00B2  344E               	retlw	78	;'N'
   281  00B3  3475               	retlw	117	;'u'
   282  00B4  346D               	retlw	109	;'m'
   283  00B5  3462               	retlw	98	;'b'
   284  00B6  3465               	retlw	101	;'e'
   285  00B7  3472               	retlw	114	;'r'
   286  00B8  3420               	retlw	32	;' '
   287  00B9  3433               	retlw	51	;'3'
   288  00BA  3420               	retlw	32	;' '
   289  00BB  3400               	retlw	0
   290  00BC                     STR_4:	
   291  00BC  3420               	retlw	32	;' '
   292  00BD  344E               	retlw	78	;'N'
   293  00BE  3475               	retlw	117	;'u'
   294  00BF  346D               	retlw	109	;'m'
   295  00C0  3462               	retlw	98	;'b'
   296  00C1  3465               	retlw	101	;'e'
   297  00C2  3472               	retlw	114	;'r'
   298  00C3  3420               	retlw	32	;' '
   299  00C4  3434               	retlw	52	;'4'
   300  00C5  3420               	retlw	32	;' '
   301  00C6  3400               	retlw	0
   302  00C7                     STR_8:	
   303  00C7  3478               	retlw	120	;'x'
   304  00C8  3475               	retlw	117	;'u'
   305  00C9  346E               	retlw	110	;'n'
   306  00CA  3467               	retlw	103	;'g'
   307  00CB  343A               	retlw	58	;':'
   308  00CC  3420               	retlw	32	;' '
   309  00CD  3425               	retlw	37	;'%'
   310  00CE  3430               	retlw	48	;'0'
   311  00CF  3435               	retlw	53	;'5'
   312  00D0  3464               	retlw	100	;'d'
   313  00D1  3400               	retlw	0
   314  00D2                     STR_7:	
   315  00D2  3476               	retlw	118	;'v'
   316  00D3  343A               	retlw	58	;':'
   317  00D4  3420               	retlw	32	;' '
   318  00D5  3425               	retlw	37	;'%'
   319  00D6  3433               	retlw	51	;'3'
   320  00D7  342E               	retlw	46	;'.'
   321  00D8  3432               	retlw	50	;'2'
   322  00D9  3466               	retlw	102	;'f'
   323  00DA  3400               	retlw	0
   324  00D5                     
   325                           	psect	cinit
   326  12BA                     start_initialization:	
   327                           
   328                           ; Clear objects allocated to COMMON
   329  12BA  01F0               	clrf	__pbssCOMMON& (0+127)
   330  12BB  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   331  12BC  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
   332  12BD  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
   333  12BE  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
   334  12BF  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
   335                           
   336                           ; Clear objects allocated to BANK1
   337  12C0  1683               	bsf	3,5	;RP0=1, select bank1
   338  12C1  01D0               	clrf	__pbssBANK1& (0+127)
   339  12C2  01D1               	clrf	(__pbssBANK1+1)& (0+127)
   340  12C3  01D2               	clrf	(__pbssBANK1+2)& (0+127)
   341  12C4  01D3               	clrf	(__pbssBANK1+3)& (0+127)
   342  12C5  01D4               	clrf	(__pbssBANK1+4)& (0+127)
   343  12C6  01D5               	clrf	(__pbssBANK1+5)& (0+127)
   344  12C7  01D6               	clrf	(__pbssBANK1+6)& (0+127)
   345  12C8  01D7               	clrf	(__pbssBANK1+7)& (0+127)
   346  12C9  01D8               	clrf	(__pbssBANK1+8)& (0+127)
   347  12CA  01D9               	clrf	(__pbssBANK1+9)& (0+127)
   348  12CB  01DA               	clrf	(__pbssBANK1+10)& (0+127)
   349  12CC  01DB               	clrf	(__pbssBANK1+11)& (0+127)
   350  12CD                     end_of_initialization:	
   351                           ;End of C runtime variable initialization code
   352                           
   353  12CD  0183               	clrf	3
   354  12CE  160A  118A  2E9B   	ljmp	_main	;jump to C main() function
   355                           
   356                           	psect	bssCOMMON
   357  0070                     __pbssCOMMON:	
   358  0070                     _xung_old:	
   359  0070                     	ds	4
   360  0074                     _dem:	
   361  0074                     	ds	2
   362                           
   363                           	psect	bssBANK1
   364  00D0                     __pbssBANK1:	
   365  00D0                     _pwm_dem:	
   366  00D0                     	ds	4
   367  00D4                     _v:	
   368  00D4                     	ds	3
   369  00D7                     _rx_data:	
   370  00D7                     	ds	1
   371  00D8                     _xung:	
   372  00D8                     	ds	4
   373                           
   374                           	psect	cstackBANK1
   375  00A0                     __pcstackBANK1:	
   376  00A0                     __doprnt$3212:	
   377                           
   378                           ; 4 bytes @ 0x0
   379  00A0                     	ds	4
   380  00A4                     __doprnt@integ:	
   381                           
   382                           ; 3 bytes @ 0x4
   383  00A4                     	ds	3
   384  00A7                     __doprnt@flag:	
   385                           
   386                           ; 2 bytes @ 0x7
   387  00A7                     	ds	2
   388  00A9                     __doprnt@exp:	
   389                           
   390                           ; 2 bytes @ 0x9
   391  00A9                     	ds	2
   392  00AB                     __doprnt@width:	
   393                           
   394                           ; 2 bytes @ 0xB
   395  00AB                     	ds	2
   396  00AD                     __doprnt@_val:	
   397                           
   398                           ; 4 bytes @ 0xD
   399  00AD                     	ds	4
   400  00B1                     __doprnt@fval:	
   401                           
   402                           ; 3 bytes @ 0x11
   403  00B1                     	ds	3
   404  00B4                     __doprnt@prec:	
   405                           
   406                           ; 2 bytes @ 0x14
   407  00B4                     	ds	2
   408  00B6                     __doprnt@c:	
   409                           
   410                           ; 1 bytes @ 0x16
   411  00B6                     	ds	1
   412  00B7                     __doprnt@pb:	
   413                           
   414                           ; 1 bytes @ 0x17
   415  00B7                     	ds	1
   416  00B8                     printf@f:	
   417  00B8                     sprintf@wh:	
   418                           ; 1 bytes @ 0x18
   419                           
   420                           
   421                           ; 1 bytes @ 0x18
   422  00B8                     	ds	1
   423  00B9                     printf@ap:	
   424  00B9                     sprintf@ap:	
   425                           ; 1 bytes @ 0x19
   426                           
   427                           
   428                           ; 1 bytes @ 0x19
   429  00B9                     	ds	1
   430  00BA                     printf@pb:	
   431  00BA                     sprintf@pb:	
   432                           ; 2 bytes @ 0x1A
   433                           
   434                           
   435                           ; 2 bytes @ 0x1A
   436  00BA                     	ds	2
   437  00BC                     main@data:	
   438                           
   439                           ; 20 bytes @ 0x1C
   440  00BC                     	ds	20
   441                           
   442                           	psect	cstackCOMMON
   443  0076                     __pcstackCOMMON:	
   444  0076                     ?_isprint:	
   445  0076                     ?_tx_init:	
   446                           ; 1 bit 
   447                           
   448  0076                     ?_rx_init:	
   449                           ; 0 bytes @ 0x0
   450                           
   451  0076                     ?_send_string:	
   452                           ; 0 bytes @ 0x0
   453                           
   454  0076                     ?_isdigit:	
   455                           ; 0 bytes @ 0x0
   456                           
   457  0076                     ?_lcd_init:	
   458                           ; 1 bit 
   459                           
   460  0076                     ?_lcd_putc:	
   461                           ; 0 bytes @ 0x0
   462                           
   463  0076                     ?_main:	
   464                           ; 0 bytes @ 0x0
   465                           
   466  0076                     ?_ngat:	
   467                           ; 0 bytes @ 0x0
   468                           
   469  0076                     ?_send_char:	
   470                           ; 0 bytes @ 0x0
   471                           
   472  0076                     ?_lcd_busy:	
   473                           ; 0 bytes @ 0x0
   474                           
   475  0076                     ?_abs:	
   476                           ; 1 bytes @ 0x0
   477                           
   478  0076                     abs@a:	
   479                           ; 2 bytes @ 0x0
   480                           
   481                           
   482                           ; 2 bytes @ 0x0
   483  0076                     	ds	2
   484  0078                     ??_abs:	
   485                           
   486                           ; 0 bytes @ 0x2
   487  0078                     	ds	2
   488  007A                     ??_ngat:	
   489                           
   490                           ; 0 bytes @ 0x4
   491  007A                     	ds	2
   492                           
   493                           	psect	cstackBANK0
   494  0020                     __pcstackBANK0:	
   495  0020                     ?_lcd_put_byte:	
   496  0020                     ??_lcd_busy:	
   497                           ; 0 bytes @ 0x0
   498                           
   499  0020                     ??_isprint:	
   500                           ; 0 bytes @ 0x0
   501                           
   502  0020                     ??_tx_init:	
   503                           ; 0 bytes @ 0x0
   504                           
   505  0020                     ??_rx_init:	
   506                           ; 0 bytes @ 0x0
   507                           
   508  0020                     ??_isdigit:	
   509                           ; 0 bytes @ 0x0
   510                           
   511  0020                     ??_send_char:	
   512                           ; 0 bytes @ 0x0
   513                           
   514  0020                     ?___ftge:	
   515                           ; 0 bytes @ 0x0
   516                           
   517  0020                     ?___lbmod:	
   518                           ; 1 bit 
   519                           
   520  0020                     ?___wmul:	
   521                           ; 1 bytes @ 0x0
   522                           
   523  0020                     ?___awmod:	
   524                           ; 2 bytes @ 0x0
   525                           
   526  0020                     ?___ftpack:	
   527                           ; 2 bytes @ 0x0
   528                           
   529  0020                     ?___ftneg:	
   530                           ; 3 bytes @ 0x0
   531                           
   532  0020                     ?__tdiv_to_l_:	
   533                           ; 3 bytes @ 0x0
   534                           
   535  0020                     ?__div_to_l_:	
   536                           ; 4 bytes @ 0x0
   537                           
   538  0020                     ?___lldiv:	
   539                           ; 4 bytes @ 0x0
   540                           
   541  0020                     lcd_put_byte@b:	
   542                           ; 4 bytes @ 0x0
   543                           
   544  0020                     send_char@data:	
   545                           ; 1 bytes @ 0x0
   546                           
   547  0020                     _isdigit$3722:	
   548                           ; 1 bytes @ 0x0
   549                           
   550  0020                     _isprint$3725:	
   551                           ; 1 bytes @ 0x0
   552                           
   553  0020                     ___lbmod@divisor:	
   554                           ; 1 bytes @ 0x0
   555                           
   556  0020                     ___wmul@multiplier:	
   557                           ; 1 bytes @ 0x0
   558                           
   559  0020                     ___awmod@divisor:	
   560                           ; 2 bytes @ 0x0
   561                           
   562  0020                     ___ftneg@f1:	
   563                           ; 2 bytes @ 0x0
   564                           
   565  0020                     ___ftge@ff1:	
   566                           ; 3 bytes @ 0x0
   567                           
   568  0020                     __tdiv_to_l_@f1:	
   569                           ; 3 bytes @ 0x0
   570                           
   571  0020                     __div_to_l_@f1:	
   572                           ; 3 bytes @ 0x0
   573                           
   574  0020                     ___ftpack@arg:	
   575                           ; 3 bytes @ 0x0
   576                           
   577  0020                     ___lldiv@divisor:	
   578                           ; 3 bytes @ 0x0
   579                           
   580                           
   581                           ; 4 bytes @ 0x0
   582  0020                     	ds	1
   583  0021                     ??_lcd_put_byte:	
   584  0021                     ??_send_string:	
   585                           ; 0 bytes @ 0x1
   586                           
   587  0021                     ??___lbmod:	
   588                           ; 0 bytes @ 0x1
   589                           
   590  0021                     lcd_busy@busy:	
   591                           ; 0 bytes @ 0x1
   592                           
   593  0021                     send_string@s:	
   594                           ; 1 bytes @ 0x1
   595                           
   596  0021                     isdigit@c:	
   597                           ; 1 bytes @ 0x1
   598                           
   599  0021                     isprint@c:	
   600                           ; 1 bytes @ 0x1
   601                           
   602                           
   603                           ; 1 bytes @ 0x1
   604  0021                     	ds	1
   605  0022                     ___lbmod@dividend:	
   606  0022                     ___wmul@multiplicand:	
   607                           ; 1 bytes @ 0x2
   608                           
   609  0022                     ___awmod@dividend:	
   610                           ; 2 bytes @ 0x2
   611                           
   612                           
   613                           ; 2 bytes @ 0x2
   614  0022                     	ds	1
   615  0023                     ??___ftneg:	
   616  0023                     lcd_put_byte@rs:	
   617                           ; 0 bytes @ 0x3
   618                           
   619  0023                     ___lbmod@counter:	
   620                           ; 1 bytes @ 0x3
   621                           
   622  0023                     ___ftpack@exp:	
   623                           ; 1 bytes @ 0x3
   624                           
   625  0023                     ___ftge@ff2:	
   626                           ; 1 bytes @ 0x3
   627                           
   628  0023                     __tdiv_to_l_@f2:	
   629                           ; 3 bytes @ 0x3
   630                           
   631  0023                     __div_to_l_@f2:	
   632                           ; 3 bytes @ 0x3
   633                           
   634                           
   635                           ; 3 bytes @ 0x3
   636  0023                     	ds	1
   637  0024                     ??___wmul:	
   638  0024                     ??___awmod:	
   639                           ; 0 bytes @ 0x4
   640                           
   641  0024                     lcd_put_byte@temp:	
   642                           ; 0 bytes @ 0x4
   643                           
   644  0024                     ___lbmod@rem:	
   645                           ; 1 bytes @ 0x4
   646                           
   647  0024                     ___awmod@counter:	
   648                           ; 1 bytes @ 0x4
   649                           
   650  0024                     ___ftpack@sign:	
   651                           ; 1 bytes @ 0x4
   652                           
   653  0024                     ___wmul@product:	
   654                           ; 1 bytes @ 0x4
   655                           
   656  0024                     ___lldiv@dividend:	
   657                           ; 2 bytes @ 0x4
   658                           
   659                           
   660                           ; 4 bytes @ 0x4
   661  0024                     	ds	1
   662  0025                     ?_lcd_gotoxy:	
   663  0025                     ??___ftpack:	
   664                           ; 0 bytes @ 0x5
   665                           
   666  0025                     ??_lcd_init:	
   667                           ; 0 bytes @ 0x5
   668                           
   669  0025                     ?___lbdiv:	
   670                           ; 0 bytes @ 0x5
   671                           
   672  0025                     lcd_gotoxy@row:	
   673                           ; 1 bytes @ 0x5
   674                           
   675  0025                     ___lbdiv@divisor:	
   676                           ; 1 bytes @ 0x5
   677                           
   678  0025                     ___awmod@sign:	
   679                           ; 1 bytes @ 0x5
   680                           
   681                           
   682                           ; 1 bytes @ 0x5
   683  0025                     	ds	1
   684  0026                     ??_lcd_gotoxy:	
   685  0026                     ??__tdiv_to_l_:	
   686                           ; 0 bytes @ 0x6
   687                           
   688  0026                     ??__div_to_l_:	
   689                           ; 0 bytes @ 0x6
   690                           
   691  0026                     ??___lbdiv:	
   692                           ; 0 bytes @ 0x6
   693                           
   694  0026                     ??___ftge:	
   695                           ; 0 bytes @ 0x6
   696                           
   697  0026                     ?___awdiv:	
   698                           ; 0 bytes @ 0x6
   699                           
   700  0026                     lcd_gotoxy@col:	
   701                           ; 2 bytes @ 0x6
   702                           
   703  0026                     ___lbdiv@dividend:	
   704                           ; 1 bytes @ 0x6
   705                           
   706  0026                     ___awdiv@divisor:	
   707                           ; 1 bytes @ 0x6
   708                           
   709                           
   710                           ; 2 bytes @ 0x6
   711  0026                     	ds	1
   712  0027                     lcd_gotoxy@address:	
   713  0027                     ___lbdiv@counter:	
   714                           ; 1 bytes @ 0x7
   715                           
   716                           
   717                           ; 1 bytes @ 0x7
   718  0027                     	ds	1
   719  0028                     ??_lcd_putc:	
   720  0028                     ??___lldiv:	
   721                           ; 0 bytes @ 0x8
   722                           
   723  0028                     ?___altoft:	
   724                           ; 0 bytes @ 0x8
   725                           
   726  0028                     ?___lltoft:	
   727                           ; 3 bytes @ 0x8
   728                           
   729  0028                     lcd_putc@c:	
   730                           ; 3 bytes @ 0x8
   731                           
   732  0028                     ___lbdiv@quotient:	
   733                           ; 1 bytes @ 0x8
   734                           
   735  0028                     ___awdiv@dividend:	
   736                           ; 1 bytes @ 0x8
   737                           
   738  0028                     ___lldiv@quotient:	
   739                           ; 2 bytes @ 0x8
   740                           
   741  0028                     ___altoft@c:	
   742                           ; 4 bytes @ 0x8
   743                           
   744  0028                     ___lltoft@c:	
   745                           ; 4 bytes @ 0x8
   746                           
   747                           
   748                           ; 4 bytes @ 0x8
   749  0028                     	ds	1
   750  0029                     ?___bmul:	
   751  0029                     ___bmul@multiplicand:	
   752                           ; 1 bytes @ 0x9
   753                           
   754  0029                     __tdiv_to_l_@quot:	
   755                           ; 1 bytes @ 0x9
   756                           
   757                           
   758                           ; 4 bytes @ 0x9
   759  0029                     	ds	1
   760  002A                     ??___bmul:	
   761  002A                     ??___awdiv:	
   762                           ; 0 bytes @ 0xA
   763                           
   764  002A                     ___bmul@product:	
   765                           ; 0 bytes @ 0xA
   766                           
   767  002A                     ___awdiv@counter:	
   768                           ; 1 bytes @ 0xA
   769                           
   770                           
   771                           ; 1 bytes @ 0xA
   772  002A                     	ds	1
   773  002B                     ___bmul@multiplier:	
   774  002B                     ___awdiv@sign:	
   775                           ; 1 bytes @ 0xB
   776                           
   777                           
   778                           ; 1 bytes @ 0xB
   779  002B                     	ds	1
   780  002C                     ??___altoft:	
   781  002C                     ??___lltoft:	
   782                           ; 0 bytes @ 0xC
   783                           
   784  002C                     ___lldiv@counter:	
   785                           ; 0 bytes @ 0xC
   786                           
   787  002C                     ___altoft@exp:	
   788                           ; 1 bytes @ 0xC
   789                           
   790  002C                     ___lltoft@exp:	
   791                           ; 1 bytes @ 0xC
   792                           
   793  002C                     ___awdiv@quotient:	
   794                           ; 1 bytes @ 0xC
   795                           
   796                           
   797                           ; 2 bytes @ 0xC
   798  002C                     	ds	1
   799  002D                     ?___llmod:	
   800  002D                     ___altoft@sign:	
   801                           ; 4 bytes @ 0xD
   802                           
   803  002D                     __tdiv_to_l_@cntr:	
   804                           ; 1 bytes @ 0xD
   805                           
   806  002D                     ___llmod@divisor:	
   807                           ; 1 bytes @ 0xD
   808                           
   809                           
   810                           ; 4 bytes @ 0xD
   811  002D                     	ds	1
   812  002E                     ?_pwm_10bit:	
   813  002E                     ?___ftdiv:	
   814                           ; 0 bytes @ 0xE
   815                           
   816  002E                     ?___fttol:	
   817                           ; 3 bytes @ 0xE
   818                           
   819  002E                     __tdiv_to_l_@exp1:	
   820                           ; 4 bytes @ 0xE
   821                           
   822  002E                     pwm_10bit@data_pwm:	
   823                           ; 1 bytes @ 0xE
   824                           
   825  002E                     ___ftdiv@f2:	
   826                           ; 2 bytes @ 0xE
   827                           
   828  002E                     ___fttol@f1:	
   829                           ; 3 bytes @ 0xE
   830                           
   831  002E                     __div_to_l_@quot:	
   832                           ; 3 bytes @ 0xE
   833                           
   834                           
   835                           ; 4 bytes @ 0xE
   836  002E                     	ds	2
   837  0030                     ??_pwm_10bit:	
   838                           
   839                           ; 0 bytes @ 0x10
   840  0030                     	ds	1
   841  0031                     ___ftdiv@f1:	
   842  0031                     ___llmod@dividend:	
   843                           ; 3 bytes @ 0x11
   844                           
   845                           
   846                           ; 4 bytes @ 0x11
   847  0031                     	ds	1
   848  0032                     ??___fttol:	
   849  0032                     __div_to_l_@cntr:	
   850                           ; 0 bytes @ 0x12
   851                           
   852                           
   853                           ; 1 bytes @ 0x12
   854  0032                     	ds	1
   855  0033                     __div_to_l_@exp1:	
   856                           
   857                           ; 1 bytes @ 0x13
   858  0033                     	ds	1
   859  0034                     ??___ftdiv:	
   860                           
   861                           ; 0 bytes @ 0x14
   862  0034                     	ds	1
   863  0035                     ??___llmod:	
   864  0035                     ___fttol@sign1:	
   865                           ; 0 bytes @ 0x15
   866                           
   867  0035                     ___llmod@counter:	
   868                           ; 1 bytes @ 0x15
   869                           
   870                           
   871                           ; 1 bytes @ 0x15
   872  0035                     	ds	1
   873  0036                     ?_putch:	
   874  0036                     putch@c:	
   875                           ; 0 bytes @ 0x16
   876                           
   877  0036                     ___fttol@lval:	
   878                           ; 1 bytes @ 0x16
   879                           
   880                           
   881                           ; 4 bytes @ 0x16
   882  0036                     	ds	1
   883  0037                     ??_putch:	
   884  0037                     ___ftdiv@cntr:	
   885                           ; 0 bytes @ 0x17
   886                           
   887                           
   888                           ; 1 bytes @ 0x17
   889  0037                     	ds	1
   890  0038                     ___ftdiv@f3:	
   891                           
   892                           ; 3 bytes @ 0x18
   893  0038                     	ds	2
   894  003A                     ___fttol@exp1:	
   895                           
   896                           ; 1 bytes @ 0x1A
   897  003A                     	ds	1
   898  003B                     ___ftdiv@exp:	
   899                           
   900                           ; 1 bytes @ 0x1B
   901  003B                     	ds	1
   902  003C                     ___ftdiv@sign:	
   903                           
   904                           ; 1 bytes @ 0x1C
   905  003C                     	ds	1
   906  003D                     ?___ftmul:	
   907  003D                     ___ftmul@f1:	
   908                           ; 3 bytes @ 0x1D
   909                           
   910                           
   911                           ; 3 bytes @ 0x1D
   912  003D                     	ds	3
   913  0040                     ___ftmul@f2:	
   914                           
   915                           ; 3 bytes @ 0x20
   916  0040                     	ds	3
   917  0043                     ??___ftmul:	
   918                           
   919                           ; 0 bytes @ 0x23
   920  0043                     	ds	3
   921  0046                     ___ftmul@exp:	
   922                           
   923                           ; 1 bytes @ 0x26
   924  0046                     	ds	1
   925  0047                     ___ftmul@f3_as_product:	
   926                           
   927                           ; 3 bytes @ 0x27
   928  0047                     	ds	3
   929  004A                     ___ftmul@cntr:	
   930                           
   931                           ; 1 bytes @ 0x2A
   932  004A                     	ds	1
   933  004B                     ___ftmul@sign:	
   934                           
   935                           ; 1 bytes @ 0x2B
   936  004B                     	ds	1
   937  004C                     ?_scale:	
   938  004C                     ?___ftadd:	
   939                           ; 3 bytes @ 0x2C
   940                           
   941  004C                     ___ftadd@f1:	
   942                           ; 3 bytes @ 0x2C
   943                           
   944                           
   945                           ; 3 bytes @ 0x2C
   946  004C                     	ds	3
   947  004F                     ??_scale:	
   948  004F                     ___ftadd@f2:	
   949                           ; 0 bytes @ 0x2F
   950                           
   951                           
   952                           ; 3 bytes @ 0x2F
   953  004F                     	ds	3
   954  0052                     ??___ftadd:	
   955                           
   956                           ; 0 bytes @ 0x32
   957  0052                     	ds	1
   958  0053                     _scale$4217:	
   959                           
   960                           ; 3 bytes @ 0x33
   961  0053                     	ds	2
   962  0055                     ___ftadd@sign:	
   963                           
   964                           ; 1 bytes @ 0x35
   965  0055                     	ds	1
   966  0056                     scale@scl:	
   967  0056                     ___ftadd@exp2:	
   968                           ; 1 bytes @ 0x36
   969                           
   970                           
   971                           ; 1 bytes @ 0x36
   972  0056                     	ds	1
   973  0057                     ___ftadd@exp1:	
   974                           
   975                           ; 1 bytes @ 0x37
   976  0057                     	ds	1
   977  0058                     ?_fround:	
   978  0058                     ?___ftsub:	
   979                           ; 3 bytes @ 0x38
   980                           
   981  0058                     ___ftsub@f2:	
   982                           ; 3 bytes @ 0x38
   983                           
   984                           
   985                           ; 3 bytes @ 0x38
   986  0058                     	ds	3
   987  005B                     ??_fround:	
   988  005B                     ___ftsub@f1:	
   989                           ; 0 bytes @ 0x3B
   990                           
   991  005B                     _fround$4216:	
   992                           ; 3 bytes @ 0x3B
   993                           
   994                           
   995                           ; 3 bytes @ 0x3B
   996  005B                     	ds	3
   997  005E                     ??___ftsub:	
   998  005E                     _fround$4215:	
   999                           ; 0 bytes @ 0x3E
  1000                           
  1001                           
  1002                           ; 3 bytes @ 0x3E
  1003  005E                     	ds	3
  1004  0061                     fround@prec:	
  1005                           
  1006                           ; 1 bytes @ 0x41
  1007  0061                     	ds	1
  1008  0062                     ?__doprnt:	
  1009  0062                     __doprnt@f:	
  1010                           ; 2 bytes @ 0x42
  1011                           
  1012                           
  1013                           ; 1 bytes @ 0x42
  1014  0062                     	ds	1
  1015  0063                     __doprnt@ap:	
  1016                           
  1017                           ; 1 bytes @ 0x43
  1018  0063                     	ds	1
  1019  0064                     ??__doprnt:	
  1020                           
  1021                           ; 0 bytes @ 0x44
  1022  0064                     	ds	5
  1023  0069                     ?_sprintf:	
  1024  0069                     ?_printf:	
  1025                           ; 2 bytes @ 0x49
  1026                           
  1027  0069                     sprintf@f:	
  1028                           ; 2 bytes @ 0x49
  1029                           
  1030                           
  1031                           ; 1 bytes @ 0x49
  1032  0069                     	ds	4
  1033  006D                     ??_sprintf:	
  1034  006D                     ??_printf:	
  1035                           ; 0 bytes @ 0x4D
  1036                           
  1037  006D                     ??_main:	
  1038                           ; 0 bytes @ 0x4D
  1039                           
  1040                           
  1041                           ; 0 bytes @ 0x4D
  1042  006D                     	ds	3
  1043                           
  1044                           	psect	maintext
  1045  169B                     __pmaintext:	
  1046 ;;Data sizes: Strings 80, constant 118, data 0, bss 18, persistent 0 stack 0
  1047 ;;Auto spaces:   Size  Autos    Used
  1048 ;; COMMON          14      6      12
  1049 ;; BANK0           80     80      80
  1050 ;; BANK1           80     48      60
  1051 ;; BANK3           96      0       0
  1052 ;; BANK2           96      0       0
  1053 ;;
  1054 ;; Pointer list with targets:
  1055 ;; ?___ftpack	float  size(1) Largest target is 2
  1056 ;;		 -> ?_sprintf(BANK0[2]), ?_printf(BANK0[2]), 
  1057 ;;
  1058 ;; ?___lldiv	unsigned long  size(1) Largest target is 0
  1059 ;;
  1060 ;; ?___llmod	unsigned long  size(1) Largest target is 2
  1061 ;;		 -> ?_sprintf(BANK0[2]), ?_printf(BANK0[2]), 
  1062 ;;
  1063 ;; ?___ftsub	float  size(1) Largest target is 0
  1064 ;;
  1065 ;; ?___lltoft	float  size(1) Largest target is 0
  1066 ;;
  1067 ;; ?__tdiv_to_l_	unsigned long  size(1) Largest target is 0
  1068 ;;
  1069 ;; ?__div_to_l_	unsigned long  size(1) Largest target is 0
  1070 ;;
  1071 ;; ?___fttol	long  size(1) Largest target is 2
  1072 ;;		 -> ?_sprintf(BANK0[2]), ?_printf(BANK0[2]), 
  1073 ;;
  1074 ;; ?___ftadd	float  size(1) Largest target is 2
  1075 ;;		 -> ?_sprintf(BANK0[2]), ?_printf(BANK0[2]), 
  1076 ;;
  1077 ;; ?___ftneg	float  size(1) Largest target is 2
  1078 ;;		 -> ?_sprintf(BANK0[2]), ?_printf(BANK0[2]), 
  1079 ;;
  1080 ;; ?___awmod	int  size(2) Largest target is 40
  1081 ;;		 -> ?_sprintf(BANK0[2]), ?_printf(BANK0[2]), dpowers(CODE[40]), 
  1082 ;;
  1083 ;; ?_scale	int  size(1) Largest target is 0
  1084 ;;
  1085 ;; ?___wmul	unsigned int  size(1) Largest target is 0
  1086 ;;
  1087 ;; ?_fround	unsigned int  size(1) Largest target is 0
  1088 ;;
  1089 ;; ?___awdiv	int  size(1) Largest target is 0
  1090 ;;
  1091 ;; ?_abs	int  size(1) Largest target is 0
  1092 ;;
  1093 ;; ?___ftdiv	float  size(1) Largest target is 0
  1094 ;;
  1095 ;; ?___altoft	float  size(1) Largest target is 0
  1096 ;;
  1097 ;; ?___ftmul	float  size(1) Largest target is 0
  1098 ;;
  1099 ;; sprintf@f	PTR const unsigned char  size(1) Largest target is 6
  1100 ;;		 -> STR_6(CODE[6]), 
  1101 ;;
  1102 ;; ?_sprintf	int  size(1) Largest target is 20
  1103 ;;		 -> NULL(NULL[0]), main@data(BANK1[20]), 
  1104 ;;
  1105 ;; sprintf@ap	PTR void [1] size(1) Largest target is 2
  1106 ;;		 -> ?_sprintf(BANK0[2]), ?_printf(BANK0[2]), 
  1107 ;;
  1108 ;; sprintf@wh	PTR unsigned char  size(1) Largest target is 20
  1109 ;;		 -> main@data(BANK1[20]), 
  1110 ;;
  1111 ;; pb.func	PTR FTN(unsigned char ,)void  size(1) Largest target is 0
  1112 ;;		 -> Absolute function(), putch(), 
  1113 ;;
  1114 ;; pb.ptr	PTR unsigned char  size(1) Largest target is 20
  1115 ;;		 -> NULL(NULL[0]), main@data(BANK1[20]), 
  1116 ;;
  1117 ;; printf@f	PTR const unsigned char  size(1) Largest target is 11
  1118 ;;		 -> STR_8(CODE[11]), STR_7(CODE[9]), 
  1119 ;;
  1120 ;; ?_printf	int  size(1) Largest target is 0
  1121 ;;
  1122 ;; printf@ap	PTR void [1] size(1) Largest target is 2
  1123 ;;		 -> ?_sprintf(BANK0[2]), ?_printf(BANK0[2]), 
  1124 ;;
  1125 ;; pb.func	PTR FTN(unsigned char ,)void  size(1) Largest target is 0
  1126 ;;		 -> Absolute function(), putch(), 
  1127 ;;
  1128 ;; pb.ptr	PTR unsigned char  size(1) Largest target is 20
  1129 ;;		 -> NULL(NULL[0]), main@data(BANK1[20]), 
  1130 ;;
  1131 ;; _doprnt@ap	PTR PTR void  size(1) Largest target is 2
  1132 ;;		 -> sprintf@ap(BANK1[1]), printf@ap(BANK1[1]), 
  1133 ;;
  1134 ;; _doprnt@f	PTR const unsigned char  size(1) Largest target is 11
  1135 ;;		 -> STR_8(CODE[11]), STR_7(CODE[9]), STR_6(CODE[6]), 
  1136 ;;
  1137 ;; S3148__prbuf$func	PTR FTN(unsigned char ,)void  size(1) Largest target is 0
  1138 ;;		 -> Absolute function(), putch(), 
  1139 ;;
  1140 ;; _doprnt@pb.func	PTR FTN(unsigned char ,)void  size(1) Largest target is 0
  1141 ;;		 -> Absolute function(), putch(), 
  1142 ;;
  1143 ;; S3148__prbuf$ptr	PTR unsigned char  size(1) Largest target is 20
  1144 ;;		 -> NULL(NULL[0]), main@data(BANK1[20]), 
  1145 ;;
  1146 ;; _doprnt@pb.ptr	PTR unsigned char  size(1) Largest target is 20
  1147 ;;		 -> NULL(NULL[0]), main@data(BANK1[20]), 
  1148 ;;
  1149 ;; _doprnt@pb	PTR struct __prbuf size(1) Largest target is 3
  1150 ;;		 -> sprintf@pb(BANK1[2]), printf@pb(BANK1[2]), 
  1151 ;;
  1152 ;; S3194$_cp	PTR const unsigned char  size(1) Largest target is 0
  1153 ;;
  1154 ;; _val._str._cp	PTR const unsigned char  size(1) Largest target is 0
  1155 ;;
  1156 ;; send_string@s	PTR const unsigned char  size(1) Largest target is 16
  1157 ;;		 -> STR_5(CODE[16]), STR_4(CODE[11]), STR_3(CODE[11]), STR_2(CODE[11]), 
  1158 ;;		 -> STR_1(CODE[11]), 
  1159 ;;
  1160 ;;
  1161 ;; Critical Paths under _main in COMMON
  1162 ;;
  1163 ;;   None.
  1164 ;;
  1165 ;; Critical Paths under _ngat in COMMON
  1166 ;;
  1167 ;;   _ngat->_abs
  1168 ;;
  1169 ;; Critical Paths under _main in BANK0
  1170 ;;
  1171 ;;   _main->_sprintf
  1172 ;;   _main->_printf
  1173 ;;   _printf->__doprnt
  1174 ;;   _sprintf->__doprnt
  1175 ;;   __doprnt->_fround
  1176 ;;   _putch->___llmod
  1177 ;;   _lcd_putc->_lcd_gotoxy
  1178 ;;   ___ftsub->___ftadd
  1179 ;;   _scale->___ftmul
  1180 ;;   _fround->___ftadd
  1181 ;;   _lcd_gotoxy->_lcd_put_byte
  1182 ;;   _lcd_init->_lcd_put_byte
  1183 ;;   ___lltoft->___ftpack
  1184 ;;   ___altoft->___ftpack
  1185 ;;   ___ftmul->___ftdiv
  1186 ;;   ___ftdiv->___altoft
  1187 ;;   ___ftadd->___ftmul
  1188 ;;   _send_string->_send_char
  1189 ;;   _pwm_10bit->___awdiv
  1190 ;;   ___llmod->___lldiv
  1191 ;;   ___awdiv->___awmod
  1192 ;;   ___fttol->___awdiv
  1193 ;;   ___lbdiv->___lbmod
  1194 ;;   ___bmul->___lbdiv
  1195 ;;
  1196 ;; Critical Paths under _ngat in BANK0
  1197 ;;
  1198 ;;   None.
  1199 ;;
  1200 ;; Critical Paths under _main in BANK1
  1201 ;;
  1202 ;;   _main->_sprintf
  1203 ;;   _main->_printf
  1204 ;;   _printf->__doprnt
  1205 ;;   _sprintf->__doprnt
  1206 ;;
  1207 ;; Critical Paths under _ngat in BANK1
  1208 ;;
  1209 ;;   None.
  1210 ;;
  1211 ;; Critical Paths under _main in BANK3
  1212 ;;
  1213 ;;   None.
  1214 ;;
  1215 ;; Critical Paths under _ngat in BANK3
  1216 ;;
  1217 ;;   None.
  1218 ;;
  1219 ;; Critical Paths under _main in BANK2
  1220 ;;
  1221 ;;   None.
  1222 ;;
  1223 ;; Critical Paths under _ngat in BANK2
  1224 ;;
  1225 ;;   None.
  1226 ;;
  1227 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1228 ;;
  1229 ;;
  1230 ;;Call Graph Tables:
  1231 ;;
  1232 ;; ---------------------------------------------------------------------------------
  1233 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1234 ;; ---------------------------------------------------------------------------------
  1235 ;; (0) _main                                                23    23      0   27677
  1236 ;;                                             77 BANK0      3     3      0
  1237 ;;                                             28 BANK1     20    20      0
  1238 ;;                           _lcd_init
  1239 ;;                          _pwm_10bit
  1240 ;;                            _tx_init
  1241 ;;                            _rx_init
  1242 ;;                        _send_string
  1243 ;;                           ___altoft
  1244 ;;                            ___ftdiv
  1245 ;;                            ___ftmul
  1246 ;;                            _sprintf
  1247 ;;                             ___ftge
  1248 ;;                         _lcd_gotoxy
  1249 ;;                             _printf
  1250 ;; ---------------------------------------------------------------------------------
  1251 ;; (1) _printf                                               8     4      4   12536
  1252 ;;                                             73 BANK0      4     0      4
  1253 ;;                                             24 BANK1      4     4      0
  1254 ;;                            __doprnt
  1255 ;; ---------------------------------------------------------------------------------
  1256 ;; (1) _sprintf                                              8     4      4   12592
  1257 ;;                                             73 BANK0      4     0      4
  1258 ;;                                             24 BANK1      4     4      0
  1259 ;;                            __doprnt
  1260 ;; ---------------------------------------------------------------------------------
  1261 ;; (2) __doprnt                                             35    33      2   12370
  1262 ;;                                             66 BANK0      7     5      2
  1263 ;;                                              0 BANK1     24    24      0
  1264 ;;                   Absolute function
  1265 ;;                              _putch
  1266 ;;                            _isdigit
  1267 ;;                             ___wmul
  1268 ;;                             ___ftge
  1269 ;;                            ___ftneg
  1270 ;;                            ___awdiv
  1271 ;;                              _scale
  1272 ;;                            ___ftmul
  1273 ;;                             _fround
  1274 ;;                            ___ftadd
  1275 ;;                            ___fttol
  1276 ;;                         __div_to_l_
  1277 ;;                        __tdiv_to_l_
  1278 ;;                           ___lltoft
  1279 ;;                            ___ftsub
  1280 ;;                            ___lldiv
  1281 ;;                            ___llmod
  1282 ;; ---------------------------------------------------------------------------------
  1283 ;; (3) _putch                                                1     0      1     713
  1284 ;;                                             22 BANK0      1     0      1
  1285 ;;                           _lcd_putc
  1286 ;;                            ___llmod (ARG)
  1287 ;;                            ___lldiv (ARG)
  1288 ;; ---------------------------------------------------------------------------------
  1289 ;; (4) _lcd_putc                                             1     1      0     691
  1290 ;;                                              8 BANK0      1     1      0
  1291 ;;                       _lcd_put_byte
  1292 ;;                           _lcd_busy
  1293 ;;                         _lcd_gotoxy
  1294 ;;                            _isprint
  1295 ;; ---------------------------------------------------------------------------------
  1296 ;; (3) ___ftsub                                              6     0      6    1094
  1297 ;;                                             56 BANK0      6     0      6
  1298 ;;                            ___ftadd
  1299 ;;                           ___lltoft (ARG)
  1300 ;; ---------------------------------------------------------------------------------
  1301 ;; (3) _scale                                               14    11      3    1688
  1302 ;;                                             44 BANK0     11     8      3
  1303 ;;                            ___awmod
  1304 ;;                            ___awdiv
  1305 ;;                            ___ftmul
  1306 ;;                             ___bmul
  1307 ;;                            ___fttol (ARG)
  1308 ;; ---------------------------------------------------------------------------------
  1309 ;; (3) _fround                                              13    10      3    1215
  1310 ;;                                             56 BANK0     10     7      3
  1311 ;;                            ___lbmod
  1312 ;;                             ___bmul
  1313 ;;                            ___lbdiv
  1314 ;;                            ___ftmul
  1315 ;;                            ___ftadd (ARG)
  1316 ;; ---------------------------------------------------------------------------------
  1317 ;; (5) _lcd_gotoxy                                           3     2      1     313
  1318 ;;                                              5 BANK0      3     2      1
  1319 ;;                       _lcd_put_byte
  1320 ;;                           _lcd_busy
  1321 ;; ---------------------------------------------------------------------------------
  1322 ;; (1) _lcd_init                                             4     4      0     244
  1323 ;;                                              5 BANK0      3     3      0
  1324 ;;                       _lcd_put_byte
  1325 ;;                           _lcd_busy
  1326 ;; ---------------------------------------------------------------------------------
  1327 ;; (3) ___lltoft                                             5     1      4     278
  1328 ;;                                              8 BANK0      5     1      4
  1329 ;;                           ___ftpack
  1330 ;; ---------------------------------------------------------------------------------
  1331 ;; (1) ___altoft                                             6     2      4     347
  1332 ;;                                              8 BANK0      6     2      4
  1333 ;;                           ___ftpack
  1334 ;; ---------------------------------------------------------------------------------
  1335 ;; (4) ___ftmul                                             15     9      6     535
  1336 ;;                                             29 BANK0     15     9      6
  1337 ;;                           ___ftpack
  1338 ;;                            ___ftdiv (ARG)
  1339 ;;                           ___altoft (ARG)
  1340 ;;                            ___fttol (ARG)
  1341 ;;                            ___awdiv (ARG)
  1342 ;;                            ___awmod (ARG)
  1343 ;;                             ___bmul (ARG)
  1344 ;;                            ___lbdiv (ARG)
  1345 ;;                            ___lbmod (ARG)
  1346 ;; ---------------------------------------------------------------------------------
  1347 ;; (1) ___ftdiv                                             15     9      6     489
  1348 ;;                                             14 BANK0     15     9      6
  1349 ;;                           ___ftpack
  1350 ;;                           ___altoft (ARG)
  1351 ;; ---------------------------------------------------------------------------------
  1352 ;; (4) ___ftadd                                             12     6      6    1049
  1353 ;;                                             44 BANK0     12     6      6
  1354 ;;                           ___ftpack
  1355 ;;                            ___lbmod (ARG)
  1356 ;;                             ___bmul (ARG)
  1357 ;;                            ___lbdiv (ARG)
  1358 ;;                            ___ftmul (ARG)
  1359 ;; ---------------------------------------------------------------------------------
  1360 ;; (1) _send_string                                          1     1      0      67
  1361 ;;                                              1 BANK0      1     1      0
  1362 ;;                          _send_char
  1363 ;; ---------------------------------------------------------------------------------
  1364 ;; (1) _pwm_10bit                                            2     0      2     366
  1365 ;;                                             14 BANK0      2     0      2
  1366 ;;                            ___awdiv
  1367 ;; ---------------------------------------------------------------------------------
  1368 ;; (6) _lcd_busy                                             2     2      0      23
  1369 ;;                                              0 BANK0      2     2      0
  1370 ;; ---------------------------------------------------------------------------------
  1371 ;; (6) _lcd_put_byte                                         5     4      1     221
  1372 ;;                                              0 BANK0      5     4      1
  1373 ;; ---------------------------------------------------------------------------------
  1374 ;; (4) ___awmod                                              6     2      4     296
  1375 ;;                                              0 BANK0      6     2      4
  1376 ;; ---------------------------------------------------------------------------------
  1377 ;; (3) ___lldiv                                             13     5      8     162
  1378 ;;                                              0 BANK0     13     5      8
  1379 ;; ---------------------------------------------------------------------------------
  1380 ;; (3) ___ftge                                               6     0      6     136
  1381 ;;                                              0 BANK0      6     0      6
  1382 ;; ---------------------------------------------------------------------------------
  1383 ;; (3) ___ftneg                                              3     0      3      45
  1384 ;;                                              0 BANK0      3     0      3
  1385 ;; ---------------------------------------------------------------------------------
  1386 ;; (3) ___llmod                                              9     1      8     159
  1387 ;;                                             13 BANK0      9     1      8
  1388 ;;                            ___lldiv (ARG)
  1389 ;; ---------------------------------------------------------------------------------
  1390 ;; (4) ___awdiv                                              8     4      4     300
  1391 ;;                                              6 BANK0      8     4      4
  1392 ;;                            ___awmod (ARG)
  1393 ;; ---------------------------------------------------------------------------------
  1394 ;; (3) ___fttol                                             13     9      4     252
  1395 ;;                                             14 BANK0     13     9      4
  1396 ;;                           ___ftpack (ARG)
  1397 ;;                            ___awmod (ARG)
  1398 ;;                            ___awdiv (ARG)
  1399 ;;                             ___bmul (ARG)
  1400 ;; ---------------------------------------------------------------------------------
  1401 ;; (5) ___ftpack                                             8     3      5     209
  1402 ;;                                              0 BANK0      8     3      5
  1403 ;; ---------------------------------------------------------------------------------
  1404 ;; (4) ___lbmod                                              5     4      1     159
  1405 ;;                                              0 BANK0      5     4      1
  1406 ;; ---------------------------------------------------------------------------------
  1407 ;; (4) ___lbdiv                                              4     3      1     162
  1408 ;;                                              5 BANK0      4     3      1
  1409 ;;                            ___lbmod (ARG)
  1410 ;; ---------------------------------------------------------------------------------
  1411 ;; (3) ___wmul                                               6     2      4      92
  1412 ;;                                              0 BANK0      6     2      4
  1413 ;; ---------------------------------------------------------------------------------
  1414 ;; (4) ___bmul                                               3     2      1      68
  1415 ;;                                              9 BANK0      3     2      1
  1416 ;;                            ___lbmod (ARG)
  1417 ;;                            ___lbdiv (ARG)
  1418 ;; ---------------------------------------------------------------------------------
  1419 ;; (3) __div_to_l_                                          20    14      6     446
  1420 ;;                                              0 BANK0     20    14      6
  1421 ;; ---------------------------------------------------------------------------------
  1422 ;; (3) __tdiv_to_l_                                         15     9      6     303
  1423 ;;                                              0 BANK0     15     9      6
  1424 ;; ---------------------------------------------------------------------------------
  1425 ;; (3) _isdigit                                              2     2      0      68
  1426 ;;                                              0 BANK0      2     2      0
  1427 ;; ---------------------------------------------------------------------------------
  1428 ;; (3) Absolute function(Fake)                               1     0      1       0
  1429 ;;                                              0 BANK0      1     0      1
  1430 ;; ---------------------------------------------------------------------------------
  1431 ;; (2) _send_char                                            1     1      0      22
  1432 ;;                                              0 BANK0      1     1      0
  1433 ;; ---------------------------------------------------------------------------------
  1434 ;; (1) _rx_init                                              0     0      0       0
  1435 ;; ---------------------------------------------------------------------------------
  1436 ;; (1) _tx_init                                              0     0      0       0
  1437 ;; ---------------------------------------------------------------------------------
  1438 ;; (5) _isprint                                              2     2      0      68
  1439 ;;                                              0 BANK0      2     2      0
  1440 ;; ---------------------------------------------------------------------------------
  1441 ;; Estimated maximum stack depth 6
  1442 ;; ---------------------------------------------------------------------------------
  1443 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1444 ;; ---------------------------------------------------------------------------------
  1445 ;; (7) _ngat                                                 2     2      0      66
  1446 ;;                                              4 COMMON     2     2      0
  1447 ;;                                _abs
  1448 ;; ---------------------------------------------------------------------------------
  1449 ;; (8) _abs                                                  4     2      2      66
  1450 ;;                                              0 COMMON     4     2      2
  1451 ;; ---------------------------------------------------------------------------------
  1452 ;; Estimated maximum stack depth 8
  1453 ;; ---------------------------------------------------------------------------------
  1454 ;; Call Graph Graphs:
  1455 ;; _main (ROOT)
  1456 ;;   _lcd_init
  1457 ;;     _lcd_put_byte
  1458 ;;     _lcd_busy
  1459 ;;   _pwm_10bit
  1460 ;;     ___awdiv
  1461 ;;       ___awmod (ARG)
  1462 ;;   _tx_init
  1463 ;;   _rx_init
  1464 ;;   _send_string
  1465 ;;     _send_char
  1466 ;;   ___altoft
  1467 ;;     ___ftpack
  1468 ;;   ___ftdiv
  1469 ;;     ___ftpack
  1470 ;;     ___altoft (ARG)
  1471 ;;       ___ftpack
  1472 ;;   ___ftmul
  1473 ;;     ___ftpack
  1474 ;;     ___ftdiv (ARG)
  1475 ;;       ___ftpack
  1476 ;;       ___altoft (ARG)
  1477 ;;         ___ftpack
  1478 ;;     ___altoft (ARG)
  1479 ;;       ___ftpack
  1480 ;;     ___fttol (ARG)
  1481 ;;       ___ftpack (ARG)
  1482 ;;       ___awmod (ARG)
  1483 ;;       ___awdiv (ARG)
  1484 ;;         ___awmod (ARG)
  1485 ;;       ___bmul (ARG)
  1486 ;;         ___lbmod (ARG)
  1487 ;;         ___lbdiv (ARG)
  1488 ;;           ___lbmod (ARG)
  1489 ;;     ___awdiv (ARG)
  1490 ;;       ___awmod (ARG)
  1491 ;;     ___awmod (ARG)
  1492 ;;     ___bmul (ARG)
  1493 ;;       ___lbmod (ARG)
  1494 ;;       ___lbdiv (ARG)
  1495 ;;         ___lbmod (ARG)
  1496 ;;     ___lbdiv (ARG)
  1497 ;;       ___lbmod (ARG)
  1498 ;;     ___lbmod (ARG)
  1499 ;;   _sprintf
  1500 ;;     __doprnt
  1501 ;;       Absolute function(Fake)
  1502 ;;       _putch
  1503 ;;         _lcd_putc
  1504 ;;           _lcd_put_byte
  1505 ;;           _lcd_busy
  1506 ;;           _lcd_gotoxy
  1507 ;;             _lcd_put_byte
  1508 ;;             _lcd_busy
  1509 ;;           _isprint
  1510 ;;         ___llmod (ARG)
  1511 ;;           ___lldiv (ARG)
  1512 ;;         ___lldiv (ARG)
  1513 ;;       _isdigit
  1514 ;;       ___wmul
  1515 ;;       ___ftge
  1516 ;;       ___ftneg
  1517 ;;       ___awdiv
  1518 ;;         ___awmod (ARG)
  1519 ;;       _scale
  1520 ;;         ___awmod
  1521 ;;         ___awdiv
  1522 ;;           ___awmod (ARG)
  1523 ;;         ___ftmul
  1524 ;;           ___ftpack
  1525 ;;           ___ftdiv (ARG)
  1526 ;;             ___ftpack
  1527 ;;             ___altoft (ARG)
  1528 ;;               ___ftpack
  1529 ;;           ___altoft (ARG)
  1530 ;;             ___ftpack
  1531 ;;           ___fttol (ARG)
  1532 ;;             ___ftpack (ARG)
  1533 ;;             ___awmod (ARG)
  1534 ;;             ___awdiv (ARG)
  1535 ;;               ___awmod (ARG)
  1536 ;;             ___bmul (ARG)
  1537 ;;               ___lbmod (ARG)
  1538 ;;               ___lbdiv (ARG)
  1539 ;;                 ___lbmod (ARG)
  1540 ;;           ___awdiv (ARG)
  1541 ;;             ___awmod (ARG)
  1542 ;;           ___awmod (ARG)
  1543 ;;           ___bmul (ARG)
  1544 ;;             ___lbmod (ARG)
  1545 ;;             ___lbdiv (ARG)
  1546 ;;               ___lbmod (ARG)
  1547 ;;           ___lbdiv (ARG)
  1548 ;;             ___lbmod (ARG)
  1549 ;;           ___lbmod (ARG)
  1550 ;;         ___bmul
  1551 ;;           ___lbmod (ARG)
  1552 ;;           ___lbdiv (ARG)
  1553 ;;             ___lbmod (ARG)
  1554 ;;         ___fttol (ARG)
  1555 ;;           ___ftpack (ARG)
  1556 ;;           ___awmod (ARG)
  1557 ;;           ___awdiv (ARG)
  1558 ;;             ___awmod (ARG)
  1559 ;;           ___bmul (ARG)
  1560 ;;             ___lbmod (ARG)
  1561 ;;             ___lbdiv (ARG)
  1562 ;;               ___lbmod (ARG)
  1563 ;;       ___ftmul
  1564 ;;         ___ftpack
  1565 ;;         ___ftdiv (ARG)
  1566 ;;           ___ftpack
  1567 ;;           ___altoft (ARG)
  1568 ;;             ___ftpack
  1569 ;;         ___altoft (ARG)
  1570 ;;           ___ftpack
  1571 ;;         ___fttol (ARG)
  1572 ;;           ___ftpack (ARG)
  1573 ;;           ___awmod (ARG)
  1574 ;;           ___awdiv (ARG)
  1575 ;;             ___awmod (ARG)
  1576 ;;           ___bmul (ARG)
  1577 ;;             ___lbmod (ARG)
  1578 ;;             ___lbdiv (ARG)
  1579 ;;               ___lbmod (ARG)
  1580 ;;         ___awdiv (ARG)
  1581 ;;           ___awmod (ARG)
  1582 ;;         ___awmod (ARG)
  1583 ;;         ___bmul (ARG)
  1584 ;;           ___lbmod (ARG)
  1585 ;;           ___lbdiv (ARG)
  1586 ;;             ___lbmod (ARG)
  1587 ;;         ___lbdiv (ARG)
  1588 ;;           ___lbmod (ARG)
  1589 ;;         ___lbmod (ARG)
  1590 ;;       _fround
  1591 ;;         ___lbmod
  1592 ;;         ___bmul
  1593 ;;           ___lbmod (ARG)
  1594 ;;           ___lbdiv (ARG)
  1595 ;;             ___lbmod (ARG)
  1596 ;;         ___lbdiv
  1597 ;;           ___lbmod (ARG)
  1598 ;;         ___ftmul
  1599 ;;           ___ftpack
  1600 ;;           ___ftdiv (ARG)
  1601 ;;             ___ftpack
  1602 ;;             ___altoft (ARG)
  1603 ;;               ___ftpack
  1604 ;;           ___altoft (ARG)
  1605 ;;             ___ftpack
  1606 ;;           ___fttol (ARG)
  1607 ;;             ___ftpack (ARG)
  1608 ;;             ___awmod (ARG)
  1609 ;;             ___awdiv (ARG)
  1610 ;;               ___awmod (ARG)
  1611 ;;             ___bmul (ARG)
  1612 ;;               ___lbmod (ARG)
  1613 ;;               ___lbdiv (ARG)
  1614 ;;                 ___lbmod (ARG)
  1615 ;;           ___awdiv (ARG)
  1616 ;;             ___awmod (ARG)
  1617 ;;           ___awmod (ARG)
  1618 ;;           ___bmul (ARG)
  1619 ;;             ___lbmod (ARG)
  1620 ;;             ___lbdiv (ARG)
  1621 ;;               ___lbmod (ARG)
  1622 ;;           ___lbdiv (ARG)
  1623 ;;             ___lbmod (ARG)
  1624 ;;           ___lbmod (ARG)
  1625 ;;         ___ftadd (ARG)
  1626 ;;           ___ftpack
  1627 ;;           ___lbmod (ARG)
  1628 ;;           ___bmul (ARG)
  1629 ;;             ___lbmod (ARG)
  1630 ;;             ___lbdiv (ARG)
  1631 ;;               ___lbmod (ARG)
  1632 ;;           ___lbdiv (ARG)
  1633 ;;             ___lbmod (ARG)
  1634 ;;           ___ftmul (ARG)
  1635 ;;             ___ftpack
  1636 ;;             ___ftdiv (ARG)
  1637 ;;               ___ftpack
  1638 ;;               ___altoft (ARG)
  1639 ;;                 ___ftpack
  1640 ;;             ___altoft (ARG)
  1641 ;;               ___ftpack
  1642 ;;             ___fttol (ARG)
  1643 ;;               ___ftpack (ARG)
  1644 ;;               ___awmod (ARG)
  1645 ;;               ___awdiv (ARG)
  1646 ;;                 ___awmod (ARG)
  1647 ;;               ___bmul (ARG)
  1648 ;;                 ___lbmod (ARG)
  1649 ;;                 ___lbdiv (ARG)
  1650 ;;                   ___lbmod (ARG)
  1651 ;;             ___awdiv (ARG)
  1652 ;;               ___awmod (ARG)
  1653 ;;             ___awmod (ARG)
  1654 ;;             ___bmul (ARG)
  1655 ;;               ___lbmod (ARG)
  1656 ;;               ___lbdiv (ARG)
  1657 ;;                 ___lbmod (ARG)
  1658 ;;             ___lbdiv (ARG)
  1659 ;;               ___lbmod (ARG)
  1660 ;;             ___lbmod (ARG)
  1661 ;;       ___ftadd
  1662 ;;         ___ftpack
  1663 ;;         ___lbmod (ARG)
  1664 ;;         ___bmul (ARG)
  1665 ;;           ___lbmod (ARG)
  1666 ;;           ___lbdiv (ARG)
  1667 ;;             ___lbmod (ARG)
  1668 ;;         ___lbdiv (ARG)
  1669 ;;           ___lbmod (ARG)
  1670 ;;         ___ftmul (ARG)
  1671 ;;           ___ftpack
  1672 ;;           ___ftdiv (ARG)
  1673 ;;             ___ftpack
  1674 ;;             ___altoft (ARG)
  1675 ;;               ___ftpack
  1676 ;;           ___altoft (ARG)
  1677 ;;             ___ftpack
  1678 ;;           ___fttol (ARG)
  1679 ;;             ___ftpack (ARG)
  1680 ;;             ___awmod (ARG)
  1681 ;;             ___awdiv (ARG)
  1682 ;;               ___awmod (ARG)
  1683 ;;             ___bmul (ARG)
  1684 ;;               ___lbmod (ARG)
  1685 ;;               ___lbdiv (ARG)
  1686 ;;                 ___lbmod (ARG)
  1687 ;;           ___awdiv (ARG)
  1688 ;;             ___awmod (ARG)
  1689 ;;           ___awmod (ARG)
  1690 ;;           ___bmul (ARG)
  1691 ;;             ___lbmod (ARG)
  1692 ;;             ___lbdiv (ARG)
  1693 ;;               ___lbmod (ARG)
  1694 ;;           ___lbdiv (ARG)
  1695 ;;             ___lbmod (ARG)
  1696 ;;           ___lbmod (ARG)
  1697 ;;       ___fttol
  1698 ;;         ___ftpack (ARG)
  1699 ;;         ___awmod (ARG)
  1700 ;;         ___awdiv (ARG)
  1701 ;;           ___awmod (ARG)
  1702 ;;         ___bmul (ARG)
  1703 ;;           ___lbmod (ARG)
  1704 ;;           ___lbdiv (ARG)
  1705 ;;             ___lbmod (ARG)
  1706 ;;       __div_to_l_
  1707 ;;       __tdiv_to_l_
  1708 ;;       ___lltoft
  1709 ;;         ___ftpack
  1710 ;;       ___ftsub
  1711 ;;         ___ftadd
  1712 ;;           ___ftpack
  1713 ;;           ___lbmod (ARG)
  1714 ;;           ___bmul (ARG)
  1715 ;;             ___lbmod (ARG)
  1716 ;;             ___lbdiv (ARG)
  1717 ;;               ___lbmod (ARG)
  1718 ;;           ___lbdiv (ARG)
  1719 ;;             ___lbmod (ARG)
  1720 ;;           ___ftmul (ARG)
  1721 ;;             ___ftpack
  1722 ;;             ___ftdiv (ARG)
  1723 ;;               ___ftpack
  1724 ;;               ___altoft (ARG)
  1725 ;;                 ___ftpack
  1726 ;;             ___altoft (ARG)
  1727 ;;               ___ftpack
  1728 ;;             ___fttol (ARG)
  1729 ;;               ___ftpack (ARG)
  1730 ;;               ___awmod (ARG)
  1731 ;;               ___awdiv (ARG)
  1732 ;;                 ___awmod (ARG)
  1733 ;;               ___bmul (ARG)
  1734 ;;                 ___lbmod (ARG)
  1735 ;;                 ___lbdiv (ARG)
  1736 ;;                   ___lbmod (ARG)
  1737 ;;             ___awdiv (ARG)
  1738 ;;               ___awmod (ARG)
  1739 ;;             ___awmod (ARG)
  1740 ;;             ___bmul (ARG)
  1741 ;;               ___lbmod (ARG)
  1742 ;;               ___lbdiv (ARG)
  1743 ;;                 ___lbmod (ARG)
  1744 ;;             ___lbdiv (ARG)
  1745 ;;               ___lbmod (ARG)
  1746 ;;             ___lbmod (ARG)
  1747 ;;         ___lltoft (ARG)
  1748 ;;           ___ftpack
  1749 ;;       ___lldiv
  1750 ;;       ___llmod
  1751 ;;         ___lldiv (ARG)
  1752 ;;   ___ftge
  1753 ;;   _lcd_gotoxy
  1754 ;;     _lcd_put_byte
  1755 ;;     _lcd_busy
  1756 ;;   _printf
  1757 ;;     __doprnt
  1758 ;;       Absolute function(Fake)
  1759 ;;       _putch
  1760 ;;         _lcd_putc
  1761 ;;           _lcd_put_byte
  1762 ;;           _lcd_busy
  1763 ;;           _lcd_gotoxy
  1764 ;;             _lcd_put_byte
  1765 ;;             _lcd_busy
  1766 ;;           _isprint
  1767 ;;         ___llmod (ARG)
  1768 ;;           ___lldiv (ARG)
  1769 ;;         ___lldiv (ARG)
  1770 ;;       _isdigit
  1771 ;;       ___wmul
  1772 ;;       ___ftge
  1773 ;;       ___ftneg
  1774 ;;       ___awdiv
  1775 ;;         ___awmod (ARG)
  1776 ;;       _scale
  1777 ;;         ___awmod
  1778 ;;         ___awdiv
  1779 ;;           ___awmod (ARG)
  1780 ;;         ___ftmul
  1781 ;;           ___ftpack
  1782 ;;           ___ftdiv (ARG)
  1783 ;;             ___ftpack
  1784 ;;             ___altoft (ARG)
  1785 ;;               ___ftpack
  1786 ;;           ___altoft (ARG)
  1787 ;;             ___ftpack
  1788 ;;           ___fttol (ARG)
  1789 ;;             ___ftpack (ARG)
  1790 ;;             ___awmod (ARG)
  1791 ;;             ___awdiv (ARG)
  1792 ;;               ___awmod (ARG)
  1793 ;;             ___bmul (ARG)
  1794 ;;               ___lbmod (ARG)
  1795 ;;               ___lbdiv (ARG)
  1796 ;;                 ___lbmod (ARG)
  1797 ;;           ___awdiv (ARG)
  1798 ;;             ___awmod (ARG)
  1799 ;;           ___awmod (ARG)
  1800 ;;           ___bmul (ARG)
  1801 ;;             ___lbmod (ARG)
  1802 ;;             ___lbdiv (ARG)
  1803 ;;               ___lbmod (ARG)
  1804 ;;           ___lbdiv (ARG)
  1805 ;;             ___lbmod (ARG)
  1806 ;;           ___lbmod (ARG)
  1807 ;;         ___bmul
  1808 ;;           ___lbmod (ARG)
  1809 ;;           ___lbdiv (ARG)
  1810 ;;             ___lbmod (ARG)
  1811 ;;         ___fttol (ARG)
  1812 ;;           ___ftpack (ARG)
  1813 ;;           ___awmod (ARG)
  1814 ;;           ___awdiv (ARG)
  1815 ;;             ___awmod (ARG)
  1816 ;;           ___bmul (ARG)
  1817 ;;             ___lbmod (ARG)
  1818 ;;             ___lbdiv (ARG)
  1819 ;;               ___lbmod (ARG)
  1820 ;;       ___ftmul
  1821 ;;         ___ftpack
  1822 ;;         ___ftdiv (ARG)
  1823 ;;           ___ftpack
  1824 ;;           ___altoft (ARG)
  1825 ;;             ___ftpack
  1826 ;;         ___altoft (ARG)
  1827 ;;           ___ftpack
  1828 ;;         ___fttol (ARG)
  1829 ;;           ___ftpack (ARG)
  1830 ;;           ___awmod (ARG)
  1831 ;;           ___awdiv (ARG)
  1832 ;;             ___awmod (ARG)
  1833 ;;           ___bmul (ARG)
  1834 ;;             ___lbmod (ARG)
  1835 ;;             ___lbdiv (ARG)
  1836 ;;               ___lbmod (ARG)
  1837 ;;         ___awdiv (ARG)
  1838 ;;           ___awmod (ARG)
  1839 ;;         ___awmod (ARG)
  1840 ;;         ___bmul (ARG)
  1841 ;;           ___lbmod (ARG)
  1842 ;;           ___lbdiv (ARG)
  1843 ;;             ___lbmod (ARG)
  1844 ;;         ___lbdiv (ARG)
  1845 ;;           ___lbmod (ARG)
  1846 ;;         ___lbmod (ARG)
  1847 ;;       _fround
  1848 ;;         ___lbmod
  1849 ;;         ___bmul
  1850 ;;           ___lbmod (ARG)
  1851 ;;           ___lbdiv (ARG)
  1852 ;;             ___lbmod (ARG)
  1853 ;;         ___lbdiv
  1854 ;;           ___lbmod (ARG)
  1855 ;;         ___ftmul
  1856 ;;           ___ftpack
  1857 ;;           ___ftdiv (ARG)
  1858 ;;             ___ftpack
  1859 ;;             ___altoft (ARG)
  1860 ;;               ___ftpack
  1861 ;;           ___altoft (ARG)
  1862 ;;             ___ftpack
  1863 ;;           ___fttol (ARG)
  1864 ;;             ___ftpack (ARG)
  1865 ;;             ___awmod (ARG)
  1866 ;;             ___awdiv (ARG)
  1867 ;;               ___awmod (ARG)
  1868 ;;             ___bmul (ARG)
  1869 ;;               ___lbmod (ARG)
  1870 ;;               ___lbdiv (ARG)
  1871 ;;                 ___lbmod (ARG)
  1872 ;;           ___awdiv (ARG)
  1873 ;;             ___awmod (ARG)
  1874 ;;           ___awmod (ARG)
  1875 ;;           ___bmul (ARG)
  1876 ;;             ___lbmod (ARG)
  1877 ;;             ___lbdiv (ARG)
  1878 ;;               ___lbmod (ARG)
  1879 ;;           ___lbdiv (ARG)
  1880 ;;             ___lbmod (ARG)
  1881 ;;           ___lbmod (ARG)
  1882 ;;         ___ftadd (ARG)
  1883 ;;           ___ftpack
  1884 ;;           ___lbmod (ARG)
  1885 ;;           ___bmul (ARG)
  1886 ;;             ___lbmod (ARG)
  1887 ;;             ___lbdiv (ARG)
  1888 ;;               ___lbmod (ARG)
  1889 ;;           ___lbdiv (ARG)
  1890 ;;             ___lbmod (ARG)
  1891 ;;           ___ftmul (ARG)
  1892 ;;             ___ftpack
  1893 ;;             ___ftdiv (ARG)
  1894 ;;               ___ftpack
  1895 ;;               ___altoft (ARG)
  1896 ;;                 ___ftpack
  1897 ;;             ___altoft (ARG)
  1898 ;;               ___ftpack
  1899 ;;             ___fttol (ARG)
  1900 ;;               ___ftpack (ARG)
  1901 ;;               ___awmod (ARG)
  1902 ;;               ___awdiv (ARG)
  1903 ;;                 ___awmod (ARG)
  1904 ;;               ___bmul (ARG)
  1905 ;;                 ___lbmod (ARG)
  1906 ;;                 ___lbdiv (ARG)
  1907 ;;                   ___lbmod (ARG)
  1908 ;;             ___awdiv (ARG)
  1909 ;;               ___awmod (ARG)
  1910 ;;             ___awmod (ARG)
  1911 ;;             ___bmul (ARG)
  1912 ;;               ___lbmod (ARG)
  1913 ;;               ___lbdiv (ARG)
  1914 ;;                 ___lbmod (ARG)
  1915 ;;             ___lbdiv (ARG)
  1916 ;;               ___lbmod (ARG)
  1917 ;;             ___lbmod (ARG)
  1918 ;;       ___ftadd
  1919 ;;         ___ftpack
  1920 ;;         ___lbmod (ARG)
  1921 ;;         ___bmul (ARG)
  1922 ;;           ___lbmod (ARG)
  1923 ;;           ___lbdiv (ARG)
  1924 ;;             ___lbmod (ARG)
  1925 ;;         ___lbdiv (ARG)
  1926 ;;           ___lbmod (ARG)
  1927 ;;         ___ftmul (ARG)
  1928 ;;           ___ftpack
  1929 ;;           ___ftdiv (ARG)
  1930 ;;             ___ftpack
  1931 ;;             ___altoft (ARG)
  1932 ;;               ___ftpack
  1933 ;;           ___altoft (ARG)
  1934 ;;             ___ftpack
  1935 ;;           ___fttol (ARG)
  1936 ;;             ___ftpack (ARG)
  1937 ;;             ___awmod (ARG)
  1938 ;;             ___awdiv (ARG)
  1939 ;;               ___awmod (ARG)
  1940 ;;             ___bmul (ARG)
  1941 ;;               ___lbmod (ARG)
  1942 ;;               ___lbdiv (ARG)
  1943 ;;                 ___lbmod (ARG)
  1944 ;;           ___awdiv (ARG)
  1945 ;;             ___awmod (ARG)
  1946 ;;           ___awmod (ARG)
  1947 ;;           ___bmul (ARG)
  1948 ;;             ___lbmod (ARG)
  1949 ;;             ___lbdiv (ARG)
  1950 ;;               ___lbmod (ARG)
  1951 ;;           ___lbdiv (ARG)
  1952 ;;             ___lbmod (ARG)
  1953 ;;           ___lbmod (ARG)
  1954 ;;       ___fttol
  1955 ;;         ___ftpack (ARG)
  1956 ;;         ___awmod (ARG)
  1957 ;;         ___awdiv (ARG)
  1958 ;;           ___awmod (ARG)
  1959 ;;         ___bmul (ARG)
  1960 ;;           ___lbmod (ARG)
  1961 ;;           ___lbdiv (ARG)
  1962 ;;             ___lbmod (ARG)
  1963 ;;       __div_to_l_
  1964 ;;       __tdiv_to_l_
  1965 ;;       ___lltoft
  1966 ;;         ___ftpack
  1967 ;;       ___ftsub
  1968 ;;         ___ftadd
  1969 ;;           ___ftpack
  1970 ;;           ___lbmod (ARG)
  1971 ;;           ___bmul (ARG)
  1972 ;;             ___lbmod (ARG)
  1973 ;;             ___lbdiv (ARG)
  1974 ;;               ___lbmod (ARG)
  1975 ;;           ___lbdiv (ARG)
  1976 ;;             ___lbmod (ARG)
  1977 ;;           ___ftmul (ARG)
  1978 ;;             ___ftpack
  1979 ;;             ___ftdiv (ARG)
  1980 ;;               ___ftpack
  1981 ;;               ___altoft (ARG)
  1982 ;;                 ___ftpack
  1983 ;;             ___altoft (ARG)
  1984 ;;               ___ftpack
  1985 ;;             ___fttol (ARG)
  1986 ;;               ___ftpack (ARG)
  1987 ;;               ___awmod (ARG)
  1988 ;;               ___awdiv (ARG)
  1989 ;;                 ___awmod (ARG)
  1990 ;;               ___bmul (ARG)
  1991 ;;                 ___lbmod (ARG)
  1992 ;;                 ___lbdiv (ARG)
  1993 ;;                   ___lbmod (ARG)
  1994 ;;             ___awdiv (ARG)
  1995 ;;               ___awmod (ARG)
  1996 ;;             ___awmod (ARG)
  1997 ;;             ___bmul (ARG)
  1998 ;;               ___lbmod (ARG)
  1999 ;;               ___lbdiv (ARG)
  2000 ;;                 ___lbmod (ARG)
  2001 ;;             ___lbdiv (ARG)
  2002 ;;               ___lbmod (ARG)
  2003 ;;             ___lbmod (ARG)
  2004 ;;         ___lltoft (ARG)
  2005 ;;           ___ftpack
  2006 ;;       ___lldiv
  2007 ;;       ___llmod
  2008 ;;         ___lldiv (ARG)
  2009 ;;
  2010 ;; _ngat (ROOT)
  2011 ;;   _abs
  2012 ;;
  2013 ;; Address spaces:
  2014 ;;Name               Size   Autos  Total    Cost      Usage
  2015 ;;BITCOMMON            E      0       0       0        0.0%
  2016 ;;EEDATA             100      0       0       0        0.0%
  2017 ;;NULL                 0      0       0       0        0.0%
  2018 ;;CODE                 0      0       0       0        0.0%
  2019 ;;COMMON               E      6       C       1       85.7%
  2020 ;;BITSFR0              0      0       0       1        0.0%
  2021 ;;SFR0                 0      0       0       1        0.0%
  2022 ;;BITSFR1              0      0       0       2        0.0%
  2023 ;;SFR1                 0      0       0       2        0.0%
  2024 ;;STACK                0      0       A       2        0.0%
  2025 ;;ABS                  0      0      98       3        0.0%
  2026 ;;BITBANK0            50      0       0       4        0.0%
  2027 ;;BITSFR3              0      0       0       4        0.0%
  2028 ;;SFR3                 0      0       0       4        0.0%
  2029 ;;BANK0               50     50      50       5      100.0%
  2030 ;;BITSFR2              0      0       0       5        0.0%
  2031 ;;SFR2                 0      0       0       5        0.0%
  2032 ;;BITBANK1            50      0       0       6        0.0%
  2033 ;;BANK1               50     30      3C       7       75.0%
  2034 ;;BITBANK3            60      0       0       8        0.0%
  2035 ;;BANK3               60      0       0       9        0.0%
  2036 ;;BITBANK2            60      0       0      10        0.0%
  2037 ;;BANK2               60      0       0      11        0.0%
  2038 ;;DATA                 0      0      A2      12        0.0%
  2039                           
  2040                           
  2041 ;; *************** function _main *****************
  2042 ;; Defined at:
  2043 ;;		line 21 in file "C:\Users\DELL\Desktop\vxl\mp\nhapdulieu.c"
  2044 ;; Parameters:    Size  Location     Type
  2045 ;;		None
  2046 ;; Auto vars:     Size  Location     Type
  2047 ;;  data           20   28[BANK1 ] unsigned char [20]
  2048 ;; Return value:  Size  Location     Type
  2049 ;;		None               void
  2050 ;; Registers used:
  2051 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2052 ;; Tracked objects:
  2053 ;;		On entry : 17F/0
  2054 ;;		On exit  : 60/0
  2055 ;;		Unchanged: 0/0
  2056 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2057 ;;      Params:         0       0       0       0       0
  2058 ;;      Locals:         0       0      20       0       0
  2059 ;;      Temps:          0       3       0       0       0
  2060 ;;      Totals:         0       3      20       0       0
  2061 ;;Total ram usage:       23 bytes
  2062 ;; Hardware stack levels required when called:    8
  2063 ;; This function calls:
  2064 ;;		_lcd_init
  2065 ;;		_pwm_10bit
  2066 ;;		_tx_init
  2067 ;;		_rx_init
  2068 ;;		_send_string
  2069 ;;		___altoft
  2070 ;;		___ftdiv
  2071 ;;		___ftmul
  2072 ;;		_sprintf
  2073 ;;		___ftge
  2074 ;;		_lcd_gotoxy
  2075 ;;		_printf
  2076 ;; This function is called by:
  2077 ;;		Startup code after reset
  2078 ;; This function uses a non-reentrant model
  2079 ;;
  2080  169B                     _main:	
  2081                           
  2082                           ;nhapdulieu.c: 22: ANSEL = ANSELH = 0;
  2083                           
  2084                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2085  169B  1683               	bsf	3,5	;RP0=1, select bank3
  2086  169C  1703               	bsf	3,6	;RP1=1, select bank3
  2087  169D  0189               	clrf	9	;volatile
  2088  169E  0188               	clrf	8	;volatile
  2089                           
  2090                           ;nhapdulieu.c: 23: lcd_init();
  2091  169F  120A  118A  2544   	fcall	_lcd_init
      +       160A  118A         
  2092                           
  2093                           ;nhapdulieu.c: 24: TRISC2 =0;
  2094  16A4  1683               	bsf	3,5	;RP0=1, select bank1
  2095  16A5  3007               	movlw	7
  2096  16A6  1107               	bcf	7,2
  2097                           
  2098                           ;nhapdulieu.c: 26: T0CS = 0;
  2099  16A7  1281               	bcf	1,5
  2100                           
  2101                           ;nhapdulieu.c: 27: PSA = 0;
  2102  16A8  1181               	bcf	1,3
  2103                           
  2104                           ;nhapdulieu.c: 28: PS2 = 0; PS1 = 1;PS0 = 0;
  2105  16A9  1101               	bcf	1,2
  2106  16AA  1481               	bsf	1,1
  2107  16AB  1001               	bcf	1,0
  2108                           
  2109                           ;nhapdulieu.c: 29: TMR0 = 7;
  2110  16AC  1283               	bcf	3,5	;RP0=0, select bank0
  2111  16AD  0081               	movwf	1	;volatile
  2112                           
  2113                           ;nhapdulieu.c: 30: T0IE = 1; T0IF = 0; GIE = 1;
  2114  16AE  168B               	bsf	11,5
  2115  16AF  110B               	bcf	11,2
  2116  16B0  178B               	bsf	11,7
  2117                           
  2118                           ;nhapdulieu.c: 32: TRISC0 = 1; TRISA3=0; TRISA4=0;
  2119  16B1  1683               	bsf	3,5	;RP0=1, select bank1
  2120  16B2  1407               	bsf	7,0
  2121  16B3  1185               	bcf	5,3
  2122  16B4  1205               	bcf	5,4
  2123                           
  2124                           ;nhapdulieu.c: 33: TMR1CS = 1;
  2125  16B5  1283               	bcf	3,5	;RP0=0, select bank0
  2126  16B6  1490               	bsf	16,1
  2127                           
  2128                           ;nhapdulieu.c: 34: T1CKPS1 = 0; T1CKPS0 = 0;
  2129  16B7  1290               	bcf	16,5
  2130  16B8  1210               	bcf	16,4
  2131                           
  2132                           ;nhapdulieu.c: 35: T1SYNC = 1;
  2133  16B9  1510               	bsf	16,2
  2134                           
  2135                           ;nhapdulieu.c: 36: TMR1 = 0;
  2136  16BA  018E               	clrf	14	;volatile
  2137  16BB  018F               	clrf	15	;volatile
  2138                           
  2139                           ;nhapdulieu.c: 37: TMR1GE = 0; TMR1ON = 1;
  2140  16BC  1310               	bcf	16,6
  2141  16BD  1410               	bsf	16,0
  2142                           
  2143                           ;nhapdulieu.c: 39: T2CKPS1=0; T2CKPS0=1;
  2144  16BE  1092               	bcf	18,1
  2145  16BF  1412               	bsf	18,0
  2146                           
  2147                           ;nhapdulieu.c: 40: TMR2 =0;
  2148  16C0  0191               	clrf	17	;volatile
  2149                           
  2150                           ;nhapdulieu.c: 41: PR2= 124;
  2151  16C1  307C               	movlw	124
  2152  16C2  1683               	bsf	3,5	;RP0=1, select bank1
  2153  16C3  0092               	movwf	18	;volatile
  2154                           
  2155                           ;nhapdulieu.c: 42: CCP1CON = 0b00001100;
  2156  16C4  300C               	movlw	12
  2157  16C5  1283               	bcf	3,5	;RP0=0, select bank0
  2158  16C6  0097               	movwf	23	;volatile
  2159                           
  2160                           ;nhapdulieu.c: 43: TMR2ON = 1;
  2161  16C7  1512               	bsf	18,2
  2162                           
  2163                           ;nhapdulieu.c: 44: pwm_dem =350;
  2164  16C8  1683               	bsf	3,5	;RP0=1, select bank1
  2165  16C9  3001               	movlw	1
  2166  16CA  01D3               	clrf	(_pwm_dem+3)^(0+128)
  2167  16CB  01D2               	clrf	(_pwm_dem+2)^(0+128)
  2168  16CC  00D1               	movwf	(_pwm_dem+1)^(0+128)
  2169  16CD  305E               	movlw	94
  2170  16CE  00D0               	movwf	_pwm_dem^(0+128)
  2171                           
  2172                           ;nhapdulieu.c: 45: pwm_10bit(pwm_dem);
  2173  16CF  1283               	bcf	3,5	;RP0=0, select bank0
  2174  16D0  00AE               	movwf	?_pwm_10bit
  2175  16D1  3001               	movlw	1
  2176  16D2  00AF               	movwf	?_pwm_10bit+1
  2177  16D3  120A  118A  2127   	fcall	_pwm_10bit
      +       160A  118A         
  2178                           
  2179                           ;nhapdulieu.c: 48: tx_init();
  2180  16D8  160A  118A  2285   	fcall	_tx_init
      +       160A  118A         
  2181                           
  2182                           ;nhapdulieu.c: 49: rx_init();
  2183  16DD  120A  118A  27F2   	fcall	_rx_init
      +       160A  118A         
  2184  16E2                     l7897:	
  2185                           
  2186                           ;nhapdulieu.c: 52: {
  2187                           ;nhapdulieu.c: 53: if(rx_data == '1') {RA3=RA4 = 0;send_string(" Number 1 ");}
  2188  16E2  1683               	bsf	3,5	;RP0=1, select bank1
  2189  16E3  0857               	movf	_rx_data^(0+128),w
  2190  16E4  3A31               	xorlw	49
  2191  16E5  1D03               	skipz
  2192  16E6  2EEC               	goto	l7903
  2193  16E7  1283               	bcf	3,5	;RP0=0, select bank0
  2194  16E8  3087               	movlw	(STR_1-__stringbase)& (0+255)
  2195  16E9  1205               	bcf	5,4
  2196  16EA  1185               	bcf	5,3
  2197  16EB  2F39               	goto	L1
  2198  16EC                     l7903:	
  2199                           
  2200                           ;nhapdulieu.c: 54: else if(rx_data == '2') {RA3=RA4 = 1;send_string(" Number 2 ");}
  2201  16EC  0857               	movf	_rx_data^(0+128),w
  2202  16ED  3A32               	xorlw	50
  2203  16EE  1D03               	skipz
  2204  16EF  2EFD               	goto	l7909
  2205  16F0  1283               	bcf	3,5	;RP0=0, select bank0
  2206  16F1  1605               	bsf	5,4
  2207  16F2  1E05               	btfss	5,4
  2208  16F3  2EF8               	goto	u4540
  2209  16F4  1283               	bcf	3,5	;RP0=0, select bank0
  2210  16F5  1303               	bcf	3,6	;RP1=0, select bank0
  2211  16F6  1585               	bsf	5,3
  2212  16F7  2EFB               	goto	l7907
  2213  16F8                     u4540:	
  2214  16F8  1283               	bcf	3,5	;RP0=0, select bank0
  2215  16F9  1303               	bcf	3,6	;RP1=0, select bank0
  2216  16FA  1185               	bcf	5,3
  2217  16FB                     l7907:	
  2218  16FB  3092               	movlw	(STR_2-__stringbase)& (0+255)
  2219  16FC  2F39               	goto	L1
  2220  16FD                     l7909:	
  2221                           
  2222                           ;nhapdulieu.c: 55: else if(rx_data == '3') {RA3=1; RA4 = 0;send_string(" Number 3 ");}
  2223  16FD  0857               	movf	_rx_data^(0+128),w
  2224  16FE  3A33               	xorlw	51
  2225  16FF  1D03               	skipz
  2226  1700  2F06               	goto	l7915
  2227  1701  1283               	bcf	3,5	;RP0=0, select bank0
  2228  1702  309D               	movlw	(STR_3-__stringbase)& (0+255)
  2229  1703  1585               	bsf	5,3
  2230  1704  1205               	bcf	5,4
  2231  1705  2F39               	goto	L1
  2232  1706                     l7915:	
  2233                           
  2234                           ;nhapdulieu.c: 56: else if(rx_data == '4') {RA3=0; RA4 = 1;send_string(" Number 4 ");}
  2235  1706  0857               	movf	_rx_data^(0+128),w
  2236  1707  3A34               	xorlw	52
  2237  1708  1D03               	skipz
  2238  1709  2F0F               	goto	l2166
  2239  170A  1283               	bcf	3,5	;RP0=0, select bank0
  2240  170B  30A8               	movlw	(STR_4-__stringbase)& (0+255)
  2241  170C  1185               	bcf	5,3
  2242  170D  1605               	bsf	5,4
  2243  170E  2F39               	goto	L1
  2244  170F                     l2166:	
  2245                           
  2246                           ;nhapdulieu.c: 57: else
  2247                           ;nhapdulieu.c: 58: {
  2248                           ;nhapdulieu.c: 59: RA3=RA4=1;
  2249  170F  1283               	bcf	3,5	;RP0=0, select bank0
  2250  1710  1605               	bsf	5,4
  2251  1711  1E05               	btfss	5,4
  2252  1712  2F17               	goto	u4580
  2253  1713  1283               	bcf	3,5	;RP0=0, select bank0
  2254  1714  1303               	bcf	3,6	;RP1=0, select bank0
  2255  1715  1585               	bsf	5,3
  2256  1716  2F1A               	goto	l7921
  2257  1717                     u4580:	
  2258  1717  1283               	bcf	3,5	;RP0=0, select bank0
  2259  1718  1303               	bcf	3,6	;RP1=0, select bank0
  2260  1719  1185               	bcf	5,3
  2261  171A                     l7921:	
  2262                           
  2263                           ;nhapdulieu.c: 60: _delay((unsigned long)((100)*(20000000/4000.0)));
  2264  171A  3003               	movlw	3
  2265  171B  00EF               	movwf	??_main+2
  2266  171C  308A               	movlw	138
  2267  171D  00EE               	movwf	??_main+1
  2268  171E  3056               	movlw	86
  2269  171F  00ED               	movwf	??_main
  2270  1720                     u4617:	
  2271  1720  0BED               	decfsz	??_main,f
  2272  1721  2F20               	goto	u4617
  2273  1722  0BEE               	decfsz	??_main+1,f
  2274  1723  2F20               	goto	u4617
  2275  1724  0BEF               	decfsz	??_main+2,f
  2276  1725  2F20               	goto	u4617
  2277  1726  2F27               	nop2
  2278                           
  2279                           ;nhapdulieu.c: 61: RA3=RA4=0;
  2280  1727  1283               	bcf	3,5	;RP0=0, select bank0
  2281  1728  1303               	bcf	3,6	;RP1=0, select bank0
  2282  1729  3003               	movlw	3
  2283  172A  1205               	bcf	5,4
  2284  172B  1185               	bcf	5,3
  2285                           
  2286                           ;nhapdulieu.c: 62: _delay((unsigned long)((100)*(20000000/4000.0)));
  2287  172C  00EF               	movwf	??_main+2
  2288  172D  308A               	movlw	138
  2289  172E  00EE               	movwf	??_main+1
  2290  172F  3056               	movlw	86
  2291  1730  00ED               	movwf	??_main
  2292  1731                     u4627:	
  2293  1731  0BED               	decfsz	??_main,f
  2294  1732  2F31               	goto	u4627
  2295  1733  0BEE               	decfsz	??_main+1,f
  2296  1734  2F31               	goto	u4627
  2297  1735  0BEF               	decfsz	??_main+2,f
  2298  1736  2F31               	goto	u4627
  2299  1737  2F38               	nop2
  2300                           
  2301                           ;nhapdulieu.c: 63: send_string(" Other numbers ");
  2302  1738  3077               	movlw	(STR_5-__stringbase)& (0+255)
  2303  1739                     L1:	
  2304  1739  120A  118A  20DB   	fcall	_send_string
      +       160A  118A         
  2305                           
  2306                           ;nhapdulieu.c: 64: }
  2307                           ;nhapdulieu.c: 65: v = (xung/360.0)*10.0*60.0;
  2308  173E  3016               	movlw	22
  2309  173F  01BD               	clrf	?___ftmul
  2310  1740  00BE               	movwf	?___ftmul+1
  2311  1741  3044               	movlw	68
  2312  1742  00BF               	movwf	?___ftmul+2
  2313  1743  30B4               	movlw	180
  2314  1744  01AE               	clrf	?___ftdiv
  2315  1745  00AF               	movwf	?___ftdiv+1
  2316  1746  3043               	movlw	67
  2317  1747  00B0               	movwf	?___ftdiv+2
  2318  1748  1683               	bsf	3,5	;RP0=1, select bank1
  2319  1749  085B               	movf	(_xung+3)^(0+128),w
  2320  174A  1283               	bcf	3,5	;RP0=0, select bank0
  2321  174B  00AB               	movwf	?___altoft+3
  2322  174C  1683               	bsf	3,5	;RP0=1, select bank1
  2323  174D  085A               	movf	(_xung+2)^(0+128),w
  2324  174E  1283               	bcf	3,5	;RP0=0, select bank0
  2325  174F  00AA               	movwf	?___altoft+2
  2326  1750  1683               	bsf	3,5	;RP0=1, select bank1
  2327  1751  0859               	movf	(_xung+1)^(0+128),w
  2328  1752  1283               	bcf	3,5	;RP0=0, select bank0
  2329  1753  00A9               	movwf	?___altoft+1
  2330  1754  1683               	bsf	3,5	;RP0=1, select bank1
  2331  1755  0858               	movf	_xung^(0+128),w
  2332  1756  1283               	bcf	3,5	;RP0=0, select bank0
  2333  1757  00A8               	movwf	?___altoft
  2334  1758  120A  118A  213B   	fcall	___altoft
      +       160A  118A         
  2335  175D  0828               	movf	?___altoft,w
  2336  175E  00B1               	movwf	?___ftdiv+3
  2337  175F  0829               	movf	?___altoft+1,w
  2338  1760  00B2               	movwf	?___ftdiv+4
  2339  1761  082A               	movf	?___altoft+2,w
  2340  1762  00B3               	movwf	?___ftdiv+5
  2341  1763  120A  118A  216A   	fcall	___ftdiv
      +       160A  118A         
  2342  1768  082E               	movf	?___ftdiv,w
  2343  1769  00C0               	movwf	?___ftmul+3
  2344  176A  082F               	movf	?___ftdiv+1,w
  2345  176B  00C1               	movwf	?___ftmul+4
  2346  176C  0830               	movf	?___ftdiv+2,w
  2347  176D  00C2               	movwf	?___ftmul+5
  2348  176E  120A  118A  23E6   	fcall	___ftmul
      +       160A  118A         
  2349  1773  083D               	movf	?___ftmul,w
  2350  1774  1683               	bsf	3,5	;RP0=1, select bank1
  2351  1775  00D4               	movwf	_v^(0+128)
  2352  1776  1283               	bcf	3,5	;RP0=0, select bank0
  2353  1777  083E               	movf	?___ftmul+1,w
  2354  1778  1683               	bsf	3,5	;RP0=1, select bank1
  2355  1779  00D5               	movwf	(_v+1)^(0+128)
  2356  177A  1283               	bcf	3,5	;RP0=0, select bank0
  2357  177B  083F               	movf	?___ftmul+2,w
  2358  177C  1683               	bsf	3,5	;RP0=1, select bank1
  2359  177D  00D6               	movwf	(_v+2)^(0+128)
  2360                           
  2361                           ;nhapdulieu.c: 66: sprintf(data,"%3.2f",v);
  2362  177E  30C1               	movlw	((STR_7+3)-__stringbase)& (0+255)
  2363  177F  1283               	bcf	3,5	;RP0=0, select bank0
  2364  1780  00E9               	movwf	?_sprintf
  2365  1781  1683               	bsf	3,5	;RP0=1, select bank1
  2366  1782  0854               	movf	_v^(0+128),w
  2367  1783  1283               	bcf	3,5	;RP0=0, select bank0
  2368  1784  00EA               	movwf	?_sprintf+1
  2369  1785  1683               	bsf	3,5	;RP0=1, select bank1
  2370  1786  0855               	movf	(_v+1)^(0+128),w
  2371  1787  1283               	bcf	3,5	;RP0=0, select bank0
  2372  1788  00EB               	movwf	?_sprintf+2
  2373  1789  1683               	bsf	3,5	;RP0=1, select bank1
  2374  178A  0856               	movf	(_v+2)^(0+128),w
  2375  178B  1283               	bcf	3,5	;RP0=0, select bank0
  2376  178C  00EC               	movwf	?_sprintf+3
  2377  178D  30BC               	movlw	main@data& (0+255)
  2378  178E  160A  118A  22A5   	fcall	_sprintf
      +       160A  118A         
  2379                           
  2380                           ;nhapdulieu.c: 67: if(v<30.000){pwm_dem++;pwm_10bit(pwm_dem);}
  2381  1793  0854               	movf	_v^(0+128),w
  2382  1794  1283               	bcf	3,5	;RP0=0, select bank0
  2383  1795  00A0               	movwf	?___ftge
  2384  1796  1683               	bsf	3,5	;RP0=1, select bank1
  2385  1797  0855               	movf	(_v+1)^(0+128),w
  2386  1798  1283               	bcf	3,5	;RP0=0, select bank0
  2387  1799  00A1               	movwf	?___ftge+1
  2388  179A  1683               	bsf	3,5	;RP0=1, select bank1
  2389  179B  0856               	movf	(_v+2)^(0+128),w
  2390  179C  1283               	bcf	3,5	;RP0=0, select bank0
  2391  179D  00A2               	movwf	?___ftge+2
  2392  179E  30F0               	movlw	240
  2393  179F  01A3               	clrf	?___ftge+3
  2394  17A0  00A4               	movwf	?___ftge+4
  2395  17A1  3041               	movlw	65
  2396  17A2  00A5               	movwf	?___ftge+5
  2397  17A3  120A  118A  27C6   	fcall	___ftge
      +       160A  118A         
  2398  17A8  1803               	btfsc	3,0
  2399  17A9  2FB3               	goto	l7937
  2400  17AA  1683               	bsf	3,5	;RP0=1, select bank1
  2401  17AB  0AD0               	incf	_pwm_dem^(0+128),f
  2402  17AC  1903               	skipnz
  2403  17AD  0AD1               	incf	(_pwm_dem+1)^(0+128),f
  2404  17AE  1903               	skipnz
  2405  17AF  0AD2               	incf	(_pwm_dem+2)^(0+128),f
  2406  17B0  1903               	skipnz
  2407  17B1  0AD3               	incf	(_pwm_dem+3)^(0+128),f
  2408  17B2  2FBC               	goto	l7935
  2409  17B3                     l7937:	
  2410                           
  2411                           ;nhapdulieu.c: 68: else {pwm_dem--;pwm_10bit(pwm_dem);}
  2412  17B3  30FF               	movlw	255
  2413  17B4  1683               	bsf	3,5	;RP0=1, select bank1
  2414  17B5  07D0               	addwf	_pwm_dem^(0+128),f
  2415  17B6  1C03               	skipc
  2416  17B7  07D1               	addwf	(_pwm_dem+1)^(0+128),f
  2417  17B8  1C03               	skipc
  2418  17B9  07D2               	addwf	(_pwm_dem+2)^(0+128),f
  2419  17BA  1C03               	skipc
  2420  17BB  07D3               	addwf	(_pwm_dem+3)^(0+128),f
  2421  17BC                     l7935:	
  2422  17BC  0851               	movf	(_pwm_dem+1)^(0+128),w
  2423  17BD  1283               	bcf	3,5	;RP0=0, select bank0
  2424  17BE  00AF               	movwf	?_pwm_10bit+1
  2425  17BF  1683               	bsf	3,5	;RP0=1, select bank1
  2426  17C0  0850               	movf	_pwm_dem^(0+128),w
  2427  17C1  1283               	bcf	3,5	;RP0=0, select bank0
  2428  17C2  00AE               	movwf	?_pwm_10bit
  2429  17C3  120A  118A  2127   	fcall	_pwm_10bit
      +       160A  118A         
  2430  17C8  3000               	movlw	0
  2431                           
  2432                           ;nhapdulieu.c: 69: lcd_gotoxy(0,0);
  2433  17C9  01A5               	clrf	?_lcd_gotoxy
  2434  17CA  120A  118A  24FD   	fcall	_lcd_gotoxy
      +       160A  118A         
  2435                           
  2436                           ;nhapdulieu.c: 70: printf("v: %3.2f",v);
  2437  17CF  1683               	bsf	3,5	;RP0=1, select bank1
  2438  17D0  0854               	movf	_v^(0+128),w
  2439  17D1  1283               	bcf	3,5	;RP0=0, select bank0
  2440  17D2  00E9               	movwf	?_printf
  2441  17D3  1683               	bsf	3,5	;RP0=1, select bank1
  2442  17D4  0855               	movf	(_v+1)^(0+128),w
  2443  17D5  1283               	bcf	3,5	;RP0=0, select bank0
  2444  17D6  00EA               	movwf	?_printf+1
  2445  17D7  1683               	bsf	3,5	;RP0=1, select bank1
  2446  17D8  0856               	movf	(_v+2)^(0+128),w
  2447  17D9  1283               	bcf	3,5	;RP0=0, select bank0
  2448  17DA  00EB               	movwf	?_printf+2
  2449  17DB  30BE               	movlw	(STR_7-__stringbase)& (0+255)
  2450  17DC  160A  118A  2295   	fcall	_printf
      +       160A  118A         
  2451  17E1  3000               	movlw	0
  2452                           
  2453                           ;nhapdulieu.c: 71: lcd_gotoxy(0,1);
  2454  17E2  01A5               	clrf	?_lcd_gotoxy
  2455  17E3  0AA5               	incf	?_lcd_gotoxy,f
  2456  17E4  120A  118A  24FD   	fcall	_lcd_gotoxy
      +       160A  118A         
  2457                           
  2458                           ;nhapdulieu.c: 72: printf("xung: %05d",xung);
  2459  17E9  1683               	bsf	3,5	;RP0=1, select bank1
  2460  17EA  085B               	movf	(_xung+3)^(0+128),w
  2461  17EB  1283               	bcf	3,5	;RP0=0, select bank0
  2462  17EC  00EC               	movwf	?_printf+3
  2463  17ED  1683               	bsf	3,5	;RP0=1, select bank1
  2464  17EE  085A               	movf	(_xung+2)^(0+128),w
  2465  17EF  1283               	bcf	3,5	;RP0=0, select bank0
  2466  17F0  00EB               	movwf	?_printf+2
  2467  17F1  1683               	bsf	3,5	;RP0=1, select bank1
  2468  17F2  0859               	movf	(_xung+1)^(0+128),w
  2469  17F3  1283               	bcf	3,5	;RP0=0, select bank0
  2470  17F4  00EA               	movwf	?_printf+1
  2471  17F5  1683               	bsf	3,5	;RP0=1, select bank1
  2472  17F6  0858               	movf	_xung^(0+128),w
  2473  17F7  1283               	bcf	3,5	;RP0=0, select bank0
  2474  17F8  00E9               	movwf	?_printf
  2475  17F9  30B3               	movlw	(STR_8-__stringbase)& (0+255)
  2476  17FA  160A  118A  2295   	fcall	_printf
      +       160A  118A         
  2477  17FF  2EE2               	goto	l7897
  2478  1800                     __end_of_main:	
  2479                           
  2480                           	psect	text676
  2481  1295                     __ptext676:	
  2482 ;; =============== function _main ends ============
  2483                           
  2484                           
  2485 ;; *************** function _printf *****************
  2486 ;; Defined at:
  2487 ;;		line 14 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\printf.c"
  2488 ;; Parameters:    Size  Location     Type
  2489 ;;  f               1    wreg     PTR const unsigned char 
  2490 ;;		 -> STR_8(11), STR_7(9), 
  2491 ;; Auto vars:     Size  Location     Type
  2492 ;;  f               1   24[BANK1 ] PTR const unsigned char 
  2493 ;;		 -> STR_8(11), STR_7(9), 
  2494 ;;  pb              2   26[BANK1 ] struct __prbuf
  2495 ;;  ap              1   25[BANK1 ] PTR void [1]
  2496 ;;		 -> ?_sprintf(2), ?_printf(2), 
  2497 ;; Return value:  Size  Location     Type
  2498 ;;                  2   73[BANK0 ] int 
  2499 ;; Registers used:
  2500 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2501 ;; Tracked objects:
  2502 ;;		On entry : 60/0
  2503 ;;		On exit  : 60/0
  2504 ;;		Unchanged: 0/0
  2505 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2506 ;;      Params:         0       4       0       0       0
  2507 ;;      Locals:         0       0       4       0       0
  2508 ;;      Temps:          0       0       0       0       0
  2509 ;;      Totals:         0       4       4       0       0
  2510 ;;Total ram usage:        8 bytes
  2511 ;; Hardware stack levels used:    1
  2512 ;; Hardware stack levels required when called:    7
  2513 ;; This function calls:
  2514 ;;		__doprnt
  2515 ;; This function is called by:
  2516 ;;		_main
  2517 ;; This function uses a non-reentrant model
  2518 ;;
  2519  1295                     _printf:	
  2520                           
  2521                           ; Regs used in _printf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2522                           ;printf@f stored from wreg
  2523  1295  1683               	bsf	3,5	;RP0=1, select bank1
  2524  1296  00B8               	movwf	printf@f^(0+128)
  2525  1297  3001               	movlw	(fp__putch-fpbase)& (0+255)
  2526  1298  01BA               	clrf	printf@pb^(0+128)
  2527  1299  00BB               	movwf	(printf@pb+1)^(0+128)
  2528  129A  3069               	movlw	?_printf& (0+255)
  2529  129B  00B9               	movwf	printf@ap^(0+128)
  2530                           
  2531                           ;	Return value of _printf is never used
  2532  129C  0838               	movf	printf@f^(0+128),w
  2533  129D  1283               	bcf	3,5	;RP0=0, select bank0
  2534  129E  00E2               	movwf	?__doprnt
  2535  129F  30B9               	movlw	printf@ap& (0+255)
  2536  12A0  00E3               	movwf	?__doprnt+1
  2537  12A1  30BA               	movlw	printf@pb& (0+255)
  2538  12A2  120A  158A  2808   	ljmp	__doprnt
  2539  12A5                     __end_of_printf:	
  2540                           
  2541                           	psect	text677
  2542  12A5                     __ptext677:	
  2543 ;; =============== function _printf ends ============
  2544                           
  2545                           
  2546 ;; *************** function _sprintf *****************
  2547 ;; Defined at:
  2548 ;;		line 14 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\sprintf.c"
  2549 ;; Parameters:    Size  Location     Type
  2550 ;;  wh              1    wreg     PTR unsigned char 
  2551 ;;		 -> main@data(20), 
  2552 ;;  f               1   73[BANK0 ] PTR const unsigned char 
  2553 ;;		 -> STR_6(6), 
  2554 ;; Auto vars:     Size  Location     Type
  2555 ;;  wh              1   24[BANK1 ] PTR unsigned char 
  2556 ;;		 -> main@data(20), 
  2557 ;;  pb              2   26[BANK1 ] struct __prbuf
  2558 ;;  ap              1   25[BANK1 ] PTR void [1]
  2559 ;;		 -> ?_sprintf(2), ?_printf(2), 
  2560 ;; Return value:  Size  Location     Type
  2561 ;;                  2   73[BANK0 ] int 
  2562 ;; Registers used:
  2563 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2564 ;; Tracked objects:
  2565 ;;		On entry : 60/0
  2566 ;;		On exit  : 160/20
  2567 ;;		Unchanged: 0/0
  2568 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2569 ;;      Params:         0       4       0       0       0
  2570 ;;      Locals:         0       0       4       0       0
  2571 ;;      Temps:          0       0       0       0       0
  2572 ;;      Totals:         0       4       4       0       0
  2573 ;;Total ram usage:        8 bytes
  2574 ;; Hardware stack levels used:    1
  2575 ;; Hardware stack levels required when called:    7
  2576 ;; This function calls:
  2577 ;;		__doprnt
  2578 ;; This function is called by:
  2579 ;;		_main
  2580 ;; This function uses a non-reentrant model
  2581 ;;
  2582  12A5                     _sprintf:	
  2583                           
  2584                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2585                           ;sprintf@wh stored from wreg
  2586  12A5  1683               	bsf	3,5	;RP0=1, select bank1
  2587  12A6  00B8               	movwf	sprintf@wh^(0+128)
  2588  12A7  00BA               	movwf	sprintf@pb^(0+128)
  2589  12A8  306A               	movlw	(?_sprintf+1)& (0+255)
  2590  12A9  01BB               	clrf	(sprintf@pb+1)^(0+128)
  2591  12AA  00B9               	movwf	sprintf@ap^(0+128)
  2592  12AB  1283               	bcf	3,5	;RP0=0, select bank0
  2593  12AC  0869               	movf	sprintf@f,w
  2594  12AD  00E2               	movwf	?__doprnt
  2595  12AE  30B9               	movlw	sprintf@ap& (0+255)
  2596  12AF  00E3               	movwf	?__doprnt+1
  2597  12B0  30BA               	movlw	sprintf@pb& (0+255)
  2598  12B1  120A  158A  2008   	fcall	__doprnt
  2599  12B4  1683               	bsf	3,5	;RP0=1, select bank1
  2600  12B5  083A               	movf	sprintf@pb^(0+128),w
  2601  12B6  0084               	movwf	4
  2602  12B7  1383               	bcf	3,7	;select IRP bank0
  2603  12B8  0180               	clrf	0
  2604  12B9  0008               	return
  2605  12BA                     __end_of_sprintf:	
  2606                           
  2607                           	psect	text678
  2608  0808                     __ptext678:	
  2609 ;; =============== function _sprintf ends ============
  2610                           
  2611                           
  2612 ;; *************** function __doprnt *****************
  2613 ;; Defined at:
  2614 ;;		line 455 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\lib\doprnt.c"
  2615 ;; Parameters:    Size  Location     Type
  2616 ;;  pb              1    wreg     PTR struct __prbuf
  2617 ;;		 -> sprintf@pb(2), printf@pb(2), 
  2618 ;;  f               1   66[BANK0 ] PTR const unsigned char 
  2619 ;;		 -> STR_8(11), STR_7(9), STR_6(6), 
  2620 ;;  ap              1   67[BANK0 ] PTR PTR void 
  2621 ;;		 -> sprintf@ap(1), printf@ap(1), 
  2622 ;; Auto vars:     Size  Location     Type
  2623 ;;  pb              1   23[BANK1 ] PTR struct __prbuf
  2624 ;;		 -> sprintf@pb(2), printf@pb(2), 
  2625 ;;  _val            4   13[BANK1 ] struct .
  2626 ;;  fval            3   17[BANK1 ] struct .
  2627 ;;  integ           3    4[BANK1 ] struct .
  2628 ;;  ival            3    0        struct .
  2629 ;;  prec            2   20[BANK1 ] int 
  2630 ;;  width           2   11[BANK1 ] int 
  2631 ;;  exp             2    9[BANK1 ] int 
  2632 ;;  flag            2    7[BANK1 ] unsigned short 
  2633 ;;  c               1   22[BANK1 ] char 
  2634 ;;  d               1    0        unsigned char 
  2635 ;; Return value:  Size  Location     Type
  2636 ;;                  2   66[BANK0 ] int 
  2637 ;; Registers used:
  2638 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2639 ;; Tracked objects:
  2640 ;;		On entry : 60/0
  2641 ;;		On exit  : 60/0
  2642 ;;		Unchanged: 0/0
  2643 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2644 ;;      Params:         0       2       0       0       0
  2645 ;;      Locals:         0       0      24       0       0
  2646 ;;      Temps:          0       5       0       0       0
  2647 ;;      Totals:         0       7      24       0       0
  2648 ;;Total ram usage:       31 bytes
  2649 ;; Hardware stack levels used:    1
  2650 ;; Hardware stack levels required when called:    6
  2651 ;; This function calls:
  2652 ;;		Absolute function
  2653 ;;		_putch
  2654 ;;		_isdigit
  2655 ;;		___wmul
  2656 ;;		___ftge
  2657 ;;		___ftneg
  2658 ;;		___awdiv
  2659 ;;		_scale
  2660 ;;		___ftmul
  2661 ;;		_fround
  2662 ;;		___ftadd
  2663 ;;		___fttol
  2664 ;;		__div_to_l_
  2665 ;;		__tdiv_to_l_
  2666 ;;		___lltoft
  2667 ;;		___ftsub
  2668 ;;		___lldiv
  2669 ;;		___llmod
  2670 ;; This function is called by:
  2671 ;;		_printf
  2672 ;;		_sprintf
  2673 ;; This function uses a non-reentrant model
  2674 ;;
  2675  0808                     __doprnt:	
  2676                           
  2677 ;; using string table level
  2678                           ; Regs used in __doprnt: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2679                           ;__doprnt@pb stored from wreg
  2680  0808  1683               	bsf	3,5	;RP0=1, select bank1
  2681  0809  00B7               	movwf	__doprnt@pb^(0+128)
  2682  080A                     l7805:	
  2683  080A  1283               	bcf	3,5	;RP0=0, select bank0
  2684  080B  1303               	bcf	3,6	;RP1=0, select bank0
  2685  080C  0862               	movf	__doprnt@f,w
  2686  080D  0AE2               	incf	__doprnt@f,f
  2687  080E  0084               	movwf	4
  2688  080F  120A  118A  200F   	fcall	stringdir
      +       120A  158A         
  2689  0814  1683               	bsf	3,5	;RP0=1, select bank1
  2690  0815  00B6               	movwf	__doprnt@c^(0+128)
  2691  0816  08B6               	movf	__doprnt@c^(0+128),f
  2692  0817  1903               	btfsc	3,2
  2693  0818  2EED               	goto	l7807
  2694  0819  0836               	movf	__doprnt@c^(0+128),w
  2695  081A  3A25               	xorlw	37
  2696  081B  1903               	skipnz
  2697  081C  2836               	goto	l7449
  2698  081D  0837               	movf	__doprnt@pb^(0+128),w
  2699  081E  3E01               	addlw	1
  2700  081F  0084               	movwf	4
  2701  0820  1383               	bcf	3,7	;select IRP bank0
  2702  0821  0880               	movf	0,f
  2703  0822  1903               	skipnz
  2704  0823  282C               	goto	l7445
  2705  0824  0836               	movf	__doprnt@c^(0+128),w
  2706  0825  2712               	fcall	PL4	;call to abstracted procedure
  2707  0826  120A  118A  2100   	fcall	fptable
      +       120A  158A         
  2708  082B  280A               	goto	l7805
  2709  082C                     l7445:	
  2710  082C  0837               	movf	__doprnt@pb^(0+128),w
  2711  082D  0084               	movwf	4
  2712  082E  0800               	movf	0,w
  2713  082F  0084               	movwf	4
  2714  0830  0836               	movf	__doprnt@c^(0+128),w
  2715  0831  0080               	movwf	0
  2716  0832  0837               	movf	__doprnt@pb^(0+128),w
  2717  0833  0084               	movwf	4
  2718  0834  0A80               	incf	0,f
  2719  0835  280A               	goto	l7805
  2720  0836                     l7449:	
  2721  0836  01AB               	clrf	__doprnt@width^(0+128)
  2722  0837  01AC               	clrf	(__doprnt@width+1)^(0+128)
  2723  0838  01A7               	clrf	__doprnt@flag^(0+128)
  2724  0839  01A8               	clrf	(__doprnt@flag+1)^(0+128)
  2725  083A  283F               	goto	l7455
  2726  083B                     l2244:	
  2727  083B  1683               	bsf	3,5	;RP0=1, select bank1
  2728  083C  1527               	bsf	__doprnt@flag^(0+128),2
  2729  083D  1283               	bcf	3,5	;RP0=0, select bank0
  2730  083E  0AE2               	incf	__doprnt@f,f
  2731  083F                     l7455:	
  2732  083F  1283               	bcf	3,5	;RP0=0, select bank0
  2733  0840  0862               	movf	__doprnt@f,w
  2734  0841  0084               	movwf	4
  2735  0842  120A  118A  200F   	fcall	stringdir
      +       120A  158A         
  2736                           
  2737                           ; Switch size 1, requested type "space"
  2738                           ; Number of cases is 1, Range of values is 48 to 48
  2739                           ; switch strategies available:
  2740                           ; Name         Instructions Cycles
  2741                           ; simple_byte            4     3 (average)
  2742                           ; direct_byte           14    11 (fixed)
  2743                           ; jumptable            263     9 (fixed)
  2744                           ;	Chosen strategy is simple_byte
  2745  0847  3A30               	xorlw	48	; case 48
  2746  0848  1903               	skipnz
  2747  0849  283B               	goto	l2244
  2748  084A  284B               	goto	l7457
  2749  084B                     l7457:	
  2750  084B  0862               	movf	__doprnt@f,w
  2751  084C  0084               	movwf	4
  2752  084D  120A  118A  200F   	fcall	stringdir
      +       120A  158A         
  2753  0852  27CE  120A  158A   	fcall	_isdigit
  2754  0855  1C03               	btfss	3,0
  2755  0856  287F               	goto	l7467
  2756  0857  1683               	bsf	3,5	;RP0=1, select bank1
  2757  0858  01AB               	clrf	__doprnt@width^(0+128)
  2758  0859  01AC               	clrf	(__doprnt@width+1)^(0+128)
  2759  085A                     l7461:	
  2760  085A  1683               	bsf	3,5	;RP0=1, select bank1
  2761  085B  082C               	movf	(__doprnt@width+1)^(0+128),w
  2762  085C  1283               	bcf	3,5	;RP0=0, select bank0
  2763  085D  00A1               	movwf	?___wmul+1
  2764  085E  1683               	bsf	3,5	;RP0=1, select bank1
  2765  085F  082B               	movf	__doprnt@width^(0+128),w
  2766  0860  27C8  120A  158A   	fcall	PL40	;call to abstracted procedure
  2767  0863  27DF               	fcall	___wmul
  2768  0864  0862               	movf	__doprnt@f,w
  2769  0865  0084               	movwf	4
  2770  0866  120A  118A  200F   	fcall	stringdir
      +       120A  158A         
  2771  086B  275C  120A  158A   	fcall	PL16	;call to abstracted procedure
  2772  086E  00AB               	movwf	__doprnt@width^(0+128)
  2773  086F  27A8               	fcall	PL33	;call to abstracted procedure
  2774  0870  00AC               	movwf	(__doprnt@width+1)^(0+128)
  2775  0871  1283               	bcf	3,5	;RP0=0, select bank0
  2776  0872  0AE2               	incf	__doprnt@f,f
  2777  0873  0862               	movf	__doprnt@f,w
  2778  0874  0084               	movwf	4
  2779  0875  120A  118A  200F   	fcall	stringdir
      +       120A  158A         
  2780  087A  27CE  120A  158A   	fcall	_isdigit
  2781  087D  1803               	btfsc	3,0
  2782  087E  285A               	goto	l7461
  2783  087F                     l7467:	
  2784  087F  0862               	movf	__doprnt@f,w
  2785  0880  0084               	movwf	4
  2786  0881  120A  118A  200F   	fcall	stringdir
      +       120A  158A         
  2787  0886  3A2E               	xorlw	46
  2788  0887  1D03               	skipz
  2789  0888  28B9               	goto	l7481
  2790  0889  1683               	bsf	3,5	;RP0=1, select bank1
  2791  088A  1728               	bsf	(__doprnt@flag^(0+128)+1),6
  2792  088B  1283               	bcf	3,5	;RP0=0, select bank0
  2793  088C  0AE2               	incf	__doprnt@f,f
  2794  088D  1683               	bsf	3,5	;RP0=1, select bank1
  2795  088E  01B4               	clrf	__doprnt@prec^(0+128)
  2796  088F  01B5               	clrf	(__doprnt@prec+1)^(0+128)
  2797  0890                     l7479:	
  2798  0890  1283               	bcf	3,5	;RP0=0, select bank0
  2799  0891  0862               	movf	__doprnt@f,w
  2800  0892  0084               	movwf	4
  2801  0893  120A  118A  200F   	fcall	stringdir
      +       120A  158A         
  2802  0898  27CE  120A  158A   	fcall	_isdigit
  2803  089B  1C03               	btfss	3,0
  2804  089C  28C0               	goto	l7487
  2805  089D  1683               	bsf	3,5	;RP0=1, select bank1
  2806  089E  0835               	movf	(__doprnt@prec+1)^(0+128),w
  2807  089F  1283               	bcf	3,5	;RP0=0, select bank0
  2808  08A0  00A1               	movwf	?___wmul+1
  2809  08A1  1683               	bsf	3,5	;RP0=1, select bank1
  2810  08A2  0834               	movf	__doprnt@prec^(0+128),w
  2811  08A3  27C8  120A  158A   	fcall	PL40	;call to abstracted procedure
  2812  08A6  27DF               	fcall	___wmul
  2813  08A7  0862               	movf	__doprnt@f,w
  2814  08A8  0084               	movwf	4
  2815  08A9  120A  118A  200F   	fcall	stringdir
      +       120A  158A         
  2816  08AE  275C  120A  158A   	fcall	PL16	;call to abstracted procedure
  2817  08B1  00B4               	movwf	__doprnt@prec^(0+128)
  2818  08B2  27A8  120A  158A   	fcall	PL33	;call to abstracted procedure
  2819  08B5  00B5               	movwf	(__doprnt@prec+1)^(0+128)
  2820  08B6  1283               	bcf	3,5	;RP0=0, select bank0
  2821  08B7  0AE2               	incf	__doprnt@f,f
  2822  08B8  2890               	goto	l7479
  2823  08B9                     l7481:	
  2824  08B9  1683               	bsf	3,5	;RP0=1, select bank1
  2825  08BA  01B4               	clrf	__doprnt@prec^(0+128)
  2826  08BB  01B5               	clrf	(__doprnt@prec+1)^(0+128)
  2827  08BC  1628               	bsf	(__doprnt@flag^(0+128)+1),4
  2828  08BD  28C0               	goto	l7487
  2829  08BE                     l2259:	
  2830  08BE  1528               	bsf	(__doprnt@flag^(0+128)+1),2
  2831  08BF  28D8               	goto	l7489
  2832  08C0                     l7487:	
  2833  08C0  1283               	bcf	3,5	;RP0=0, select bank0
  2834  08C1  0862               	movf	__doprnt@f,w
  2835  08C2  0AE2               	incf	__doprnt@f,f
  2836  08C3  0084               	movwf	4
  2837  08C4  120A  118A  200F   	fcall	stringdir
      +       120A  158A         
  2838  08C9  1683               	bsf	3,5	;RP0=1, select bank1
  2839  08CA  00B6               	movwf	__doprnt@c^(0+128)
  2840                           
  2841                           ; Switch size 1, requested type "space"
  2842                           ; Number of cases is 4, Range of values is 0 to 105
  2843                           ; switch strategies available:
  2844                           ; Name         Instructions Cycles
  2845                           ; simple_byte           13     7 (average)
  2846                           ; jumptable            260     6 (fixed)
  2847                           ; rangetable           110     6 (fixed)
  2848                           ; spacedrange          218     9 (fixed)
  2849                           ; locatedrange         106     3 (fixed)
  2850                           ;	Chosen strategy is simple_byte
  2851  08CB  3A00               	xorlw	0	; case 0
  2852  08CC  1903               	skipnz
  2853  08CD  2EED               	goto	l7807
  2854  08CE  3A64               	xorlw	100	; case 100
  2855  08CF  1903               	skipnz
  2856  08D0  28D8               	goto	l7489
  2857  08D1  3A02               	xorlw	2	; case 102
  2858  08D2  1903               	skipnz
  2859  08D3  28BE               	goto	l2259
  2860  08D4  3A0F               	xorlw	15	; case 105
  2861  08D5  1903               	skipnz
  2862  08D6  28D8               	goto	l7489
  2863  08D7  280A               	goto	l7805
  2864  08D8                     l7489:	
  2865  08D8  1283               	bcf	3,5	;RP0=0, select bank0
  2866  08D9  3007               	movlw	7
  2867  08DA  01E4               	clrf	??__doprnt
  2868  08DB  1683               	bsf	3,5	;RP0=1, select bank1
  2869  08DC  0528               	andwf	(__doprnt@flag+1)^(0+128),w
  2870  08DD  1283               	bcf	3,5	;RP0=0, select bank0
  2871  08DE  00E5               	movwf	??__doprnt+1
  2872  08DF  0464               	iorwf	??__doprnt,w
  2873  08E0  1903               	skipnz
  2874  08E1  2D3D               	goto	l7691
  2875  08E2  1683               	bsf	3,5	;RP0=1, select bank1
  2876  08E3  1E28               	btfss	(__doprnt@flag+1)^(0+128),4
  2877  08E4  28E8               	goto	l7495
  2878  08E5  3006               	movlw	6
  2879  08E6  00B4               	movwf	__doprnt@prec^(0+128)
  2880  08E7  01B5               	clrf	(__doprnt@prec+1)^(0+128)
  2881  08E8                     l7495:	
  2882  08E8  1283               	bcf	3,5	;RP0=0, select bank0
  2883  08E9  0863               	movf	__doprnt@ap,w
  2884  08EA  0084               	movwf	4
  2885  08EB  1383               	bcf	3,7	;select IRP bank0
  2886  08EC  0800               	movf	0,w
  2887  08ED  00E4               	movwf	??__doprnt
  2888  08EE  3003               	movlw	3
  2889  08EF  0780               	addwf	0,f
  2890  08F0  0864               	movf	??__doprnt,w
  2891  08F1  0084               	movwf	4
  2892  08F2  0800               	movf	0,w
  2893  08F3  1683               	bsf	3,5	;RP0=1, select bank1
  2894  08F4  00B1               	movwf	__doprnt@fval^(0+128)
  2895  08F5  0A84               	incf	4,f
  2896  08F6  0800               	movf	0,w
  2897  08F7  00B2               	movwf	(__doprnt@fval+1)^(0+128)
  2898  08F8  0A84               	incf	4,f
  2899  08F9  0800               	movf	0,w
  2900  08FA  00B3               	movwf	(__doprnt@fval+2)^(0+128)
  2901  08FB  0831               	movf	__doprnt@fval^(0+128),w
  2902  08FC  1283               	bcf	3,5	;RP0=0, select bank0
  2903  08FD  00A0               	movwf	?___ftge
  2904  08FE  1683               	bsf	3,5	;RP0=1, select bank1
  2905  08FF  0832               	movf	(__doprnt@fval+1)^(0+128),w
  2906  0900  1283               	bcf	3,5	;RP0=0, select bank0
  2907  0901  00A1               	movwf	?___ftge+1
  2908  0902  1683               	bsf	3,5	;RP0=1, select bank1
  2909  0903  0833               	movf	(__doprnt@fval+2)^(0+128),w
  2910  0904  1283               	bcf	3,5	;RP0=0, select bank0
  2911  0905  00A2               	movwf	?___ftge+2
  2912  0906  01A3               	clrf	?___ftge+3
  2913  0907  01A4               	clrf	?___ftge+4
  2914  0908  01A5               	clrf	?___ftge+5
  2915  0909  120A  118A  27C6   	fcall	___ftge
      +       120A  158A         
  2916  090E  1803               	btfsc	3,0
  2917  090F  292C               	goto	l7503
  2918  0910  1683               	bsf	3,5	;RP0=1, select bank1
  2919  0911  0831               	movf	__doprnt@fval^(0+128),w
  2920  0912  1283               	bcf	3,5	;RP0=0, select bank0
  2921  0913  00A0               	movwf	?___ftneg
  2922  0914  1683               	bsf	3,5	;RP0=1, select bank1
  2923  0915  0832               	movf	(__doprnt@fval+1)^(0+128),w
  2924  0916  1283               	bcf	3,5	;RP0=0, select bank0
  2925  0917  00A1               	movwf	?___ftneg+1
  2926  0918  1683               	bsf	3,5	;RP0=1, select bank1
  2927  0919  0833               	movf	(__doprnt@fval+2)^(0+128),w
  2928  091A  1283               	bcf	3,5	;RP0=0, select bank0
  2929  091B  00A2               	movwf	?___ftneg+2
  2930  091C  27F8  120A  158A   	fcall	___ftneg
  2931  091F  0820               	movf	?___ftneg,w
  2932  0920  1683               	bsf	3,5	;RP0=1, select bank1
  2933  0921  00B1               	movwf	__doprnt@fval^(0+128)
  2934  0922  1283               	bcf	3,5	;RP0=0, select bank0
  2935  0923  0821               	movf	?___ftneg+1,w
  2936  0924  1683               	bsf	3,5	;RP0=1, select bank1
  2937  0925  00B2               	movwf	(__doprnt@fval+1)^(0+128)
  2938  0926  1283               	bcf	3,5	;RP0=0, select bank0
  2939  0927  0822               	movf	?___ftneg+2,w
  2940  0928  1683               	bsf	3,5	;RP0=1, select bank1
  2941  0929  00B3               	movwf	(__doprnt@fval+2)^(0+128)
  2942  092A  3003               	movlw	3
  2943  092B  04A7               	iorwf	__doprnt@flag^(0+128),f
  2944  092C                     l7503:	
  2945  092C  1683               	bsf	3,5	;RP0=1, select bank1
  2946  092D  01A9               	clrf	__doprnt@exp^(0+128)
  2947  092E  01AA               	clrf	(__doprnt@exp+1)^(0+128)
  2948  092F  0833               	movf	(__doprnt@fval+2)^(0+128),w
  2949  0930  0432               	iorwf	(__doprnt@fval+1)^(0+128),w
  2950  0931  0431               	iorwf	__doprnt@fval^(0+128),w
  2951  0932  1903               	skipnz
  2952  0933  29D9               	goto	l7535
  2953  0934  30B1               	movlw	low __doprnt@fval
  2954  0935  0084               	movwf	4
  2955  0936  0800               	movf	0,w
  2956  0937  1283               	bcf	3,5	;RP0=0, select bank0
  2957  0938  00E4               	movwf	??__doprnt
  2958  0939  0A84               	incf	4,f
  2959  093A  0800               	movf	0,w
  2960  093B  00E5               	movwf	??__doprnt+1
  2961  093C  0A84               	incf	4,f
  2962  093D  0800               	movf	0,w
  2963  093E  00E6               	movwf	??__doprnt+2
  2964  093F  0A84               	incf	4,f
  2965  0940  0800               	movf	0,w
  2966  0941  00E7               	movwf	??__doprnt+3
  2967  0942  300F               	movlw	15
  2968  0943                     u3945:	
  2969  0943  1003               	clrc
  2970  0944  0CE7               	rrf	??__doprnt+3,f
  2971  0945  0CE6               	rrf	??__doprnt+2,f
  2972  0946  0CE5               	rrf	??__doprnt+1,f
  2973  0947  0CE4               	rrf	??__doprnt,f
  2974  0948  3EFF               	addlw	-1
  2975  0949  1D03               	skipz
  2976  094A  2943               	goto	u3945
  2977  094B  0865               	movf	??__doprnt+1,w
  2978  094C  1683               	bsf	3,5	;RP0=1, select bank1
  2979  094D  00AA               	movwf	(__doprnt@exp+1)^(0+128)
  2980  094E  1283               	bcf	3,5	;RP0=0, select bank0
  2981  094F  0864               	movf	??__doprnt,w
  2982  0950  1683               	bsf	3,5	;RP0=1, select bank1
  2983  0951  00A9               	movwf	__doprnt@exp^(0+128)
  2984  0952  3082               	movlw	-126
  2985  0953  01AA               	clrf	(__doprnt@exp+1)^(0+128)
  2986  0954  07A9               	addwf	__doprnt@exp^(0+128),f
  2987  0955  1C03               	skipc
  2988  0956  03AA               	decf	(__doprnt@exp+1)^(0+128),f
  2989  0957  30FF               	movlw	-1
  2990  0958  07A9               	addwf	__doprnt@exp^(0+128),f
  2991  0959  1C03               	skipc
  2992  095A  03AA               	decf	(__doprnt@exp+1)^(0+128),f
  2993  095B  3003               	movlw	3
  2994  095C  1283               	bcf	3,5	;RP0=0, select bank0
  2995  095D  00A0               	movwf	?___wmul
  2996  095E  01A1               	clrf	?___wmul+1
  2997  095F  1683               	bsf	3,5	;RP0=1, select bank1
  2998  0960  082A               	movf	(__doprnt@exp+1)^(0+128),w
  2999  0961  1283               	bcf	3,5	;RP0=0, select bank0
  3000  0962  00A3               	movwf	?___wmul+3
  3001  0963  1683               	bsf	3,5	;RP0=1, select bank1
  3002  0964  0829               	movf	__doprnt@exp^(0+128),w
  3003  0965  1283               	bcf	3,5	;RP0=0, select bank0
  3004  0966  00A2               	movwf	?___wmul+2
  3005  0967  27DF               	fcall	___wmul
  3006  0968  0821               	movf	?___wmul+1,w
  3007  0969  1683               	bsf	3,5	;RP0=1, select bank1
  3008  096A  00AA               	movwf	(__doprnt@exp+1)^(0+128)
  3009  096B  1283               	bcf	3,5	;RP0=0, select bank0
  3010  096C  0820               	movf	?___wmul,w
  3011  096D  1683               	bsf	3,5	;RP0=1, select bank1
  3012  096E  00A9               	movwf	__doprnt@exp^(0+128)
  3013  096F  300A               	movlw	10
  3014  0970  1283               	bcf	3,5	;RP0=0, select bank0
  3015  0971  00A6               	movwf	?___awdiv
  3016  0972  01A7               	clrf	?___awdiv+1
  3017  0973  1683               	bsf	3,5	;RP0=1, select bank1
  3018  0974  082A               	movf	(__doprnt@exp+1)^(0+128),w
  3019  0975  1283               	bcf	3,5	;RP0=0, select bank0
  3020  0976  00A9               	movwf	?___awdiv+3
  3021  0977  1683               	bsf	3,5	;RP0=1, select bank1
  3022  0978  0829               	movf	__doprnt@exp^(0+128),w
  3023  0979  1283               	bcf	3,5	;RP0=0, select bank0
  3024  097A  00A8               	movwf	?___awdiv+2
  3025  097B  120A  118A  2364   	fcall	___awdiv
      +       120A  158A         
  3026  0980  0827               	movf	?___awdiv+1,w
  3027  0981  1683               	bsf	3,5	;RP0=1, select bank1
  3028  0982  00AA               	movwf	(__doprnt@exp+1)^(0+128)
  3029  0983  1283               	bcf	3,5	;RP0=0, select bank0
  3030  0984  0826               	movf	?___awdiv,w
  3031  0985  1683               	bsf	3,5	;RP0=1, select bank1
  3032  0986  00A9               	movwf	__doprnt@exp^(0+128)
  3033  0987  1FAA               	btfss	(__doprnt@exp+1)^(0+128),7
  3034  0988  298D               	goto	l7523
  3035  0989  30FF               	movlw	-1
  3036  098A  07A9               	addwf	__doprnt@exp^(0+128),f
  3037  098B  1C03               	skipc
  3038  098C  03AA               	decf	(__doprnt@exp+1)^(0+128),f
  3039  098D                     l7523:	
  3040  098D  0329               	decf	__doprnt@exp^(0+128),w
  3041  098E  3AFF               	xorlw	255
  3042  098F  120A  118A  21D2   	fcall	_scale
      +       120A  158A         
  3043  0994  274E  120A  158A   	fcall	PL11	;call to abstracted procedure
  3044  0997  2784               	fcall	PL23	;call to abstracted procedure
  3045  0998  1683               	bsf	3,5	;RP0=1, select bank1
  3046  0999  0824               	movf	__doprnt@integ^(0+128),w
  3047  099A  1283               	bcf	3,5	;RP0=0, select bank0
  3048  099B  00C0               	movwf	?___ftmul+3
  3049  099C  1683               	bsf	3,5	;RP0=1, select bank1
  3050  099D  0825               	movf	(__doprnt@integ+1)^(0+128),w
  3051  099E  1283               	bcf	3,5	;RP0=0, select bank0
  3052  099F  00C1               	movwf	?___ftmul+4
  3053  09A0  1683               	bsf	3,5	;RP0=1, select bank1
  3054  09A1  0826               	movf	(__doprnt@integ+2)^(0+128),w
  3055  09A2  1283               	bcf	3,5	;RP0=0, select bank0
  3056  09A3  00C2               	movwf	?___ftmul+5
  3057  09A4  120A  118A  23E6   	fcall	___ftmul
      +       120A  158A         
  3058  09A9  083D               	movf	?___ftmul,w
  3059  09AA  1683               	bsf	3,5	;RP0=1, select bank1
  3060  09AB  00A4               	movwf	__doprnt@integ^(0+128)
  3061  09AC  1283               	bcf	3,5	;RP0=0, select bank0
  3062  09AD  083E               	movf	?___ftmul+1,w
  3063  09AE  1683               	bsf	3,5	;RP0=1, select bank1
  3064  09AF  00A5               	movwf	(__doprnt@integ+1)^(0+128)
  3065  09B0  1283               	bcf	3,5	;RP0=0, select bank0
  3066  09B1  083F               	movf	?___ftmul+2,w
  3067  09B2  1683               	bsf	3,5	;RP0=1, select bank1
  3068  09B3  00A6               	movwf	(__doprnt@integ+2)^(0+128)
  3069  09B4  2734               	fcall	PL9	;call to abstracted procedure
  3070  09B5  3080               	movlw	128
  3071  09B6  01A3               	clrf	?___ftge+3
  3072  09B7  00A4               	movwf	?___ftge+4
  3073  09B8  303F               	movlw	63
  3074  09B9  00A5               	movwf	?___ftge+5
  3075  09BA  120A  118A  27C6   	fcall	___ftge
      +       120A  158A         
  3076  09BF  1803               	btfsc	3,0
  3077  09C0  29C7               	goto	l7531
  3078  09C1  30FF               	movlw	-1
  3079  09C2  1683               	bsf	3,5	;RP0=1, select bank1
  3080  09C3  07A9               	addwf	__doprnt@exp^(0+128),f
  3081  09C4  1C03               	skipc
  3082  09C5  03AA               	decf	(__doprnt@exp+1)^(0+128),f
  3083  09C6  29D9               	goto	l7535
  3084  09C7                     l7531:	
  3085  09C7  1683               	bsf	3,5	;RP0=1, select bank1
  3086  09C8  2734               	fcall	PL9	;call to abstracted procedure
  3087  09C9  3020               	movlw	32
  3088  09CA  01A3               	clrf	?___ftge+3
  3089  09CB  00A4               	movwf	?___ftge+4
  3090  09CC  3041               	movlw	65
  3091  09CD  00A5               	movwf	?___ftge+5
  3092  09CE  120A  118A  27C6   	fcall	___ftge
      +       120A  158A         
  3093  09D3  1C03               	btfss	3,0
  3094  09D4  29D9               	goto	l7535
  3095  09D5  1683               	bsf	3,5	;RP0=1, select bank1
  3096  09D6  0AA9               	incf	__doprnt@exp^(0+128),f
  3097  09D7  1903               	skipnz
  3098  09D8  0AAA               	incf	(__doprnt@exp+1)^(0+128),f
  3099  09D9                     l7535:	
  3100  09D9  1683               	bsf	3,5	;RP0=1, select bank1
  3101  09DA  0835               	movf	(__doprnt@prec+1)^(0+128),w
  3102  09DB  3A80               	xorlw	128
  3103  09DC  00FF               	movwf	127
  3104  09DD  3080               	movlw	128
  3105  09DE  027F               	subwf	127,w
  3106  09DF  1D03               	skipz
  3107  09E0  29E3               	goto	u3985
  3108  09E1  300D               	movlw	13
  3109  09E2  0234               	subwf	__doprnt@prec^(0+128),w
  3110  09E3                     u3985:	
  3111  09E3  1803               	skipnc
  3112  09E4  2A0E               	goto	l7539
  3113  09E5  27DC               	call	PL41	;select bank 1
  3114  09E6  0834               	movf	__doprnt@prec^(0+128),w
  3115  09E7  160A  118A  2549   	fcall	_fround
      +       120A  158A         
  3116  09EC  0858               	movf	?_fround,w
  3117  09ED  00CC               	movwf	?___ftadd
  3118  09EE  0859               	movf	?_fround+1,w
  3119  09EF  00CD               	movwf	?___ftadd+1
  3120  09F0  085A               	movf	?_fround+2,w
  3121  09F1  00CE               	movwf	?___ftadd+2
  3122  09F2  1683               	bsf	3,5	;RP0=1, select bank1
  3123  09F3  0831               	movf	__doprnt@fval^(0+128),w
  3124  09F4  1283               	bcf	3,5	;RP0=0, select bank0
  3125  09F5  00CF               	movwf	?___ftadd+3
  3126  09F6  1683               	bsf	3,5	;RP0=1, select bank1
  3127  09F7  0832               	movf	(__doprnt@fval+1)^(0+128),w
  3128  09F8  1283               	bcf	3,5	;RP0=0, select bank0
  3129  09F9  00D0               	movwf	?___ftadd+4
  3130  09FA  1683               	bsf	3,5	;RP0=1, select bank1
  3131  09FB  0833               	movf	(__doprnt@fval+2)^(0+128),w
  3132  09FC  1283               	bcf	3,5	;RP0=0, select bank0
  3133  09FD  00D1               	movwf	?___ftadd+5
  3134  09FE  120A  118A  2704   	fcall	___ftadd
      +       120A  158A         
  3135  0A03  084C               	movf	?___ftadd,w
  3136  0A04  1683               	bsf	3,5	;RP0=1, select bank1
  3137  0A05  00B1               	movwf	__doprnt@fval^(0+128)
  3138  0A06  1283               	bcf	3,5	;RP0=0, select bank0
  3139  0A07  084D               	movf	?___ftadd+1,w
  3140  0A08  1683               	bsf	3,5	;RP0=1, select bank1
  3141  0A09  00B2               	movwf	(__doprnt@fval+1)^(0+128)
  3142  0A0A  1283               	bcf	3,5	;RP0=0, select bank0
  3143  0A0B  084E               	movf	?___ftadd+2,w
  3144  0A0C  1683               	bsf	3,5	;RP0=1, select bank1
  3145  0A0D  00B3               	movwf	(__doprnt@fval+2)^(0+128)
  3146  0A0E                     l7539:	
  3147  0A0E  27DC               	call	PL41	;select bank 1
  3148  0A0F  082A               	movf	(__doprnt@exp+1)^(0+128),w
  3149  0A10  3A80               	xorlw	128
  3150  0A11  00FF               	movwf	127
  3151  0A12  3080               	movlw	128
  3152  0A13  027F               	subwf	127,w
  3153  0A14  1D03               	skipz
  3154  0A15  2A18               	goto	u3995
  3155  0A16  300A               	movlw	10
  3156  0A17  0229               	subwf	__doprnt@exp^(0+128),w
  3157  0A18                     u3995:	
  3158  0A18  1803               	skipnc
  3159  0A19  2A39               	goto	l7547
  3160  0A1A  27DC               	call	PL41	;select bank 1
  3161  0A1B  0833               	movf	(__doprnt@fval+2)^(0+128),w
  3162  0A1C  0432               	iorwf	(__doprnt@fval+1)^(0+128),w
  3163  0A1D  0431               	iorwf	__doprnt@fval^(0+128),w
  3164  0A1E  1903               	skipnz
  3165  0A1F  2A8B               	goto	l7563
  3166  0A20  0831               	movf	__doprnt@fval^(0+128),w
  3167  0A21  2772               	fcall	PL19	;call to abstracted procedure
  3168  0A22  160A  118A  23A4   	fcall	___fttol
      +       120A  158A         
  3169  0A27  0831               	movf	?___fttol+3,w
  3170  0A28  0430               	iorwf	?___fttol+2,w
  3171  0A29  042F               	iorwf	?___fttol+1,w
  3172  0A2A  042E               	iorwf	?___fttol,w
  3173  0A2B  1D03               	skipz
  3174  0A2C  2A8B               	goto	l7563
  3175  0A2D  1683               	bsf	3,5	;RP0=1, select bank1
  3176  0A2E  082A               	movf	(__doprnt@exp+1)^(0+128),w
  3177  0A2F  3A80               	xorlw	128
  3178  0A30  00FF               	movwf	127
  3179  0A31  3080               	movlw	128
  3180  0A32  027F               	subwf	127,w
  3181  0A33  1D03               	skipz
  3182  0A34  2A37               	goto	u4025
  3183  0A35  3002               	movlw	2
  3184  0A36  0229               	subwf	__doprnt@exp^(0+128),w
  3185  0A37                     u4025:	
  3186  0A37  1C03               	skipc
  3187  0A38  2A8B               	goto	l7563
  3188  0A39                     l7547:	
  3189  0A39  27DC               	call	PL41	;select bank 1
  3190  0A3A  2734               	fcall	PL9	;call to abstracted procedure
  3191  0A3B  3070               	movlw	112
  3192  0A3C  00A3               	movwf	?___ftge+3
  3193  0A3D  3089               	movlw	137
  3194  0A3E  00A4               	movwf	?___ftge+4
  3195  0A3F  3040               	movlw	64
  3196  0A40  00A5               	movwf	?___ftge+5
  3197  0A41  120A  118A  27C6   	fcall	___ftge
      +       120A  158A         
  3198  0A46  1803               	btfsc	3,0
  3199  0A47  2A4A               	goto	l7551
  3200  0A48  30F7               	movlw	-9
  3201  0A49  2A4B               	goto	L2
  3202  0A4A                     l7551:	
  3203  0A4A  30F8               	movlw	-8
  3204  0A4B                     L2:	
  3205  0A4B  1683               	bsf	3,5	;RP0=1, select bank1
  3206  0A4C  07A9               	addwf	__doprnt@exp^(0+128),f
  3207  0A4D  1C03               	skipc
  3208  0A4E  03AA               	decf	(__doprnt@exp+1)^(0+128),f
  3209  0A4F  0829               	movf	__doprnt@exp^(0+128),w
  3210  0A50  120A  118A  21D2   	fcall	_scale
      +       120A  158A         
  3211  0A55  274E               	fcall	PL11	;call to abstracted procedure
  3212  0A56  00A0               	movwf	?__tdiv_to_l_
  3213  0A57  1683               	bsf	3,5	;RP0=1, select bank1
  3214  0A58  0832               	movf	(__doprnt@fval+1)^(0+128),w
  3215  0A59  1283               	bcf	3,5	;RP0=0, select bank0
  3216  0A5A  00A1               	movwf	?__tdiv_to_l_+1
  3217  0A5B  1683               	bsf	3,5	;RP0=1, select bank1
  3218  0A5C  0833               	movf	(__doprnt@fval+2)^(0+128),w
  3219  0A5D  1283               	bcf	3,5	;RP0=0, select bank0
  3220  0A5E  00A2               	movwf	?__tdiv_to_l_+2
  3221  0A5F  1683               	bsf	3,5	;RP0=1, select bank1
  3222  0A60  0824               	movf	__doprnt@integ^(0+128),w
  3223  0A61  1283               	bcf	3,5	;RP0=0, select bank0
  3224  0A62  00A3               	movwf	?__tdiv_to_l_+3
  3225  0A63  1683               	bsf	3,5	;RP0=1, select bank1
  3226  0A64  0825               	movf	(__doprnt@integ+1)^(0+128),w
  3227  0A65  1283               	bcf	3,5	;RP0=0, select bank0
  3228  0A66  00A4               	movwf	?__tdiv_to_l_+4
  3229  0A67  1683               	bsf	3,5	;RP0=1, select bank1
  3230  0A68  0826               	movf	(__doprnt@integ+2)^(0+128),w
  3231  0A69  1283               	bcf	3,5	;RP0=0, select bank0
  3232  0A6A  00A5               	movwf	?__tdiv_to_l_+5
  3233  0A6B  160A  118A  2406   	fcall	__tdiv_to_l_
      +       120A  158A         
  3234  0A70  0823               	movf	?__tdiv_to_l_+3,w
  3235  0A71  1683               	bsf	3,5	;RP0=1, select bank1
  3236  0A72  00A3               	movwf	(__doprnt$3212+3)^(0+128)
  3237  0A73  1283               	bcf	3,5	;RP0=0, select bank0
  3238  0A74  0822               	movf	?__tdiv_to_l_+2,w
  3239  0A75  1683               	bsf	3,5	;RP0=1, select bank1
  3240  0A76  00A2               	movwf	(__doprnt$3212+2)^(0+128)
  3241  0A77  1283               	bcf	3,5	;RP0=0, select bank0
  3242  0A78  0821               	movf	?__tdiv_to_l_+1,w
  3243  0A79  1683               	bsf	3,5	;RP0=1, select bank1
  3244  0A7A  00A1               	movwf	(__doprnt$3212+1)^(0+128)
  3245  0A7B  1283               	bcf	3,5	;RP0=0, select bank0
  3246  0A7C  0820               	movf	?__tdiv_to_l_,w
  3247  0A7D  1683               	bsf	3,5	;RP0=1, select bank1
  3248  0A7E  00A0               	movwf	__doprnt$3212^(0+128)
  3249  0A7F  0823               	movf	(__doprnt$3212+3)^(0+128),w
  3250  0A80  00B0               	movwf	(__doprnt@_val+3)^(0+128)
  3251  0A81  0822               	movf	(__doprnt$3212+2)^(0+128),w
  3252  0A82  00AF               	movwf	(__doprnt@_val+2)^(0+128)
  3253  0A83  0821               	movf	(__doprnt$3212+1)^(0+128),w
  3254  0A84  00AE               	movwf	(__doprnt@_val+1)^(0+128)
  3255  0A85  0820               	movf	__doprnt$3212^(0+128),w
  3256  0A86  00AD               	movwf	__doprnt@_val^(0+128)
  3257  0A87  01B1               	clrf	__doprnt@fval^(0+128)
  3258  0A88  01B2               	clrf	(__doprnt@fval+1)^(0+128)
  3259  0A89  01B3               	clrf	(__doprnt@fval+2)^(0+128)
  3260  0A8A  2ACE               	goto	l7567
  3261  0A8B                     l7563:	
  3262  0A8B  27DC               	call	PL41	;select bank 1
  3263  0A8C  0831               	movf	__doprnt@fval^(0+128),w
  3264  0A8D  2772               	fcall	PL19	;call to abstracted procedure
  3265  0A8E  160A  118A  23A4   	fcall	___fttol
      +       120A  158A         
  3266  0A93  2740               	fcall	PL10	;call to abstracted procedure
  3267  0A94  1683               	bsf	3,5	;RP0=1, select bank1
  3268  0A95  00AD               	movwf	__doprnt@_val^(0+128)
  3269  0A96  0830               	movf	(__doprnt@_val+3)^(0+128),w
  3270  0A97  1283               	bcf	3,5	;RP0=0, select bank0
  3271  0A98  00AB               	movwf	?___lltoft+3
  3272  0A99  1683               	bsf	3,5	;RP0=1, select bank1
  3273  0A9A  082F               	movf	(__doprnt@_val+2)^(0+128),w
  3274  0A9B  1283               	bcf	3,5	;RP0=0, select bank0
  3275  0A9C  00AA               	movwf	?___lltoft+2
  3276  0A9D  1683               	bsf	3,5	;RP0=1, select bank1
  3277  0A9E  082E               	movf	(__doprnt@_val+1)^(0+128),w
  3278  0A9F  1283               	bcf	3,5	;RP0=0, select bank0
  3279  0AA0  00A9               	movwf	?___lltoft+1
  3280  0AA1  1683               	bsf	3,5	;RP0=1, select bank1
  3281  0AA2  082D               	movf	__doprnt@_val^(0+128),w
  3282  0AA3  1283               	bcf	3,5	;RP0=0, select bank0
  3283  0AA4  00A8               	movwf	?___lltoft
  3284  0AA5  120A  118A  2109   	fcall	___lltoft
      +       120A  158A         
  3285  0AAA  0828               	movf	?___lltoft,w
  3286  0AAB  00D8               	movwf	?___ftsub
  3287  0AAC  0829               	movf	?___lltoft+1,w
  3288  0AAD  00D9               	movwf	?___ftsub+1
  3289  0AAE  082A               	movf	?___lltoft+2,w
  3290  0AAF  00DA               	movwf	?___ftsub+2
  3291  0AB0  1683               	bsf	3,5	;RP0=1, select bank1
  3292  0AB1  0831               	movf	__doprnt@fval^(0+128),w
  3293  0AB2  1283               	bcf	3,5	;RP0=0, select bank0
  3294  0AB3  00DB               	movwf	?___ftsub+3
  3295  0AB4  1683               	bsf	3,5	;RP0=1, select bank1
  3296  0AB5  0832               	movf	(__doprnt@fval+1)^(0+128),w
  3297  0AB6  1283               	bcf	3,5	;RP0=0, select bank0
  3298  0AB7  00DC               	movwf	?___ftsub+4
  3299  0AB8  1683               	bsf	3,5	;RP0=1, select bank1
  3300  0AB9  0833               	movf	(__doprnt@fval+2)^(0+128),w
  3301  0ABA  1283               	bcf	3,5	;RP0=0, select bank0
  3302  0ABB  00DD               	movwf	?___ftsub+5
  3303  0ABC  120A  118A  26EE   	fcall	___ftsub
      +       120A  158A         
  3304  0AC1  0858               	movf	?___ftsub,w
  3305  0AC2  1683               	bsf	3,5	;RP0=1, select bank1
  3306  0AC3  00B1               	movwf	__doprnt@fval^(0+128)
  3307  0AC4  1283               	bcf	3,5	;RP0=0, select bank0
  3308  0AC5  0859               	movf	?___ftsub+1,w
  3309  0AC6  1683               	bsf	3,5	;RP0=1, select bank1
  3310  0AC7  00B2               	movwf	(__doprnt@fval+1)^(0+128)
  3311  0AC8  1283               	bcf	3,5	;RP0=0, select bank0
  3312  0AC9  085A               	movf	?___ftsub+2,w
  3313  0ACA  1683               	bsf	3,5	;RP0=1, select bank1
  3314  0ACB  00B3               	movwf	(__doprnt@fval+2)^(0+128)
  3315  0ACC  01A9               	clrf	__doprnt@exp^(0+128)
  3316  0ACD  01AA               	clrf	(__doprnt@exp+1)^(0+128)
  3317  0ACE                     l7567:	
  3318  0ACE  01B6               	clrf	__doprnt@c^(0+128)
  3319  0ACF  0AB6               	incf	__doprnt@c^(0+128),f
  3320  0AD0                     l7573:	
  3321  0AD0  271A               	fcall	PL5	;call to abstracted procedure
  3322  0AD1  120A  118A  200F   	fcall	stringdir
      +       120A  158A         
  3323  0AD6  00E5               	movwf	??__doprnt+1
  3324  0AD7  120A  118A  200F   	fcall	stringdir
      +       120A  158A         
  3325  0ADC  00E6               	movwf	??__doprnt+2
  3326  0ADD  120A  118A  200F   	fcall	stringdir
      +       120A  158A         
  3327  0AE2  00E7               	movwf	??__doprnt+3
  3328  0AE3  120A  118A  200F   	fcall	stringdir
      +       120A  158A         
  3329  0AE8  00E8               	movwf	??__doprnt+4
  3330  0AE9  1683               	bsf	3,5	;RP0=1, select bank1
  3331  0AEA  0230               	subwf	(__doprnt@_val+3)^(0+128),w
  3332  0AEB  1D03               	skipz
  3333  0AEC  2AFD               	goto	u4045
  3334  0AED  1283               	bcf	3,5	;RP0=0, select bank0
  3335  0AEE  0867               	movf	??__doprnt+3,w
  3336  0AEF  1683               	bsf	3,5	;RP0=1, select bank1
  3337  0AF0  022F               	subwf	(__doprnt@_val+2)^(0+128),w
  3338  0AF1  1D03               	skipz
  3339  0AF2  2AFD               	goto	u4045
  3340  0AF3  1283               	bcf	3,5	;RP0=0, select bank0
  3341  0AF4  0866               	movf	??__doprnt+2,w
  3342  0AF5  1683               	bsf	3,5	;RP0=1, select bank1
  3343  0AF6  022E               	subwf	(__doprnt@_val+1)^(0+128),w
  3344  0AF7  1D03               	skipz
  3345  0AF8  2AFD               	goto	u4045
  3346  0AF9  1283               	bcf	3,5	;RP0=0, select bank0
  3347  0AFA  0865               	movf	??__doprnt+1,w
  3348  0AFB  1683               	bsf	3,5	;RP0=1, select bank1
  3349  0AFC  022D               	subwf	__doprnt@_val^(0+128),w
  3350  0AFD                     u4045:	
  3351  0AFD  1C03               	btfss	3,0
  3352  0AFE  2B04               	goto	l7581
  3353  0AFF  0AB6               	incf	__doprnt@c^(0+128),f
  3354  0B00  0836               	movf	__doprnt@c^(0+128),w
  3355  0B01  3A0A               	xorlw	10
  3356  0B02  1D03               	skipz
  3357  0B03  2AD0               	goto	l7573
  3358  0B04                     l7581:	
  3359  0B04  0834               	movf	__doprnt@prec^(0+128),w
  3360  0B05  0736               	addwf	__doprnt@c^(0+128),w
  3361  0B06  1283               	bcf	3,5	;RP0=0, select bank0
  3362  0B07  00E4               	movwf	??__doprnt
  3363  0B08  1683               	bsf	3,5	;RP0=1, select bank1
  3364  0B09  0835               	movf	(__doprnt@prec+1)^(0+128),w
  3365  0B0A  1803               	skipnc
  3366  0B0B  0A35               	incf	(__doprnt@prec+1)^(0+128),w
  3367  0B0C  1BB6               	btfsc	__doprnt@c^(0+128),7
  3368  0B0D  3EFF               	addlw	255
  3369  0B0E  1283               	bcf	3,5	;RP0=0, select bank0
  3370  0B0F  00E5               	movwf	??__doprnt+1
  3371  0B10  1683               	bsf	3,5	;RP0=1, select bank1
  3372  0B11  0829               	movf	__doprnt@exp^(0+128),w
  3373  0B12  1283               	bcf	3,5	;RP0=0, select bank0
  3374  0B13  0764               	addwf	??__doprnt,w
  3375  0B14  00E6               	movwf	??__doprnt+2
  3376  0B15  1683               	bsf	3,5	;RP0=1, select bank1
  3377  0B16  082A               	movf	(__doprnt@exp+1)^(0+128),w
  3378  0B17  1803               	skipnc
  3379  0B18  0A2A               	incf	(__doprnt@exp+1)^(0+128),w
  3380  0B19  1283               	bcf	3,5	;RP0=0, select bank0
  3381  0B1A  0765               	addwf	??__doprnt+1,w
  3382  0B1B  00E7               	movwf	??__doprnt+3
  3383  0B1C  0866               	movf	??__doprnt+2,w
  3384  0B1D  1683               	bsf	3,5	;RP0=1, select bank1
  3385  0B1E  02AB               	subwf	__doprnt@width^(0+128),f
  3386  0B1F  1283               	bcf	3,5	;RP0=0, select bank0
  3387  0B20  0867               	movf	??__doprnt+3,w
  3388  0B21  1683               	bsf	3,5	;RP0=1, select bank1
  3389  0B22  1C03               	skipc
  3390  0B23  03AC               	decf	(__doprnt@width+1)^(0+128),f
  3391  0B24  02AC               	subwf	(__doprnt@width+1)^(0+128),f
  3392  0B25  0835               	movf	(__doprnt@prec+1)^(0+128),w
  3393  0B26  0434               	iorwf	__doprnt@prec^(0+128),w
  3394  0B27  1903               	skipnz
  3395  0B28  2B2D               	goto	l7587
  3396  0B29  30FF               	movlw	-1
  3397  0B2A  07AB               	addwf	__doprnt@width^(0+128),f
  3398  0B2B  1C03               	skipc
  3399  0B2C  03AC               	decf	(__doprnt@width+1)^(0+128),f
  3400  0B2D                     l7587:	
  3401  0B2D  0827               	movf	__doprnt@flag^(0+128),w
  3402  0B2E  3903               	andlw	3
  3403  0B2F  1903               	btfsc	3,2
  3404  0B30  2B35               	goto	l7591
  3405  0B31  30FF               	movlw	-1
  3406  0B32  07AB               	addwf	__doprnt@width^(0+128),f
  3407  0B33  1C03               	skipc
  3408  0B34  03AC               	decf	(__doprnt@width+1)^(0+128),f
  3409  0B35                     l7591:	
  3410  0B35  1927               	btfsc	__doprnt@flag^(0+128),2
  3411  0B36  2B51               	goto	l7605
  3412  0B37  2B76               	goto	l7617
  3413  0B38                     l7595:	
  3414  0B38  1683               	bsf	3,5	;RP0=1, select bank1
  3415  0B39  27A1  120A  158A   	fcall	PL26	;call to abstracted procedure
  3416  0B3C  1903               	skipnz
  3417  0B3D  2B46               	goto	l7599
  3418  0B3E  3030               	movlw	48
  3419  0B3F  2712               	fcall	PL4	;call to abstracted procedure
  3420  0B40  120A  118A  2100   	fcall	fptable
      +       120A  158A         
  3421  0B45  2B4C               	goto	l7603
  3422  0B46                     l7599:	
  3423  0B46  0837               	movf	__doprnt@pb^(0+128),w
  3424  0B47  0084               	movwf	4
  3425  0B48  0800               	movf	0,w
  3426  0B49  277D  120A  158A   	fcall	PL21	;call to abstracted procedure
  3427  0B4C                     l7603:	
  3428  0B4C  30FF               	movlw	-1
  3429  0B4D  27DC               	call	PL41	;select bank 1
  3430  0B4E  07AB               	addwf	__doprnt@width^(0+128),f
  3431  0B4F  1C03               	skipc
  3432  0B50  03AC               	decf	(__doprnt@width+1)^(0+128),f
  3433  0B51                     l7605:	
  3434  0B51  082C               	movf	(__doprnt@width+1)^(0+128),w
  3435  0B52  3A80               	xorlw	128
  3436  0B53  00FF               	movwf	127
  3437  0B54  3080               	movlw	128
  3438  0B55  027F               	subwf	127,w
  3439  0B56  1D03               	skipz
  3440  0B57  2B5A               	goto	u4105
  3441  0B58  3001               	movlw	1
  3442  0B59  022B               	subwf	__doprnt@width^(0+128),w
  3443  0B5A                     u4105:	
  3444  0B5A  1C03               	btfss	3,0
  3445  0B5B  2BF7               	goto	l7637
  3446  0B5C  2B38               	goto	l7595
  3447  0B5D                     l7607:	
  3448  0B5D  1683               	bsf	3,5	;RP0=1, select bank1
  3449  0B5E  27A1  120A  158A   	fcall	PL26	;call to abstracted procedure
  3450  0B61  1903               	skipnz
  3451  0B62  2B6B               	goto	l7611
  3452  0B63  3020               	movlw	32
  3453  0B64  2712               	fcall	PL4	;call to abstracted procedure
  3454  0B65  120A  118A  2100   	fcall	fptable
      +       120A  158A         
  3455  0B6A  2B71               	goto	l7615
  3456  0B6B                     l7611:	
  3457  0B6B  0837               	movf	__doprnt@pb^(0+128),w
  3458  0B6C  0084               	movwf	4
  3459  0B6D  0800               	movf	0,w
  3460  0B6E  27B6  120A  158A   	fcall	PL35	;call to abstracted procedure
  3461  0B71                     l7615:	
  3462  0B71  30FF               	movlw	-1
  3463  0B72  27DC               	call	PL41	;select bank 1
  3464  0B73  07AB               	addwf	__doprnt@width^(0+128),f
  3465  0B74  1C03               	skipc
  3466  0B75  03AC               	decf	(__doprnt@width+1)^(0+128),f
  3467  0B76                     l7617:	
  3468  0B76  082C               	movf	(__doprnt@width+1)^(0+128),w
  3469  0B77  3A80               	xorlw	128
  3470  0B78  00FF               	movwf	127
  3471  0B79  3080               	movlw	128
  3472  0B7A  027F               	subwf	127,w
  3473  0B7B  1D03               	skipz
  3474  0B7C  2B7F               	goto	u4125
  3475  0B7D  3001               	movlw	1
  3476  0B7E  022B               	subwf	__doprnt@width^(0+128),w
  3477  0B7F                     u4125:	
  3478  0B7F  1803               	skipnc
  3479  0B80  2B5D               	goto	l7607
  3480  0B81  27DC               	call	PL41	;select bank 1
  3481  0B82  0827               	movf	__doprnt@flag^(0+128),w
  3482  0B83  3903               	andlw	3
  3483  0B84  1903               	btfsc	3,2
  3484  0B85  2BF7               	goto	l7637
  3485  0B86  0837               	movf	__doprnt@pb^(0+128),w
  3486  0B87  3E01               	addlw	1
  3487  0B88  0084               	movwf	4
  3488  0B89  1383               	bcf	3,7	;select IRP bank0
  3489  0B8A  0880               	movf	0,f
  3490  0B8B  1903               	skipnz
  3491  0B8C  2B95               	goto	l7625
  3492  0B8D  302D               	movlw	45
  3493  0B8E  2712               	fcall	PL4	;call to abstracted procedure
  3494  0B8F  120A  118A  2100   	fcall	fptable
      +       120A  158A         
  3495  0B94  2BF7               	goto	l7637
  3496  0B95                     l7625:	
  3497  0B95  27BD  120A  158A   	fcall	PL37	;call to abstracted procedure
  3498  0B98  2BF4               	goto	L5
  3499  0B99                     l7629:	
  3500  0B99  27AF  120A  158A   	fcall	PL34	;call to abstracted procedure
  3501  0B9C  1903               	skipnz
  3502  0B9D  2BCC               	goto	L8
  3503  0B9E  1283               	bcf	3,5	;RP0=0, select bank0
  3504  0B9F  2703               	fcall	PL3	;call to abstracted procedure
  3505  0BA0  120A  118A  200F   	fcall	stringdir
      +       120A  158A         
  3506  0BA5  00A0               	movwf	?___lldiv
  3507  0BA6  120A  118A  200F   	fcall	stringdir
      +       120A  158A         
  3508  0BAB  00A1               	movwf	?___lldiv+1
  3509  0BAC  120A  118A  200F   	fcall	stringdir
      +       120A  158A         
  3510  0BB1  00A2               	movwf	?___lldiv+2
  3511  0BB2  120A  118A  200F   	fcall	stringdir
      +       120A  158A         
  3512  0BB7  26F1               	fcall	PL2	;call to abstracted procedure
  3513  0BB8  160A  118A  230F   	fcall	___lldiv
      +       120A  158A         
  3514  0BBD  272B               	fcall	PL8	;call to abstracted procedure
  3515  0BBE  160A  118A  22D1   	fcall	___llmod
      +       120A  158A         
  3516  0BC3  082D               	movf	?___llmod,w
  3517  0BC4  3E30               	addlw	48
  3518  0BC5  2724               	fcall	PL6	;call to abstracted procedure
  3519  0BC6  120A  118A  2100   	fcall	fptable
      +       120A  158A         
  3520  0BCB  2BF7               	goto	l7637
  3521  0BCC                     L8:	
  3522  0BCC  1283               	bcf	3,5	;RP0=0, select bank0
  3523  0BCD  2703               	fcall	PL3	;call to abstracted procedure
  3524  0BCE  120A  118A  200F   	fcall	stringdir
      +       120A  158A         
  3525  0BD3  00A0               	movwf	?___lldiv
  3526  0BD4  120A  118A  200F   	fcall	stringdir
      +       120A  158A         
  3527  0BD9  00A1               	movwf	?___lldiv+1
  3528  0BDA  120A  118A  200F   	fcall	stringdir
      +       120A  158A         
  3529  0BDF  00A2               	movwf	?___lldiv+2
  3530  0BE0  120A  118A  200F   	fcall	stringdir
      +       120A  158A         
  3531  0BE5  26F1               	fcall	PL2	;call to abstracted procedure
  3532  0BE6  160A  118A  230F   	fcall	___lldiv
      +       120A  158A         
  3533  0BEB  272B               	fcall	PL8	;call to abstracted procedure
  3534  0BEC  160A  118A  22D1   	fcall	___llmod
      +       120A  158A         
  3535  0BF1  2767  120A  158A   	fcall	PL17	;call to abstracted procedure
  3536  0BF4                     L5:	
  3537  0BF4  27C2  120A  158A   	fcall	PL39	;call to abstracted procedure
  3538  0BF7                     l7637:	
  3539  0BF7  27DC               	call	PL41	;select bank 1
  3540  0BF8  03B6               	decf	__doprnt@c^(0+128),f
  3541  0BF9  0F36               	incfsz	__doprnt@c^(0+128),w
  3542  0BFA  2B99               	goto	l7629
  3543  0BFB                     l7649:	
  3544  0BFB  082A               	movf	(__doprnt@exp+1)^(0+128),w
  3545  0BFC  3A80               	xorlw	128
  3546  0BFD  00FF               	movwf	127
  3547  0BFE  3080               	movlw	128
  3548  0BFF  027F               	subwf	127,w
  3549  0C00  1D03               	skipz
  3550  0C01  2C04               	goto	u4185
  3551  0C02  3001               	movlw	1
  3552  0C03  0229               	subwf	__doprnt@exp^(0+128),w
  3553  0C04                     u4185:	
  3554  0C04  1C03               	btfss	3,0
  3555  0C05  2C20               	goto	l7651
  3556  0C06  1683               	bsf	3,5	;RP0=1, select bank1
  3557  0C07  27A1  120A  158A   	fcall	PL26	;call to abstracted procedure
  3558  0C0A  1903               	skipnz
  3559  0C0B  2C14               	goto	l7643
  3560  0C0C  3030               	movlw	48
  3561  0C0D  2712               	fcall	PL4	;call to abstracted procedure
  3562  0C0E  120A  118A  2100   	fcall	fptable
      +       120A  158A         
  3563  0C13  2C1A               	goto	l7647
  3564  0C14                     l7643:	
  3565  0C14  0837               	movf	__doprnt@pb^(0+128),w
  3566  0C15  0084               	movwf	4
  3567  0C16  0800               	movf	0,w
  3568  0C17  277D  120A  158A   	fcall	PL21	;call to abstracted procedure
  3569  0C1A                     l7647:	
  3570  0C1A  30FF               	movlw	-1
  3571  0C1B  27DC               	call	PL41	;select bank 1
  3572  0C1C  07A9               	addwf	__doprnt@exp^(0+128),f
  3573  0C1D  1C03               	skipc
  3574  0C1E  03AA               	decf	(__doprnt@exp+1)^(0+128),f
  3575  0C1F  2BFB               	goto	l7649
  3576  0C20                     l7651:	
  3577  0C20  27DC               	call	PL41	;select bank 1
  3578  0C21  0835               	movf	(__doprnt@prec+1)^(0+128),w
  3579  0C22  3A80               	xorlw	128
  3580  0C23  00FF               	movwf	127
  3581  0C24  3080               	movlw	128
  3582  0C25  027F               	subwf	127,w
  3583  0C26  1D03               	skipz
  3584  0C27  2C2A               	goto	u4195
  3585  0C28  3009               	movlw	9
  3586  0C29  0234               	subwf	__doprnt@prec^(0+128),w
  3587  0C2A                     u4195:	
  3588  0C2A  1C03               	skipc
  3589  0C2B  2C2F               	goto	l7655
  3590  0C2C  3008               	movlw	8
  3591  0C2D  27DC               	call	PL41	;select bank 1
  3592  0C2E  2C31               	goto	L3
  3593  0C2F                     l7655:	
  3594  0C2F  27DC               	call	PL41	;select bank 1
  3595  0C30  0834               	movf	__doprnt@prec^(0+128),w
  3596  0C31                     L3:	
  3597  0C31  00B6               	movwf	__doprnt@c^(0+128)
  3598  0C32  1283               	bcf	3,5	;RP0=0, select bank0
  3599  0C33  00E4               	movwf	??__doprnt
  3600  0C34  01E5               	clrf	??__doprnt+1
  3601  0C35  1BE4               	btfsc	??__doprnt,7
  3602  0C36  03E5               	decf	??__doprnt+1,f
  3603  0C37  1683               	bsf	3,5	;RP0=1, select bank1
  3604  0C38  02B4               	subwf	__doprnt@prec^(0+128),f
  3605  0C39  1283               	bcf	3,5	;RP0=0, select bank0
  3606  0C3A  0865               	movf	??__doprnt+1,w
  3607  0C3B  1683               	bsf	3,5	;RP0=1, select bank1
  3608  0C3C  1C03               	skipc
  3609  0C3D  03B5               	decf	(__doprnt@prec+1)^(0+128),f
  3610  0C3E  02B5               	subwf	(__doprnt@prec+1)^(0+128),f
  3611  0C3F  0836               	movf	__doprnt@c^(0+128),w
  3612  0C40  1903               	btfsc	3,2
  3613  0C41  2C5A               	goto	l7665
  3614  0C42  0837               	movf	__doprnt@pb^(0+128),w
  3615  0C43  3E01               	addlw	1
  3616  0C44  0084               	movwf	4
  3617  0C45  1383               	bcf	3,7	;select IRP bank0
  3618  0C46  0880               	movf	0,f
  3619  0C47  1903               	skipnz
  3620  0C48  2C51               	goto	l7661
  3621  0C49  302E               	movlw	46
  3622  0C4A  2712               	fcall	PL4	;call to abstracted procedure
  3623  0C4B  120A  118A  2100   	fcall	fptable
      +       120A  158A         
  3624  0C50  2C5A               	goto	l7665
  3625  0C51                     l7661:	
  3626  0C51  0837               	movf	__doprnt@pb^(0+128),w
  3627  0C52  0084               	movwf	4
  3628  0C53  0800               	movf	0,w
  3629  0C54  0084               	movwf	4
  3630  0C55  302E               	movlw	46
  3631  0C56  0080               	movwf	0
  3632  0C57  0837               	movf	__doprnt@pb^(0+128),w
  3633  0C58  0084               	movwf	4
  3634  0C59  0A80               	incf	0,f
  3635  0C5A                     l7665:	
  3636  0C5A  27DC               	call	PL41	;select bank 1
  3637  0C5B  0836               	movf	__doprnt@c^(0+128),w
  3638  0C5C  120A  118A  21D2   	fcall	_scale
      +       120A  158A         
  3639  0C61  084C               	movf	?_scale,w
  3640  0C62  00C0               	movwf	?___ftmul+3
  3641  0C63  084D               	movf	?_scale+1,w
  3642  0C64  00C1               	movwf	?___ftmul+4
  3643  0C65  084E               	movf	?_scale+2,w
  3644  0C66  00C2               	movwf	?___ftmul+5
  3645  0C67  1683               	bsf	3,5	;RP0=1, select bank1
  3646  0C68  0831               	movf	__doprnt@fval^(0+128),w
  3647  0C69  1283               	bcf	3,5	;RP0=0, select bank0
  3648  0C6A  2784               	fcall	PL23	;call to abstracted procedure
  3649  0C6B  120A  118A  23E6   	fcall	___ftmul
      +       120A  158A         
  3650  0C70  083D               	movf	?___ftmul,w
  3651  0C71  00AE               	movwf	?___fttol
  3652  0C72  083E               	movf	?___ftmul+1,w
  3653  0C73  00AF               	movwf	?___fttol+1
  3654  0C74  083F               	movf	?___ftmul+2,w
  3655  0C75  00B0               	movwf	?___fttol+2
  3656  0C76  160A  118A  23A4   	fcall	___fttol
      +       120A  158A         
  3657  0C7B  2740  120A  158A   	fcall	PL10	;call to abstracted procedure
  3658  0C7E  2D19               	goto	L4
  3659  0C7F                     l7667:	
  3660  0C7F  27AF  120A  158A   	fcall	PL34	;call to abstracted procedure
  3661  0C82  1903               	skipnz
  3662  0C83  2CB2               	goto	L9
  3663  0C84  1283               	bcf	3,5	;RP0=0, select bank0
  3664  0C85  2703               	fcall	PL3	;call to abstracted procedure
  3665  0C86  120A  118A  200F   	fcall	stringdir
      +       120A  158A         
  3666  0C8B  00A0               	movwf	?___lldiv
  3667  0C8C  120A  118A  200F   	fcall	stringdir
      +       120A  158A         
  3668  0C91  00A1               	movwf	?___lldiv+1
  3669  0C92  120A  118A  200F   	fcall	stringdir
      +       120A  158A         
  3670  0C97  00A2               	movwf	?___lldiv+2
  3671  0C98  120A  118A  200F   	fcall	stringdir
      +       120A  158A         
  3672  0C9D  26F1               	fcall	PL2	;call to abstracted procedure
  3673  0C9E  160A  118A  230F   	fcall	___lldiv
      +       120A  158A         
  3674  0CA3  272B               	fcall	PL8	;call to abstracted procedure
  3675  0CA4  160A  118A  22D1   	fcall	___llmod
      +       120A  158A         
  3676  0CA9  082D               	movf	?___llmod,w
  3677  0CAA  3E30               	addlw	48
  3678  0CAB  2724               	fcall	PL6	;call to abstracted procedure
  3679  0CAC  120A  118A  2100   	fcall	fptable
      +       120A  158A         
  3680  0CB1  2CDD               	goto	l7675
  3681  0CB2                     L9:	
  3682  0CB2  1283               	bcf	3,5	;RP0=0, select bank0
  3683  0CB3  2703               	fcall	PL3	;call to abstracted procedure
  3684  0CB4  120A  118A  200F   	fcall	stringdir
      +       120A  158A         
  3685  0CB9  00A0               	movwf	?___lldiv
  3686  0CBA  120A  118A  200F   	fcall	stringdir
      +       120A  158A         
  3687  0CBF  00A1               	movwf	?___lldiv+1
  3688  0CC0  120A  118A  200F   	fcall	stringdir
      +       120A  158A         
  3689  0CC5  00A2               	movwf	?___lldiv+2
  3690  0CC6  120A  118A  200F   	fcall	stringdir
      +       120A  158A         
  3691  0CCB  26F1               	fcall	PL2	;call to abstracted procedure
  3692  0CCC  160A  118A  230F   	fcall	___lldiv
      +       120A  158A         
  3693  0CD1  272B               	fcall	PL8	;call to abstracted procedure
  3694  0CD2  160A  118A  22D1   	fcall	___llmod
      +       120A  158A         
  3695  0CD7  2767  120A  158A   	fcall	PL17	;call to abstracted procedure
  3696  0CDA  27C2  120A  158A   	fcall	PL39	;call to abstracted procedure
  3697  0CDD                     l7675:	
  3698  0CDD  27DC               	call	PL41	;select bank 1
  3699  0CDE  271A               	fcall	PL5	;call to abstracted procedure
  3700  0CDF  120A  118A  200F   	fcall	stringdir
      +       120A  158A         
  3701  0CE4  00AD               	movwf	?___llmod
  3702  0CE5  120A  118A  200F   	fcall	stringdir
      +       120A  158A         
  3703  0CEA  00AE               	movwf	?___llmod+1
  3704  0CEB  120A  118A  200F   	fcall	stringdir
      +       120A  158A         
  3705  0CF0  00AF               	movwf	?___llmod+2
  3706  0CF1  120A  118A  200F   	fcall	stringdir
      +       120A  158A         
  3707  0CF6  00B0               	movwf	?___llmod+3
  3708  0CF7  1683               	bsf	3,5	;RP0=1, select bank1
  3709  0CF8  0830               	movf	(__doprnt@_val+3)^(0+128),w
  3710  0CF9  1283               	bcf	3,5	;RP0=0, select bank0
  3711  0CFA  00B4               	movwf	?___llmod+7
  3712  0CFB  1683               	bsf	3,5	;RP0=1, select bank1
  3713  0CFC  082F               	movf	(__doprnt@_val+2)^(0+128),w
  3714  0CFD  1283               	bcf	3,5	;RP0=0, select bank0
  3715  0CFE  00B3               	movwf	?___llmod+6
  3716  0CFF  1683               	bsf	3,5	;RP0=1, select bank1
  3717  0D00  082E               	movf	(__doprnt@_val+1)^(0+128),w
  3718  0D01  1283               	bcf	3,5	;RP0=0, select bank0
  3719  0D02  00B2               	movwf	?___llmod+5
  3720  0D03  1683               	bsf	3,5	;RP0=1, select bank1
  3721  0D04  082D               	movf	__doprnt@_val^(0+128),w
  3722  0D05  1283               	bcf	3,5	;RP0=0, select bank0
  3723  0D06  00B1               	movwf	?___llmod+4
  3724  0D07  160A  118A  22D1   	fcall	___llmod
      +       120A  158A         
  3725  0D0C  0830               	movf	?___llmod+3,w
  3726  0D0D  1683               	bsf	3,5	;RP0=1, select bank1
  3727  0D0E  00B0               	movwf	(__doprnt@_val+3)^(0+128)
  3728  0D0F  1283               	bcf	3,5	;RP0=0, select bank0
  3729  0D10  082F               	movf	?___llmod+2,w
  3730  0D11  1683               	bsf	3,5	;RP0=1, select bank1
  3731  0D12  00AF               	movwf	(__doprnt@_val+2)^(0+128)
  3732  0D13  1283               	bcf	3,5	;RP0=0, select bank0
  3733  0D14  082E               	movf	?___llmod+1,w
  3734  0D15  1683               	bsf	3,5	;RP0=1, select bank1
  3735  0D16  00AE               	movwf	(__doprnt@_val+1)^(0+128)
  3736  0D17  1283               	bcf	3,5	;RP0=0, select bank0
  3737  0D18  082D               	movf	?___llmod,w
  3738  0D19                     L4:	
  3739  0D19  1683               	bsf	3,5	;RP0=1, select bank1
  3740  0D1A  00AD               	movwf	__doprnt@_val^(0+128)
  3741  0D1B  03B6               	decf	__doprnt@c^(0+128),f
  3742  0D1C  0F36               	incfsz	__doprnt@c^(0+128),w
  3743  0D1D  2C7F               	goto	l7667
  3744  0D1E                     l7689:	
  3745  0D1E  0835               	movf	(__doprnt@prec+1)^(0+128),w
  3746  0D1F  0434               	iorwf	__doprnt@prec^(0+128),w
  3747  0D20  1903               	btfsc	3,2
  3748  0D21  280A               	goto	l7805
  3749  0D22  0837               	movf	__doprnt@pb^(0+128),w
  3750  0D23  3E01               	addlw	1
  3751  0D24  0084               	movwf	4
  3752  0D25  1383               	bcf	3,7	;select IRP bank0
  3753  0D26  0880               	movf	0,f
  3754  0D27  1903               	skipnz
  3755  0D28  2D31               	goto	l7683
  3756  0D29  3030               	movlw	48
  3757  0D2A  2712               	fcall	PL4	;call to abstracted procedure
  3758  0D2B  120A  118A  2100   	fcall	fptable
      +       120A  158A         
  3759  0D30  2D37               	goto	l7687
  3760  0D31                     l7683:	
  3761  0D31  0837               	movf	__doprnt@pb^(0+128),w
  3762  0D32  0084               	movwf	4
  3763  0D33  0800               	movf	0,w
  3764  0D34  277D  120A  158A   	fcall	PL21	;call to abstracted procedure
  3765  0D37                     l7687:	
  3766  0D37  30FF               	movlw	-1
  3767  0D38  27DC               	call	PL41	;select bank 1
  3768  0D39  07B4               	addwf	__doprnt@prec^(0+128),f
  3769  0D3A  1C03               	skipc
  3770  0D3B  03B5               	decf	(__doprnt@prec+1)^(0+128),f
  3771  0D3C  2D1E               	goto	l7689
  3772  0D3D                     l7691:	
  3773  0D3D  0863               	movf	__doprnt@ap,w
  3774  0D3E  0084               	movwf	4
  3775  0D3F  1383               	bcf	3,7	;select IRP bank0
  3776  0D40  0800               	movf	0,w
  3777  0D41  00E4               	movwf	??__doprnt
  3778  0D42  3002               	movlw	2
  3779  0D43  0780               	addwf	0,f
  3780  0D44  0864               	movf	??__doprnt,w
  3781  0D45  0084               	movwf	4
  3782  0D46  0800               	movf	0,w
  3783  0D47  00E5               	movwf	??__doprnt+1
  3784  0D48  0A84               	incf	4,f
  3785  0D49  0800               	movf	0,w
  3786  0D4A  00E6               	movwf	??__doprnt+2
  3787  0D4B  0865               	movf	??__doprnt+1,w
  3788  0D4C  1683               	bsf	3,5	;RP0=1, select bank1
  3789  0D4D  00AD               	movwf	__doprnt@_val^(0+128)
  3790  0D4E  1283               	bcf	3,5	;RP0=0, select bank0
  3791  0D4F  0866               	movf	??__doprnt+2,w
  3792  0D50  1683               	bsf	3,5	;RP0=1, select bank1
  3793  0D51  00AE               	movwf	(__doprnt@_val+1)^(0+128)
  3794  0D52  3000               	movlw	0
  3795  0D53  1BAE               	btfsc	(__doprnt@_val+1)^(0+128),7
  3796  0D54  30FF               	movlw	255
  3797  0D55  00AF               	movwf	(__doprnt@_val+2)^(0+128)
  3798  0D56  00B0               	movwf	(__doprnt@_val+3)^(0+128)
  3799  0D57  1FB0               	btfss	(__doprnt@_val+3)^(0+128),7
  3800  0D58  2D66               	goto	l7699
  3801  0D59  3003               	movlw	3
  3802  0D5A  04A7               	iorwf	__doprnt@flag^(0+128),f
  3803  0D5B  09AD               	comf	__doprnt@_val^(0+128),f
  3804  0D5C  09AE               	comf	(__doprnt@_val+1)^(0+128),f
  3805  0D5D  09AF               	comf	(__doprnt@_val+2)^(0+128),f
  3806  0D5E  09B0               	comf	(__doprnt@_val+3)^(0+128),f
  3807  0D5F  0AAD               	incf	__doprnt@_val^(0+128),f
  3808  0D60  1903               	skipnz
  3809  0D61  0AAE               	incf	(__doprnt@_val+1)^(0+128),f
  3810  0D62  1903               	skipnz
  3811  0D63  0AAF               	incf	(__doprnt@_val+2)^(0+128),f
  3812  0D64  1903               	skipnz
  3813  0D65  0AB0               	incf	(__doprnt@_val+3)^(0+128),f
  3814  0D66                     l7699:	
  3815  0D66  0835               	movf	(__doprnt@prec+1)^(0+128),w
  3816  0D67  0434               	iorwf	__doprnt@prec^(0+128),w
  3817  0D68  1D03               	skipz
  3818  0D69  2D72               	goto	l7705
  3819  0D6A  0830               	movf	(__doprnt@_val+3)^(0+128),w
  3820  0D6B  042F               	iorwf	(__doprnt@_val+2)^(0+128),w
  3821  0D6C  042E               	iorwf	(__doprnt@_val+1)^(0+128),w
  3822  0D6D  042D               	iorwf	__doprnt@_val^(0+128),w
  3823  0D6E  1903               	btfsc	3,2
  3824  0D6F  0AB4               	incf	__doprnt@prec^(0+128),f
  3825  0D70  1903               	skipnz
  3826  0D71  0AB5               	incf	(__doprnt@prec+1)^(0+128),f
  3827  0D72                     l7705:	
  3828  0D72  01B6               	clrf	__doprnt@c^(0+128)
  3829  0D73  0AB6               	incf	__doprnt@c^(0+128),f
  3830  0D74                     l7711:	
  3831  0D74  271A               	fcall	PL5	;call to abstracted procedure
  3832  0D75  120A  118A  200F   	fcall	stringdir
      +       120A  158A         
  3833  0D7A  00E5               	movwf	??__doprnt+1
  3834  0D7B  120A  118A  200F   	fcall	stringdir
      +       120A  158A         
  3835  0D80  00E6               	movwf	??__doprnt+2
  3836  0D81  120A  118A  200F   	fcall	stringdir
      +       120A  158A         
  3837  0D86  00E7               	movwf	??__doprnt+3
  3838  0D87  120A  118A  200F   	fcall	stringdir
      +       120A  158A         
  3839  0D8C  00E8               	movwf	??__doprnt+4
  3840  0D8D  1683               	bsf	3,5	;RP0=1, select bank1
  3841  0D8E  0230               	subwf	(__doprnt@_val+3)^(0+128),w
  3842  0D8F  1D03               	skipz
  3843  0D90  2DA1               	goto	u4295
  3844  0D91  1283               	bcf	3,5	;RP0=0, select bank0
  3845  0D92  0867               	movf	??__doprnt+3,w
  3846  0D93  1683               	bsf	3,5	;RP0=1, select bank1
  3847  0D94  022F               	subwf	(__doprnt@_val+2)^(0+128),w
  3848  0D95  1D03               	skipz
  3849  0D96  2DA1               	goto	u4295
  3850  0D97  1283               	bcf	3,5	;RP0=0, select bank0
  3851  0D98  0866               	movf	??__doprnt+2,w
  3852  0D99  1683               	bsf	3,5	;RP0=1, select bank1
  3853  0D9A  022E               	subwf	(__doprnt@_val+1)^(0+128),w
  3854  0D9B  1D03               	skipz
  3855  0D9C  2DA1               	goto	u4295
  3856  0D9D  1283               	bcf	3,5	;RP0=0, select bank0
  3857  0D9E  0865               	movf	??__doprnt+1,w
  3858  0D9F  1683               	bsf	3,5	;RP0=1, select bank1
  3859  0DA0  022D               	subwf	__doprnt@_val^(0+128),w
  3860  0DA1                     u4295:	
  3861  0DA1  1C03               	btfss	3,0
  3862  0DA2  2DA8               	goto	l7719
  3863  0DA3  0AB6               	incf	__doprnt@c^(0+128),f
  3864  0DA4  0836               	movf	__doprnt@c^(0+128),w
  3865  0DA5  3A0A               	xorlw	10
  3866  0DA6  1D03               	skipz
  3867  0DA7  2D74               	goto	l7711
  3868  0DA8                     l7719:	
  3869  0DA8  0836               	movf	__doprnt@c^(0+128),w
  3870  0DA9  278E  120A  158A   	fcall	PL24	;call to abstracted procedure
  3871  0DAC  0835               	movf	(__doprnt@prec+1)^(0+128),w
  3872  0DAD  3A80               	xorlw	128
  3873  0DAE  1283               	bcf	3,5	;RP0=0, select bank0
  3874  0DAF  0266               	subwf	??__doprnt+2,w
  3875  0DB0  1D03               	skipz
  3876  0DB1  2DB6               	goto	u4315
  3877  0DB2  1683               	bsf	3,5	;RP0=1, select bank1
  3878  0DB3  0834               	movf	__doprnt@prec^(0+128),w
  3879  0DB4  1283               	bcf	3,5	;RP0=0, select bank0
  3880  0DB5  0264               	subwf	??__doprnt,w
  3881  0DB6                     u4315:	
  3882  0DB6  1803               	skipnc
  3883  0DB7  2DBC               	goto	l7723
  3884  0DB8  27DC               	call	PL41	;select bank 1
  3885  0DB9  0834               	movf	__doprnt@prec^(0+128),w
  3886  0DBA  00B6               	movwf	__doprnt@c^(0+128)
  3887  0DBB  2DD4               	goto	l7727
  3888  0DBC                     l7723:	
  3889  0DBC  1683               	bsf	3,5	;RP0=1, select bank1
  3890  0DBD  2798  120A  158A   	fcall	PL25	;call to abstracted procedure
  3891  0DC0  0835               	movf	(__doprnt@prec+1)^(0+128),w
  3892  0DC1  3A80               	xorlw	128
  3893  0DC2  1283               	bcf	3,5	;RP0=0, select bank0
  3894  0DC3  00E6               	movwf	??__doprnt+2
  3895  0DC4  0865               	movf	??__doprnt+1,w
  3896  0DC5  3A80               	xorlw	128
  3897  0DC6  0266               	subwf	??__doprnt+2,w
  3898  0DC7  1D03               	skipz
  3899  0DC8  2DCC               	goto	u4325
  3900  0DC9  0864               	movf	??__doprnt,w
  3901  0DCA  1683               	bsf	3,5	;RP0=1, select bank1
  3902  0DCB  0234               	subwf	__doprnt@prec^(0+128),w
  3903  0DCC                     u4325:	
  3904  0DCC  1803               	skipnc
  3905  0DCD  2DD4               	goto	l7727
  3906  0DCE  27DC               	call	PL41	;select bank 1
  3907  0DCF  0836               	movf	__doprnt@c^(0+128),w
  3908  0DD0  00B4               	movwf	__doprnt@prec^(0+128)
  3909  0DD1  01B5               	clrf	(__doprnt@prec+1)^(0+128)
  3910  0DD2  1BB4               	btfsc	__doprnt@prec^(0+128),7
  3911  0DD3  03B5               	decf	(__doprnt@prec+1)^(0+128),f
  3912  0DD4                     l7727:	
  3913  0DD4  27DC               	call	PL41	;select bank 1
  3914  0DD5  082C               	movf	(__doprnt@width+1)^(0+128),w
  3915  0DD6  042B               	iorwf	__doprnt@width^(0+128),w
  3916  0DD7  1903               	skipnz
  3917  0DD8  2DE1               	goto	l7733
  3918  0DD9  0827               	movf	__doprnt@flag^(0+128),w
  3919  0DDA  3903               	andlw	3
  3920  0DDB  1903               	btfsc	3,2
  3921  0DDC  2DE1               	goto	l7733
  3922  0DDD  30FF               	movlw	-1
  3923  0DDE  07AB               	addwf	__doprnt@width^(0+128),f
  3924  0DDF  1C03               	skipc
  3925  0DE0  03AC               	decf	(__doprnt@width+1)^(0+128),f
  3926  0DE1                     l7733:	
  3927  0DE1  1F28               	btfss	(__doprnt@flag+1)^(0+128),6
  3928  0DE2  2DFE               	goto	l7741
  3929  0DE3  0835               	movf	(__doprnt@prec+1)^(0+128),w
  3930  0DE4  3A80               	xorlw	128
  3931  0DE5  1283               	bcf	3,5	;RP0=0, select bank0
  3932  0DE6  00E4               	movwf	??__doprnt
  3933  0DE7  1683               	bsf	3,5	;RP0=1, select bank1
  3934  0DE8  082C               	movf	(__doprnt@width+1)^(0+128),w
  3935  0DE9  3A80               	xorlw	128
  3936  0DEA  1283               	bcf	3,5	;RP0=0, select bank0
  3937  0DEB  0264               	subwf	??__doprnt,w
  3938  0DEC  1D03               	skipz
  3939  0DED  2DF1               	goto	u4365
  3940  0DEE  1683               	bsf	3,5	;RP0=1, select bank1
  3941  0DEF  082B               	movf	__doprnt@width^(0+128),w
  3942  0DF0  0234               	subwf	__doprnt@prec^(0+128),w
  3943  0DF1                     u4365:	
  3944  0DF1  1803               	skipnc
  3945  0DF2  2DFB               	goto	l7739
  3946  0DF3  27DC               	call	PL41	;select bank 1
  3947  0DF4  0834               	movf	__doprnt@prec^(0+128),w
  3948  0DF5  02AB               	subwf	__doprnt@width^(0+128),f
  3949  0DF6  0835               	movf	(__doprnt@prec+1)^(0+128),w
  3950  0DF7  1C03               	skipc
  3951  0DF8  03AC               	decf	(__doprnt@width+1)^(0+128),f
  3952  0DF9  02AC               	subwf	(__doprnt@width+1)^(0+128),f
  3953  0DFA  2DFE               	goto	l7741
  3954  0DFB                     l7739:	
  3955  0DFB  27DC               	call	PL41	;select bank 1
  3956  0DFC  01AB               	clrf	__doprnt@width^(0+128)
  3957  0DFD  01AC               	clrf	(__doprnt@width+1)^(0+128)
  3958  0DFE                     l7741:	
  3959  0DFE  0836               	movf	__doprnt@c^(0+128),w
  3960  0DFF  278E  120A  158A   	fcall	PL24	;call to abstracted procedure
  3961  0E02  082C               	movf	(__doprnt@width+1)^(0+128),w
  3962  0E03  3A80               	xorlw	128
  3963  0E04  1283               	bcf	3,5	;RP0=0, select bank0
  3964  0E05  0266               	subwf	??__doprnt+2,w
  3965  0E06  1D03               	skipz
  3966  0E07  2E0C               	goto	u4375
  3967  0E08  1683               	bsf	3,5	;RP0=1, select bank1
  3968  0E09  082B               	movf	__doprnt@width^(0+128),w
  3969  0E0A  1283               	bcf	3,5	;RP0=0, select bank0
  3970  0E0B  0264               	subwf	??__doprnt,w
  3971  0E0C                     u4375:	
  3972  0E0C  1803               	skipnc
  3973  0E0D  2E1A               	goto	l7745
  3974  0E0E  1683               	bsf	3,5	;RP0=1, select bank1
  3975  0E0F  2798  120A  158A   	fcall	PL25	;call to abstracted procedure
  3976  0E12  02AB               	subwf	__doprnt@width^(0+128),f
  3977  0E13  1283               	bcf	3,5	;RP0=0, select bank0
  3978  0E14  0865               	movf	??__doprnt+1,w
  3979  0E15  1683               	bsf	3,5	;RP0=1, select bank1
  3980  0E16  1C03               	skipc
  3981  0E17  03AC               	decf	(__doprnt@width+1)^(0+128),f
  3982  0E18  02AC               	subwf	(__doprnt@width+1)^(0+128),f
  3983  0E19  2E1D               	goto	l7747
  3984  0E1A                     l7745:	
  3985  0E1A  27DC               	call	PL41	;select bank 1
  3986  0E1B  01AB               	clrf	__doprnt@width^(0+128)
  3987  0E1C  01AC               	clrf	(__doprnt@width+1)^(0+128)
  3988  0E1D                     l7747:	
  3989  0E1D  1D27               	btfss	__doprnt@flag^(0+128),2
  3990  0E1E  2E5B               	goto	l7771
  3991  0E1F  0827               	movf	__doprnt@flag^(0+128),w
  3992  0E20  3903               	andlw	3
  3993  0E21  1903               	btfsc	3,2
  3994  0E22  2E3B               	goto	l7759
  3995  0E23  0837               	movf	__doprnt@pb^(0+128),w
  3996  0E24  3E01               	addlw	1
  3997  0E25  0084               	movwf	4
  3998  0E26  1383               	bcf	3,7	;select IRP bank0
  3999  0E27  0880               	movf	0,f
  4000  0E28  1903               	skipnz
  4001  0E29  2E32               	goto	l7755
  4002  0E2A  302D               	movlw	45
  4003  0E2B  2712               	fcall	PL4	;call to abstracted procedure
  4004  0E2C  120A  118A  2100   	fcall	fptable
      +       120A  158A         
  4005  0E31  2E3B               	goto	l7759
  4006  0E32                     l7755:	
  4007  0E32  0837               	movf	__doprnt@pb^(0+128),w
  4008  0E33  0084               	movwf	4
  4009  0E34  0800               	movf	0,w
  4010  0E35  0084               	movwf	4
  4011  0E36  302D               	movlw	45
  4012  0E37  0080               	movwf	0
  4013  0E38  0837               	movf	__doprnt@pb^(0+128),w
  4014  0E39  0084               	movwf	4
  4015  0E3A  0A80               	incf	0,f
  4016  0E3B                     l7759:	
  4017  0E3B  27DC               	call	PL41	;select bank 1
  4018  0E3C                     L6:	
  4019  0E3C  082C               	movf	(__doprnt@width+1)^(0+128),w
  4020  0E3D  042B               	iorwf	__doprnt@width^(0+128),w
  4021  0E3E  1903               	skipnz
  4022  0E3F  2E97               	goto	l7803
  4023  0E40  0837               	movf	__doprnt@pb^(0+128),w
  4024  0E41  3E01               	addlw	1
  4025  0E42  0084               	movwf	4
  4026  0E43  1383               	bcf	3,7	;select IRP bank0
  4027  0E44  0880               	movf	0,f
  4028  0E45  1903               	skipnz
  4029  0E46  2E4F               	goto	l7765
  4030  0E47  3030               	movlw	48
  4031  0E48  2712               	fcall	PL4	;call to abstracted procedure
  4032  0E49  120A  118A  2100   	fcall	fptable
      +       120A  158A         
  4033  0E4E  2E55               	goto	l7769
  4034  0E4F                     l7765:	
  4035  0E4F  0837               	movf	__doprnt@pb^(0+128),w
  4036  0E50  0084               	movwf	4
  4037  0E51  0800               	movf	0,w
  4038  0E52  277D  120A  158A   	fcall	PL21	;call to abstracted procedure
  4039  0E55                     l7769:	
  4040  0E55  30FF               	movlw	-1
  4041  0E56  27DC               	call	PL41	;select bank 1
  4042  0E57  07AB               	addwf	__doprnt@width^(0+128),f
  4043  0E58  1C03               	skipc
  4044  0E59  03AC               	decf	(__doprnt@width+1)^(0+128),f
  4045  0E5A  2E3C               	goto	L6
  4046  0E5B                     l7771:	
  4047  0E5B  082C               	movf	(__doprnt@width+1)^(0+128),w
  4048  0E5C  042B               	iorwf	__doprnt@width^(0+128),w
  4049  0E5D  1903               	skipnz
  4050  0E5E  2E7D               	goto	l7783
  4051  0E5F                     l7773:	
  4052  0E5F  0837               	movf	__doprnt@pb^(0+128),w
  4053  0E60  3E01               	addlw	1
  4054  0E61  0084               	movwf	4
  4055  0E62  1383               	bcf	3,7	;select IRP bank0
  4056  0E63  0880               	movf	0,f
  4057  0E64  1903               	skipnz
  4058  0E65  2E6E               	goto	l7777
  4059  0E66  3020               	movlw	32
  4060  0E67  2712               	fcall	PL4	;call to abstracted procedure
  4061  0E68  120A  118A  2100   	fcall	fptable
      +       120A  158A         
  4062  0E6D  2E74               	goto	l7781
  4063  0E6E                     l7777:	
  4064  0E6E  0837               	movf	__doprnt@pb^(0+128),w
  4065  0E6F  0084               	movwf	4
  4066  0E70  0800               	movf	0,w
  4067  0E71  27B6  120A  158A   	fcall	PL35	;call to abstracted procedure
  4068  0E74                     l7781:	
  4069  0E74  30FF               	movlw	-1
  4070  0E75  27DC               	call	PL41	;select bank 1
  4071  0E76  07AB               	addwf	__doprnt@width^(0+128),f
  4072  0E77  1C03               	skipc
  4073  0E78  03AC               	decf	(__doprnt@width+1)^(0+128),f
  4074  0E79  082C               	movf	(__doprnt@width+1)^(0+128),w
  4075  0E7A  042B               	iorwf	__doprnt@width^(0+128),w
  4076  0E7B  1D03               	skipz
  4077  0E7C  2E5F               	goto	l7773
  4078  0E7D                     l7783:	
  4079  0E7D  0827               	movf	__doprnt@flag^(0+128),w
  4080  0E7E  3903               	andlw	3
  4081  0E7F  1903               	btfsc	3,2
  4082  0E80  2E97               	goto	l7803
  4083  0E81  0837               	movf	__doprnt@pb^(0+128),w
  4084  0E82  3E01               	addlw	1
  4085  0E83  0084               	movwf	4
  4086  0E84  1383               	bcf	3,7	;select IRP bank0
  4087  0E85  0880               	movf	0,f
  4088  0E86  1903               	skipnz
  4089  0E87  2E90               	goto	l7789
  4090  0E88  302D               	movlw	45
  4091  0E89  2712               	fcall	PL4	;call to abstracted procedure
  4092  0E8A  120A  118A  2100   	fcall	fptable
      +       120A  158A         
  4093  0E8F  2E97               	goto	l7803
  4094  0E90                     l7789:	
  4095  0E90  27BD  120A  158A   	fcall	PL37	;call to abstracted procedure
  4096  0E93                     L7:	
  4097  0E93  0080               	movwf	0
  4098  0E94  0837               	movf	__doprnt@pb^(0+128),w
  4099  0E95  0084               	movwf	4
  4100  0E96  0A80               	incf	0,f
  4101  0E97                     l7803:	
  4102  0E97  30FF               	movlw	-1
  4103  0E98  27DC               	call	PL41	;select bank 1
  4104  0E99  07B4               	addwf	__doprnt@prec^(0+128),f
  4105  0E9A  1C03               	skipc
  4106  0E9B  03B5               	decf	(__doprnt@prec+1)^(0+128),f
  4107  0E9C  0A34               	incf	__doprnt@prec^(0+128),w
  4108  0E9D  1903               	skipnz
  4109  0E9E  0A35               	incf	(__doprnt@prec+1)^(0+128),w
  4110  0E9F  1903               	btfsc	3,2
  4111  0EA0  280A               	goto	l7805
  4112  0EA1  300A               	movlw	10
  4113  0EA2  1283               	bcf	3,5	;RP0=0, select bank0
  4114  0EA3  00AD               	movwf	?___llmod
  4115  0EA4  01AE               	clrf	?___llmod+1
  4116  0EA5  01AF               	clrf	?___llmod+2
  4117  0EA6  01B0               	clrf	?___llmod+3
  4118  0EA7  1683               	bsf	3,5	;RP0=1, select bank1
  4119  0EA8  0834               	movf	__doprnt@prec^(0+128),w
  4120  0EA9  1283               	bcf	3,5	;RP0=0, select bank0
  4121  0EAA  00E4               	movwf	??__doprnt
  4122  0EAB  1003               	clrc
  4123  0EAC  0DE4               	rlf	??__doprnt,f
  4124  0EAD  1003               	clrc
  4125  0EAE  0D64               	rlf	??__doprnt,w
  4126  0EAF  3E4F               	addlw	low (_dpowers-__stringbase)
  4127  0EB0  0084               	movwf	4
  4128  0EB1  120A  118A  200F   	fcall	stringdir
      +       120A  158A         
  4129  0EB6  00A0               	movwf	?___lldiv
  4130  0EB7  120A  118A  200F   	fcall	stringdir
      +       120A  158A         
  4131  0EBC  00A1               	movwf	?___lldiv+1
  4132  0EBD  120A  118A  200F   	fcall	stringdir
      +       120A  158A         
  4133  0EC2  00A2               	movwf	?___lldiv+2
  4134  0EC3  120A  118A  200F   	fcall	stringdir
      +       120A  158A         
  4135  0EC8  26F1               	fcall	PL2	;call to abstracted procedure
  4136  0EC9  160A  118A  230F   	fcall	___lldiv
      +       120A  158A         
  4137  0ECE  272B               	fcall	PL8	;call to abstracted procedure
  4138  0ECF  160A  118A  22D1   	fcall	___llmod
      +       120A  158A         
  4139  0ED4  082D               	movf	?___llmod,w
  4140  0ED5  3E30               	addlw	48
  4141  0ED6  1683               	bsf	3,5	;RP0=1, select bank1
  4142  0ED7  00B6               	movwf	__doprnt@c^(0+128)
  4143  0ED8  0837               	movf	__doprnt@pb^(0+128),w
  4144  0ED9  3E01               	addlw	1
  4145  0EDA  0084               	movwf	4
  4146  0EDB  1383               	bcf	3,7	;select IRP bank0
  4147  0EDC  0880               	movf	0,f
  4148  0EDD  1903               	skipnz
  4149  0EDE  2EE7               	goto	l7799
  4150  0EDF  0836               	movf	__doprnt@c^(0+128),w
  4151  0EE0  2712               	fcall	PL4	;call to abstracted procedure
  4152  0EE1  120A  118A  2100   	fcall	fptable
      +       120A  158A         
  4153  0EE6  2E97               	goto	l7803
  4154  0EE7                     l7799:	
  4155  0EE7  0837               	movf	__doprnt@pb^(0+128),w
  4156  0EE8  0084               	movwf	4
  4157  0EE9  0800               	movf	0,w
  4158  0EEA  0084               	movwf	4
  4159  0EEB  0836               	movf	__doprnt@c^(0+128),w
  4160  0EEC  2E93               	goto	L7
  4161  0EED                     l7807:	
  4162  0EED  1283               	bcf	3,5	;RP0=0, select bank0
  4163  0EEE  01E2               	clrf	?__doprnt
  4164  0EEF  01E3               	clrf	?__doprnt+1
  4165  0EF0  0008               	return
  4166  0EF1                     __end_of__doprnt:	
  4167  0EF1                     PL2:	
  4168  0EF1  00A3               	movwf	?___lldiv+3
  4169  0EF2  1683               	bsf	3,5	;RP0=1, select bank1
  4170  0EF3  0830               	movf	(__doprnt@_val+3)^(0+128),w
  4171  0EF4  1283               	bcf	3,5	;RP0=0, select bank0
  4172  0EF5  00A7               	movwf	?___lldiv+7
  4173  0EF6  1683               	bsf	3,5	;RP0=1, select bank1
  4174  0EF7  082F               	movf	(__doprnt@_val+2)^(0+128),w
  4175  0EF8  1283               	bcf	3,5	;RP0=0, select bank0
  4176  0EF9  00A6               	movwf	?___lldiv+6
  4177  0EFA  1683               	bsf	3,5	;RP0=1, select bank1
  4178  0EFB  082E               	movf	(__doprnt@_val+1)^(0+128),w
  4179  0EFC  1283               	bcf	3,5	;RP0=0, select bank0
  4180  0EFD  00A5               	movwf	?___lldiv+5
  4181  0EFE  1683               	bsf	3,5	;RP0=1, select bank1
  4182  0EFF  082D               	movf	__doprnt@_val^(0+128),w
  4183  0F00  1283               	bcf	3,5	;RP0=0, select bank0
  4184  0F01  00A4               	movwf	?___lldiv+4
  4185  0F02  0008               	return
  4186  0F03                     PL3:	
  4187  0F03  00AD               	movwf	?___llmod
  4188  0F04  01AE               	clrf	?___llmod+1
  4189  0F05  01AF               	clrf	?___llmod+2
  4190  0F06  01B0               	clrf	?___llmod+3
  4191  0F07  1683               	bsf	3,5	;RP0=1, select bank1
  4192  0F08  0836               	movf	__doprnt@c^(0+128),w
  4193  0F09  1283               	bcf	3,5	;RP0=0, select bank0
  4194  0F0A  00E4               	movwf	??__doprnt
  4195  0F0B  1003               	clrc
  4196  0F0C  0DE4               	rlf	??__doprnt,f
  4197  0F0D  1003               	clrc
  4198  0F0E  0D64               	rlf	??__doprnt,w
  4199  0F0F  3E4F               	addlw	low (_dpowers-__stringbase)
  4200  0F10  0084               	movwf	4
  4201  0F11  0008               	return
  4202  0F12                     PL4:	
  4203  0F12  1283               	bcf	3,5	;RP0=0, select bank0
  4204  0F13  00B6               	movwf	?_putch
  4205  0F14  1683               	bsf	3,5	;RP0=1, select bank1
  4206  0F15  0837               	movf	__doprnt@pb^(0+128),w
  4207  0F16  3E01               	addlw	1
  4208  0F17  0084               	movwf	4
  4209  0F18  0800               	movf	0,w
  4210  0F19  0008               	return
  4211  0F1A                     PL5:	
  4212  0F1A  0836               	movf	__doprnt@c^(0+128),w
  4213  0F1B  1283               	bcf	3,5	;RP0=0, select bank0
  4214  0F1C  00E4               	movwf	??__doprnt
  4215  0F1D  1003               	clrc
  4216  0F1E  0DE4               	rlf	??__doprnt,f
  4217  0F1F  1003               	clrc
  4218  0F20  0D64               	rlf	??__doprnt,w
  4219  0F21  3E4F               	addlw	low (_dpowers-__stringbase)
  4220  0F22  0084               	movwf	4
  4221  0F23  0008               	return
  4222  0F24                     PL6:	
  4223  0F24  00B6               	movwf	?_putch
  4224  0F25  1683               	bsf	3,5	;RP0=1, select bank1
  4225  0F26  0837               	movf	__doprnt@pb^(0+128),w
  4226  0F27  3E01               	addlw	1
  4227  0F28  0084               	movwf	4
  4228  0F29  0800               	movf	0,w
  4229  0F2A  0008               	return
  4230  0F2B                     PL8:	
  4231  0F2B  0823               	movf	?___lldiv+3,w
  4232  0F2C  00B4               	movwf	?___llmod+7
  4233  0F2D  0822               	movf	?___lldiv+2,w
  4234  0F2E  00B3               	movwf	?___llmod+6
  4235  0F2F  0821               	movf	?___lldiv+1,w
  4236  0F30  00B2               	movwf	?___llmod+5
  4237  0F31  0820               	movf	?___lldiv,w
  4238  0F32  00B1               	movwf	?___llmod+4
  4239  0F33  0008               	return
  4240  0F34                     PL9:	
  4241  0F34  0824               	movf	__doprnt@integ^(0+128),w
  4242  0F35  1283               	bcf	3,5	;RP0=0, select bank0
  4243  0F36  00A0               	movwf	?___ftge
  4244  0F37  1683               	bsf	3,5	;RP0=1, select bank1
  4245  0F38  0825               	movf	(__doprnt@integ+1)^(0+128),w
  4246  0F39  1283               	bcf	3,5	;RP0=0, select bank0
  4247  0F3A  00A1               	movwf	?___ftge+1
  4248  0F3B  1683               	bsf	3,5	;RP0=1, select bank1
  4249  0F3C  0826               	movf	(__doprnt@integ+2)^(0+128),w
  4250  0F3D  1283               	bcf	3,5	;RP0=0, select bank0
  4251  0F3E  00A2               	movwf	?___ftge+2
  4252  0F3F  0008               	return
  4253  0F40                     PL10:	
  4254  0F40  0831               	movf	?___fttol+3,w
  4255  0F41  1683               	bsf	3,5	;RP0=1, select bank1
  4256  0F42  00B0               	movwf	(__doprnt@_val+3)^(0+128)
  4257  0F43  1283               	bcf	3,5	;RP0=0, select bank0
  4258  0F44  0830               	movf	?___fttol+2,w
  4259  0F45  1683               	bsf	3,5	;RP0=1, select bank1
  4260  0F46  00AF               	movwf	(__doprnt@_val+2)^(0+128)
  4261  0F47  1283               	bcf	3,5	;RP0=0, select bank0
  4262  0F48  082F               	movf	?___fttol+1,w
  4263  0F49  1683               	bsf	3,5	;RP0=1, select bank1
  4264  0F4A  00AE               	movwf	(__doprnt@_val+1)^(0+128)
  4265  0F4B  1283               	bcf	3,5	;RP0=0, select bank0
  4266  0F4C  082E               	movf	?___fttol,w
  4267  0F4D  0008               	return
  4268  0F4E                     PL11:	
  4269  0F4E  084C               	movf	?_scale,w
  4270  0F4F  1683               	bsf	3,5	;RP0=1, select bank1
  4271  0F50  00A4               	movwf	__doprnt@integ^(0+128)
  4272  0F51  1283               	bcf	3,5	;RP0=0, select bank0
  4273  0F52  084D               	movf	?_scale+1,w
  4274  0F53  1683               	bsf	3,5	;RP0=1, select bank1
  4275  0F54  00A5               	movwf	(__doprnt@integ+1)^(0+128)
  4276  0F55  1283               	bcf	3,5	;RP0=0, select bank0
  4277  0F56  084E               	movf	?_scale+2,w
  4278  0F57  1683               	bsf	3,5	;RP0=1, select bank1
  4279  0F58  00A6               	movwf	(__doprnt@integ+2)^(0+128)
  4280  0F59  0831               	movf	__doprnt@fval^(0+128),w
  4281  0F5A  1283               	bcf	3,5	;RP0=0, select bank0
  4282  0F5B  0008               	return
  4283  0F5C                     PL16:	
  4284  0F5C  0720               	addwf	?___wmul,w
  4285  0F5D  00E4               	movwf	??__doprnt
  4286  0F5E  3000               	movlw	0
  4287  0F5F  1803               	skipnc
  4288  0F60  3001               	movlw	1
  4289  0F61  0721               	addwf	?___wmul+1,w
  4290  0F62  00E5               	movwf	??__doprnt+1
  4291  0F63  0864               	movf	??__doprnt,w
  4292  0F64  3ED0               	addlw	208
  4293  0F65  1683               	bsf	3,5	;RP0=1, select bank1
  4294  0F66  0008               	return
  4295  0F67                     PL17:	
  4296  0F67  082D               	movf	?___llmod,w
  4297  0F68  3E30               	addlw	48
  4298  0F69  00E5               	movwf	??__doprnt+1
  4299  0F6A  1683               	bsf	3,5	;RP0=1, select bank1
  4300  0F6B  0837               	movf	__doprnt@pb^(0+128),w
  4301  0F6C  0084               	movwf	4
  4302  0F6D  0800               	movf	0,w
  4303  0F6E  0084               	movwf	4
  4304  0F6F  1283               	bcf	3,5	;RP0=0, select bank0
  4305  0F70  0865               	movf	??__doprnt+1,w
  4306  0F71  0008               	return
  4307  0F72                     PL19:	
  4308  0F72  1283               	bcf	3,5	;RP0=0, select bank0
  4309  0F73  00AE               	movwf	?___fttol
  4310  0F74  1683               	bsf	3,5	;RP0=1, select bank1
  4311  0F75  0832               	movf	(__doprnt@fval+1)^(0+128),w
  4312  0F76  1283               	bcf	3,5	;RP0=0, select bank0
  4313  0F77  00AF               	movwf	?___fttol+1
  4314  0F78  1683               	bsf	3,5	;RP0=1, select bank1
  4315  0F79  0833               	movf	(__doprnt@fval+2)^(0+128),w
  4316  0F7A  1283               	bcf	3,5	;RP0=0, select bank0
  4317  0F7B  00B0               	movwf	?___fttol+2
  4318  0F7C  0008               	return
  4319  0F7D                     PL21:	
  4320  0F7D  0084               	movwf	4
  4321  0F7E  3030               	movlw	48
  4322  0F7F  0080               	movwf	0
  4323  0F80  0837               	movf	__doprnt@pb^(0+128),w
  4324  0F81  0084               	movwf	4
  4325  0F82  0A80               	incf	0,f
  4326  0F83  0008               	return
  4327  0F84                     PL23:	
  4328  0F84  00BD               	movwf	?___ftmul
  4329  0F85  1683               	bsf	3,5	;RP0=1, select bank1
  4330  0F86  0832               	movf	(__doprnt@fval+1)^(0+128),w
  4331  0F87  1283               	bcf	3,5	;RP0=0, select bank0
  4332  0F88  00BE               	movwf	?___ftmul+1
  4333  0F89  1683               	bsf	3,5	;RP0=1, select bank1
  4334  0F8A  0833               	movf	(__doprnt@fval+2)^(0+128),w
  4335  0F8B  1283               	bcf	3,5	;RP0=0, select bank0
  4336  0F8C  00BF               	movwf	?___ftmul+2
  4337  0F8D  0008               	return
  4338  0F8E                     PL24:	
  4339  0F8E  1283               	bcf	3,5	;RP0=0, select bank0
  4340  0F8F  00E4               	movwf	??__doprnt
  4341  0F90  01E5               	clrf	??__doprnt+1
  4342  0F91  1BE4               	btfsc	??__doprnt,7
  4343  0F92  03E5               	decf	??__doprnt+1,f
  4344  0F93  0865               	movf	??__doprnt+1,w
  4345  0F94  3A80               	xorlw	128
  4346  0F95  00E6               	movwf	??__doprnt+2
  4347  0F96  1683               	bsf	3,5	;RP0=1, select bank1
  4348  0F97  0008               	return
  4349  0F98                     PL25:	
  4350  0F98  1303               	bcf	3,6	;RP1=0, select bank1
  4351  0F99  0836               	movf	__doprnt@c^(0+128),w
  4352  0F9A  1283               	bcf	3,5	;RP0=0, select bank0
  4353  0F9B  00E4               	movwf	??__doprnt
  4354  0F9C  01E5               	clrf	??__doprnt+1
  4355  0F9D  1BE4               	btfsc	??__doprnt,7
  4356  0F9E  03E5               	decf	??__doprnt+1,f
  4357  0F9F  1683               	bsf	3,5	;RP0=1, select bank1
  4358  0FA0  0008               	return
  4359  0FA1                     PL26:	
  4360  0FA1  1303               	bcf	3,6	;RP1=0, select bank1
  4361  0FA2  0837               	movf	__doprnt@pb^(0+128),w
  4362  0FA3  3E01               	addlw	1
  4363  0FA4  0084               	movwf	4
  4364  0FA5  1383               	bcf	3,7	;select IRP bank0
  4365  0FA6  0880               	movf	0,f
  4366  0FA7  0008               	return
  4367  0FA8                     PL33:	
  4368  0FA8  1283               	bcf	3,5	;RP0=0, select bank0
  4369  0FA9  0865               	movf	??__doprnt+1,w
  4370  0FAA  1803               	skipnc
  4371  0FAB  3E01               	addlw	1
  4372  0FAC  3EFF               	addlw	255
  4373  0FAD  1683               	bsf	3,5	;RP0=1, select bank1
  4374  0FAE  0008               	return
  4375  0FAF                     PL34:	
  4376  0FAF  0837               	movf	__doprnt@pb^(0+128),w
  4377  0FB0  3E01               	addlw	1
  4378  0FB1  0084               	movwf	4
  4379  0FB2  300A               	movlw	10
  4380  0FB3  1383               	bcf	3,7	;select IRP bank0
  4381  0FB4  0880               	movf	0,f
  4382  0FB5  0008               	return
  4383  0FB6                     PL35:	
  4384  0FB6  0084               	movwf	4
  4385  0FB7  3020               	movlw	32
  4386  0FB8  0080               	movwf	0
  4387  0FB9  0837               	movf	__doprnt@pb^(0+128),w
  4388  0FBA  0084               	movwf	4
  4389  0FBB  0A80               	incf	0,f
  4390  0FBC  0008               	return
  4391  0FBD                     PL37:	
  4392  0FBD  0837               	movf	__doprnt@pb^(0+128),w
  4393  0FBE  0084               	movwf	4
  4394  0FBF  0800               	movf	0,w
  4395  0FC0  0084               	movwf	4
  4396  0FC1  342D               	retlw	45
  4397  0FC2                     PL39:	
  4398  0FC2  0080               	movwf	0
  4399  0FC3  1683               	bsf	3,5	;RP0=1, select bank1
  4400  0FC4  0837               	movf	__doprnt@pb^(0+128),w
  4401  0FC5  0084               	movwf	4
  4402  0FC6  0A80               	incf	0,f
  4403  0FC7  0008               	return
  4404  0FC8                     PL40:	
  4405  0FC8  1283               	bcf	3,5	;RP0=0, select bank0
  4406  0FC9  00A0               	movwf	?___wmul
  4407  0FCA  300A               	movlw	10
  4408  0FCB  00A2               	movwf	?___wmul+2
  4409  0FCC  01A3               	clrf	?___wmul+3
  4410  0FCD  0008               	return
  4411  0FCE                     __ptext709:	
  4412 ;; =============== function __tdiv_to_l_ ends ============
  4413                           
  4414                           
  4415 ;; *************** function _isdigit *****************
  4416 ;; Defined at:
  4417 ;;		line 13 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\isdigit.c"
  4418 ;; Parameters:    Size  Location     Type
  4419 ;;  c               1    wreg     unsigned char 
  4420 ;; Auto vars:     Size  Location     Type
  4421 ;;  c               1    1[BANK0 ] unsigned char 
  4422 ;; Return value:  Size  Location     Type
  4423 ;;		None               void
  4424 ;; Registers used:
  4425 ;;		wreg, status,2, status,0
  4426 ;; Tracked objects:
  4427 ;;		On entry : 60/0
  4428 ;;		On exit  : 60/0
  4429 ;;		Unchanged: FFF9F/0
  4430 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4431 ;;      Params:         0       0       0       0       0
  4432 ;;      Locals:         0       2       0       0       0
  4433 ;;      Temps:          0       0       0       0       0
  4434 ;;      Totals:         0       2       0       0       0
  4435 ;;Total ram usage:        2 bytes
  4436 ;; Hardware stack levels used:    1
  4437 ;; Hardware stack levels required when called:    2
  4438 ;; This function calls:
  4439 ;;		Nothing
  4440 ;; This function is called by:
  4441 ;;		__doprnt
  4442 ;; This function uses a non-reentrant model
  4443 ;;
  4444  0FCE                     _isdigit:	
  4445                           
  4446                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  4447                           ;isdigit@c stored from wreg
  4448  0FCE  00A1               	movwf	isdigit@c
  4449  0FCF  303A               	movlw	58
  4450  0FD0  01A0               	clrf	_isdigit$3722
  4451  0FD1  0221               	subwf	isdigit@c,w
  4452  0FD2  1803               	skipnc
  4453  0FD3  2FDA               	goto	l6635
  4454  0FD4  3030               	movlw	48
  4455  0FD5  0221               	subwf	isdigit@c,w
  4456  0FD6  1C03               	skipc
  4457  0FD7  2FDA               	goto	l6635
  4458  0FD8  01A0               	clrf	_isdigit$3722
  4459  0FD9  0AA0               	incf	_isdigit$3722,f
  4460  0FDA                     l6635:	
  4461  0FDA  0C20               	rrf	_isdigit$3722,w
  4462  0FDB  0008               	return
  4463  0FDC                     __end_of_isdigit:	
  4464  0FDC                     PL41:	
  4465  0FDC  1683               	bsf	3,5	;RP0=1, select bank1
  4466  0FDD  1303               	bcf	3,6	;RP1=0, select bank1
  4467  0FDE  0008               	return
  4468  0FDF                     __ptext705:	
  4469 ;; =============== function ___lbdiv ends ============
  4470                           
  4471                           
  4472 ;; *************** function ___wmul *****************
  4473 ;; Defined at:
  4474 ;;		line 3 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\wmul.c"
  4475 ;; Parameters:    Size  Location     Type
  4476 ;;  multiplier      2    0[BANK0 ] unsigned int 
  4477 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  4478 ;; Auto vars:     Size  Location     Type
  4479 ;;  product         2    4[BANK0 ] unsigned int 
  4480 ;; Return value:  Size  Location     Type
  4481 ;;                  2    0[BANK0 ] unsigned int 
  4482 ;; Registers used:
  4483 ;;		wreg, status,2, status,0
  4484 ;; Tracked objects:
  4485 ;;		On entry : 60/0
  4486 ;;		On exit  : 60/0
  4487 ;;		Unchanged: FFF9F/0
  4488 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4489 ;;      Params:         0       4       0       0       0
  4490 ;;      Locals:         0       2       0       0       0
  4491 ;;      Temps:          0       0       0       0       0
  4492 ;;      Totals:         0       6       0       0       0
  4493 ;;Total ram usage:        6 bytes
  4494 ;; Hardware stack levels used:    1
  4495 ;; Hardware stack levels required when called:    2
  4496 ;; This function calls:
  4497 ;;		Nothing
  4498 ;; This function is called by:
  4499 ;;		_fround
  4500 ;;		_scale
  4501 ;;		__doprnt
  4502 ;; This function uses a non-reentrant model
  4503 ;;
  4504  0FDF                     ___wmul:	
  4505                           
  4506                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  4507  0FDF  01A4               	clrf	___wmul@product
  4508  0FE0  01A5               	clrf	___wmul@product+1
  4509  0FE1                     l6751:	
  4510  0FE1  1C20               	btfss	___wmul@multiplier,0
  4511  0FE2  2FE9               	goto	l6755
  4512  0FE3  0822               	movf	___wmul@multiplicand,w
  4513  0FE4  07A4               	addwf	___wmul@product,f
  4514  0FE5  1803               	skipnc
  4515  0FE6  0AA5               	incf	___wmul@product+1,f
  4516  0FE7  0823               	movf	___wmul@multiplicand+1,w
  4517  0FE8  07A5               	addwf	___wmul@product+1,f
  4518  0FE9                     l6755:	
  4519  0FE9  1003               	clrc
  4520  0FEA  0DA2               	rlf	___wmul@multiplicand,f
  4521  0FEB  0DA3               	rlf	___wmul@multiplicand+1,f
  4522  0FEC  1003               	clrc
  4523  0FED  0CA1               	rrf	___wmul@multiplier+1,f
  4524  0FEE  0CA0               	rrf	___wmul@multiplier,f
  4525  0FEF  0821               	movf	___wmul@multiplier+1,w
  4526  0FF0  0420               	iorwf	___wmul@multiplier,w
  4527  0FF1  1D03               	skipz
  4528  0FF2  2FE1               	goto	l6751
  4529  0FF3  0825               	movf	___wmul@product+1,w
  4530  0FF4  00A1               	movwf	?___wmul+1
  4531  0FF5  0824               	movf	___wmul@product,w
  4532  0FF6  00A0               	movwf	?___wmul
  4533  0FF7  0008               	return
  4534  0FF8                     __end_of___wmul:	
  4535  0FF8                     __ptext698:	
  4536 ;; =============== function ___ftge ends ============
  4537                           
  4538                           
  4539 ;; *************** function ___ftneg *****************
  4540 ;; Defined at:
  4541 ;;		line 16 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\ftneg.c"
  4542 ;; Parameters:    Size  Location     Type
  4543 ;;  f1              3    0[BANK0 ] float 
  4544 ;; Auto vars:     Size  Location     Type
  4545 ;;		None
  4546 ;; Return value:  Size  Location     Type
  4547 ;;                  3    0[BANK0 ] float 
  4548 ;; Registers used:
  4549 ;;		wreg
  4550 ;; Tracked objects:
  4551 ;;		On entry : 160/0
  4552 ;;		On exit  : 160/0
  4553 ;;		Unchanged: FFE9F/0
  4554 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4555 ;;      Params:         0       3       0       0       0
  4556 ;;      Locals:         0       0       0       0       0
  4557 ;;      Temps:          0       0       0       0       0
  4558 ;;      Totals:         0       3       0       0       0
  4559 ;;Total ram usage:        3 bytes
  4560 ;; Hardware stack levels used:    1
  4561 ;; Hardware stack levels required when called:    2
  4562 ;; This function calls:
  4563 ;;		Nothing
  4564 ;; This function is called by:
  4565 ;;		__doprnt
  4566 ;; This function uses a non-reentrant model
  4567 ;;
  4568  0FF8                     ___ftneg:	
  4569                           
  4570                           ; Regs used in ___ftneg: [wreg]
  4571  0FF8  0822               	movf	___ftneg@f1+2,w
  4572  0FF9  0421               	iorwf	___ftneg@f1+1,w
  4573  0FFA  0420               	iorwf	___ftneg@f1,w
  4574  0FFB  1903               	skipnz
  4575  0FFC  0008               	return
  4576  0FFD  3080               	movlw	128
  4577  0FFE  06A2               	xorwf	___ftneg@f1+2,f
  4578  0FFF  0008               	return
  4579  1000                     __end_of___ftneg:	
  4580                           
  4581                           	psect	text679
  4582  04FA                     __ptext679:	
  4583 ;; =============== function __doprnt ends ============
  4584                           
  4585                           
  4586 ;; *************** function _putch *****************
  4587 ;; Defined at:
  4588 ;;		line 131 in file "C:\Users\DELL\Desktop\vxl\mp\nhapdulieu.c"
  4589 ;; Parameters:    Size  Location     Type
  4590 ;;  c               1   22[BANK0 ] unsigned char 
  4591 ;; Auto vars:     Size  Location     Type
  4592 ;;		None
  4593 ;; Return value:  Size  Location     Type
  4594 ;;		None               void
  4595 ;; Registers used:
  4596 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4597 ;; Tracked objects:
  4598 ;;		On entry : 160/20
  4599 ;;		On exit  : 60/0
  4600 ;;		Unchanged: 0/0
  4601 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4602 ;;      Params:         0       1       0       0       0
  4603 ;;      Locals:         0       0       0       0       0
  4604 ;;      Temps:          0       0       0       0       0
  4605 ;;      Totals:         0       1       0       0       0
  4606 ;;Total ram usage:        1 bytes
  4607 ;; Hardware stack levels used:    1
  4608 ;; Hardware stack levels required when called:    5
  4609 ;; This function calls:
  4610 ;;		_lcd_putc
  4611 ;; This function is called by:
  4612 ;;		_printf
  4613 ;;		__doprnt
  4614 ;; This function uses a non-reentrant model
  4615 ;;
  4616  04FA                     _putch:	
  4617                           
  4618                           ;nhapdulieu.c: 132: lcd_putc(c);
  4619                           
  4620                           ; Regs used in _putch: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4621  04FA  1283               	bcf	3,5	;RP0=0, select bank0
  4622  04FB  0836               	movf	putch@c,w
  4623  04FC  2D15               	ljmp	_lcd_putc
  4624  04FD                     __end_of_putch:	
  4625  04FD                     __ptext684:	
  4626 ;; =============== function _fround ends ============
  4627                           
  4628                           
  4629 ;; *************** function _lcd_gotoxy *****************
  4630 ;; Defined at:
  4631 ;;		line 162 in file "C:\Users\DELL\Desktop\baitap_ttvxl\dulieu_led\lcd(16).c"
  4632 ;; Parameters:    Size  Location     Type
  4633 ;;  col             1    wreg     unsigned char 
  4634 ;;  row             1    5[BANK0 ] unsigned char 
  4635 ;; Auto vars:     Size  Location     Type
  4636 ;;  col             1    6[BANK0 ] unsigned char 
  4637 ;;  address         1    7[BANK0 ] unsigned char 
  4638 ;; Return value:  Size  Location     Type
  4639 ;;		None               void
  4640 ;; Registers used:
  4641 ;;		wreg, status,2, status,0, pclath, cstack
  4642 ;; Tracked objects:
  4643 ;;		On entry : 60/0
  4644 ;;		On exit  : 60/0
  4645 ;;		Unchanged: 0/0
  4646 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4647 ;;      Params:         0       1       0       0       0
  4648 ;;      Locals:         0       2       0       0       0
  4649 ;;      Temps:          0       0       0       0       0
  4650 ;;      Totals:         0       3       0       0       0
  4651 ;;Total ram usage:        3 bytes
  4652 ;; Hardware stack levels used:    1
  4653 ;; Hardware stack levels required when called:    3
  4654 ;; This function calls:
  4655 ;;		_lcd_put_byte
  4656 ;;		_lcd_busy
  4657 ;; This function is called by:
  4658 ;;		_lcd_putc
  4659 ;;		_main
  4660 ;; This function uses a non-reentrant model
  4661 ;;
  4662  04FD                     _lcd_gotoxy:	
  4663                           
  4664                           ; Regs used in _lcd_gotoxy: [wreg+status,2+status,0+pclath+cstack]
  4665                           ;lcd_gotoxy@col stored from wreg
  4666  04FD  00A6               	movwf	lcd_gotoxy@col
  4667                           
  4668                           ;lcd(16).c: 163: unsigned char address;
  4669                           ;lcd(16).c: 165: if(row!=0)
  4670  04FE  0825               	movf	lcd_gotoxy@row,w
  4671  04FF  1903               	btfsc	3,2
  4672  0500  2D04               	goto	l7341
  4673                           
  4674                           ;lcd(16).c: 166: address=0x40;
  4675  0501  3040               	movlw	64
  4676  0502  00A7               	movwf	lcd_gotoxy@address
  4677  0503  2D05               	goto	l7343
  4678  0504                     l7341:	
  4679                           
  4680                           ;lcd(16).c: 167: else
  4681                           ;lcd(16).c: 168: address=0;
  4682  0504  01A7               	clrf	lcd_gotoxy@address
  4683  0505                     l7343:	
  4684                           
  4685                           ;lcd(16).c: 170: address += col;
  4686  0505  0826               	movf	lcd_gotoxy@col,w
  4687  0506  07A7               	addwf	lcd_gotoxy@address,f
  4688                           
  4689                           ;lcd(16).c: 171: lcd_put_byte(0,0x80|address);
  4690  0507  0827               	movf	lcd_gotoxy@address,w
  4691  0508  3880               	iorlw	128
  4692  0509  00A0               	movwf	?_lcd_put_byte
  4693  050A  3000               	movlw	0
  4694  050B  2605  120A  118A   	fcall	_lcd_put_byte
  4695  050E                     l7347:	
  4696                           ;lcd(16).c: 172: while(lcd_busy());
  4697                           
  4698  050E  26B0  120A  118A   	fcall	_lcd_busy
  4699  0511  3800               	iorlw	0
  4700  0512  1903               	btfsc	3,2
  4701  0513  0008               	return
  4702  0514  2D0E               	goto	l7347
  4703  0515                     __end_of_lcd_gotoxy:	
  4704  0515                     __ptext680:	
  4705 ;; =============== function _putch ends ============
  4706                           
  4707                           
  4708 ;; *************** function _lcd_putc *****************
  4709 ;; Defined at:
  4710 ;;		line 143 in file "C:\Users\DELL\Desktop\baitap_ttvxl\dulieu_led\lcd(16).c"
  4711 ;; Parameters:    Size  Location     Type
  4712 ;;  c               1    wreg     unsigned char 
  4713 ;; Auto vars:     Size  Location     Type
  4714 ;;  c               1    8[BANK0 ] unsigned char 
  4715 ;; Return value:  Size  Location     Type
  4716 ;;		None               void
  4717 ;; Registers used:
  4718 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4719 ;; Tracked objects:
  4720 ;;		On entry : 160/0
  4721 ;;		On exit  : 60/0
  4722 ;;		Unchanged: 0/0
  4723 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4724 ;;      Params:         0       0       0       0       0
  4725 ;;      Locals:         0       1       0       0       0
  4726 ;;      Temps:          0       0       0       0       0
  4727 ;;      Totals:         0       1       0       0       0
  4728 ;;Total ram usage:        1 bytes
  4729 ;; Hardware stack levels used:    1
  4730 ;; Hardware stack levels required when called:    4
  4731 ;; This function calls:
  4732 ;;		_lcd_put_byte
  4733 ;;		_lcd_busy
  4734 ;;		_lcd_gotoxy
  4735 ;;		_isprint
  4736 ;; This function is called by:
  4737 ;;		_putch
  4738 ;; This function uses a non-reentrant model
  4739 ;;
  4740  0515                     _lcd_putc:	
  4741                           
  4742                           ; Regs used in _lcd_putc: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4743                           ;lcd_putc@c stored from wreg
  4744  0515  00A8               	movwf	lcd_putc@c
  4745                           
  4746                           ;lcd(16).c: 144: switch(c){
  4747  0516  2D3B               	goto	l7433
  4748  0517                     l7419:	
  4749  0517  3000               	movlw	0
  4750                           
  4751                           ;lcd(16).c: 146: lcd_put_byte(0, 1);
  4752  0518  01A0               	clrf	?_lcd_put_byte
  4753  0519  0AA0               	incf	?_lcd_put_byte,f
  4754  051A  2605  120A  118A   	fcall	_lcd_put_byte
  4755  051D                     l7421:	
  4756                           ;lcd(16).c: 147: while(lcd_busy());
  4757                           
  4758  051D  26B0  120A  118A   	fcall	_lcd_busy
  4759  0520  3800               	iorlw	0
  4760  0521  1903               	btfsc	3,2
  4761  0522  0008               	return
  4762  0523  2D1D               	goto	l7421
  4763  0524                     l7423:	
  4764  0524  3000               	movlw	0
  4765                           
  4766                           ;lcd(16).c: 150: lcd_gotoxy(0, 1);
  4767  0525  01A5               	clrf	?_lcd_gotoxy
  4768  0526  0AA5               	incf	?_lcd_gotoxy,f
  4769  0527  2CFD               	ljmp	_lcd_gotoxy
  4770  0528                     l7425:	
  4771                           ;lcd(16).c: 151: break;
  4772                           
  4773                           
  4774                           ;lcd(16).c: 153: if(isprint(c)){
  4775  0528  0828               	movf	lcd_putc@c,w
  4776  0529  26DB  120A  118A   	fcall	_isprint
  4777  052C  1C03               	btfss	3,0
  4778  052D  0008               	return
  4779                           
  4780                           ;lcd(16).c: 154: lcd_put_byte(1, c);
  4781  052E  0828               	movf	lcd_putc@c,w
  4782  052F  00A0               	movwf	?_lcd_put_byte
  4783  0530  3001               	movlw	1
  4784  0531  2605  120A  118A   	fcall	_lcd_put_byte
  4785  0534                     l7429:	
  4786                           ;lcd(16).c: 155: while(lcd_busy());
  4787                           
  4788  0534  26B0  120A  118A   	fcall	_lcd_busy
  4789  0537  3800               	iorlw	0
  4790  0538  1903               	btfsc	3,2
  4791  0539  0008               	return
  4792  053A  2D34               	goto	l7429
  4793  053B                     l7433:	
  4794  053B  0828               	movf	lcd_putc@c,w
  4795                           
  4796                           ; Switch size 1, requested type "space"
  4797                           ; Number of cases is 2, Range of values is 10 to 12
  4798                           ; switch strategies available:
  4799                           ; Name         Instructions Cycles
  4800                           ; simple_byte            7     4 (average)
  4801                           ; direct_byte           20    11 (fixed)
  4802                           ; jumptable            263     9 (fixed)
  4803                           ;	Chosen strategy is simple_byte
  4804  053C  3A0A               	xorlw	10	; case 10
  4805  053D  1903               	skipnz
  4806  053E  2D24               	goto	l7423
  4807  053F  3A06               	xorlw	6	; case 12
  4808  0540  1903               	skipnz
  4809  0541  2D17               	goto	l7419
  4810  0542  2D28               	goto	l7425
  4811  0543  0008               	return
  4812  0544                     __end_of_lcd_putc:	
  4813  0544                     __ptext685:	
  4814 ;; =============== function _lcd_gotoxy ends ============
  4815                           
  4816                           
  4817 ;; *************** function _lcd_init *****************
  4818 ;; Defined at:
  4819 ;;		line 5 in file "C:\Users\DELL\Desktop\baitap_ttvxl\dulieu_led\lcd(16).c"
  4820 ;; Parameters:    Size  Location     Type
  4821 ;;		None
  4822 ;; Auto vars:     Size  Location     Type
  4823 ;;  i               1    0        unsigned char 
  4824 ;; Return value:  Size  Location     Type
  4825 ;;		None               void
  4826 ;; Registers used:
  4827 ;;		wreg, status,2, status,0, pclath, cstack
  4828 ;; Tracked objects:
  4829 ;;		On entry : 17F/60
  4830 ;;		On exit  : 60/0
  4831 ;;		Unchanged: 0/0
  4832 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4833 ;;      Params:         0       0       0       0       0
  4834 ;;      Locals:         0       0       0       0       0
  4835 ;;      Temps:          0       3       0       0       0
  4836 ;;      Totals:         0       3       0       0       0
  4837 ;;Total ram usage:        3 bytes
  4838 ;; Hardware stack levels used:    1
  4839 ;; Hardware stack levels required when called:    3
  4840 ;; This function calls:
  4841 ;;		_lcd_put_byte
  4842 ;;		_lcd_busy
  4843 ;; This function is called by:
  4844 ;;		_main
  4845 ;; This function uses a non-reentrant model
  4846 ;;
  4847  0544                     _lcd_init:	
  4848                           
  4849                           ;lcd(16).c: 6: unsigned char i;
  4850                           ;lcd(16).c: 7: TRISD3 = 0;
  4851                           
  4852                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
  4853  0544  1303               	bcf	3,6	;RP1=0, select bank1
  4854  0545  1188               	bcf	8,3
  4855                           
  4856                           ;lcd(16).c: 8: TRISD1 = 0;
  4857  0546  1088               	bcf	8,1
  4858                           
  4859                           ;lcd(16).c: 9: TRISD2 = 0;
  4860  0547  1108               	bcf	8,2
  4861                           
  4862                           ;lcd(16).c: 10: TRISD4 = 0;
  4863  0548  1208               	bcf	8,4
  4864                           
  4865                           ;lcd(16).c: 11: TRISD5 = 0;
  4866  0549  1288               	bcf	8,5
  4867                           
  4868                           ;lcd(16).c: 12: TRISD6 = 0;
  4869  054A  1308               	bcf	8,6
  4870                           
  4871                           ;lcd(16).c: 13: TRISD7 = 0;
  4872  054B  1388               	bcf	8,7
  4873                           
  4874                           ;lcd(16).c: 14: RD3 = 0;
  4875  054C  1283               	bcf	3,5	;RP0=0, select bank0
  4876  054D  3003               	movlw	3
  4877  054E  1188               	bcf	8,3
  4878                           
  4879                           ;lcd(16).c: 15: RD1 = 0;
  4880  054F  1088               	bcf	8,1
  4881                           
  4882                           ;lcd(16).c: 16: RD2 = 0;
  4883  0550  1108               	bcf	8,2
  4884                           
  4885                           ;lcd(16).c: 18: _delay((unsigned long)((100)*(20000000/4000.0)));
  4886  0551  00A7               	movwf	??_lcd_init+2
  4887  0552  308A               	movlw	138
  4888  0553  00A6               	movwf	??_lcd_init+1
  4889  0554  3056               	movlw	86
  4890  0555  00A5               	movwf	??_lcd_init
  4891  0556                     u4637:	
  4892  0556  0BA5               	decfsz	??_lcd_init,f
  4893  0557  2D56               	goto	u4637
  4894  0558  0BA6               	decfsz	??_lcd_init+1,f
  4895  0559  2D56               	goto	u4637
  4896  055A  0BA7               	decfsz	??_lcd_init+2,f
  4897  055B  2D56               	goto	u4637
  4898  055C  2D5D               	nop2
  4899                           
  4900                           ;lcd(16).c: 21: lcd_put_byte(0,0x30);
  4901  055D  26E9  120A  118A   	fcall	PL38	;call to abstracted procedure
  4902  0560  2605  120A  118A   	fcall	_lcd_put_byte
  4903                           
  4904                           ;lcd(16).c: 22: _delay((unsigned long)((50)*(20000000/4000.0)));
  4905  0563  3002               	movlw	2
  4906  0564  00A7               	movwf	??_lcd_init+2
  4907  0565  3045               	movlw	69
  4908  0566  00A6               	movwf	??_lcd_init+1
  4909  0567  30A9               	movlw	169
  4910  0568  00A5               	movwf	??_lcd_init
  4911  0569                     u4647:	
  4912  0569  0BA5               	decfsz	??_lcd_init,f
  4913  056A  2D69               	goto	u4647
  4914  056B  0BA6               	decfsz	??_lcd_init+1,f
  4915  056C  2D69               	goto	u4647
  4916  056D  0BA7               	decfsz	??_lcd_init+2,f
  4917  056E  2D69               	goto	u4647
  4918  056F  2D70               	nop2
  4919                           
  4920                           ;lcd(16).c: 23: lcd_put_byte(0,0x30);
  4921  0570  26E9  120A  118A   	fcall	PL38	;call to abstracted procedure
  4922  0573  2605  120A  118A   	fcall	_lcd_put_byte
  4923                           
  4924                           ;lcd(16).c: 24: _delay((unsigned long)((50)*(20000000/4000.0)));
  4925  0576  3002               	movlw	2
  4926  0577  00A7               	movwf	??_lcd_init+2
  4927  0578  3045               	movlw	69
  4928  0579  00A6               	movwf	??_lcd_init+1
  4929  057A  30A9               	movlw	169
  4930  057B  00A5               	movwf	??_lcd_init
  4931  057C                     u4657:	
  4932  057C  0BA5               	decfsz	??_lcd_init,f
  4933  057D  2D7C               	goto	u4657
  4934  057E  0BA6               	decfsz	??_lcd_init+1,f
  4935  057F  2D7C               	goto	u4657
  4936  0580  0BA7               	decfsz	??_lcd_init+2,f
  4937  0581  2D7C               	goto	u4657
  4938  0582  2D83               	nop2
  4939                           
  4940                           ;lcd(16).c: 25: lcd_put_byte(0,0x32);
  4941  0583  3032               	movlw	50
  4942  0584  1283               	bcf	3,5	;RP0=0, select bank0
  4943  0585  1303               	bcf	3,6	;RP1=0, select bank0
  4944  0586  00A0               	movwf	?_lcd_put_byte
  4945  0587  3000               	movlw	0
  4946  0588  2605  120A  118A   	fcall	_lcd_put_byte
  4947                           
  4948                           ;lcd(16).c: 26: _delay((unsigned long)((100)*(20000000/4000.0)));
  4949  058B  3003               	movlw	3
  4950  058C  00A7               	movwf	??_lcd_init+2
  4951  058D  308A               	movlw	138
  4952  058E  00A6               	movwf	??_lcd_init+1
  4953  058F  3056               	movlw	86
  4954  0590  00A5               	movwf	??_lcd_init
  4955  0591                     u4667:	
  4956  0591  0BA5               	decfsz	??_lcd_init,f
  4957  0592  2D91               	goto	u4667
  4958  0593  0BA6               	decfsz	??_lcd_init+1,f
  4959  0594  2D91               	goto	u4667
  4960  0595  0BA7               	decfsz	??_lcd_init+2,f
  4961  0596  2D91               	goto	u4667
  4962  0597  2D98               	nop2
  4963                           
  4964                           ;lcd(16).c: 27: _delay((unsigned long)((100)*(20000000/4000.0)));
  4965  0598  3003               	movlw	3
  4966  0599  1283               	bcf	3,5	;RP0=0, select bank0
  4967  059A  1303               	bcf	3,6	;RP1=0, select bank0
  4968  059B  00A7               	movwf	??_lcd_init+2
  4969  059C  308A               	movlw	138
  4970  059D  00A6               	movwf	??_lcd_init+1
  4971  059E  3056               	movlw	86
  4972  059F  00A5               	movwf	??_lcd_init
  4973  05A0                     u4677:	
  4974  05A0  0BA5               	decfsz	??_lcd_init,f
  4975  05A1  2DA0               	goto	u4677
  4976  05A2  0BA6               	decfsz	??_lcd_init+1,f
  4977  05A3  2DA0               	goto	u4677
  4978  05A4  0BA7               	decfsz	??_lcd_init+2,f
  4979  05A5  2DA0               	goto	u4677
  4980  05A6  2DA7               	nop2
  4981                           
  4982                           ;lcd(16).c: 28: _delay((unsigned long)((100)*(20000000/4000.0)));
  4983  05A7  3003               	movlw	3
  4984  05A8  1283               	bcf	3,5	;RP0=0, select bank0
  4985  05A9  1303               	bcf	3,6	;RP1=0, select bank0
  4986  05AA  00A7               	movwf	??_lcd_init+2
  4987  05AB  308A               	movlw	138
  4988  05AC  00A6               	movwf	??_lcd_init+1
  4989  05AD  3056               	movlw	86
  4990  05AE  00A5               	movwf	??_lcd_init
  4991  05AF                     u4687:	
  4992  05AF  0BA5               	decfsz	??_lcd_init,f
  4993  05B0  2DAF               	goto	u4687
  4994  05B1  0BA6               	decfsz	??_lcd_init+1,f
  4995  05B2  2DAF               	goto	u4687
  4996  05B3  0BA7               	decfsz	??_lcd_init+2,f
  4997  05B4  2DAF               	goto	u4687
  4998  05B5  2DB6               	nop2
  4999  05B6                     l7311:	
  5000                           ;lcd(16).c: 30: while(lcd_busy());
  5001                           
  5002  05B6  26B0  120A  118A   	fcall	_lcd_busy
  5003  05B9  3800               	iorlw	0
  5004  05BA  1D03               	skipz
  5005  05BB  2DB6               	goto	l7311
  5006                           
  5007                           ;lcd(16).c: 31: lcd_put_byte(0,0b00101100 & 0b00111000);
  5008  05BC  3028               	movlw	40
  5009  05BD  00A0               	movwf	?_lcd_put_byte
  5010  05BE  3000               	movlw	0
  5011  05BF  2605  120A  118A   	fcall	_lcd_put_byte
  5012  05C2                     l7315:	
  5013                           ;lcd(16).c: 32: while(lcd_busy());
  5014                           
  5015  05C2  26B0  120A  118A   	fcall	_lcd_busy
  5016  05C5  3800               	iorlw	0
  5017  05C6  1D03               	skipz
  5018  05C7  2DC2               	goto	l7315
  5019                           
  5020                           ;lcd(16).c: 34: lcd_put_byte(0,0b00001011&0b00001101&0b00001110);
  5021  05C8  3008               	movlw	8
  5022  05C9  00A0               	movwf	?_lcd_put_byte
  5023  05CA  3000               	movlw	0
  5024  05CB  2605  120A  118A   	fcall	_lcd_put_byte
  5025  05CE                     l7319:	
  5026                           ;lcd(16).c: 35: while(lcd_busy());
  5027                           
  5028  05CE  26B0  120A  118A   	fcall	_lcd_busy
  5029  05D1  3800               	iorlw	0
  5030  05D2  1D03               	skipz
  5031  05D3  2DCE               	goto	l7319
  5032                           
  5033                           ;lcd(16).c: 36: lcd_put_byte(0,0b00001111&0b00001101&0b00001110);
  5034  05D4  300C               	movlw	12
  5035  05D5  00A0               	movwf	?_lcd_put_byte
  5036  05D6  3000               	movlw	0
  5037  05D7  2605  120A  118A   	fcall	_lcd_put_byte
  5038  05DA                     l7323:	
  5039                           ;lcd(16).c: 37: while(lcd_busy());
  5040                           
  5041  05DA  26B0  120A  118A   	fcall	_lcd_busy
  5042  05DD  3800               	iorlw	0
  5043  05DE  1D03               	skipz
  5044  05DF  2DDA               	goto	l7323
  5045  05E0  3000               	movlw	0
  5046                           
  5047                           ;lcd(16).c: 39: lcd_put_byte(0,0x01);
  5048  05E1  01A0               	clrf	?_lcd_put_byte
  5049  05E2  0AA0               	incf	?_lcd_put_byte,f
  5050  05E3  2605  120A  118A   	fcall	_lcd_put_byte
  5051  05E6                     l7327:	
  5052                           ;lcd(16).c: 40: while(lcd_busy());
  5053                           
  5054  05E6  26B0  120A  118A   	fcall	_lcd_busy
  5055  05E9  3800               	iorlw	0
  5056  05EA  1D03               	skipz
  5057  05EB  2DE6               	goto	l7327
  5058                           
  5059                           ;lcd(16).c: 41: lcd_put_byte(0,0b00000100);
  5060  05EC  3004               	movlw	4
  5061  05ED  00A0               	movwf	?_lcd_put_byte
  5062  05EE  3000               	movlw	0
  5063  05EF  2605  120A  118A   	fcall	_lcd_put_byte
  5064  05F2                     l7331:	
  5065                           ;lcd(16).c: 42: while(lcd_busy());
  5066                           
  5067  05F2  26B0  120A  118A   	fcall	_lcd_busy
  5068  05F5  3800               	iorlw	0
  5069  05F6  1D03               	skipz
  5070  05F7  2DF2               	goto	l7331
  5071  05F8  3000               	movlw	0
  5072                           
  5073                           ;lcd(16).c: 43: lcd_put_byte(0,0x01);
  5074  05F9  01A0               	clrf	?_lcd_put_byte
  5075  05FA  0AA0               	incf	?_lcd_put_byte,f
  5076  05FB  2605  120A  118A   	fcall	_lcd_put_byte
  5077  05FE                     l7335:	
  5078                           ;lcd(16).c: 44: while(lcd_busy());
  5079                           
  5080  05FE  26B0  120A  118A   	fcall	_lcd_busy
  5081  0601  3800               	iorlw	0
  5082  0602  1903               	btfsc	3,2
  5083  0603  0008               	return
  5084  0604  2DFE               	goto	l7335
  5085  0605                     __end_of_lcd_init:	
  5086  0605                     __ptext694:	
  5087 ;; =============== function _lcd_busy ends ============
  5088                           
  5089                           
  5090 ;; *************** function _lcd_put_byte *****************
  5091 ;; Defined at:
  5092 ;;		line 106 in file "C:\Users\DELL\Desktop\baitap_ttvxl\dulieu_led\lcd(16).c"
  5093 ;; Parameters:    Size  Location     Type
  5094 ;;  rs              1    wreg     unsigned char 
  5095 ;;  b               1    0[BANK0 ] unsigned char 
  5096 ;; Auto vars:     Size  Location     Type
  5097 ;;  rs              1    3[BANK0 ] unsigned char 
  5098 ;;  temp            1    4[BANK0 ] struct _BYTE_VAL
  5099 ;; Return value:  Size  Location     Type
  5100 ;;		None               void
  5101 ;; Registers used:
  5102 ;;		wreg, status,2, status,0
  5103 ;; Tracked objects:
  5104 ;;		On entry : 60/0
  5105 ;;		On exit  : 60/0
  5106 ;;		Unchanged: 0/0
  5107 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5108 ;;      Params:         0       1       0       0       0
  5109 ;;      Locals:         0       2       0       0       0
  5110 ;;      Temps:          0       2       0       0       0
  5111 ;;      Totals:         0       5       0       0       0
  5112 ;;Total ram usage:        5 bytes
  5113 ;; Hardware stack levels used:    1
  5114 ;; Hardware stack levels required when called:    2
  5115 ;; This function calls:
  5116 ;;		Nothing
  5117 ;; This function is called by:
  5118 ;;		_lcd_init
  5119 ;;		_lcd_putc
  5120 ;;		_lcd_gotoxy
  5121 ;; This function uses a non-reentrant model
  5122 ;;
  5123  0605                     _lcd_put_byte:	
  5124                           
  5125                           ; Regs used in _lcd_put_byte: [wreg+status,2+status,0]
  5126                           ;lcd_put_byte@rs stored from wreg
  5127  0605  00A3               	movwf	lcd_put_byte@rs
  5128                           
  5129                           ;lcd(16).c: 107: BYTE_VAL temp;
  5130                           ;lcd(16).c: 109: TRISD4 = 0;
  5131  0606  1683               	bsf	3,5	;RP0=1, select bank1
  5132  0607  1208               	bcf	8,4
  5133                           
  5134                           ;lcd(16).c: 110: TRISD5 = 0;
  5135  0608  1288               	bcf	8,5
  5136                           
  5137                           ;lcd(16).c: 111: TRISD6 = 0;
  5138  0609  1308               	bcf	8,6
  5139                           
  5140                           ;lcd(16).c: 112: TRISD7 = 0;
  5141  060A  1388               	bcf	8,7
  5142                           
  5143                           ;lcd(16).c: 114: RD1 = 0;
  5144  060B  1283               	bcf	3,5	;RP0=0, select bank0
  5145  060C  1088               	bcf	8,1
  5146                           
  5147                           ;lcd(16).c: 115: if(rs) RD1 = 1;
  5148  060D  0823               	movf	lcd_put_byte@rs,w
  5149  060E  1D03               	skipz
  5150  060F  1488               	bsf	8,1
  5151                           
  5152                           ;lcd(16).c: 117: _delay((unsigned long)((20)*(20000000/4000000.0)));
  5153  0610  3021               	movlw	33
  5154  0611  00A1               	movwf	??_lcd_put_byte
  5155  0612                     u4737:	
  5156  0612  0BA1               	decfsz	??_lcd_put_byte,f
  5157  0613  2E12               	goto	u4737
  5158                           
  5159                           ;lcd(16).c: 118: RD2 = 0;
  5160  0614  1283               	bcf	3,5	;RP0=0, select bank0
  5161  0615  1303               	bcf	3,6	;RP1=0, select bank0
  5162  0616  3021               	movlw	33
  5163  0617  1108               	bcf	8,2
  5164                           
  5165                           ;lcd(16).c: 119: _delay((unsigned long)((20)*(20000000/4000000.0)));
  5166  0618  00A1               	movwf	??_lcd_put_byte
  5167  0619                     u4747:	
  5168  0619  0BA1               	decfsz	??_lcd_put_byte,f
  5169  061A  2E19               	goto	u4747
  5170                           
  5171                           ;lcd(16).c: 120: RD3 = 0;
  5172  061B  1283               	bcf	3,5	;RP0=0, select bank0
  5173  061C  1303               	bcf	3,6	;RP1=0, select bank0
  5174  061D  1188               	bcf	8,3
  5175                           
  5176                           ;lcd(16).c: 122: temp.Val = b;
  5177  061E  0820               	movf	lcd_put_byte@b,w
  5178  061F  00A4               	movwf	lcd_put_byte@temp
  5179                           
  5180                           ;lcd(16).c: 125: RD4 = temp.bits.b4;
  5181  0620  0E24               	swapf	lcd_put_byte@temp,w
  5182  0621  3901               	andlw	1
  5183  0622  00A1               	movwf	??_lcd_put_byte
  5184  0623  0C21               	rrf	??_lcd_put_byte,w
  5185  0624  1C03               	btfss	3,0
  5186  0625  2E2A               	goto	u3110
  5187  0626  1283               	bcf	3,5	;RP0=0, select bank0
  5188  0627  1303               	bcf	3,6	;RP1=0, select bank0
  5189  0628  1608               	bsf	8,4
  5190  0629  2E2D               	goto	l7041
  5191  062A                     u3110:	
  5192  062A  1283               	bcf	3,5	;RP0=0, select bank0
  5193  062B  1303               	bcf	3,6	;RP1=0, select bank0
  5194  062C  1208               	bcf	8,4
  5195  062D                     l7041:	
  5196                           
  5197                           ;lcd(16).c: 126: RD5 = temp.bits.b5;
  5198  062D  0E24               	swapf	lcd_put_byte@temp,w
  5199  062E  00A1               	movwf	??_lcd_put_byte
  5200  062F  0C21               	rrf	??_lcd_put_byte,w
  5201  0630  3901               	andlw	1
  5202  0631  00A2               	movwf	??_lcd_put_byte+1
  5203  0632  0C22               	rrf	??_lcd_put_byte+1,w
  5204  0633  1C03               	btfss	3,0
  5205  0634  2E39               	goto	u3130
  5206  0635  1283               	bcf	3,5	;RP0=0, select bank0
  5207  0636  1303               	bcf	3,6	;RP1=0, select bank0
  5208  0637  1688               	bsf	8,5
  5209  0638  2E3C               	goto	l7043
  5210  0639                     u3130:	
  5211  0639  1283               	bcf	3,5	;RP0=0, select bank0
  5212  063A  1303               	bcf	3,6	;RP1=0, select bank0
  5213  063B  1288               	bcf	8,5
  5214  063C                     l7043:	
  5215                           
  5216                           ;lcd(16).c: 127: RD6 = temp.bits.b6;
  5217  063C  0E24               	swapf	lcd_put_byte@temp,w
  5218  063D  00A1               	movwf	??_lcd_put_byte
  5219  063E  0CA1               	rrf	??_lcd_put_byte,f
  5220  063F  0C21               	rrf	??_lcd_put_byte,w
  5221  0640  3901               	andlw	1
  5222  0641  00A2               	movwf	??_lcd_put_byte+1
  5223  0642  0C22               	rrf	??_lcd_put_byte+1,w
  5224  0643  1C03               	btfss	3,0
  5225  0644  2E49               	goto	u3150
  5226  0645  1283               	bcf	3,5	;RP0=0, select bank0
  5227  0646  1303               	bcf	3,6	;RP1=0, select bank0
  5228  0647  1708               	bsf	8,6
  5229  0648  2E4C               	goto	l7045
  5230  0649                     u3150:	
  5231  0649  1283               	bcf	3,5	;RP0=0, select bank0
  5232  064A  1303               	bcf	3,6	;RP1=0, select bank0
  5233  064B  1308               	bcf	8,6
  5234  064C                     l7045:	
  5235                           
  5236                           ;lcd(16).c: 128: RD7 = temp.bits.b7;
  5237  064C  0D24               	rlf	lcd_put_byte@temp,w
  5238  064D  0D24               	rlf	lcd_put_byte@temp,w
  5239  064E  3901               	andlw	1
  5240  064F  00A1               	movwf	??_lcd_put_byte
  5241  0650  0C21               	rrf	??_lcd_put_byte,w
  5242  0651  1C03               	btfss	3,0
  5243  0652  2E57               	goto	u3170
  5244  0653  1283               	bcf	3,5	;RP0=0, select bank0
  5245  0654  1303               	bcf	3,6	;RP1=0, select bank0
  5246  0655  1788               	bsf	8,7
  5247  0656  2E5A               	goto	u3184
  5248  0657                     u3170:	
  5249  0657  1283               	bcf	3,5	;RP0=0, select bank0
  5250  0658  1303               	bcf	3,6	;RP1=0, select bank0
  5251  0659  1388               	bcf	8,7
  5252  065A                     u3184:	
  5253                           
  5254                           ;lcd(16).c: 129: _delay((unsigned long)((20)*(20000000/4000000.0)));
  5255  065A  3021               	movlw	33
  5256  065B  00A1               	movwf	??_lcd_put_byte
  5257  065C                     u4757:	
  5258  065C  0BA1               	decfsz	??_lcd_put_byte,f
  5259  065D  2E5C               	goto	u4757
  5260                           
  5261                           ;lcd(16).c: 130: RD3 = 1;
  5262  065E  1283               	bcf	3,5	;RP0=0, select bank0
  5263  065F  1303               	bcf	3,6	;RP1=0, select bank0
  5264  0660  3021               	movlw	33
  5265  0661  1588               	bsf	8,3
  5266                           
  5267                           ;lcd(16).c: 131: _delay((unsigned long)((20)*(20000000/4000000.0)));
  5268  0662  00A1               	movwf	??_lcd_put_byte
  5269  0663                     u4767:	
  5270  0663  0BA1               	decfsz	??_lcd_put_byte,f
  5271  0664  2E63               	goto	u4767
  5272                           
  5273                           ;lcd(16).c: 132: RD3 = 0;
  5274  0665  1283               	bcf	3,5	;RP0=0, select bank0
  5275  0666  1303               	bcf	3,6	;RP1=0, select bank0
  5276  0667  1188               	bcf	8,3
  5277                           
  5278                           ;lcd(16).c: 134: RD4 = temp.bits.b0;
  5279  0668  0824               	movf	lcd_put_byte@temp,w
  5280  0669  3901               	andlw	1
  5281  066A  00A1               	movwf	??_lcd_put_byte
  5282  066B  0C21               	rrf	??_lcd_put_byte,w
  5283  066C  1C03               	btfss	3,0
  5284  066D  2E72               	goto	u3190
  5285  066E  1283               	bcf	3,5	;RP0=0, select bank0
  5286  066F  1303               	bcf	3,6	;RP1=0, select bank0
  5287  0670  1608               	bsf	8,4
  5288  0671  2E75               	goto	l7053
  5289  0672                     u3190:	
  5290  0672  1283               	bcf	3,5	;RP0=0, select bank0
  5291  0673  1303               	bcf	3,6	;RP1=0, select bank0
  5292  0674  1208               	bcf	8,4
  5293  0675                     l7053:	
  5294                           
  5295                           ;lcd(16).c: 135: RD5 = temp.bits.b1;
  5296  0675  0C24               	rrf	lcd_put_byte@temp,w
  5297  0676  3901               	andlw	1
  5298  0677  00A1               	movwf	??_lcd_put_byte
  5299  0678  0C21               	rrf	??_lcd_put_byte,w
  5300  0679  1C03               	btfss	3,0
  5301  067A  2E7F               	goto	u3210
  5302  067B  1283               	bcf	3,5	;RP0=0, select bank0
  5303  067C  1303               	bcf	3,6	;RP1=0, select bank0
  5304  067D  1688               	bsf	8,5
  5305  067E  2E82               	goto	l7055
  5306  067F                     u3210:	
  5307  067F  1283               	bcf	3,5	;RP0=0, select bank0
  5308  0680  1303               	bcf	3,6	;RP1=0, select bank0
  5309  0681  1288               	bcf	8,5
  5310  0682                     l7055:	
  5311                           
  5312                           ;lcd(16).c: 136: RD6 = temp.bits.b2;
  5313  0682  0C24               	rrf	lcd_put_byte@temp,w
  5314  0683  00A1               	movwf	??_lcd_put_byte
  5315  0684  0C21               	rrf	??_lcd_put_byte,w
  5316  0685  3901               	andlw	1
  5317  0686  00A2               	movwf	??_lcd_put_byte+1
  5318  0687  0C22               	rrf	??_lcd_put_byte+1,w
  5319  0688  1C03               	btfss	3,0
  5320  0689  2E8E               	goto	u3230
  5321  068A  1283               	bcf	3,5	;RP0=0, select bank0
  5322  068B  1303               	bcf	3,6	;RP1=0, select bank0
  5323  068C  1708               	bsf	8,6
  5324  068D  2E91               	goto	l7057
  5325  068E                     u3230:	
  5326  068E  1283               	bcf	3,5	;RP0=0, select bank0
  5327  068F  1303               	bcf	3,6	;RP1=0, select bank0
  5328  0690  1308               	bcf	8,6
  5329  0691                     l7057:	
  5330                           
  5331                           ;lcd(16).c: 137: RD7 = temp.bits.b3;
  5332  0691  0C24               	rrf	lcd_put_byte@temp,w
  5333  0692  00A1               	movwf	??_lcd_put_byte
  5334  0693  0CA1               	rrf	??_lcd_put_byte,f
  5335  0694  0C21               	rrf	??_lcd_put_byte,w
  5336  0695  3901               	andlw	1
  5337  0696  00A2               	movwf	??_lcd_put_byte+1
  5338  0697  0C22               	rrf	??_lcd_put_byte+1,w
  5339  0698  1C03               	btfss	3,0
  5340  0699  2E9E               	goto	u3250
  5341  069A  1283               	bcf	3,5	;RP0=0, select bank0
  5342  069B  1303               	bcf	3,6	;RP1=0, select bank0
  5343  069C  1788               	bsf	8,7
  5344  069D  2EA1               	goto	u3264
  5345  069E                     u3250:	
  5346  069E  1283               	bcf	3,5	;RP0=0, select bank0
  5347  069F  1303               	bcf	3,6	;RP1=0, select bank0
  5348  06A0  1388               	bcf	8,7
  5349  06A1                     u3264:	
  5350                           
  5351                           ;lcd(16).c: 138: _delay((unsigned long)((20)*(20000000/4000000.0)));
  5352  06A1  3021               	movlw	33
  5353  06A2  00A1               	movwf	??_lcd_put_byte
  5354  06A3                     u4777:	
  5355  06A3  0BA1               	decfsz	??_lcd_put_byte,f
  5356  06A4  2EA3               	goto	u4777
  5357                           
  5358                           ;lcd(16).c: 139: RD3 = 1;
  5359  06A5  1283               	bcf	3,5	;RP0=0, select bank0
  5360  06A6  1303               	bcf	3,6	;RP1=0, select bank0
  5361  06A7  3021               	movlw	33
  5362  06A8  1588               	bsf	8,3
  5363                           
  5364                           ;lcd(16).c: 140: _delay((unsigned long)((20)*(20000000/4000000.0)));
  5365  06A9  00A1               	movwf	??_lcd_put_byte
  5366  06AA                     u4787:	
  5367  06AA  0BA1               	decfsz	??_lcd_put_byte,f
  5368  06AB  2EAA               	goto	u4787
  5369                           
  5370                           ;lcd(16).c: 141: RD3 = 0;
  5371  06AC  1283               	bcf	3,5	;RP0=0, select bank0
  5372  06AD  1303               	bcf	3,6	;RP1=0, select bank0
  5373  06AE  1188               	bcf	8,3
  5374  06AF  0008               	return
  5375  06B0                     __end_of_lcd_put_byte:	
  5376  06B0                     __ptext693:	
  5377 ;; =============== function _pwm_10bit ends ============
  5378                           
  5379                           
  5380 ;; *************** function _lcd_busy *****************
  5381 ;; Defined at:
  5382 ;;		line 47 in file "C:\Users\DELL\Desktop\baitap_ttvxl\dulieu_led\lcd(16).c"
  5383 ;; Parameters:    Size  Location     Type
  5384 ;;		None
  5385 ;; Auto vars:     Size  Location     Type
  5386 ;;  busy            1    1[BANK0 ] unsigned char 
  5387 ;; Return value:  Size  Location     Type
  5388 ;;                  1    wreg      unsigned char 
  5389 ;; Registers used:
  5390 ;;		wreg
  5391 ;; Tracked objects:
  5392 ;;		On entry : 0/0
  5393 ;;		On exit  : 60/0
  5394 ;;		Unchanged: 0/0
  5395 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5396 ;;      Params:         0       0       0       0       0
  5397 ;;      Locals:         0       1       0       0       0
  5398 ;;      Temps:          0       1       0       0       0
  5399 ;;      Totals:         0       2       0       0       0
  5400 ;;Total ram usage:        2 bytes
  5401 ;; Hardware stack levels used:    1
  5402 ;; Hardware stack levels required when called:    2
  5403 ;; This function calls:
  5404 ;;		Nothing
  5405 ;; This function is called by:
  5406 ;;		_lcd_init
  5407 ;;		_lcd_putc
  5408 ;;		_lcd_gotoxy
  5409 ;; This function uses a non-reentrant model
  5410 ;;
  5411  06B0                     _lcd_busy:	
  5412                           
  5413                           ;lcd(16).c: 48: unsigned char busy;
  5414                           ;lcd(16).c: 50: TRISD4 = 1;
  5415                           
  5416                           ; Regs used in _lcd_busy: [wreg]
  5417  06B0  1683               	bsf	3,5	;RP0=1, select bank1
  5418  06B1  1303               	bcf	3,6	;RP1=0, select bank1
  5419  06B2  1608               	bsf	8,4
  5420                           
  5421                           ;lcd(16).c: 51: TRISD5 = 1;
  5422  06B3  1688               	bsf	8,5
  5423                           
  5424                           ;lcd(16).c: 52: TRISD6 = 1;
  5425  06B4  1708               	bsf	8,6
  5426                           
  5427                           ;lcd(16).c: 53: TRISD7 = 1;
  5428  06B5  1788               	bsf	8,7
  5429                           
  5430                           ;lcd(16).c: 55: RD2 = 1;
  5431  06B6  1283               	bcf	3,5	;RP0=0, select bank0
  5432  06B7  3021               	movlw	33
  5433  06B8  1508               	bsf	8,2
  5434                           
  5435                           ;lcd(16).c: 56: RD1 = 0;
  5436  06B9  1088               	bcf	8,1
  5437                           
  5438                           ;lcd(16).c: 57: _delay((unsigned long)((20)*(20000000/4000000.0)));
  5439  06BA  00A0               	movwf	??_lcd_busy
  5440  06BB                     u4697:	
  5441  06BB  0BA0               	decfsz	??_lcd_busy,f
  5442  06BC  2EBB               	goto	u4697
  5443                           
  5444                           ;lcd(16).c: 58: RD3 = 1;
  5445  06BD  1283               	bcf	3,5	;RP0=0, select bank0
  5446  06BE  1303               	bcf	3,6	;RP1=0, select bank0
  5447  06BF  3021               	movlw	33
  5448  06C0  1588               	bsf	8,3
  5449                           
  5450                           ;lcd(16).c: 59: _delay((unsigned long)((20)*(20000000/4000000.0)));
  5451  06C1  00A0               	movwf	??_lcd_busy
  5452  06C2                     u4707:	
  5453  06C2  0BA0               	decfsz	??_lcd_busy,f
  5454  06C3  2EC2               	goto	u4707
  5455                           
  5456                           ;lcd(16).c: 61: busy = RD7;
  5457  06C4  3000               	movlw	0
  5458  06C5  1283               	bcf	3,5	;RP0=0, select bank0
  5459  06C6  1303               	bcf	3,6	;RP1=0, select bank0
  5460  06C7  1B88               	btfsc	8,7
  5461  06C8  3001               	movlw	1
  5462  06C9  00A1               	movwf	lcd_busy@busy
  5463  06CA  3021               	movlw	33
  5464                           
  5465                           ;lcd(16).c: 63: RD3 = 0;
  5466  06CB  1188               	bcf	8,3
  5467                           
  5468                           ;lcd(16).c: 64: _delay((unsigned long)((20)*(20000000/4000000.0)));
  5469  06CC  00A0               	movwf	??_lcd_busy
  5470  06CD                     u4717:	
  5471  06CD  0BA0               	decfsz	??_lcd_busy,f
  5472  06CE  2ECD               	goto	u4717
  5473                           
  5474                           ;lcd(16).c: 65: RD3 = 1;
  5475  06CF  1283               	bcf	3,5	;RP0=0, select bank0
  5476  06D0  1303               	bcf	3,6	;RP1=0, select bank0
  5477  06D1  3021               	movlw	33
  5478  06D2  1588               	bsf	8,3
  5479                           
  5480                           ;lcd(16).c: 66: _delay((unsigned long)((20)*(20000000/4000000.0)));
  5481  06D3  00A0               	movwf	??_lcd_busy
  5482  06D4                     u4727:	
  5483  06D4  0BA0               	decfsz	??_lcd_busy,f
  5484  06D5  2ED4               	goto	u4727
  5485                           
  5486                           ;lcd(16).c: 67: RD3 = 0;
  5487  06D6  1283               	bcf	3,5	;RP0=0, select bank0
  5488  06D7  1303               	bcf	3,6	;RP1=0, select bank0
  5489  06D8  1188               	bcf	8,3
  5490                           
  5491                           ;lcd(16).c: 70: return busy;
  5492  06D9  0821               	movf	lcd_busy@busy,w
  5493  06DA  0008               	return
  5494  06DB                     __end_of_lcd_busy:	
  5495  06DB                     __ptext713:	
  5496 ;; =============== function _tx_init ends ============
  5497                           
  5498                           
  5499 ;; *************** function _isprint *****************
  5500 ;; Defined at:
  5501 ;;		line 13 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\isprint.c"
  5502 ;; Parameters:    Size  Location     Type
  5503 ;;  c               1    wreg     unsigned char 
  5504 ;; Auto vars:     Size  Location     Type
  5505 ;;  c               1    1[BANK0 ] unsigned char 
  5506 ;; Return value:  Size  Location     Type
  5507 ;;		None               void
  5508 ;; Registers used:
  5509 ;;		wreg, status,2, status,0
  5510 ;; Tracked objects:
  5511 ;;		On entry : 160/0
  5512 ;;		On exit  : 160/0
  5513 ;;		Unchanged: FFE9F/0
  5514 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5515 ;;      Params:         0       0       0       0       0
  5516 ;;      Locals:         0       2       0       0       0
  5517 ;;      Temps:          0       0       0       0       0
  5518 ;;      Totals:         0       2       0       0       0
  5519 ;;Total ram usage:        2 bytes
  5520 ;; Hardware stack levels used:    1
  5521 ;; Hardware stack levels required when called:    2
  5522 ;; This function calls:
  5523 ;;		Nothing
  5524 ;; This function is called by:
  5525 ;;		_lcd_putc
  5526 ;; This function uses a non-reentrant model
  5527 ;;
  5528  06DB                     _isprint:	
  5529                           
  5530                           ; Regs used in _isprint: [wreg+status,2+status,0]
  5531                           ;isprint@c stored from wreg
  5532  06DB  00A1               	movwf	isprint@c
  5533  06DC  307F               	movlw	127
  5534  06DD  01A0               	clrf	_isprint$3725
  5535  06DE  0221               	subwf	isprint@c,w
  5536  06DF  1803               	skipnc
  5537  06E0  2EE7               	goto	l6565
  5538  06E1  3020               	movlw	32
  5539  06E2  0221               	subwf	isprint@c,w
  5540  06E3  1C03               	skipc
  5541  06E4  2EE7               	goto	l6565
  5542  06E5  01A0               	clrf	_isprint$3725
  5543  06E6  0AA0               	incf	_isprint$3725,f
  5544  06E7                     l6565:	
  5545  06E7  0C20               	rrf	_isprint$3725,w
  5546  06E8  0008               	return
  5547  06E9                     __end_of_isprint:	
  5548  06E9                     PL38:	
  5549  06E9  3030               	movlw	48
  5550  06EA  1283               	bcf	3,5	;RP0=0, select bank0
  5551  06EB  1303               	bcf	3,6	;RP1=0, select bank0
  5552  06EC  00A0               	movwf	?_lcd_put_byte
  5553  06ED  3400               	retlw	0
  5554                           
  5555                           	psect	text681
  5556  06EE                     __ptext681:	
  5557 ;; =============== function _lcd_putc ends ============
  5558                           
  5559                           
  5560 ;; *************** function ___ftsub *****************
  5561 ;; Defined at:
  5562 ;;		line 17 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\ftsub.c"
  5563 ;; Parameters:    Size  Location     Type
  5564 ;;  f2              3   56[BANK0 ] float 
  5565 ;;  f1              3   59[BANK0 ] float 
  5566 ;; Auto vars:     Size  Location     Type
  5567 ;;		None
  5568 ;; Return value:  Size  Location     Type
  5569 ;;                  3   56[BANK0 ] float 
  5570 ;; Registers used:
  5571 ;;		wreg, status,2, status,0, pclath, cstack
  5572 ;; Tracked objects:
  5573 ;;		On entry : 60/0
  5574 ;;		On exit  : 60/0
  5575 ;;		Unchanged: FFF9F/0
  5576 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5577 ;;      Params:         0       6       0       0       0
  5578 ;;      Locals:         0       0       0       0       0
  5579 ;;      Temps:          0       0       0       0       0
  5580 ;;      Totals:         0       6       0       0       0
  5581 ;;Total ram usage:        6 bytes
  5582 ;; Hardware stack levels used:    1
  5583 ;; Hardware stack levels required when called:    4
  5584 ;; This function calls:
  5585 ;;		___ftadd
  5586 ;; This function is called by:
  5587 ;;		__doprnt
  5588 ;; This function uses a non-reentrant model
  5589 ;;
  5590  06EE                     ___ftsub:	
  5591                           
  5592                           ; Regs used in ___ftsub: [wreg+status,2+status,0+pclath+cstack]
  5593  06EE  3080               	movlw	128
  5594  06EF  06DA               	xorwf	___ftsub@f2+2,f
  5595  06F0  085B               	movf	___ftsub@f1,w
  5596  06F1  00CC               	movwf	?___ftadd
  5597  06F2  085C               	movf	___ftsub@f1+1,w
  5598  06F3  00CD               	movwf	?___ftadd+1
  5599  06F4  085D               	movf	___ftsub@f1+2,w
  5600  06F5  00CE               	movwf	?___ftadd+2
  5601  06F6  0858               	movf	___ftsub@f2,w
  5602  06F7  00CF               	movwf	?___ftadd+3
  5603  06F8  0859               	movf	___ftsub@f2+1,w
  5604  06F9  00D0               	movwf	?___ftadd+4
  5605  06FA  085A               	movf	___ftsub@f2+2,w
  5606  06FB  00D1               	movwf	?___ftadd+5
  5607  06FC  2704               	fcall	___ftadd
  5608  06FD  084C               	movf	?___ftadd,w
  5609  06FE  00D8               	movwf	?___ftsub
  5610  06FF  084D               	movf	?___ftadd+1,w
  5611  0700  00D9               	movwf	?___ftsub+1
  5612  0701  084E               	movf	?___ftadd+2,w
  5613  0702  00DA               	movwf	?___ftsub+2
  5614  0703  0008               	return
  5615  0704                     __end_of___ftsub:	
  5616  0704                     __ptext690:	
  5617 ;; =============== function ___ftdiv ends ============
  5618                           
  5619                           
  5620 ;; *************** function ___ftadd *****************
  5621 ;; Defined at:
  5622 ;;		line 87 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\ftadd.c"
  5623 ;; Parameters:    Size  Location     Type
  5624 ;;  f1              3   44[BANK0 ] float 
  5625 ;;  f2              3   47[BANK0 ] float 
  5626 ;; Auto vars:     Size  Location     Type
  5627 ;;  exp1            1   55[BANK0 ] unsigned char 
  5628 ;;  exp2            1   54[BANK0 ] unsigned char 
  5629 ;;  sign            1   53[BANK0 ] unsigned char 
  5630 ;; Return value:  Size  Location     Type
  5631 ;;                  3   44[BANK0 ] float 
  5632 ;; Registers used:
  5633 ;;		wreg, status,2, status,0, pclath, cstack
  5634 ;; Tracked objects:
  5635 ;;		On entry : 60/0
  5636 ;;		On exit  : 60/0
  5637 ;;		Unchanged: FFF9F/0
  5638 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5639 ;;      Params:         0       6       0       0       0
  5640 ;;      Locals:         0       3       0       0       0
  5641 ;;      Temps:          0       3       0       0       0
  5642 ;;      Totals:         0      12       0       0       0
  5643 ;;Total ram usage:       12 bytes
  5644 ;; Hardware stack levels used:    1
  5645 ;; Hardware stack levels required when called:    3
  5646 ;; This function calls:
  5647 ;;		___ftpack
  5648 ;; This function is called by:
  5649 ;;		__doprnt
  5650 ;;		___ftsub
  5651 ;; This function uses a non-reentrant model
  5652 ;;
  5653  0704                     ___ftadd:	
  5654                           
  5655                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  5656  0704  084C               	movf	___ftadd@f1,w
  5657  0705  00D2               	movwf	??___ftadd
  5658  0706  084D               	movf	___ftadd@f1+1,w
  5659  0707  00D3               	movwf	??___ftadd+1
  5660  0708  084E               	movf	___ftadd@f1+2,w
  5661  0709  00D4               	movwf	??___ftadd+2
  5662  070A  1003               	clrc
  5663  070B  0D53               	rlf	??___ftadd+1,w
  5664  070C  0D54               	rlf	??___ftadd+2,w
  5665  070D  00D7               	movwf	___ftadd@exp1
  5666  070E  084F               	movf	___ftadd@f2,w
  5667  070F  00D2               	movwf	??___ftadd
  5668  0710  0850               	movf	___ftadd@f2+1,w
  5669  0711  00D3               	movwf	??___ftadd+1
  5670  0712  0851               	movf	___ftadd@f2+2,w
  5671  0713  00D4               	movwf	??___ftadd+2
  5672  0714  1003               	clrc
  5673  0715  0D53               	rlf	??___ftadd+1,w
  5674  0716  0D54               	rlf	??___ftadd+2,w
  5675  0717  00D6               	movwf	___ftadd@exp2
  5676  0718  0857               	movf	___ftadd@exp1,w
  5677  0719  1903               	btfsc	3,2
  5678  071A  2F27               	goto	l7103
  5679  071B  0856               	movf	___ftadd@exp2,w
  5680  071C  0257               	subwf	___ftadd@exp1,w
  5681  071D  0856               	movf	___ftadd@exp2,w
  5682  071E  1803               	skipnc
  5683  071F  2F2F               	goto	L11
  5684  0720  00D2               	movwf	??___ftadd
  5685  0721  0857               	movf	___ftadd@exp1,w
  5686  0722  02D2               	subwf	??___ftadd,f
  5687  0723  3019               	movlw	25
  5688  0724  0252               	subwf	??___ftadd,w
  5689  0725  1C03               	skipc
  5690  0726  2F2E               	goto	l7107
  5691  0727                     l7103:	
  5692  0727  084F               	movf	___ftadd@f2,w
  5693  0728  00CC               	movwf	?___ftadd
  5694  0729  0850               	movf	___ftadd@f2+1,w
  5695  072A  00CD               	movwf	?___ftadd+1
  5696  072B  0851               	movf	___ftadd@f2+2,w
  5697  072C  00CE               	movwf	?___ftadd+2
  5698  072D  0008               	return
  5699  072E                     l7107:	
  5700  072E  0856               	movf	___ftadd@exp2,w
  5701  072F                     L11:	
  5702  072F  1903               	btfsc	3,2
  5703  0730  0008               	return
  5704  0731  0857               	movf	___ftadd@exp1,w
  5705  0732  0256               	subwf	___ftadd@exp2,w
  5706  0733  1803               	skipnc
  5707  0734  2F3D               	goto	l7113
  5708  0735  0857               	movf	___ftadd@exp1,w
  5709  0736  00D2               	movwf	??___ftadd
  5710  0737  0856               	movf	___ftadd@exp2,w
  5711  0738  02D2               	subwf	??___ftadd,f
  5712  0739  3019               	movlw	25
  5713  073A  0252               	subwf	??___ftadd,w
  5714  073B  1803               	btfsc	3,0
  5715  073C  0008               	return
  5716  073D                     l7113:	
  5717  073D  3006               	movlw	6
  5718  073E  00D5               	movwf	___ftadd@sign
  5719  073F  1BCE               	btfsc	___ftadd@f1+2,7
  5720  0740  17D5               	bsf	___ftadd@sign,7
  5721  0741  1BD1               	btfsc	___ftadd@f2+2,7
  5722  0742  1755               	bsf	___ftadd@sign,6
  5723  0743  17CD               	bsf	___ftadd@f1+1,7
  5724  0744  01CE               	clrf	___ftadd@f1+2
  5725  0745  17D0               	bsf	___ftadd@f2+1,7
  5726  0746  01D1               	clrf	___ftadd@f2+2
  5727  0747  0856               	movf	___ftadd@exp2,w
  5728  0748  0257               	subwf	___ftadd@exp1,w
  5729  0749  1803               	skipnc
  5730  074A  2F64               	goto	l7135
  5731  074B                     l7125:	
  5732  074B  1003               	clrc
  5733  074C  0DCF               	rlf	___ftadd@f2,f
  5734  074D  0DD0               	rlf	___ftadd@f2+1,f
  5735  074E  0DD1               	rlf	___ftadd@f2+2,f
  5736  074F  03D6               	decf	___ftadd@exp2,f
  5737  0750  0856               	movf	___ftadd@exp2,w
  5738  0751  0657               	xorwf	___ftadd@exp1,w
  5739  0752  1903               	skipnz
  5740  0753  2F5F               	goto	l7133
  5741  0754  03D5               	decf	___ftadd@sign,f
  5742  0755  0855               	movf	___ftadd@sign,w
  5743  0756  3907               	andlw	7
  5744  0757  1903               	btfsc	3,2
  5745  0758  2F5F               	goto	l7133
  5746  0759  2F4B               	goto	l7125
  5747  075A                     l7131:	
  5748  075A  1003               	clrc
  5749  075B  0CCE               	rrf	___ftadd@f1+2,f
  5750  075C  0CCD               	rrf	___ftadd@f1+1,f
  5751  075D  0CCC               	rrf	___ftadd@f1,f
  5752  075E  0AD7               	incf	___ftadd@exp1,f
  5753  075F                     l7133:	
  5754  075F  0857               	movf	___ftadd@exp1,w
  5755  0760  0656               	xorwf	___ftadd@exp2,w
  5756  0761  1903               	btfsc	3,2
  5757  0762  2F80               	goto	l3450
  5758  0763  2F5A               	goto	l7131
  5759  0764                     l7135:	
  5760  0764  0857               	movf	___ftadd@exp1,w
  5761  0765  0256               	subwf	___ftadd@exp2,w
  5762  0766  1803               	skipnc
  5763  0767  2F80               	goto	l3450
  5764  0768                     l7137:	
  5765  0768  1003               	clrc
  5766  0769  0DCC               	rlf	___ftadd@f1,f
  5767  076A  0DCD               	rlf	___ftadd@f1+1,f
  5768  076B  0DCE               	rlf	___ftadd@f1+2,f
  5769  076C  03D7               	decf	___ftadd@exp1,f
  5770  076D  0856               	movf	___ftadd@exp2,w
  5771  076E  0657               	xorwf	___ftadd@exp1,w
  5772  076F  1903               	skipnz
  5773  0770  2F7C               	goto	l7145
  5774  0771  03D5               	decf	___ftadd@sign,f
  5775  0772  0855               	movf	___ftadd@sign,w
  5776  0773  3907               	andlw	7
  5777  0774  1903               	btfsc	3,2
  5778  0775  2F7C               	goto	l7145
  5779  0776  2F68               	goto	l7137
  5780  0777                     l7143:	
  5781  0777  1003               	clrc
  5782  0778  0CD1               	rrf	___ftadd@f2+2,f
  5783  0779  0CD0               	rrf	___ftadd@f2+1,f
  5784  077A  0CCF               	rrf	___ftadd@f2,f
  5785  077B  0AD6               	incf	___ftadd@exp2,f
  5786  077C                     l7145:	
  5787  077C  0857               	movf	___ftadd@exp1,w
  5788  077D  0656               	xorwf	___ftadd@exp2,w
  5789  077E  1D03               	skipz
  5790  077F  2F77               	goto	l7143
  5791  0780                     l3450:	
  5792  0780  1FD5               	btfss	___ftadd@sign,7
  5793  0781  2F8B               	goto	l7151
  5794  0782  30FF               	movlw	255
  5795  0783  06CC               	xorwf	___ftadd@f1,f
  5796  0784  06CD               	xorwf	___ftadd@f1+1,f
  5797  0785  06CE               	xorwf	___ftadd@f1+2,f
  5798  0786  0ACC               	incf	___ftadd@f1,f
  5799  0787  1903               	skipnz
  5800  0788  0ACD               	incf	___ftadd@f1+1,f
  5801  0789  1903               	skipnz
  5802  078A  0ACE               	incf	___ftadd@f1+2,f
  5803  078B                     l7151:	
  5804  078B  1F55               	btfss	___ftadd@sign,6
  5805  078C  2F96               	goto	l7157
  5806  078D  30FF               	movlw	255
  5807  078E  06CF               	xorwf	___ftadd@f2,f
  5808  078F  06D0               	xorwf	___ftadd@f2+1,f
  5809  0790  06D1               	xorwf	___ftadd@f2+2,f
  5810  0791  0ACF               	incf	___ftadd@f2,f
  5811  0792  1903               	skipnz
  5812  0793  0AD0               	incf	___ftadd@f2+1,f
  5813  0794  1903               	skipnz
  5814  0795  0AD1               	incf	___ftadd@f2+2,f
  5815  0796                     l7157:	
  5816  0796  01D5               	clrf	___ftadd@sign
  5817  0797  084C               	movf	___ftadd@f1,w
  5818  0798  07CF               	addwf	___ftadd@f2,f
  5819  0799  084D               	movf	___ftadd@f1+1,w
  5820  079A  1103               	clrz
  5821  079B  1803               	skipnc
  5822  079C  0A4D               	incf	___ftadd@f1+1,w
  5823  079D  1D03               	btfss	3,2
  5824  079E  07D0               	addwf	___ftadd@f2+1,f
  5825  079F  084E               	movf	___ftadd@f1+2,w
  5826  07A0  1103               	clrz
  5827  07A1  1803               	skipnc
  5828  07A2  0A4E               	incf	___ftadd@f1+2,w
  5829  07A3  1D03               	btfss	3,2
  5830  07A4  07D1               	addwf	___ftadd@f2+2,f
  5831  07A5  1FD1               	btfss	___ftadd@f2+2,7
  5832  07A6  2FB2               	goto	l7169
  5833  07A7  30FF               	movlw	255
  5834  07A8  06CF               	xorwf	___ftadd@f2,f
  5835  07A9  06D0               	xorwf	___ftadd@f2+1,f
  5836  07AA  06D1               	xorwf	___ftadd@f2+2,f
  5837  07AB  0ACF               	incf	___ftadd@f2,f
  5838  07AC  1903               	skipnz
  5839  07AD  0AD0               	incf	___ftadd@f2+1,f
  5840  07AE  1903               	skipnz
  5841  07AF  0AD1               	incf	___ftadd@f2+2,f
  5842  07B0  01D5               	clrf	___ftadd@sign
  5843  07B1  0AD5               	incf	___ftadd@sign,f
  5844  07B2                     l7169:	
  5845  07B2  084F               	movf	___ftadd@f2,w
  5846  07B3  00A0               	movwf	?___ftpack
  5847  07B4  0850               	movf	___ftadd@f2+1,w
  5848  07B5  00A1               	movwf	?___ftpack+1
  5849  07B6  0851               	movf	___ftadd@f2+2,w
  5850  07B7  00A2               	movwf	?___ftpack+2
  5851  07B8  0857               	movf	___ftadd@exp1,w
  5852  07B9  00A3               	movwf	?___ftpack+3
  5853  07BA  0855               	movf	___ftadd@sign,w
  5854  07BB  00A4               	movwf	?___ftpack+4
  5855  07BC  120A  118A  2463   	fcall	___ftpack
  5856  07BF  0820               	movf	?___ftpack,w
  5857  07C0  00CC               	movwf	?___ftadd
  5858  07C1  0821               	movf	?___ftpack+1,w
  5859  07C2  00CD               	movwf	?___ftadd+1
  5860  07C3  0822               	movf	?___ftpack+2,w
  5861  07C4  00CE               	movwf	?___ftadd+2
  5862  07C5  0008               	return
  5863  07C6                     __end_of___ftadd:	
  5864                           
  5865                           	psect	text683
  5866  1549                     __ptext683:	
  5867 ;; =============== function _scale ends ============
  5868                           
  5869                           
  5870 ;; *************** function _fround *****************
  5871 ;; Defined at:
  5872 ;;		line 406 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\lib\doprnt.c"
  5873 ;; Parameters:    Size  Location     Type
  5874 ;;  prec            1    wreg     unsigned char 
  5875 ;; Auto vars:     Size  Location     Type
  5876 ;;  prec            1   65[BANK0 ] unsigned char 
  5877 ;; Return value:  Size  Location     Type
  5878 ;;                  3   56[BANK0 ] unsigned char 
  5879 ;; Registers used:
  5880 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5881 ;; Tracked objects:
  5882 ;;		On entry : 60/20
  5883 ;;		On exit  : 60/0
  5884 ;;		Unchanged: FFF9F/0
  5885 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5886 ;;      Params:         0       3       0       0       0
  5887 ;;      Locals:         0       7       0       0       0
  5888 ;;      Temps:          0       0       0       0       0
  5889 ;;      Totals:         0      10       0       0       0
  5890 ;;Total ram usage:       10 bytes
  5891 ;; Hardware stack levels used:    1
  5892 ;; Hardware stack levels required when called:    4
  5893 ;; This function calls:
  5894 ;;		___lbmod
  5895 ;;		___bmul
  5896 ;;		___lbdiv
  5897 ;;		___ftmul
  5898 ;; This function is called by:
  5899 ;;		__doprnt
  5900 ;; This function uses a non-reentrant model
  5901 ;;
  5902  1549                     _fround:	
  5903                           
  5904                           ; Regs used in _fround: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5905                           ;fround@prec stored from wreg
  5906  1549  1283               	bcf	3,5	;RP0=0, select bank0
  5907  154A  00E1               	movwf	fround@prec
  5908  154B  306E               	movlw	110
  5909  154C  0261               	subwf	fround@prec,w
  5910  154D  1C03               	skipc
  5911  154E  2DD4               	goto	l7359
  5912  154F  3003               	movlw	3
  5913  1550  00A9               	movwf	?___bmul
  5914  1551  300A               	movlw	10
  5915  1552  00A5               	movwf	?___lbdiv
  5916  1553  3064               	movlw	100
  5917  1554  00A0               	movwf	?___lbmod
  5918  1555  0861               	movf	fround@prec,w
  5919  1556  2669  160A  118A   	fcall	___lbmod
  5920  1559  264E               	fcall	___lbdiv
  5921  155A  120A  118A  2455   	fcall	___bmul
      +       160A  118A         
  5922  155F  3E1C               	addlw	low ((__npowers_-__stringbase+27))
  5923  1560  0084               	movwf	4
  5924  1561  120A  118A  200F   	fcall	stringdir
      +       160A  118A         
  5925  1566  00BD               	movwf	?___ftmul
  5926  1567  120A  118A  200F   	fcall	stringdir
      +       160A  118A         
  5927  156C  00BE               	movwf	?___ftmul+1
  5928  156D  120A  118A  200F   	fcall	stringdir
      +       160A  118A         
  5929  1572  00BF               	movwf	?___ftmul+2
  5930  1573  3003               	movlw	3
  5931  1574  00A9               	movwf	?___bmul
  5932  1575  3064               	movlw	100
  5933  1576  00A5               	movwf	?___lbdiv
  5934  1577  0861               	movf	fround@prec,w
  5935  1578  264E               	fcall	___lbdiv
  5936  1579  120A  118A  2455   	fcall	___bmul
      +       160A  118A         
  5937  157E  3E37               	addlw	low ((__npowers_-__stringbase+54))
  5938  157F  0084               	movwf	4
  5939  1580  120A  118A  200F   	fcall	stringdir
      +       160A  118A         
  5940  1585  00C0               	movwf	?___ftmul+3
  5941  1586  120A  118A  200F   	fcall	stringdir
      +       160A  118A         
  5942  158B  00C1               	movwf	?___ftmul+4
  5943  158C  120A  118A  200F   	fcall	stringdir
      +       160A  118A         
  5944  1591  00C2               	movwf	?___ftmul+5
  5945  1592  120A  118A  23E6   	fcall	___ftmul
      +       160A  118A         
  5946  1597  2694  160A  118A   	fcall	PL36	;call to abstracted procedure
  5947  159A  3003               	movlw	3
  5948  159B  00A9               	movwf	?___bmul
  5949  159C  300A               	movlw	10
  5950  159D  00A0               	movwf	?___lbmod
  5951  159E  0861               	movf	fround@prec,w
  5952  159F  2669               	fcall	___lbmod
  5953  15A0  120A  118A  2455   	fcall	___bmul
      +       160A  118A         
  5954  15A5  3E01               	addlw	low (__npowers_-__stringbase)
  5955  15A6  0084               	movwf	4
  5956  15A7  120A  118A  200F   	fcall	stringdir
      +       160A  118A         
  5957  15AC  00BD               	movwf	?___ftmul
  5958  15AD  120A  118A  200F   	fcall	stringdir
      +       160A  118A         
  5959  15B2  00BE               	movwf	?___ftmul+1
  5960  15B3  120A  118A  200F   	fcall	stringdir
      +       160A  118A         
  5961  15B8  268C               	fcall	PL31	;call to abstracted procedure
  5962  15B9  120A  118A  23E6   	fcall	___ftmul
      +       160A  118A         
  5963  15BE  083D               	movf	?___ftmul,w
  5964  15BF  00DB               	movwf	_fround$4216
  5965  15C0  083E               	movf	?___ftmul+1,w
  5966  15C1  00DC               	movwf	_fround$4216+1
  5967  15C2  083F               	movf	?___ftmul+2,w
  5968  15C3  00DD               	movwf	_fround$4216+2
  5969  15C4  303F               	movlw	63
  5970  15C5  01BD               	clrf	?___ftmul
  5971  15C6  01BE               	clrf	?___ftmul+1
  5972  15C7  00BF               	movwf	?___ftmul+2
  5973  15C8  085B               	movf	_fround$4216,w
  5974  15C9  00C0               	movwf	?___ftmul+3
  5975  15CA  085C               	movf	_fround$4216+1,w
  5976  15CB  00C1               	movwf	?___ftmul+4
  5977  15CC  085D               	movf	_fround$4216+2,w
  5978  15CD  00C2               	movwf	?___ftmul+5
  5979  15CE  120A  118A  23E6   	fcall	___ftmul
      +       160A  118A         
  5980  15D3  2E85               	ljmp	PL20	;call to abstracted procedure
  5981  15D4                     l7359:	
  5982  15D4  300B               	movlw	11
  5983  15D5  0261               	subwf	fround@prec,w
  5984  15D6  1C03               	skipc
  5985  15D7  2E28               	goto	l7367
  5986  15D8  3003               	movlw	3
  5987  15D9  00A9               	movwf	?___bmul
  5988  15DA  300A               	movlw	10
  5989  15DB  00A0               	movwf	?___lbmod
  5990  15DC  0861               	movf	fround@prec,w
  5991  15DD  2669               	fcall	___lbmod
  5992  15DE  120A  118A  2455   	fcall	___bmul
      +       160A  118A         
  5993  15E3  3E01               	addlw	low (__npowers_-__stringbase)
  5994  15E4  0084               	movwf	4
  5995  15E5  120A  118A  200F   	fcall	stringdir
      +       160A  118A         
  5996  15EA  00BD               	movwf	?___ftmul
  5997  15EB  120A  118A  200F   	fcall	stringdir
      +       160A  118A         
  5998  15F0  00BE               	movwf	?___ftmul+1
  5999  15F1  120A  118A  200F   	fcall	stringdir
      +       160A  118A         
  6000  15F6  00BF               	movwf	?___ftmul+2
  6001  15F7  3003               	movlw	3
  6002  15F8  00A9               	movwf	?___bmul
  6003  15F9  300A               	movlw	10
  6004  15FA  00A5               	movwf	?___lbdiv
  6005  15FB  0861               	movf	fround@prec,w
  6006  15FC  264E               	fcall	___lbdiv
  6007  15FD  120A  118A  2455   	fcall	___bmul
      +       160A  118A         
  6008  1602  3E1C               	addlw	low ((__npowers_-__stringbase+27))
  6009  1603  0084               	movwf	4
  6010  1604  120A  118A  200F   	fcall	stringdir
      +       160A  118A         
  6011  1609  00C0               	movwf	?___ftmul+3
  6012  160A  120A  118A  200F   	fcall	stringdir
      +       160A  118A         
  6013  160F  00C1               	movwf	?___ftmul+4
  6014  1610  120A  118A  200F   	fcall	stringdir
      +       160A  118A         
  6015  1615  00C2               	movwf	?___ftmul+5
  6016  1616  120A  118A  23E6   	fcall	___ftmul
      +       160A  118A         
  6017  161B  2694  160A  118A   	fcall	PL36	;call to abstracted procedure
  6018  161E  303F               	movlw	63
  6019  161F  01BD               	clrf	?___ftmul
  6020  1620  01BE               	clrf	?___ftmul+1
  6021  1621  268C               	fcall	PL31	;call to abstracted procedure
  6022  1622  120A  118A  23E6   	fcall	___ftmul
      +       160A  118A         
  6023  1627  2E85               	ljmp	PL20	;call to abstracted procedure
  6024  1628                     l7367:	
  6025  1628  303F               	movlw	63
  6026  1629  01BD               	clrf	?___ftmul
  6027  162A  01BE               	clrf	?___ftmul+1
  6028  162B  00BF               	movwf	?___ftmul+2
  6029  162C  3003               	movlw	3
  6030  162D  00A9               	movwf	?___bmul
  6031  162E  0861               	movf	fround@prec,w
  6032  162F  120A  118A  2455   	fcall	___bmul
      +       160A  118A         
  6033  1634  3E01               	addlw	low (__npowers_-__stringbase)
  6034  1635  0084               	movwf	4
  6035  1636  120A  118A  200F   	fcall	stringdir
      +       160A  118A         
  6036  163B  00C0               	movwf	?___ftmul+3
  6037  163C  120A  118A  200F   	fcall	stringdir
      +       160A  118A         
  6038  1641  00C1               	movwf	?___ftmul+4
  6039  1642  120A  118A  200F   	fcall	stringdir
      +       160A  118A         
  6040  1647  00C2               	movwf	?___ftmul+5
  6041  1648  120A  118A  23E6   	fcall	___ftmul
      +       160A  118A         
  6042  164D  2E85               	ljmp	PL20	;call to abstracted procedure
  6043  164E                     __end_of_fround:	
  6044  164E                     __ptext704:	
  6045 ;; =============== function ___lbmod ends ============
  6046                           
  6047                           
  6048 ;; *************** function ___lbdiv *****************
  6049 ;; Defined at:
  6050 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\lbdiv.c"
  6051 ;; Parameters:    Size  Location     Type
  6052 ;;  dividend        1    wreg     unsigned char 
  6053 ;;  divisor         1    5[BANK0 ] unsigned char 
  6054 ;; Auto vars:     Size  Location     Type
  6055 ;;  dividend        1    6[BANK0 ] unsigned char 
  6056 ;;  quotient        1    8[BANK0 ] unsigned char 
  6057 ;;  counter         1    7[BANK0 ] unsigned char 
  6058 ;; Return value:  Size  Location     Type
  6059 ;;                  1    wreg      unsigned char 
  6060 ;; Registers used:
  6061 ;;		wreg, status,2, status,0
  6062 ;; Tracked objects:
  6063 ;;		On entry : 60/0
  6064 ;;		On exit  : 60/0
  6065 ;;		Unchanged: FFF9F/0
  6066 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6067 ;;      Params:         0       1       0       0       0
  6068 ;;      Locals:         0       3       0       0       0
  6069 ;;      Temps:          0       0       0       0       0
  6070 ;;      Totals:         0       4       0       0       0
  6071 ;;Total ram usage:        4 bytes
  6072 ;; Hardware stack levels used:    1
  6073 ;; Hardware stack levels required when called:    2
  6074 ;; This function calls:
  6075 ;;		Nothing
  6076 ;; This function is called by:
  6077 ;;		_fround
  6078 ;; This function uses a non-reentrant model
  6079 ;;
  6080  164E                     ___lbdiv:	
  6081                           
  6082                           ; Regs used in ___lbdiv: [wreg+status,2+status,0]
  6083                           ;___lbdiv@dividend stored from wreg
  6084  164E  00A6               	movwf	___lbdiv@dividend
  6085  164F  01A8               	clrf	___lbdiv@quotient
  6086  1650  0825               	movf	___lbdiv@divisor,w
  6087  1651  1903               	btfsc	3,2
  6088  1652  2E67               	goto	l6785
  6089  1653  01A7               	clrf	___lbdiv@counter
  6090  1654                     l6771:	
  6091  1654  0AA7               	incf	___lbdiv@counter,f
  6092  1655  1BA5               	btfsc	___lbdiv@divisor,7
  6093  1656  2E5A               	goto	l3419
  6094  1657  1003               	clrc
  6095  1658  0DA5               	rlf	___lbdiv@divisor,f
  6096  1659  2E54               	goto	l6771
  6097  165A                     l3419:	
  6098  165A  1003               	clrc
  6099  165B  0DA8               	rlf	___lbdiv@quotient,f
  6100  165C  0825               	movf	___lbdiv@divisor,w
  6101  165D  0226               	subwf	___lbdiv@dividend,w
  6102  165E  1C03               	skipc
  6103  165F  2E64               	goto	L22
  6104  1660  0825               	movf	___lbdiv@divisor,w
  6105  1661  02A6               	subwf	___lbdiv@dividend,f
  6106  1662  1428               	bsf	___lbdiv@quotient,0
  6107  1663  1003               	clrc
  6108  1664                     L22:	
  6109  1664  0CA5               	rrf	___lbdiv@divisor,f
  6110  1665  0BA7               	decfsz	___lbdiv@counter,f
  6111  1666  2E5A               	goto	l3419
  6112  1667                     l6785:	
  6113  1667  0828               	movf	___lbdiv@quotient,w
  6114  1668  0008               	return
  6115  1669                     __end_of___lbdiv:	
  6116  1669                     __ptext703:	
  6117 ;; =============== function ___ftpack ends ============
  6118                           
  6119                           
  6120 ;; *************** function ___lbmod *****************
  6121 ;; Defined at:
  6122 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\lbmod.c"
  6123 ;; Parameters:    Size  Location     Type
  6124 ;;  dividend        1    wreg     unsigned char 
  6125 ;;  divisor         1    0[BANK0 ] unsigned char 
  6126 ;; Auto vars:     Size  Location     Type
  6127 ;;  dividend        1    2[BANK0 ] unsigned char 
  6128 ;;  rem             1    4[BANK0 ] unsigned char 
  6129 ;;  counter         1    3[BANK0 ] unsigned char 
  6130 ;; Return value:  Size  Location     Type
  6131 ;;                  1    wreg      unsigned char 
  6132 ;; Registers used:
  6133 ;;		wreg, status,2, status,0
  6134 ;; Tracked objects:
  6135 ;;		On entry : 60/0
  6136 ;;		On exit  : 60/0
  6137 ;;		Unchanged: FFF9F/0
  6138 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6139 ;;      Params:         0       1       0       0       0
  6140 ;;      Locals:         0       3       0       0       0
  6141 ;;      Temps:          0       1       0       0       0
  6142 ;;      Totals:         0       5       0       0       0
  6143 ;;Total ram usage:        5 bytes
  6144 ;; Hardware stack levels used:    1
  6145 ;; Hardware stack levels required when called:    2
  6146 ;; This function calls:
  6147 ;;		Nothing
  6148 ;; This function is called by:
  6149 ;;		_fround
  6150 ;; This function uses a non-reentrant model
  6151 ;;
  6152  1669                     ___lbmod:	
  6153                           
  6154                           ; Regs used in ___lbmod: [wreg+status,2+status,0]
  6155                           ;___lbmod@dividend stored from wreg
  6156  1669  00A2               	movwf	___lbmod@dividend
  6157  166A  3008               	movlw	8
  6158  166B  00A3               	movwf	___lbmod@counter
  6159  166C  01A4               	clrf	___lbmod@rem
  6160  166D                     l6793:	
  6161  166D  0822               	movf	___lbmod@dividend,w
  6162  166E  00A1               	movwf	??___lbmod
  6163  166F  3007               	movlw	7
  6164  1670  1003               	clrc
  6165  1671                     L21:	
  6166  1671  0CA1               	rrf	??___lbmod,f
  6167  1672  3EFF               	addlw	-1
  6168  1673  1003               	clrc
  6169  1674  1D03               	skipz
  6170  1675  2E71               	goto	L21
  6171  1676  0D24               	rlf	___lbmod@rem,w
  6172  1677  0421               	iorwf	??___lbmod,w
  6173  1678  00A4               	movwf	___lbmod@rem
  6174  1679  1003               	clrc
  6175  167A  0DA2               	rlf	___lbmod@dividend,f
  6176  167B  0820               	movf	___lbmod@divisor,w
  6177  167C  0224               	subwf	___lbmod@rem,w
  6178  167D  1C03               	skipc
  6179  167E  2E81               	goto	l6801
  6180  167F  0820               	movf	___lbmod@divisor,w
  6181  1680  02A4               	subwf	___lbmod@rem,f
  6182  1681                     l6801:	
  6183  1681  0BA3               	decfsz	___lbmod@counter,f
  6184  1682  2E6D               	goto	l6793
  6185  1683  0824               	movf	___lbmod@rem,w
  6186  1684  0008               	return
  6187  1685                     __end_of___lbmod:	
  6188  1685                     PL20:	
  6189  1685  083D               	movf	?___ftmul,w
  6190  1686  00D8               	movwf	?_fround
  6191  1687  083E               	movf	?___ftmul+1,w
  6192  1688  00D9               	movwf	?_fround+1
  6193  1689  083F               	movf	?___ftmul+2,w
  6194  168A  00DA               	movwf	?_fround+2
  6195  168B  0008               	return
  6196  168C                     PL31:	
  6197  168C  00BF               	movwf	?___ftmul+2
  6198  168D  085E               	movf	_fround$4215,w
  6199  168E  00C0               	movwf	?___ftmul+3
  6200  168F  085F               	movf	_fround$4215+1,w
  6201  1690  00C1               	movwf	?___ftmul+4
  6202  1691  0860               	movf	_fround$4215+2,w
  6203  1692  00C2               	movwf	?___ftmul+5
  6204  1693  0008               	return
  6205  1694                     PL36:	
  6206  1694  083D               	movf	?___ftmul,w
  6207  1695  00DE               	movwf	_fround$4215
  6208  1696  083E               	movf	?___ftmul+1,w
  6209  1697  00DF               	movwf	_fround$4215+1
  6210  1698  083F               	movf	?___ftmul+2,w
  6211  1699  00E0               	movwf	_fround$4215+2
  6212  169A  0008               	return
  6213                           
  6214                           	psect	text686
  6215  0109                     __ptext686:	
  6216 ;; =============== function _lcd_init ends ============
  6217                           
  6218                           
  6219 ;; *************** function ___lltoft *****************
  6220 ;; Defined at:
  6221 ;;		line 36 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\lltoft.c"
  6222 ;; Parameters:    Size  Location     Type
  6223 ;;  c               4    8[BANK0 ] unsigned long 
  6224 ;; Auto vars:     Size  Location     Type
  6225 ;;  exp             1   12[BANK0 ] unsigned char 
  6226 ;; Return value:  Size  Location     Type
  6227 ;;                  3    8[BANK0 ] float 
  6228 ;; Registers used:
  6229 ;;		wreg, status,2, status,0, pclath, cstack
  6230 ;; Tracked objects:
  6231 ;;		On entry : 60/0
  6232 ;;		On exit  : 60/0
  6233 ;;		Unchanged: FFF9F/0
  6234 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6235 ;;      Params:         0       4       0       0       0
  6236 ;;      Locals:         0       1       0       0       0
  6237 ;;      Temps:          0       0       0       0       0
  6238 ;;      Totals:         0       5       0       0       0
  6239 ;;Total ram usage:        5 bytes
  6240 ;; Hardware stack levels used:    1
  6241 ;; Hardware stack levels required when called:    3
  6242 ;; This function calls:
  6243 ;;		___ftpack
  6244 ;; This function is called by:
  6245 ;;		__doprnt
  6246 ;; This function uses a non-reentrant model
  6247 ;;
  6248  0109                     ___lltoft:	
  6249                           
  6250                           ; Regs used in ___lltoft: [wreg+status,2+status,0+pclath+cstack]
  6251  0109  308E               	movlw	142
  6252  010A  00AC               	movwf	___lltoft@exp
  6253  010B                     l7293:	
  6254  010B  30FF               	movlw	255
  6255  010C  052B               	andwf	___lltoft@c+3,w
  6256  010D  1903               	btfsc	3,2
  6257  010E  2916               	goto	l7295
  6258  010F  1003               	clrc
  6259  0110  0CAB               	rrf	___lltoft@c+3,f
  6260  0111  0CAA               	rrf	___lltoft@c+2,f
  6261  0112  0CA9               	rrf	___lltoft@c+1,f
  6262  0113  0CA8               	rrf	___lltoft@c,f
  6263  0114  0AAC               	incf	___lltoft@exp,f
  6264  0115  290B               	goto	l7293
  6265  0116                     l7295:	
  6266  0116  0828               	movf	___lltoft@c,w
  6267  0117  00A0               	movwf	?___ftpack
  6268  0118  0829               	movf	___lltoft@c+1,w
  6269  0119  00A1               	movwf	?___ftpack+1
  6270  011A  082A               	movf	___lltoft@c+2,w
  6271  011B  00A2               	movwf	?___ftpack+2
  6272  011C  082C               	movf	___lltoft@exp,w
  6273  011D  00A3               	movwf	?___ftpack+3
  6274  011E  01A4               	clrf	?___ftpack+4
  6275  011F  2463               	fcall	___ftpack
  6276  0120  0820               	movf	?___ftpack,w
  6277  0121  00A8               	movwf	?___lltoft
  6278  0122  0821               	movf	?___ftpack+1,w
  6279  0123  00A9               	movwf	?___lltoft+1
  6280  0124  0822               	movf	?___ftpack+2,w
  6281  0125  00AA               	movwf	?___lltoft+2
  6282  0126  0008               	return
  6283  0127                     __end_of___lltoft:	
  6284  0127                     __ptext692:	
  6285 ;; =============== function _send_string ends ============
  6286                           
  6287                           
  6288 ;; *************** function _pwm_10bit *****************
  6289 ;; Defined at:
  6290 ;;		line 95 in file "C:\Users\DELL\Desktop\vxl\mp\nhapdulieu.c"
  6291 ;; Parameters:    Size  Location     Type
  6292 ;;  data_pwm        2   14[BANK0 ] int 
  6293 ;; Auto vars:     Size  Location     Type
  6294 ;;		None
  6295 ;; Return value:  Size  Location     Type
  6296 ;;		None               void
  6297 ;; Registers used:
  6298 ;;		wreg, status,2, status,0, pclath, cstack
  6299 ;; Tracked objects:
  6300 ;;		On entry : 60/0
  6301 ;;		On exit  : 60/0
  6302 ;;		Unchanged: FFF9F/0
  6303 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6304 ;;      Params:         0       2       0       0       0
  6305 ;;      Locals:         0       0       0       0       0
  6306 ;;      Temps:          0       0       0       0       0
  6307 ;;      Totals:         0       2       0       0       0
  6308 ;;Total ram usage:        2 bytes
  6309 ;; Hardware stack levels used:    1
  6310 ;; Hardware stack levels required when called:    3
  6311 ;; This function calls:
  6312 ;;		___awdiv
  6313 ;; This function is called by:
  6314 ;;		_main
  6315 ;; This function uses a non-reentrant model
  6316 ;;
  6317  0127                     _pwm_10bit:	
  6318                           
  6319                           ;nhapdulieu.c: 96: CCPR1L = data_pwm/4;
  6320                           
  6321                           ; Regs used in _pwm_10bit: [wreg+status,2+status,0+pclath+cstack]
  6322  0127  3004               	movlw	4
  6323  0128  00A6               	movwf	?___awdiv
  6324  0129  01A7               	clrf	?___awdiv+1
  6325  012A  082F               	movf	pwm_10bit@data_pwm+1,w
  6326  012B  00A9               	movwf	?___awdiv+3
  6327  012C  082E               	movf	pwm_10bit@data_pwm,w
  6328  012D  00A8               	movwf	?___awdiv+2
  6329  012E  2364               	fcall	___awdiv
  6330  012F  0826               	movf	?___awdiv,w
  6331  0130  0095               	movwf	21	;volatile
  6332                           
  6333                           ;nhapdulieu.c: 97: DC1B1 = DC1B0 = 0;
  6334  0131  1217               	bcf	23,4
  6335  0132  1297               	bcf	23,5
  6336                           
  6337                           ;nhapdulieu.c: 98: if((data_pwm &2 ) ==1) DC1B1 = 1;
  6338  0133  082E               	movf	pwm_10bit@data_pwm,w
  6339  0134  3902               	andlw	2
  6340  0135  3A01               	xorlw	1
  6341  0136  1903               	btfsc	3,2
  6342  0137  1697               	bsf	23,5
  6343                           
  6344                           ;nhapdulieu.c: 99: if((data_pwm &1 ) ==1) DC1B0 = 1;
  6345  0138  182E               	btfsc	pwm_10bit@data_pwm,0
  6346  0139  1617               	bsf	23,4
  6347  013A  0008               	return
  6348  013B                     __end_of_pwm_10bit:	
  6349  013B                     __ptext687:	
  6350 ;; =============== function ___lltoft ends ============
  6351                           
  6352                           
  6353 ;; *************** function ___altoft *****************
  6354 ;; Defined at:
  6355 ;;		line 43 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\altoft.c"
  6356 ;; Parameters:    Size  Location     Type
  6357 ;;  c               4    8[BANK0 ] long 
  6358 ;; Auto vars:     Size  Location     Type
  6359 ;;  sign            1   13[BANK0 ] unsigned char 
  6360 ;;  exp             1   12[BANK0 ] unsigned char 
  6361 ;; Return value:  Size  Location     Type
  6362 ;;                  3    8[BANK0 ] float 
  6363 ;; Registers used:
  6364 ;;		wreg, status,2, status,0, pclath, cstack
  6365 ;; Tracked objects:
  6366 ;;		On entry : 60/0
  6367 ;;		On exit  : 60/0
  6368 ;;		Unchanged: FFF9F/0
  6369 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6370 ;;      Params:         0       4       0       0       0
  6371 ;;      Locals:         0       2       0       0       0
  6372 ;;      Temps:          0       0       0       0       0
  6373 ;;      Totals:         0       6       0       0       0
  6374 ;;Total ram usage:        6 bytes
  6375 ;; Hardware stack levels used:    1
  6376 ;; Hardware stack levels required when called:    3
  6377 ;; This function calls:
  6378 ;;		___ftpack
  6379 ;; This function is called by:
  6380 ;;		_main
  6381 ;; This function uses a non-reentrant model
  6382 ;;
  6383  013B                     ___altoft:	
  6384  013B  308E               	movlw	142
  6385                           
  6386                           ; Regs used in ___altoft: [wreg+status,2+status,0+pclath+cstack]
  6387  013C  01AD               	clrf	___altoft@sign
  6388  013D  00AC               	movwf	___altoft@exp
  6389  013E  1FAB               	btfss	___altoft@c+3,7
  6390  013F  294D               	goto	l7283
  6391  0140  09A8               	comf	___altoft@c,f
  6392  0141  09A9               	comf	___altoft@c+1,f
  6393  0142  09AA               	comf	___altoft@c+2,f
  6394  0143  09AB               	comf	___altoft@c+3,f
  6395  0144  0AA8               	incf	___altoft@c,f
  6396  0145  1903               	skipnz
  6397  0146  0AA9               	incf	___altoft@c+1,f
  6398  0147  1903               	skipnz
  6399  0148  0AAA               	incf	___altoft@c+2,f
  6400  0149  1903               	skipnz
  6401  014A  0AAB               	incf	___altoft@c+3,f
  6402  014B  01AD               	clrf	___altoft@sign
  6403  014C  0AAD               	incf	___altoft@sign,f
  6404  014D                     l7283:	
  6405  014D  30FF               	movlw	255
  6406  014E  052B               	andwf	___altoft@c+3,w
  6407  014F  1903               	btfsc	3,2
  6408  0150  2958               	goto	l7285
  6409  0151  1003               	clrc
  6410  0152  0CAB               	rrf	___altoft@c+3,f
  6411  0153  0CAA               	rrf	___altoft@c+2,f
  6412  0154  0CA9               	rrf	___altoft@c+1,f
  6413  0155  0CA8               	rrf	___altoft@c,f
  6414  0156  0AAC               	incf	___altoft@exp,f
  6415  0157  294D               	goto	l7283
  6416  0158                     l7285:	
  6417  0158  0828               	movf	___altoft@c,w
  6418  0159  00A0               	movwf	?___ftpack
  6419  015A  0829               	movf	___altoft@c+1,w
  6420  015B  00A1               	movwf	?___ftpack+1
  6421  015C  082A               	movf	___altoft@c+2,w
  6422  015D  00A2               	movwf	?___ftpack+2
  6423  015E  082C               	movf	___altoft@exp,w
  6424  015F  00A3               	movwf	?___ftpack+3
  6425  0160  082D               	movf	___altoft@sign,w
  6426  0161  00A4               	movwf	?___ftpack+4
  6427  0162  2463               	fcall	___ftpack
  6428  0163  0820               	movf	?___ftpack,w
  6429  0164  00A8               	movwf	?___altoft
  6430  0165  0821               	movf	?___ftpack+1,w
  6431  0166  00A9               	movwf	?___altoft+1
  6432  0167  0822               	movf	?___ftpack+2,w
  6433  0168  00AA               	movwf	?___altoft+2
  6434  0169  0008               	return
  6435  016A                     __end_of___altoft:	
  6436  016A                     __ptext689:	
  6437 ;; =============== function ___ftmul ends ============
  6438                           
  6439                           
  6440 ;; *************** function ___ftdiv *****************
  6441 ;; Defined at:
  6442 ;;		line 50 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\ftdiv.c"
  6443 ;; Parameters:    Size  Location     Type
  6444 ;;  f2              3   14[BANK0 ] float 
  6445 ;;  f1              3   17[BANK0 ] float 
  6446 ;; Auto vars:     Size  Location     Type
  6447 ;;  f3              3   24[BANK0 ] float 
  6448 ;;  sign            1   28[BANK0 ] unsigned char 
  6449 ;;  exp             1   27[BANK0 ] unsigned char 
  6450 ;;  cntr            1   23[BANK0 ] unsigned char 
  6451 ;; Return value:  Size  Location     Type
  6452 ;;                  3   14[BANK0 ] float 
  6453 ;; Registers used:
  6454 ;;		wreg, status,2, status,0, pclath, cstack
  6455 ;; Tracked objects:
  6456 ;;		On entry : 60/0
  6457 ;;		On exit  : 60/0
  6458 ;;		Unchanged: FFF9F/0
  6459 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6460 ;;      Params:         0       6       0       0       0
  6461 ;;      Locals:         0       6       0       0       0
  6462 ;;      Temps:          0       3       0       0       0
  6463 ;;      Totals:         0      15       0       0       0
  6464 ;;Total ram usage:       15 bytes
  6465 ;; Hardware stack levels used:    1
  6466 ;; Hardware stack levels required when called:    3
  6467 ;; This function calls:
  6468 ;;		___ftpack
  6469 ;; This function is called by:
  6470 ;;		_main
  6471 ;; This function uses a non-reentrant model
  6472 ;;
  6473  016A                     ___ftdiv:	
  6474                           
  6475                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  6476  016A  0831               	movf	___ftdiv@f1,w
  6477  016B  00B4               	movwf	??___ftdiv
  6478  016C  0832               	movf	___ftdiv@f1+1,w
  6479  016D  00B5               	movwf	??___ftdiv+1
  6480  016E  0833               	movf	___ftdiv@f1+2,w
  6481  016F  00B6               	movwf	??___ftdiv+2
  6482  0170  1003               	clrc
  6483  0171  0D35               	rlf	??___ftdiv+1,w
  6484  0172  0D36               	rlf	??___ftdiv+2,w
  6485  0173  00BB               	movwf	___ftdiv@exp
  6486  0174  08BB               	movf	___ftdiv@exp,f
  6487  0175  1D03               	skipz
  6488  0176  297B               	goto	l7179
  6489  0177  01AE               	clrf	?___ftdiv
  6490  0178  01AF               	clrf	?___ftdiv+1
  6491  0179  01B0               	clrf	?___ftdiv+2
  6492  017A  0008               	return
  6493  017B                     l7179:	
  6494  017B  082E               	movf	___ftdiv@f2,w
  6495  017C  00B4               	movwf	??___ftdiv
  6496  017D  082F               	movf	___ftdiv@f2+1,w
  6497  017E  00B5               	movwf	??___ftdiv+1
  6498  017F  0830               	movf	___ftdiv@f2+2,w
  6499  0180  00B6               	movwf	??___ftdiv+2
  6500  0181  1003               	clrc
  6501  0182  0D35               	rlf	??___ftdiv+1,w
  6502  0183  0D36               	rlf	??___ftdiv+2,w
  6503  0184  00BC               	movwf	___ftdiv@sign
  6504  0185  08BC               	movf	___ftdiv@sign,f
  6505  0186  1D03               	skipz
  6506  0187  298C               	goto	l3479
  6507  0188  01AE               	clrf	?___ftdiv
  6508  0189  01AF               	clrf	?___ftdiv+1
  6509  018A  01B0               	clrf	?___ftdiv+2
  6510  018B  0008               	return
  6511  018C                     l3479:	
  6512  018C  3089               	movlw	137
  6513  018D  01B8               	clrf	___ftdiv@f3
  6514  018E  01B9               	clrf	___ftdiv@f3+1
  6515  018F  01BA               	clrf	___ftdiv@f3+2
  6516  0190  073C               	addwf	___ftdiv@sign,w
  6517  0191  00B4               	movwf	??___ftdiv
  6518  0192  02BB               	subwf	___ftdiv@exp,f
  6519  0193  0833               	movf	___ftdiv@f1+2,w
  6520  0194  00BC               	movwf	___ftdiv@sign
  6521  0195  0830               	movf	___ftdiv@f2+2,w
  6522  0196  06BC               	xorwf	___ftdiv@sign,f
  6523  0197  3080               	movlw	128
  6524  0198  05BC               	andwf	___ftdiv@sign,f
  6525  0199  3018               	movlw	24
  6526  019A  17B2               	bsf	___ftdiv@f1+1,7
  6527  019B  01B3               	clrf	___ftdiv@f1+2
  6528  019C  17AF               	bsf	___ftdiv@f2+1,7
  6529  019D  01B0               	clrf	___ftdiv@f2+2
  6530  019E  00B7               	movwf	___ftdiv@cntr
  6531  019F                     l7203:	
  6532  019F  1003               	clrc
  6533  01A0  0DB8               	rlf	___ftdiv@f3,f
  6534  01A1  0DB9               	rlf	___ftdiv@f3+1,f
  6535  01A2  0DBA               	rlf	___ftdiv@f3+2,f
  6536  01A3  0830               	movf	___ftdiv@f2+2,w
  6537  01A4  0233               	subwf	___ftdiv@f1+2,w
  6538  01A5  1D03               	skipz
  6539  01A6  29AD               	goto	u3525
  6540  01A7  082F               	movf	___ftdiv@f2+1,w
  6541  01A8  0232               	subwf	___ftdiv@f1+1,w
  6542  01A9  1D03               	skipz
  6543  01AA  29AD               	goto	u3525
  6544  01AB  082E               	movf	___ftdiv@f2,w
  6545  01AC  0231               	subwf	___ftdiv@f1,w
  6546  01AD                     u3525:	
  6547  01AD  1C03               	skipc
  6548  01AE  29BB               	goto	L10
  6549  01AF  082E               	movf	___ftdiv@f2,w
  6550  01B0  02B1               	subwf	___ftdiv@f1,f
  6551  01B1  082F               	movf	___ftdiv@f2+1,w
  6552  01B2  1C03               	skipc
  6553  01B3  0F2F               	incfsz	___ftdiv@f2+1,w
  6554  01B4  02B2               	subwf	___ftdiv@f1+1,f
  6555  01B5  0830               	movf	___ftdiv@f2+2,w
  6556  01B6  1C03               	skipc
  6557  01B7  0A30               	incf	___ftdiv@f2+2,w
  6558  01B8  02B3               	subwf	___ftdiv@f1+2,f
  6559  01B9  1438               	bsf	___ftdiv@f3,0
  6560  01BA  1003               	clrc
  6561  01BB                     L10:	
  6562  01BB  0DB1               	rlf	___ftdiv@f1,f
  6563  01BC  0DB2               	rlf	___ftdiv@f1+1,f
  6564  01BD  0DB3               	rlf	___ftdiv@f1+2,f
  6565  01BE  0BB7               	decfsz	___ftdiv@cntr,f
  6566  01BF  299F               	goto	l7203
  6567  01C0  0838               	movf	___ftdiv@f3,w
  6568  01C1  00A0               	movwf	?___ftpack
  6569  01C2  0839               	movf	___ftdiv@f3+1,w
  6570  01C3  00A1               	movwf	?___ftpack+1
  6571  01C4  083A               	movf	___ftdiv@f3+2,w
  6572  01C5  00A2               	movwf	?___ftpack+2
  6573  01C6  083B               	movf	___ftdiv@exp,w
  6574  01C7  00A3               	movwf	?___ftpack+3
  6575  01C8  083C               	movf	___ftdiv@sign,w
  6576  01C9  00A4               	movwf	?___ftpack+4
  6577  01CA  2463               	fcall	___ftpack
  6578  01CB  0820               	movf	?___ftpack,w
  6579  01CC  00AE               	movwf	?___ftdiv
  6580  01CD  0821               	movf	?___ftpack+1,w
  6581  01CE  00AF               	movwf	?___ftdiv+1
  6582  01CF  0822               	movf	?___ftpack+2,w
  6583  01D0  00B0               	movwf	?___ftdiv+2
  6584  01D1  0008               	return
  6585  01D2                     __end_of___ftdiv:	
  6586  01D2                     __ptext682:	
  6587 ;; =============== function ___ftsub ends ============
  6588                           
  6589                           
  6590 ;; *************** function _scale *****************
  6591 ;; Defined at:
  6592 ;;		line 422 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\lib\doprnt.c"
  6593 ;; Parameters:    Size  Location     Type
  6594 ;;  scl             1    wreg     char 
  6595 ;; Auto vars:     Size  Location     Type
  6596 ;;  scl             1   54[BANK0 ] char 
  6597 ;; Return value:  Size  Location     Type
  6598 ;;                  3   44[BANK0 ] char 
  6599 ;; Registers used:
  6600 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6601 ;; Tracked objects:
  6602 ;;		On entry : 60/20
  6603 ;;		On exit  : 60/0
  6604 ;;		Unchanged: FFF9F/0
  6605 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6606 ;;      Params:         0       3       0       0       0
  6607 ;;      Locals:         0       4       0       0       0
  6608 ;;      Temps:          0       4       0       0       0
  6609 ;;      Totals:         0      11       0       0       0
  6610 ;;Total ram usage:       11 bytes
  6611 ;; Hardware stack levels used:    1
  6612 ;; Hardware stack levels required when called:    4
  6613 ;; This function calls:
  6614 ;;		___awmod
  6615 ;;		___awdiv
  6616 ;;		___ftmul
  6617 ;;		___bmul
  6618 ;; This function is called by:
  6619 ;;		__doprnt
  6620 ;; This function uses a non-reentrant model
  6621 ;;
  6622  01D2                     _scale:	
  6623                           
  6624                           ; Regs used in _scale: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6625                           ;scale@scl stored from wreg
  6626  01D2  1283               	bcf	3,5	;RP0=0, select bank0
  6627  01D3  00D6               	movwf	scale@scl
  6628  01D4  1FD6               	btfss	scale@scl,7
  6629  01D5  2A9E               	goto	l7393
  6630  01D6  09D6               	comf	scale@scl,f
  6631  01D7  0AD6               	incf	scale@scl,f
  6632  01D8  0856               	movf	scale@scl,w
  6633  01D9  3A80               	xorlw	128
  6634  01DA  3E12               	addlw	-238
  6635  01DB  1C03               	skipc
  6636  01DC  2A42               	goto	l7383
  6637  01DD  300A               	movlw	10
  6638  01DE  24C5  120A  118A   	fcall	PL18	;call to abstracted procedure
  6639  01E1  23A9  120A  118A   	fcall	___awmod
  6640  01E4  0821               	movf	?___awmod+1,w
  6641  01E5  00A9               	movwf	?___awdiv+3
  6642  01E6  0820               	movf	?___awmod,w
  6643  01E7  00A8               	movwf	?___awdiv+2
  6644  01E8  2364  120A  118A   	fcall	___awdiv
  6645  01EB  24F2               	fcall	PL30	;call to abstracted procedure
  6646  01EC  3E1C               	addlw	low ((__npowers_-__stringbase+27))
  6647  01ED  0084               	movwf	4
  6648  01EE  120A  118A  200F   	fcall	stringdir
      +       120A  118A         
  6649  01F3  00BD               	movwf	?___ftmul
  6650  01F4  120A  118A  200F   	fcall	stringdir
      +       120A  118A         
  6651  01F9  00BE               	movwf	?___ftmul+1
  6652  01FA  120A  118A  200F   	fcall	stringdir
      +       120A  118A         
  6653  01FF  24DA  120A  118A   	fcall	PL27	;call to abstracted procedure
  6654  0202  1BA8               	btfsc	?___awdiv+2,7
  6655  0203  03A9               	decf	?___awdiv+3,f
  6656  0204  2364  120A  118A   	fcall	___awdiv
  6657  0207  24A9               	fcall	PL13	;call to abstracted procedure
  6658  0208  3E37               	addlw	low ((__npowers_-__stringbase+54))
  6659  0209  0084               	movwf	4
  6660  020A  120A  118A  200F   	fcall	stringdir
      +       120A  118A         
  6661  020F  00C0               	movwf	?___ftmul+3
  6662  0210  120A  118A  200F   	fcall	stringdir
      +       120A  118A         
  6663  0215  00C1               	movwf	?___ftmul+4
  6664  0216  120A  118A  200F   	fcall	stringdir
      +       120A  118A         
  6665  021B  00C2               	movwf	?___ftmul+5
  6666  021C  23E6  120A  118A   	fcall	___ftmul
  6667  021F  24B1  120A  118A   	fcall	PL14	;call to abstracted procedure
  6668  0222  1BA2               	btfsc	?___awmod+2,7
  6669  0223  03A3               	decf	?___awmod+3,f
  6670  0224  23A9  120A  118A   	fcall	___awmod
  6671  0227  24A1               	fcall	PL12	;call to abstracted procedure
  6672  0228  3E01               	addlw	low (__npowers_-__stringbase)
  6673  0229  0084               	movwf	4
  6674  022A  120A  118A  200F   	fcall	stringdir
      +       120A  118A         
  6675  022F  00BD               	movwf	?___ftmul
  6676  0230  120A  118A  200F   	fcall	stringdir
      +       120A  118A         
  6677  0235  00BE               	movwf	?___ftmul+1
  6678  0236  120A  118A  200F   	fcall	stringdir
      +       120A  118A         
  6679  023B  24E2  120A  118A   	fcall	PL28	;call to abstracted procedure
  6680  023E  23E6  120A  118A   	fcall	___ftmul
  6681  0241  2CBE               	ljmp	PL15	;call to abstracted procedure
  6682  0242                     l7383:	
  6683  0242  0856               	movf	scale@scl,w
  6684  0243  3A80               	xorlw	128
  6685  0244  3E75               	addlw	-139
  6686  0245  1C03               	skipc
  6687  0246  2A87               	goto	l7389
  6688  0247  300A               	movlw	10
  6689  0248  00A0               	movwf	?___awmod
  6690  0249  01A1               	clrf	?___awmod+1
  6691  024A  0856               	movf	scale@scl,w
  6692  024B  00A2               	movwf	?___awmod+2
  6693  024C  01A3               	clrf	?___awmod+3
  6694  024D  1BA2               	btfsc	?___awmod+2,7
  6695  024E  03A3               	decf	?___awmod+3,f
  6696  024F  23A9  120A  118A   	fcall	___awmod
  6697  0252  24A1               	fcall	PL12	;call to abstracted procedure
  6698  0253  3E01               	addlw	low (__npowers_-__stringbase)
  6699  0254  0084               	movwf	4
  6700  0255  120A  118A  200F   	fcall	stringdir
      +       120A  118A         
  6701  025A  00BD               	movwf	?___ftmul
  6702  025B  120A  118A  200F   	fcall	stringdir
      +       120A  118A         
  6703  0260  00BE               	movwf	?___ftmul+1
  6704  0261  120A  118A  200F   	fcall	stringdir
      +       120A  118A         
  6705  0266  24EA  120A  118A   	fcall	PL29	;call to abstracted procedure
  6706  0269  1BA8               	btfsc	?___awdiv+2,7
  6707  026A  03A9               	decf	?___awdiv+3,f
  6708  026B  2364  120A  118A   	fcall	___awdiv
  6709  026E  24A9               	fcall	PL13	;call to abstracted procedure
  6710  026F  3E1C               	addlw	low ((__npowers_-__stringbase+27))
  6711  0270  0084               	movwf	4
  6712  0271  120A  118A  200F   	fcall	stringdir
      +       120A  118A         
  6713  0276  00C0               	movwf	?___ftmul+3
  6714  0277  120A  118A  200F   	fcall	stringdir
      +       120A  118A         
  6715  027C  00C1               	movwf	?___ftmul+4
  6716  027D  120A  118A  200F   	fcall	stringdir
      +       120A  118A         
  6717  0282  00C2               	movwf	?___ftmul+5
  6718  0283  23E6  120A  118A   	fcall	___ftmul
  6719  0286  2CBE               	ljmp	PL15	;call to abstracted procedure
  6720  0287                     l7389:	
  6721  0287  3003               	movlw	3
  6722  0288  00A9               	movwf	?___bmul
  6723  0289  0856               	movf	scale@scl,w
  6724  028A  2455               	fcall	___bmul
  6725  028B  3E01               	addlw	low (__npowers_-__stringbase)
  6726  028C  0084               	movwf	4
  6727  028D  120A  118A  200F   	fcall	stringdir
      +       120A  118A         
  6728  0292  00CC               	movwf	?_scale
  6729  0293  120A  118A  200F   	fcall	stringdir
      +       120A  118A         
  6730  0298  00CD               	movwf	?_scale+1
  6731  0299  120A  118A  200F   	fcall	stringdir
  6732  029C  00CE               	movwf	?_scale+2
  6733  029D  0008               	return
  6734  029E                     l7393:	
  6735  029E  0856               	movf	scale@scl,w
  6736  029F  3A80               	xorlw	128
  6737  02A0  3E12               	addlw	-238
  6738  02A1  1C03               	skipc
  6739  02A2  2B08               	goto	l7401
  6740  02A3  300A               	movlw	10
  6741  02A4  24C5  120A  118A   	fcall	PL18	;call to abstracted procedure
  6742  02A7  23A9  120A  118A   	fcall	___awmod
  6743  02AA  0821               	movf	?___awmod+1,w
  6744  02AB  00A9               	movwf	?___awdiv+3
  6745  02AC  0820               	movf	?___awmod,w
  6746  02AD  00A8               	movwf	?___awdiv+2
  6747  02AE  2364  120A  118A   	fcall	___awdiv
  6748  02B1  24F2               	fcall	PL30	;call to abstracted procedure
  6749  02B2  3E43               	addlw	low ((__powers_-__stringbase+27))
  6750  02B3  0084               	movwf	4
  6751  02B4  120A  118A  200F   	fcall	stringdir
      +       120A  118A         
  6752  02B9  00BD               	movwf	?___ftmul
  6753  02BA  120A  118A  200F   	fcall	stringdir
      +       120A  118A         
  6754  02BF  00BE               	movwf	?___ftmul+1
  6755  02C0  120A  118A  200F   	fcall	stringdir
      +       120A  118A         
  6756  02C5  24DA  120A  118A   	fcall	PL27	;call to abstracted procedure
  6757  02C8  1BA8               	btfsc	?___awdiv+2,7
  6758  02C9  03A9               	decf	?___awdiv+3,f
  6759  02CA  2364  120A  118A   	fcall	___awdiv
  6760  02CD  24A9               	fcall	PL13	;call to abstracted procedure
  6761  02CE  3E5E               	addlw	low ((__powers_-__stringbase+54))
  6762  02CF  0084               	movwf	4
  6763  02D0  120A  118A  200F   	fcall	stringdir
      +       120A  118A         
  6764  02D5  00C0               	movwf	?___ftmul+3
  6765  02D6  120A  118A  200F   	fcall	stringdir
      +       120A  118A         
  6766  02DB  00C1               	movwf	?___ftmul+4
  6767  02DC  120A  118A  200F   	fcall	stringdir
      +       120A  118A         
  6768  02E1  00C2               	movwf	?___ftmul+5
  6769  02E2  23E6  120A  118A   	fcall	___ftmul
  6770  02E5  24B1  120A  118A   	fcall	PL14	;call to abstracted procedure
  6771  02E8  1BA2               	btfsc	?___awmod+2,7
  6772  02E9  03A3               	decf	?___awmod+3,f
  6773  02EA  23A9  120A  118A   	fcall	___awmod
  6774  02ED  24A1               	fcall	PL12	;call to abstracted procedure
  6775  02EE  3E28               	addlw	low (__powers_-__stringbase)
  6776  02EF  0084               	movwf	4
  6777  02F0  120A  118A  200F   	fcall	stringdir
      +       120A  118A         
  6778  02F5  00BD               	movwf	?___ftmul
  6779  02F6  120A  118A  200F   	fcall	stringdir
      +       120A  118A         
  6780  02FB  00BE               	movwf	?___ftmul+1
  6781  02FC  120A  118A  200F   	fcall	stringdir
      +       120A  118A         
  6782  0301  24E2  120A  118A   	fcall	PL28	;call to abstracted procedure
  6783  0304  23E6  120A  118A   	fcall	___ftmul
  6784  0307  2CBE               	ljmp	PL15	;call to abstracted procedure
  6785  0308                     l7401:	
  6786  0308  0856               	movf	scale@scl,w
  6787  0309  3A80               	xorlw	128
  6788  030A  3E75               	addlw	-139
  6789  030B  1C03               	skipc
  6790  030C  2B4D               	goto	l7407
  6791  030D  300A               	movlw	10
  6792  030E  00A0               	movwf	?___awmod
  6793  030F  01A1               	clrf	?___awmod+1
  6794  0310  0856               	movf	scale@scl,w
  6795  0311  00A2               	movwf	?___awmod+2
  6796  0312  01A3               	clrf	?___awmod+3
  6797  0313  1BA2               	btfsc	?___awmod+2,7
  6798  0314  03A3               	decf	?___awmod+3,f
  6799  0315  23A9  120A  118A   	fcall	___awmod
  6800  0318  24A1               	fcall	PL12	;call to abstracted procedure
  6801  0319  3E28               	addlw	low (__powers_-__stringbase)
  6802  031A  0084               	movwf	4
  6803  031B  120A  118A  200F   	fcall	stringdir
      +       120A  118A         
  6804  0320  00BD               	movwf	?___ftmul
  6805  0321  120A  118A  200F   	fcall	stringdir
      +       120A  118A         
  6806  0326  00BE               	movwf	?___ftmul+1
  6807  0327  120A  118A  200F   	fcall	stringdir
      +       120A  118A         
  6808  032C  24EA  120A  118A   	fcall	PL29	;call to abstracted procedure
  6809  032F  1BA8               	btfsc	?___awdiv+2,7
  6810  0330  03A9               	decf	?___awdiv+3,f
  6811  0331  2364  120A  118A   	fcall	___awdiv
  6812  0334  24A9               	fcall	PL13	;call to abstracted procedure
  6813  0335  3E43               	addlw	low ((__powers_-__stringbase+27))
  6814  0336  0084               	movwf	4
  6815  0337  120A  118A  200F   	fcall	stringdir
      +       120A  118A         
  6816  033C  00C0               	movwf	?___ftmul+3
  6817  033D  120A  118A  200F   	fcall	stringdir
      +       120A  118A         
  6818  0342  00C1               	movwf	?___ftmul+4
  6819  0343  120A  118A  200F   	fcall	stringdir
      +       120A  118A         
  6820  0348  00C2               	movwf	?___ftmul+5
  6821  0349  23E6  120A  118A   	fcall	___ftmul
  6822  034C  2CBE               	ljmp	PL15	;call to abstracted procedure
  6823  034D                     l7407:	
  6824  034D  3003               	movlw	3
  6825  034E  00A9               	movwf	?___bmul
  6826  034F  0856               	movf	scale@scl,w
  6827  0350  2455               	fcall	___bmul
  6828  0351  3E28               	addlw	low (__powers_-__stringbase)
  6829  0352  0084               	movwf	4
  6830  0353  120A  118A  200F   	fcall	stringdir
      +       120A  118A         
  6831  0358  00CC               	movwf	?_scale
  6832  0359  120A  118A  200F   	fcall	stringdir
      +       120A  118A         
  6833  035E  00CD               	movwf	?_scale+1
  6834  035F  120A  118A  200F   	fcall	stringdir
  6835  0362  00CE               	movwf	?_scale+2
  6836  0363  0008               	return
  6837  0364                     __end_of_scale:	
  6838  0364                     __ptext700:	
  6839 ;; =============== function ___llmod ends ============
  6840                           
  6841                           
  6842 ;; *************** function ___awdiv *****************
  6843 ;; Defined at:
  6844 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\awdiv.c"
  6845 ;; Parameters:    Size  Location     Type
  6846 ;;  divisor         2    6[BANK0 ] int 
  6847 ;;  dividend        2    8[BANK0 ] int 
  6848 ;; Auto vars:     Size  Location     Type
  6849 ;;  quotient        2   12[BANK0 ] int 
  6850 ;;  sign            1   11[BANK0 ] unsigned char 
  6851 ;;  counter         1   10[BANK0 ] unsigned char 
  6852 ;; Return value:  Size  Location     Type
  6853 ;;                  2    6[BANK0 ] int 
  6854 ;; Registers used:
  6855 ;;		wreg, status,2, status,0
  6856 ;; Tracked objects:
  6857 ;;		On entry : 60/0
  6858 ;;		On exit  : 60/0
  6859 ;;		Unchanged: FFF9F/0
  6860 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6861 ;;      Params:         0       4       0       0       0
  6862 ;;      Locals:         0       4       0       0       0
  6863 ;;      Temps:          0       0       0       0       0
  6864 ;;      Totals:         0       8       0       0       0
  6865 ;;Total ram usage:        8 bytes
  6866 ;; Hardware stack levels used:    1
  6867 ;; Hardware stack levels required when called:    2
  6868 ;; This function calls:
  6869 ;;		Nothing
  6870 ;; This function is called by:
  6871 ;;		_pwm_10bit
  6872 ;;		_scale
  6873 ;;		__doprnt
  6874 ;; This function uses a non-reentrant model
  6875 ;;
  6876  0364                     ___awdiv:	
  6877                           
  6878                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  6879  0364  01AB               	clrf	___awdiv@sign
  6880  0365  1FA7               	btfss	___awdiv@divisor+1,7
  6881  0366  2B6E               	goto	l6881
  6882  0367  09A6               	comf	___awdiv@divisor,f
  6883  0368  09A7               	comf	___awdiv@divisor+1,f
  6884  0369  0AA6               	incf	___awdiv@divisor,f
  6885  036A  1903               	skipnz
  6886  036B  0AA7               	incf	___awdiv@divisor+1,f
  6887  036C  01AB               	clrf	___awdiv@sign
  6888  036D  0AAB               	incf	___awdiv@sign,f
  6889  036E                     l6881:	
  6890  036E  1FA9               	btfss	___awdiv@dividend+1,7
  6891  036F  2B77               	goto	l6887
  6892  0370  09A8               	comf	___awdiv@dividend,f
  6893  0371  09A9               	comf	___awdiv@dividend+1,f
  6894  0372  0AA8               	incf	___awdiv@dividend,f
  6895  0373  1903               	skipnz
  6896  0374  0AA9               	incf	___awdiv@dividend+1,f
  6897  0375  3001               	movlw	1
  6898  0376  06AB               	xorwf	___awdiv@sign,f
  6899  0377                     l6887:	
  6900  0377  01AC               	clrf	___awdiv@quotient
  6901  0378  01AD               	clrf	___awdiv@quotient+1
  6902  0379  0827               	movf	___awdiv@divisor+1,w
  6903  037A  0426               	iorwf	___awdiv@divisor,w
  6904  037B  1903               	skipnz
  6905  037C  2B9C               	goto	l6909
  6906  037D  01AA               	clrf	___awdiv@counter
  6907  037E                     L19:	
  6908  037E  0AAA               	incf	___awdiv@counter,f
  6909  037F  1BA7               	btfsc	___awdiv@divisor+1,7
  6910  0380  2B85               	goto	l6897
  6911  0381  1003               	clrc
  6912  0382  0DA6               	rlf	___awdiv@divisor,f
  6913  0383  0DA7               	rlf	___awdiv@divisor+1,f
  6914  0384  2B7E               	goto	L19
  6915  0385                     l6897:	
  6916  0385  1003               	clrc
  6917  0386  0DAC               	rlf	___awdiv@quotient,f
  6918  0387  0DAD               	rlf	___awdiv@quotient+1,f
  6919  0388  0827               	movf	___awdiv@divisor+1,w
  6920  0389  0229               	subwf	___awdiv@dividend+1,w
  6921  038A  1D03               	skipz
  6922  038B  2B8E               	goto	u2885
  6923  038C  0826               	movf	___awdiv@divisor,w
  6924  038D  0228               	subwf	___awdiv@dividend,w
  6925  038E                     u2885:	
  6926  038E  1C03               	skipc
  6927  038F  2B98               	goto	L20
  6928  0390  0826               	movf	___awdiv@divisor,w
  6929  0391  02A8               	subwf	___awdiv@dividend,f
  6930  0392  0827               	movf	___awdiv@divisor+1,w
  6931  0393  1C03               	skipc
  6932  0394  03A9               	decf	___awdiv@dividend+1,f
  6933  0395  02A9               	subwf	___awdiv@dividend+1,f
  6934  0396  142C               	bsf	___awdiv@quotient,0
  6935  0397  1003               	clrc
  6936  0398                     L20:	
  6937  0398  0CA7               	rrf	___awdiv@divisor+1,f
  6938  0399  0CA6               	rrf	___awdiv@divisor,f
  6939  039A  0BAA               	decfsz	___awdiv@counter,f
  6940  039B  2B85               	goto	l6897
  6941  039C                     l6909:	
  6942  039C  082B               	movf	___awdiv@sign,w
  6943  039D  1903               	btfsc	3,2
  6944  039E  2BA4               	goto	l6913
  6945  039F  09AC               	comf	___awdiv@quotient,f
  6946  03A0  09AD               	comf	___awdiv@quotient+1,f
  6947  03A1  0AAC               	incf	___awdiv@quotient,f
  6948  03A2  1903               	skipnz
  6949  03A3  0AAD               	incf	___awdiv@quotient+1,f
  6950  03A4                     l6913:	
  6951  03A4  082D               	movf	___awdiv@quotient+1,w
  6952  03A5  00A7               	movwf	?___awdiv+1
  6953  03A6  082C               	movf	___awdiv@quotient,w
  6954  03A7  00A6               	movwf	?___awdiv
  6955  03A8  0008               	return
  6956  03A9                     __end_of___awdiv:	
  6957  03A9                     __ptext695:	
  6958 ;; =============== function _lcd_put_byte ends ============
  6959                           
  6960                           
  6961 ;; *************** function ___awmod *****************
  6962 ;; Defined at:
  6963 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\awmod.c"
  6964 ;; Parameters:    Size  Location     Type
  6965 ;;  divisor         2    0[BANK0 ] int 
  6966 ;;  dividend        2    2[BANK0 ] int 
  6967 ;; Auto vars:     Size  Location     Type
  6968 ;;  sign            1    5[BANK0 ] unsigned char 
  6969 ;;  counter         1    4[BANK0 ] unsigned char 
  6970 ;; Return value:  Size  Location     Type
  6971 ;;                  2    0[BANK0 ] int 
  6972 ;; Registers used:
  6973 ;;		wreg, status,2, status,0
  6974 ;; Tracked objects:
  6975 ;;		On entry : 60/0
  6976 ;;		On exit  : 60/0
  6977 ;;		Unchanged: FFF9F/0
  6978 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6979 ;;      Params:         0       4       0       0       0
  6980 ;;      Locals:         0       2       0       0       0
  6981 ;;      Temps:          0       0       0       0       0
  6982 ;;      Totals:         0       6       0       0       0
  6983 ;;Total ram usage:        6 bytes
  6984 ;; Hardware stack levels used:    1
  6985 ;; Hardware stack levels required when called:    2
  6986 ;; This function calls:
  6987 ;;		Nothing
  6988 ;; This function is called by:
  6989 ;;		_scale
  6990 ;; This function uses a non-reentrant model
  6991 ;;
  6992  03A9                     ___awmod:	
  6993                           
  6994                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  6995  03A9  01A5               	clrf	___awmod@sign
  6996  03AA  1FA3               	btfss	___awmod@dividend+1,7
  6997  03AB  2BB3               	goto	l6999
  6998  03AC  09A2               	comf	___awmod@dividend,f
  6999  03AD  09A3               	comf	___awmod@dividend+1,f
  7000  03AE  0AA2               	incf	___awmod@dividend,f
  7001  03AF  1903               	skipnz
  7002  03B0  0AA3               	incf	___awmod@dividend+1,f
  7003  03B1  01A5               	clrf	___awmod@sign
  7004  03B2  0AA5               	incf	___awmod@sign,f
  7005  03B3                     l6999:	
  7006  03B3  1FA1               	btfss	___awmod@divisor+1,7
  7007  03B4  2BBA               	goto	l7003
  7008  03B5  09A0               	comf	___awmod@divisor,f
  7009  03B6  09A1               	comf	___awmod@divisor+1,f
  7010  03B7  0AA0               	incf	___awmod@divisor,f
  7011  03B8  1903               	skipnz
  7012  03B9  0AA1               	incf	___awmod@divisor+1,f
  7013  03BA                     l7003:	
  7014  03BA  0821               	movf	___awmod@divisor+1,w
  7015  03BB  0420               	iorwf	___awmod@divisor,w
  7016  03BC  1903               	skipnz
  7017  03BD  2BD9               	goto	l7019
  7018  03BE  01A4               	clrf	___awmod@counter
  7019  03BF                     L12:	
  7020  03BF  0AA4               	incf	___awmod@counter,f
  7021  03C0  1BA1               	btfsc	___awmod@divisor+1,7
  7022  03C1  2BC6               	goto	l7011
  7023  03C2  1003               	clrc
  7024  03C3  0DA0               	rlf	___awmod@divisor,f
  7025  03C4  0DA1               	rlf	___awmod@divisor+1,f
  7026  03C5  2BBF               	goto	L12
  7027  03C6                     l7011:	
  7028  03C6  0821               	movf	___awmod@divisor+1,w
  7029  03C7  0223               	subwf	___awmod@dividend+1,w
  7030  03C8  1D03               	skipz
  7031  03C9  2BCC               	goto	u3075
  7032  03CA  0820               	movf	___awmod@divisor,w
  7033  03CB  0222               	subwf	___awmod@dividend,w
  7034  03CC                     u3075:	
  7035  03CC  1C03               	skipc
  7036  03CD  2BD5               	goto	L13
  7037  03CE  0820               	movf	___awmod@divisor,w
  7038  03CF  02A2               	subwf	___awmod@dividend,f
  7039  03D0  0821               	movf	___awmod@divisor+1,w
  7040  03D1  1C03               	skipc
  7041  03D2  03A3               	decf	___awmod@dividend+1,f
  7042  03D3  02A3               	subwf	___awmod@dividend+1,f
  7043  03D4  1003               	clrc
  7044  03D5                     L13:	
  7045  03D5  0CA1               	rrf	___awmod@divisor+1,f
  7046  03D6  0CA0               	rrf	___awmod@divisor,f
  7047  03D7  0BA4               	decfsz	___awmod@counter,f
  7048  03D8  2BC6               	goto	l7011
  7049  03D9                     l7019:	
  7050  03D9  0825               	movf	___awmod@sign,w
  7051  03DA  1903               	btfsc	3,2
  7052  03DB  2BE1               	goto	l7023
  7053  03DC  09A2               	comf	___awmod@dividend,f
  7054  03DD  09A3               	comf	___awmod@dividend+1,f
  7055  03DE  0AA2               	incf	___awmod@dividend,f
  7056  03DF  1903               	skipnz
  7057  03E0  0AA3               	incf	___awmod@dividend+1,f
  7058  03E1                     l7023:	
  7059  03E1  0823               	movf	___awmod@dividend+1,w
  7060  03E2  00A1               	movwf	?___awmod+1
  7061  03E3  0822               	movf	___awmod@dividend,w
  7062  03E4  00A0               	movwf	?___awmod
  7063  03E5  0008               	return
  7064  03E6                     __end_of___awmod:	
  7065  03E6                     __ptext688:	
  7066 ;; =============== function ___altoft ends ============
  7067                           
  7068                           
  7069 ;; *************** function ___ftmul *****************
  7070 ;; Defined at:
  7071 ;;		line 52 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\ftmul.c"
  7072 ;; Parameters:    Size  Location     Type
  7073 ;;  f1              3   29[BANK0 ] float 
  7074 ;;  f2              3   32[BANK0 ] float 
  7075 ;; Auto vars:     Size  Location     Type
  7076 ;;  f3_as_produc    3   39[BANK0 ] unsigned um
  7077 ;;  sign            1   43[BANK0 ] unsigned char 
  7078 ;;  cntr            1   42[BANK0 ] unsigned char 
  7079 ;;  exp             1   38[BANK0 ] unsigned char 
  7080 ;; Return value:  Size  Location     Type
  7081 ;;                  3   29[BANK0 ] float 
  7082 ;; Registers used:
  7083 ;;		wreg, status,2, status,0, pclath, cstack
  7084 ;; Tracked objects:
  7085 ;;		On entry : 60/0
  7086 ;;		On exit  : 60/0
  7087 ;;		Unchanged: FFF9F/0
  7088 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7089 ;;      Params:         0       6       0       0       0
  7090 ;;      Locals:         0       6       0       0       0
  7091 ;;      Temps:          0       3       0       0       0
  7092 ;;      Totals:         0      15       0       0       0
  7093 ;;Total ram usage:       15 bytes
  7094 ;; Hardware stack levels used:    1
  7095 ;; Hardware stack levels required when called:    3
  7096 ;; This function calls:
  7097 ;;		___ftpack
  7098 ;; This function is called by:
  7099 ;;		_main
  7100 ;;		_fround
  7101 ;;		_scale
  7102 ;;		__doprnt
  7103 ;; This function uses a non-reentrant model
  7104 ;;
  7105  03E6                     ___ftmul:	
  7106                           
  7107                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  7108  03E6  083D               	movf	___ftmul@f1,w
  7109  03E7  00C3               	movwf	??___ftmul
  7110  03E8  083E               	movf	___ftmul@f1+1,w
  7111  03E9  00C4               	movwf	??___ftmul+1
  7112  03EA  083F               	movf	___ftmul@f1+2,w
  7113  03EB  00C5               	movwf	??___ftmul+2
  7114  03EC  1003               	clrc
  7115  03ED  0D44               	rlf	??___ftmul+1,w
  7116  03EE  0D45               	rlf	??___ftmul+2,w
  7117  03EF  00C6               	movwf	___ftmul@exp
  7118  03F0  08C6               	movf	___ftmul@exp,f
  7119  03F1  1D03               	skipz
  7120  03F2  2BF7               	goto	l7223
  7121  03F3  01BD               	clrf	?___ftmul
  7122  03F4  01BE               	clrf	?___ftmul+1
  7123  03F5  01BF               	clrf	?___ftmul+2
  7124  03F6  0008               	return
  7125  03F7                     l7223:	
  7126  03F7  0840               	movf	___ftmul@f2,w
  7127  03F8  00C3               	movwf	??___ftmul
  7128  03F9  0841               	movf	___ftmul@f2+1,w
  7129  03FA  00C4               	movwf	??___ftmul+1
  7130  03FB  0842               	movf	___ftmul@f2+2,w
  7131  03FC  00C5               	movwf	??___ftmul+2
  7132  03FD  1003               	clrc
  7133  03FE  0D44               	rlf	??___ftmul+1,w
  7134  03FF  0D45               	rlf	??___ftmul+2,w
  7135  0400  00CB               	movwf	___ftmul@sign
  7136  0401  08CB               	movf	___ftmul@sign,f
  7137  0402  1D03               	skipz
  7138  0403  2C08               	goto	l7229
  7139  0404  01BD               	clrf	?___ftmul
  7140  0405  01BE               	clrf	?___ftmul+1
  7141  0406  01BF               	clrf	?___ftmul+2
  7142  0407  0008               	return
  7143  0408                     l7229:	
  7144  0408  084B               	movf	___ftmul@sign,w
  7145  0409  3E7B               	addlw	123
  7146  040A  07C6               	addwf	___ftmul@exp,f
  7147  040B  083F               	movf	___ftmul@f1+2,w
  7148  040C  00CB               	movwf	___ftmul@sign
  7149  040D  0842               	movf	___ftmul@f2+2,w
  7150  040E  06CB               	xorwf	___ftmul@sign,f
  7151  040F  3080               	movlw	128
  7152  0410  05CB               	andwf	___ftmul@sign,f
  7153  0411  3007               	movlw	7
  7154  0412  17BE               	bsf	___ftmul@f1+1,7
  7155  0413  17C1               	bsf	___ftmul@f2+1,7
  7156  0414  01C2               	clrf	___ftmul@f2+2
  7157  0415  01C7               	clrf	___ftmul@f3_as_product
  7158  0416  01C8               	clrf	___ftmul@f3_as_product+1
  7159  0417  01C9               	clrf	___ftmul@f3_as_product+2
  7160  0418  00CA               	movwf	___ftmul@cntr
  7161  0419                     l7247:	
  7162  0419  1C3D               	btfss	___ftmul@f1,0
  7163  041A  2C23               	goto	l7251
  7164  041B  0840               	movf	___ftmul@f2,w
  7165  041C  24D0  120A  118A   	fcall	PL22	;call to abstracted procedure
  7166  041F  1803               	skipnc
  7167  0420  0A42               	incf	___ftmul@f2+2,w
  7168  0421  1D03               	btfss	3,2
  7169  0422  07C9               	addwf	___ftmul@f3_as_product+2,f
  7170  0423                     l7251:	
  7171  0423  1003               	clrc
  7172  0424  0CBF               	rrf	___ftmul@f1+2,f
  7173  0425  0CBE               	rrf	___ftmul@f1+1,f
  7174  0426  0CBD               	rrf	___ftmul@f1,f
  7175  0427  1003               	clrc
  7176  0428  0DC0               	rlf	___ftmul@f2,f
  7177  0429  0DC1               	rlf	___ftmul@f2+1,f
  7178  042A  0DC2               	rlf	___ftmul@f2+2,f
  7179  042B  0BCA               	decfsz	___ftmul@cntr,f
  7180  042C  2C19               	goto	l7247
  7181  042D  3009               	movlw	9
  7182  042E  00CA               	movwf	___ftmul@cntr
  7183  042F                     l7259:	
  7184  042F  1C3D               	btfss	___ftmul@f1,0
  7185  0430  2C39               	goto	l7263
  7186  0431  0840               	movf	___ftmul@f2,w
  7187  0432  24D0  120A  118A   	fcall	PL22	;call to abstracted procedure
  7188  0435  1803               	skipnc
  7189  0436  0A42               	incf	___ftmul@f2+2,w
  7190  0437  1D03               	btfss	3,2
  7191  0438  07C9               	addwf	___ftmul@f3_as_product+2,f
  7192  0439                     l7263:	
  7193  0439  1003               	clrc
  7194  043A  0CBF               	rrf	___ftmul@f1+2,f
  7195  043B  0CBE               	rrf	___ftmul@f1+1,f
  7196  043C  0CBD               	rrf	___ftmul@f1,f
  7197  043D  1003               	clrc
  7198  043E  0CC9               	rrf	___ftmul@f3_as_product+2,f
  7199  043F  0CC8               	rrf	___ftmul@f3_as_product+1,f
  7200  0440  0CC7               	rrf	___ftmul@f3_as_product,f
  7201  0441  0BCA               	decfsz	___ftmul@cntr,f
  7202  0442  2C2F               	goto	l7259
  7203  0443  0847               	movf	___ftmul@f3_as_product,w
  7204  0444  00A0               	movwf	?___ftpack
  7205  0445  0848               	movf	___ftmul@f3_as_product+1,w
  7206  0446  00A1               	movwf	?___ftpack+1
  7207  0447  0849               	movf	___ftmul@f3_as_product+2,w
  7208  0448  00A2               	movwf	?___ftpack+2
  7209  0449  0846               	movf	___ftmul@exp,w
  7210  044A  00A3               	movwf	?___ftpack+3
  7211  044B  084B               	movf	___ftmul@sign,w
  7212  044C  00A4               	movwf	?___ftpack+4
  7213  044D  2463               	fcall	___ftpack
  7214  044E  0820               	movf	?___ftpack,w
  7215  044F  00BD               	movwf	?___ftmul
  7216  0450  0821               	movf	?___ftpack+1,w
  7217  0451  00BE               	movwf	?___ftmul+1
  7218  0452  0822               	movf	?___ftpack+2,w
  7219  0453  00BF               	movwf	?___ftmul+2
  7220  0454  0008               	return
  7221  0455                     __end_of___ftmul:	
  7222  0455                     __ptext706:	
  7223 ;; =============== function ___wmul ends ============
  7224                           
  7225                           
  7226 ;; *************** function ___bmul *****************
  7227 ;; Defined at:
  7228 ;;		line 3 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\bmul.c"
  7229 ;; Parameters:    Size  Location     Type
  7230 ;;  multiplier      1    wreg     unsigned char 
  7231 ;;  multiplicand    1    9[BANK0 ] unsigned char 
  7232 ;; Auto vars:     Size  Location     Type
  7233 ;;  multiplier      1   11[BANK0 ] unsigned char 
  7234 ;;  product         1   10[BANK0 ] unsigned char 
  7235 ;; Return value:  Size  Location     Type
  7236 ;;                  1    wreg      unsigned char 
  7237 ;; Registers used:
  7238 ;;		wreg, status,2, status,0
  7239 ;; Tracked objects:
  7240 ;;		On entry : 60/0
  7241 ;;		On exit  : 60/0
  7242 ;;		Unchanged: FFF9F/0
  7243 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7244 ;;      Params:         0       1       0       0       0
  7245 ;;      Locals:         0       2       0       0       0
  7246 ;;      Temps:          0       0       0       0       0
  7247 ;;      Totals:         0       3       0       0       0
  7248 ;;Total ram usage:        3 bytes
  7249 ;; Hardware stack levels used:    1
  7250 ;; Hardware stack levels required when called:    2
  7251 ;; This function calls:
  7252 ;;		Nothing
  7253 ;; This function is called by:
  7254 ;;		_fround
  7255 ;;		_scale
  7256 ;; This function uses a non-reentrant model
  7257 ;;
  7258  0455                     ___bmul:	
  7259                           
  7260                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  7261                           ;___bmul@multiplier stored from wreg
  7262  0455  00AB               	movwf	___bmul@multiplier
  7263  0456  01AA               	clrf	___bmul@product
  7264  0457                     l6735:	
  7265  0457  0829               	movf	___bmul@multiplicand,w
  7266  0458  182B               	btfsc	___bmul@multiplier,0
  7267  0459  07AA               	addwf	___bmul@product,f
  7268  045A  1003               	clrc
  7269  045B  0DA9               	rlf	___bmul@multiplicand,f
  7270  045C  1003               	clrc
  7271  045D  0CAB               	rrf	___bmul@multiplier,f
  7272  045E  08AB               	movf	___bmul@multiplier,f
  7273  045F  1D03               	skipz
  7274  0460  2C57               	goto	l6735
  7275  0461  082A               	movf	___bmul@product,w
  7276  0462  0008               	return
  7277  0463                     __end_of___bmul:	
  7278  0463                     __ptext702:	
  7279 ;; =============== function ___fttol ends ============
  7280                           
  7281                           
  7282 ;; *************** function ___ftpack *****************
  7283 ;; Defined at:
  7284 ;;		line 63 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\float.c"
  7285 ;; Parameters:    Size  Location     Type
  7286 ;;  arg             3    0[BANK0 ] unsigned um
  7287 ;;  exp             1    3[BANK0 ] unsigned char 
  7288 ;;  sign            1    4[BANK0 ] unsigned char 
  7289 ;; Auto vars:     Size  Location     Type
  7290 ;;		None
  7291 ;; Return value:  Size  Location     Type
  7292 ;;                  3    0[BANK0 ] float 
  7293 ;; Registers used:
  7294 ;;		wreg, status,2, status,0
  7295 ;; Tracked objects:
  7296 ;;		On entry : 60/0
  7297 ;;		On exit  : 60/0
  7298 ;;		Unchanged: FFF9F/0
  7299 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7300 ;;      Params:         0       5       0       0       0
  7301 ;;      Locals:         0       0       0       0       0
  7302 ;;      Temps:          0       3       0       0       0
  7303 ;;      Totals:         0       8       0       0       0
  7304 ;;Total ram usage:        8 bytes
  7305 ;; Hardware stack levels used:    1
  7306 ;; Hardware stack levels required when called:    2
  7307 ;; This function calls:
  7308 ;;		Nothing
  7309 ;; This function is called by:
  7310 ;;		___ftadd
  7311 ;;		___ftdiv
  7312 ;;		___ftmul
  7313 ;;		___altoft
  7314 ;;		___lltoft
  7315 ;; This function uses a non-reentrant model
  7316 ;;
  7317  0463                     ___ftpack:	
  7318                           
  7319                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  7320  0463  0823               	movf	___ftpack@exp,w
  7321  0464  1903               	btfsc	3,2
  7322  0465  2C6B               	goto	l6811
  7323  0466  0822               	movf	___ftpack@arg+2,w
  7324  0467  0421               	iorwf	___ftpack@arg+1,w
  7325  0468  0420               	iorwf	___ftpack@arg,w
  7326  0469  1D03               	skipz
  7327  046A  2C74               	goto	l6817
  7328  046B                     l6811:	
  7329  046B  01A0               	clrf	?___ftpack
  7330  046C  01A1               	clrf	?___ftpack+1
  7331  046D  01A2               	clrf	?___ftpack+2
  7332  046E  0008               	return
  7333  046F                     l6815:	
  7334  046F  0AA3               	incf	___ftpack@exp,f
  7335  0470  1003               	clrc
  7336  0471  0CA2               	rrf	___ftpack@arg+2,f
  7337  0472  0CA1               	rrf	___ftpack@arg+1,f
  7338  0473  0CA0               	rrf	___ftpack@arg,f
  7339  0474                     l6817:	
  7340  0474  30FE               	movlw	254
  7341  0475  0522               	andwf	___ftpack@arg+2,w
  7342  0476  1903               	btfsc	3,2
  7343  0477  2C83               	goto	l6821
  7344  0478  2C6F               	goto	l6815
  7345  0479                     l6819:	
  7346  0479  0AA3               	incf	___ftpack@exp,f
  7347  047A  0AA0               	incf	___ftpack@arg,f
  7348  047B  1903               	skipnz
  7349  047C  0AA1               	incf	___ftpack@arg+1,f
  7350  047D  1903               	skipnz
  7351  047E  0AA2               	incf	___ftpack@arg+2,f
  7352  047F  1003               	clrc
  7353  0480  0CA2               	rrf	___ftpack@arg+2,f
  7354  0481  0CA1               	rrf	___ftpack@arg+1,f
  7355  0482  0CA0               	rrf	___ftpack@arg,f
  7356  0483                     l6821:	
  7357  0483  30FF               	movlw	255
  7358  0484  0522               	andwf	___ftpack@arg+2,w
  7359  0485  1903               	btfsc	3,2
  7360  0486  2C8D               	goto	l6825
  7361  0487  2C79               	goto	l6819
  7362  0488                     l6823:	
  7363  0488  03A3               	decf	___ftpack@exp,f
  7364  0489  1003               	clrc
  7365  048A  0DA0               	rlf	___ftpack@arg,f
  7366  048B  0DA1               	rlf	___ftpack@arg+1,f
  7367  048C  0DA2               	rlf	___ftpack@arg+2,f
  7368  048D                     l6825:	
  7369  048D  1FA1               	btfss	___ftpack@arg+1,7
  7370  048E  2C88               	goto	l6823
  7371  048F  1C23               	btfss	___ftpack@exp,0
  7372  0490  13A1               	bcf	___ftpack@arg+1,7
  7373  0491  1003               	clrc
  7374  0492  0CA3               	rrf	___ftpack@exp,f
  7375  0493  0823               	movf	___ftpack@exp,w
  7376  0494  00A7               	movwf	??___ftpack+2
  7377  0495  01A6               	clrf	??___ftpack+1
  7378  0496  01A5               	clrf	??___ftpack
  7379  0497  0825               	movf	??___ftpack,w
  7380  0498  04A0               	iorwf	___ftpack@arg,f
  7381  0499  0826               	movf	??___ftpack+1,w
  7382  049A  04A1               	iorwf	___ftpack@arg+1,f
  7383  049B  0827               	movf	??___ftpack+2,w
  7384  049C  04A2               	iorwf	___ftpack@arg+2,f
  7385  049D  0824               	movf	___ftpack@sign,w
  7386  049E  1D03               	skipz
  7387  049F  17A2               	bsf	___ftpack@arg+2,7
  7388  04A0  0008               	return
  7389  04A1                     __end_of___ftpack:	
  7390  04A1                     PL12:	
  7391  04A1  0820               	movf	?___awmod,w
  7392  04A2  00CF               	movwf	??_scale
  7393  04A3  0821               	movf	?___awmod+1,w
  7394  04A4  00D0               	movwf	??_scale+1
  7395  04A5  084F               	movf	??_scale,w
  7396  04A6  074F               	addwf	??_scale,w
  7397  04A7  074F               	addwf	??_scale,w
  7398  04A8  0008               	return
  7399  04A9                     PL13:	
  7400  04A9  0826               	movf	?___awdiv,w
  7401  04AA  00D1               	movwf	??_scale+2
  7402  04AB  0827               	movf	?___awdiv+1,w
  7403  04AC  00D2               	movwf	??_scale+3
  7404  04AD  0851               	movf	??_scale+2,w
  7405  04AE  0751               	addwf	??_scale+2,w
  7406  04AF  0751               	addwf	??_scale+2,w
  7407  04B0  0008               	return
  7408  04B1                     PL14:	
  7409  04B1  083D               	movf	?___ftmul,w
  7410  04B2  00D3               	movwf	_scale$4217
  7411  04B3  083E               	movf	?___ftmul+1,w
  7412  04B4  00D4               	movwf	_scale$4217+1
  7413  04B5  083F               	movf	?___ftmul+2,w
  7414  04B6  00D5               	movwf	_scale$4217+2
  7415  04B7  300A               	movlw	10
  7416  04B8  00A0               	movwf	?___awmod
  7417  04B9  01A1               	clrf	?___awmod+1
  7418  04BA  0856               	movf	scale@scl,w
  7419  04BB  00A2               	movwf	?___awmod+2
  7420  04BC  01A3               	clrf	?___awmod+3
  7421  04BD  0008               	return
  7422  04BE                     PL15:	
  7423  04BE  083D               	movf	?___ftmul,w
  7424  04BF  00CC               	movwf	?_scale
  7425  04C0  083E               	movf	?___ftmul+1,w
  7426  04C1  00CD               	movwf	?_scale+1
  7427  04C2  083F               	movf	?___ftmul+2,w
  7428  04C3  00CE               	movwf	?_scale+2
  7429  04C4  0008               	return
  7430  04C5                     PL18:	
  7431  04C5  00A6               	movwf	?___awdiv
  7432  04C6  01A7               	clrf	?___awdiv+1
  7433  04C7  0856               	movf	scale@scl,w
  7434  04C8  00A2               	movwf	?___awmod+2
  7435  04C9  01A3               	clrf	?___awmod+3
  7436  04CA  1BA2               	btfsc	?___awmod+2,7
  7437  04CB  03A3               	decf	?___awmod+3,f
  7438  04CC  3064               	movlw	100
  7439  04CD  00A0               	movwf	?___awmod
  7440  04CE  01A1               	clrf	?___awmod+1
  7441  04CF  0008               	return
  7442  04D0                     PL22:	
  7443  04D0  07C7               	addwf	___ftmul@f3_as_product,f
  7444  04D1  0841               	movf	___ftmul@f2+1,w
  7445  04D2  1103               	clrz
  7446  04D3  1803               	skipnc
  7447  04D4  0A41               	incf	___ftmul@f2+1,w
  7448  04D5  1D03               	btfss	3,2
  7449  04D6  07C8               	addwf	___ftmul@f3_as_product+1,f
  7450  04D7  0842               	movf	___ftmul@f2+2,w
  7451  04D8  1103               	clrz
  7452  04D9  0008               	return
  7453  04DA                     PL27:	
  7454  04DA  00BF               	movwf	?___ftmul+2
  7455  04DB  3064               	movlw	100
  7456  04DC  00A6               	movwf	?___awdiv
  7457  04DD  01A7               	clrf	?___awdiv+1
  7458  04DE  0856               	movf	scale@scl,w
  7459  04DF  00A8               	movwf	?___awdiv+2
  7460  04E0  01A9               	clrf	?___awdiv+3
  7461  04E1  0008               	return
  7462  04E2                     PL28:	
  7463  04E2  00BF               	movwf	?___ftmul+2
  7464  04E3  0853               	movf	_scale$4217,w
  7465  04E4  00C0               	movwf	?___ftmul+3
  7466  04E5  0854               	movf	_scale$4217+1,w
  7467  04E6  00C1               	movwf	?___ftmul+4
  7468  04E7  0855               	movf	_scale$4217+2,w
  7469  04E8  00C2               	movwf	?___ftmul+5
  7470  04E9  0008               	return
  7471  04EA                     PL29:	
  7472  04EA  00BF               	movwf	?___ftmul+2
  7473  04EB  300A               	movlw	10
  7474  04EC  00A6               	movwf	?___awdiv
  7475  04ED  01A7               	clrf	?___awdiv+1
  7476  04EE  0856               	movf	scale@scl,w
  7477  04EF  00A8               	movwf	?___awdiv+2
  7478  04F0  01A9               	clrf	?___awdiv+3
  7479  04F1  0008               	return
  7480  04F2                     PL30:	
  7481  04F2  0826               	movf	?___awdiv,w
  7482  04F3  00CF               	movwf	??_scale
  7483  04F4  0827               	movf	?___awdiv+1,w
  7484  04F5  00D0               	movwf	??_scale+1
  7485  04F6  084F               	movf	??_scale,w
  7486  04F7  074F               	addwf	??_scale,w
  7487  04F8  074F               	addwf	??_scale,w
  7488  04F9  0008               	return
  7489                           
  7490                           	psect	text691
  7491  00DB                     __ptext691:	
  7492 ;; =============== function ___ftadd ends ============
  7493                           
  7494                           
  7495 ;; *************** function _send_string *****************
  7496 ;; Defined at:
  7497 ;;		line 107 in file "C:\Users\DELL\Desktop\vxl\mp\nhapdulieu.c"
  7498 ;; Parameters:    Size  Location     Type
  7499 ;;  s               1    wreg     PTR const unsigned char 
  7500 ;;		 -> STR_5(16), STR_4(11), STR_3(11), STR_2(11), 
  7501 ;;		 -> STR_1(11), 
  7502 ;; Auto vars:     Size  Location     Type
  7503 ;;  s               1    1[BANK0 ] PTR const unsigned char 
  7504 ;;		 -> STR_5(16), STR_4(11), STR_3(11), STR_2(11), 
  7505 ;;		 -> STR_1(11), 
  7506 ;; Return value:  Size  Location     Type
  7507 ;;		None               void
  7508 ;; Registers used:
  7509 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7510 ;; Tracked objects:
  7511 ;;		On entry : 0/0
  7512 ;;		On exit  : 60/0
  7513 ;;		Unchanged: FFF9F/0
  7514 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7515 ;;      Params:         0       0       0       0       0
  7516 ;;      Locals:         0       1       0       0       0
  7517 ;;      Temps:          0       0       0       0       0
  7518 ;;      Totals:         0       1       0       0       0
  7519 ;;Total ram usage:        1 bytes
  7520 ;; Hardware stack levels used:    1
  7521 ;; Hardware stack levels required when called:    3
  7522 ;; This function calls:
  7523 ;;		_send_char
  7524 ;; This function is called by:
  7525 ;;		_main
  7526 ;; This function uses a non-reentrant model
  7527 ;;
  7528  00DB                     _send_string:	
  7529                           
  7530                           ; Regs used in _send_string: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7531                           ;send_string@s stored from wreg
  7532  00DB  1283               	bcf	3,5	;RP0=0, select bank0
  7533  00DC  1303               	bcf	3,6	;RP1=0, select bank0
  7534  00DD  00A1               	movwf	send_string@s
  7535  00DE                     l7093:	
  7536                           ;nhapdulieu.c: 108: while(*s){send_char(*s++);}
  7537                           
  7538  00DE  0821               	movf	send_string@s,w
  7539  00DF  0084               	movwf	4
  7540  00E0  120A  118A  200F   	fcall	stringdir
      +       120A  118A         
  7541  00E5  3800               	iorlw	0
  7542  00E6  1903               	btfsc	3,2
  7543  00E7  0008               	return
  7544  00E8  0821               	movf	send_string@s,w
  7545  00E9  0084               	movwf	4
  7546  00EA  120A  118A  200F   	fcall	stringdir
      +       120A  118A         
  7547  00EF  20F4  120A  118A   	fcall	_send_char
  7548  00F2  0AA1               	incf	send_string@s,f
  7549  00F3  28DE               	goto	l7093
  7550  00F4                     __end_of_send_string:	
  7551  00F4                     __ptext710:	
  7552 ;; =============== function _isdigit ends ============
  7553                           
  7554                           
  7555 ;; *************** function _send_char *****************
  7556 ;; Defined at:
  7557 ;;		line 102 in file "C:\Users\DELL\Desktop\vxl\mp\nhapdulieu.c"
  7558 ;; Parameters:    Size  Location     Type
  7559 ;;  data            1    wreg     unsigned char 
  7560 ;; Auto vars:     Size  Location     Type
  7561 ;;  data            1    0[BANK0 ] unsigned char 
  7562 ;; Return value:  Size  Location     Type
  7563 ;;		None               void
  7564 ;; Registers used:
  7565 ;;		wreg
  7566 ;; Tracked objects:
  7567 ;;		On entry : 60/0
  7568 ;;		On exit  : 60/0
  7569 ;;		Unchanged: FFF9F/0
  7570 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7571 ;;      Params:         0       0       0       0       0
  7572 ;;      Locals:         0       1       0       0       0
  7573 ;;      Temps:          0       0       0       0       0
  7574 ;;      Totals:         0       1       0       0       0
  7575 ;;Total ram usage:        1 bytes
  7576 ;; Hardware stack levels used:    1
  7577 ;; Hardware stack levels required when called:    2
  7578 ;; This function calls:
  7579 ;;		Nothing
  7580 ;; This function is called by:
  7581 ;;		_send_string
  7582 ;; This function uses a non-reentrant model
  7583 ;;
  7584  00F4                     _send_char:	
  7585                           
  7586                           ; Regs used in _send_char: [wreg]
  7587                           ;send_char@data stored from wreg
  7588  00F4  00A0               	movwf	send_char@data
  7589  00F5                     l2186:	
  7590                           ;nhapdulieu.c: 103: while(TXIF ==0){}
  7591                           
  7592  00F5  1E0C               	btfss	12,4
  7593  00F6  28F5               	goto	l2186
  7594                           
  7595                           ;nhapdulieu.c: 104: TXREG = data;
  7596  00F7  0820               	movf	send_char@data,w
  7597  00F8  0099               	movwf	25	;volatile
  7598  00F9  0008               	return
  7599  00FA                     __end_of_send_char:	
  7600                           
  7601                           	psect	text696
  7602  130F                     __ptext696:	
  7603 ;; =============== function ___awmod ends ============
  7604                           
  7605                           
  7606 ;; *************** function ___lldiv *****************
  7607 ;; Defined at:
  7608 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\lldiv.c"
  7609 ;; Parameters:    Size  Location     Type
  7610 ;;  divisor         4    0[BANK0 ] unsigned long 
  7611 ;;  dividend        4    4[BANK0 ] unsigned long 
  7612 ;; Auto vars:     Size  Location     Type
  7613 ;;  quotient        4    8[BANK0 ] unsigned long 
  7614 ;;  counter         1   12[BANK0 ] unsigned char 
  7615 ;; Return value:  Size  Location     Type
  7616 ;;                  4    0[BANK0 ] unsigned long 
  7617 ;; Registers used:
  7618 ;;		wreg, status,2, status,0
  7619 ;; Tracked objects:
  7620 ;;		On entry : 60/0
  7621 ;;		On exit  : 60/0
  7622 ;;		Unchanged: FFF9F/0
  7623 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7624 ;;      Params:         0       8       0       0       0
  7625 ;;      Locals:         0       5       0       0       0
  7626 ;;      Temps:          0       0       0       0       0
  7627 ;;      Totals:         0      13       0       0       0
  7628 ;;Total ram usage:       13 bytes
  7629 ;; Hardware stack levels used:    1
  7630 ;; Hardware stack levels required when called:    2
  7631 ;; This function calls:
  7632 ;;		Nothing
  7633 ;; This function is called by:
  7634 ;;		__doprnt
  7635 ;; This function uses a non-reentrant model
  7636 ;;
  7637  130F                     ___lldiv:	
  7638                           
  7639                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  7640  130F  01A8               	clrf	___lldiv@quotient
  7641  1310  01A9               	clrf	___lldiv@quotient+1
  7642  1311  01AA               	clrf	___lldiv@quotient+2
  7643  1312  01AB               	clrf	___lldiv@quotient+3
  7644  1313  0823               	movf	___lldiv@divisor+3,w
  7645  1314  0422               	iorwf	___lldiv@divisor+2,w
  7646  1315  0421               	iorwf	___lldiv@divisor+1,w
  7647  1316  0420               	iorwf	___lldiv@divisor,w
  7648  1317  1903               	skipnz
  7649  1318  2B4E               	goto	l6987
  7650  1319  01AC               	clrf	___lldiv@counter
  7651  131A                     L14:	
  7652  131A  0AAC               	incf	___lldiv@counter,f
  7653  131B  1BA3               	btfsc	___lldiv@divisor+3,7
  7654  131C  2B23               	goto	l6975
  7655  131D  1003               	clrc
  7656  131E  0DA0               	rlf	___lldiv@divisor,f
  7657  131F  0DA1               	rlf	___lldiv@divisor+1,f
  7658  1320  0DA2               	rlf	___lldiv@divisor+2,f
  7659  1321  0DA3               	rlf	___lldiv@divisor+3,f
  7660  1322  2B1A               	goto	L14
  7661  1323                     l6975:	
  7662  1323  1003               	clrc
  7663  1324  0DA8               	rlf	___lldiv@quotient,f
  7664  1325  0DA9               	rlf	___lldiv@quotient+1,f
  7665  1326  0DAA               	rlf	___lldiv@quotient+2,f
  7666  1327  0DAB               	rlf	___lldiv@quotient+3,f
  7667  1328  0823               	movf	___lldiv@divisor+3,w
  7668  1329  0227               	subwf	___lldiv@dividend+3,w
  7669  132A  1D03               	skipz
  7670  132B  2B36               	goto	u3015
  7671  132C  0822               	movf	___lldiv@divisor+2,w
  7672  132D  0226               	subwf	___lldiv@dividend+2,w
  7673  132E  1D03               	skipz
  7674  132F  2B36               	goto	u3015
  7675  1330  0821               	movf	___lldiv@divisor+1,w
  7676  1331  0225               	subwf	___lldiv@dividend+1,w
  7677  1332  1D03               	skipz
  7678  1333  2B36               	goto	u3015
  7679  1334  0820               	movf	___lldiv@divisor,w
  7680  1335  0224               	subwf	___lldiv@dividend,w
  7681  1336                     u3015:	
  7682  1336  1C03               	skipc
  7683  1337  2B48               	goto	L15
  7684  1338  0820               	movf	___lldiv@divisor,w
  7685  1339  02A4               	subwf	___lldiv@dividend,f
  7686  133A  0821               	movf	___lldiv@divisor+1,w
  7687  133B  1C03               	skipc
  7688  133C  0F21               	incfsz	___lldiv@divisor+1,w
  7689  133D  02A5               	subwf	___lldiv@dividend+1,f
  7690  133E  0822               	movf	___lldiv@divisor+2,w
  7691  133F  1C03               	skipc
  7692  1340  0F22               	incfsz	___lldiv@divisor+2,w
  7693  1341  02A6               	subwf	___lldiv@dividend+2,f
  7694  1342  0823               	movf	___lldiv@divisor+3,w
  7695  1343  1C03               	skipc
  7696  1344  0F23               	incfsz	___lldiv@divisor+3,w
  7697  1345  02A7               	subwf	___lldiv@dividend+3,f
  7698  1346  1428               	bsf	___lldiv@quotient,0
  7699  1347  1003               	clrc
  7700  1348                     L15:	
  7701  1348  0CA3               	rrf	___lldiv@divisor+3,f
  7702  1349  0CA2               	rrf	___lldiv@divisor+2,f
  7703  134A  0CA1               	rrf	___lldiv@divisor+1,f
  7704  134B  0CA0               	rrf	___lldiv@divisor,f
  7705  134C  0BAC               	decfsz	___lldiv@counter,f
  7706  134D  2B23               	goto	l6975
  7707  134E                     l6987:	
  7708  134E  082B               	movf	___lldiv@quotient+3,w
  7709  134F  00A3               	movwf	?___lldiv+3
  7710  1350  082A               	movf	___lldiv@quotient+2,w
  7711  1351  00A2               	movwf	?___lldiv+2
  7712  1352  0829               	movf	___lldiv@quotient+1,w
  7713  1353  00A1               	movwf	?___lldiv+1
  7714  1354  0828               	movf	___lldiv@quotient,w
  7715  1355  00A0               	movwf	?___lldiv
  7716  1356  0008               	return
  7717  1357                     __end_of___lldiv:	
  7718                           
  7719                           	psect	text697
  7720  07C6                     __ptext697:	
  7721 ;; =============== function ___lldiv ends ============
  7722                           
  7723                           
  7724 ;; *************** function ___ftge *****************
  7725 ;; Defined at:
  7726 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\ftge.c"
  7727 ;; Parameters:    Size  Location     Type
  7728 ;;  ff1             3    0[BANK0 ] float 
  7729 ;;  ff2             3    3[BANK0 ] float 
  7730 ;; Auto vars:     Size  Location     Type
  7731 ;;		None
  7732 ;; Return value:  Size  Location     Type
  7733 ;;		None               void
  7734 ;; Registers used:
  7735 ;;		wreg, status,2, status,0
  7736 ;; Tracked objects:
  7737 ;;		On entry : 60/0
  7738 ;;		On exit  : 60/0
  7739 ;;		Unchanged: FFF9F/0
  7740 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7741 ;;      Params:         0       6       0       0       0
  7742 ;;      Locals:         0       0       0       0       0
  7743 ;;      Temps:          0       0       0       0       0
  7744 ;;      Totals:         0       6       0       0       0
  7745 ;;Total ram usage:        6 bytes
  7746 ;; Hardware stack levels used:    1
  7747 ;; Hardware stack levels required when called:    2
  7748 ;; This function calls:
  7749 ;;		Nothing
  7750 ;; This function is called by:
  7751 ;;		_main
  7752 ;;		__doprnt
  7753 ;; This function uses a non-reentrant model
  7754 ;;
  7755  07C6                     ___ftge:	
  7756                           
  7757                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  7758  07C6  1FA2               	btfss	___ftge@ff1+2,7
  7759  07C7  2FD5               	goto	l6949
  7760  07C8  0820               	movf	___ftge@ff1,w
  7761  07C9  3C00               	sublw	0
  7762  07CA  00A0               	movwf	___ftge@ff1
  7763  07CB  0821               	movf	___ftge@ff1+1,w
  7764  07CC  1C03               	skipc
  7765  07CD  0F21               	incfsz	___ftge@ff1+1,w
  7766  07CE  3C00               	sublw	0
  7767  07CF  00A1               	movwf	___ftge@ff1+1
  7768  07D0  0822               	movf	___ftge@ff1+2,w
  7769  07D1  1C03               	skipc
  7770  07D2  0F22               	incfsz	___ftge@ff1+2,w
  7771  07D3  3C80               	sublw	128
  7772  07D4  00A2               	movwf	___ftge@ff1+2
  7773  07D5                     l6949:	
  7774  07D5  1FA5               	btfss	___ftge@ff2+2,7
  7775  07D6  2FE4               	goto	l6953
  7776  07D7  0823               	movf	___ftge@ff2,w
  7777  07D8  3C00               	sublw	0
  7778  07D9  00A3               	movwf	___ftge@ff2
  7779  07DA  0824               	movf	___ftge@ff2+1,w
  7780  07DB  1C03               	skipc
  7781  07DC  0F24               	incfsz	___ftge@ff2+1,w
  7782  07DD  3C00               	sublw	0
  7783  07DE  00A4               	movwf	___ftge@ff2+1
  7784  07DF  0825               	movf	___ftge@ff2+2,w
  7785  07E0  1C03               	skipc
  7786  07E1  0F25               	incfsz	___ftge@ff2+2,w
  7787  07E2  3C80               	sublw	128
  7788  07E3  00A5               	movwf	___ftge@ff2+2
  7789  07E4                     l6953:	
  7790  07E4  3080               	movlw	128
  7791  07E5  06A2               	xorwf	___ftge@ff1+2,f
  7792  07E6  06A5               	xorwf	___ftge@ff2+2,f
  7793  07E7  0825               	movf	___ftge@ff2+2,w
  7794  07E8  0222               	subwf	___ftge@ff1+2,w
  7795  07E9  1D03               	skipz
  7796  07EA  0008               	return
  7797  07EB  0824               	movf	___ftge@ff2+1,w
  7798  07EC  0221               	subwf	___ftge@ff1+1,w
  7799  07ED  1D03               	skipz
  7800  07EE  0008               	return
  7801  07EF  0823               	movf	___ftge@ff2,w
  7802  07F0  0220               	subwf	___ftge@ff1,w
  7803  07F1  0008               	return
  7804  07F2                     __end_of___ftge:	
  7805                           
  7806                           	psect	text699
  7807  12D1                     __ptext699:	
  7808 ;; =============== function ___ftneg ends ============
  7809                           
  7810                           
  7811 ;; *************** function ___llmod *****************
  7812 ;; Defined at:
  7813 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\llmod.c"
  7814 ;; Parameters:    Size  Location     Type
  7815 ;;  divisor         4   13[BANK0 ] unsigned long 
  7816 ;;  dividend        4   17[BANK0 ] unsigned long 
  7817 ;; Auto vars:     Size  Location     Type
  7818 ;;  counter         1   21[BANK0 ] unsigned char 
  7819 ;; Return value:  Size  Location     Type
  7820 ;;                  4   13[BANK0 ] unsigned long 
  7821 ;; Registers used:
  7822 ;;		wreg, status,2, status,0
  7823 ;; Tracked objects:
  7824 ;;		On entry : 60/0
  7825 ;;		On exit  : 60/0
  7826 ;;		Unchanged: FFF9F/0
  7827 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7828 ;;      Params:         0       8       0       0       0
  7829 ;;      Locals:         0       1       0       0       0
  7830 ;;      Temps:          0       0       0       0       0
  7831 ;;      Totals:         0       9       0       0       0
  7832 ;;Total ram usage:        9 bytes
  7833 ;; Hardware stack levels used:    1
  7834 ;; Hardware stack levels required when called:    2
  7835 ;; This function calls:
  7836 ;;		Nothing
  7837 ;; This function is called by:
  7838 ;;		__doprnt
  7839 ;; This function uses a non-reentrant model
  7840 ;;
  7841  12D1                     ___llmod:	
  7842                           
  7843                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  7844  12D1  0830               	movf	___llmod@divisor+3,w
  7845  12D2  042F               	iorwf	___llmod@divisor+2,w
  7846  12D3  042E               	iorwf	___llmod@divisor+1,w
  7847  12D4  042D               	iorwf	___llmod@divisor,w
  7848  12D5  1903               	skipnz
  7849  12D6  2B06               	goto	l6933
  7850  12D7  01B5               	clrf	___llmod@counter
  7851  12D8                     L17:	
  7852  12D8  0AB5               	incf	___llmod@counter,f
  7853  12D9  1BB0               	btfsc	___llmod@divisor+3,7
  7854  12DA  2AE1               	goto	l6925
  7855  12DB  1003               	clrc
  7856  12DC  0DAD               	rlf	___llmod@divisor,f
  7857  12DD  0DAE               	rlf	___llmod@divisor+1,f
  7858  12DE  0DAF               	rlf	___llmod@divisor+2,f
  7859  12DF  0DB0               	rlf	___llmod@divisor+3,f
  7860  12E0  2AD8               	goto	L17
  7861  12E1                     l6925:	
  7862  12E1  0830               	movf	___llmod@divisor+3,w
  7863  12E2  0234               	subwf	___llmod@dividend+3,w
  7864  12E3  1D03               	skipz
  7865  12E4  2AEF               	goto	u2935
  7866  12E5  082F               	movf	___llmod@divisor+2,w
  7867  12E6  0233               	subwf	___llmod@dividend+2,w
  7868  12E7  1D03               	skipz
  7869  12E8  2AEF               	goto	u2935
  7870  12E9  082E               	movf	___llmod@divisor+1,w
  7871  12EA  0232               	subwf	___llmod@dividend+1,w
  7872  12EB  1D03               	skipz
  7873  12EC  2AEF               	goto	u2935
  7874  12ED  082D               	movf	___llmod@divisor,w
  7875  12EE  0231               	subwf	___llmod@dividend,w
  7876  12EF                     u2935:	
  7877  12EF  1C03               	skipc
  7878  12F0  2B00               	goto	L18
  7879  12F1  082D               	movf	___llmod@divisor,w
  7880  12F2  02B1               	subwf	___llmod@dividend,f
  7881  12F3  082E               	movf	___llmod@divisor+1,w
  7882  12F4  1C03               	skipc
  7883  12F5  0F2E               	incfsz	___llmod@divisor+1,w
  7884  12F6  02B2               	subwf	___llmod@dividend+1,f
  7885  12F7  082F               	movf	___llmod@divisor+2,w
  7886  12F8  1C03               	skipc
  7887  12F9  0F2F               	incfsz	___llmod@divisor+2,w
  7888  12FA  02B3               	subwf	___llmod@dividend+2,f
  7889  12FB  0830               	movf	___llmod@divisor+3,w
  7890  12FC  1C03               	skipc
  7891  12FD  0F30               	incfsz	___llmod@divisor+3,w
  7892  12FE  02B4               	subwf	___llmod@dividend+3,f
  7893  12FF  1003               	clrc
  7894  1300                     L18:	
  7895  1300  0CB0               	rrf	___llmod@divisor+3,f
  7896  1301  0CAF               	rrf	___llmod@divisor+2,f
  7897  1302  0CAE               	rrf	___llmod@divisor+1,f
  7898  1303  0CAD               	rrf	___llmod@divisor,f
  7899  1304  0BB5               	decfsz	___llmod@counter,f
  7900  1305  2AE1               	goto	l6925
  7901  1306                     l6933:	
  7902  1306  0834               	movf	___llmod@dividend+3,w
  7903  1307  00B0               	movwf	?___llmod+3
  7904  1308  0833               	movf	___llmod@dividend+2,w
  7905  1309  00AF               	movwf	?___llmod+2
  7906  130A  0832               	movf	___llmod@dividend+1,w
  7907  130B  00AE               	movwf	?___llmod+1
  7908  130C  0831               	movf	___llmod@dividend,w
  7909  130D  00AD               	movwf	?___llmod
  7910  130E  0008               	return
  7911  130F                     __end_of___llmod:	
  7912                           
  7913                           	psect	text701
  7914  13A4                     __ptext701:	
  7915 ;; =============== function ___awdiv ends ============
  7916                           
  7917                           
  7918 ;; *************** function ___fttol *****************
  7919 ;; Defined at:
  7920 ;;		line 45 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\fttol.c"
  7921 ;; Parameters:    Size  Location     Type
  7922 ;;  f1              3   14[BANK0 ] float 
  7923 ;; Auto vars:     Size  Location     Type
  7924 ;;  lval            4   22[BANK0 ] unsigned long 
  7925 ;;  exp1            1   26[BANK0 ] unsigned char 
  7926 ;;  sign1           1   21[BANK0 ] unsigned char 
  7927 ;; Return value:  Size  Location     Type
  7928 ;;                  4   14[BANK0 ] long 
  7929 ;; Registers used:
  7930 ;;		wreg, status,2, status,0
  7931 ;; Tracked objects:
  7932 ;;		On entry : 60/0
  7933 ;;		On exit  : 60/0
  7934 ;;		Unchanged: FFF9F/0
  7935 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7936 ;;      Params:         0       4       0       0       0
  7937 ;;      Locals:         0       6       0       0       0
  7938 ;;      Temps:          0       3       0       0       0
  7939 ;;      Totals:         0      13       0       0       0
  7940 ;;Total ram usage:       13 bytes
  7941 ;; Hardware stack levels used:    1
  7942 ;; Hardware stack levels required when called:    2
  7943 ;; This function calls:
  7944 ;;		Nothing
  7945 ;; This function is called by:
  7946 ;;		__doprnt
  7947 ;; This function uses a non-reentrant model
  7948 ;;
  7949  13A4                     ___fttol:	
  7950                           
  7951                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  7952  13A4  23FF  160A  118A   	fcall	PL32	;call to abstracted procedure
  7953  13A7  1003               	clrc
  7954  13A8  0D33               	rlf	??___fttol+1,w
  7955  13A9  0D34               	rlf	??___fttol+2,w
  7956  13AA  00BA               	movwf	___fttol@exp1
  7957  13AB  08BA               	movf	___fttol@exp1,f
  7958  13AC  1D03               	skipz
  7959  13AD  2BB3               	goto	l6839
  7960  13AE                     l6837:	
  7961  13AE  01AE               	clrf	?___fttol
  7962  13AF  01AF               	clrf	?___fttol+1
  7963  13B0  01B0               	clrf	?___fttol+2
  7964  13B1  01B1               	clrf	?___fttol+3
  7965  13B2  0008               	return
  7966  13B3                     l6839:	
  7967  13B3  23FF  160A  118A   	fcall	PL32	;call to abstracted procedure
  7968  13B6  3017               	movlw	23
  7969  13B7                     u2775:	
  7970  13B7  1003               	clrc
  7971  13B8  0CB4               	rrf	??___fttol+2,f
  7972  13B9  0CB3               	rrf	??___fttol+1,f
  7973  13BA  0CB2               	rrf	??___fttol,f
  7974  13BB  3EFF               	addlw	-1
  7975  13BC  1D03               	skipz
  7976  13BD  2BB7               	goto	u2775
  7977  13BE  0832               	movf	??___fttol,w
  7978  13BF  00B5               	movwf	___fttol@sign1
  7979  13C0  17AF               	bsf	___fttol@f1+1,7
  7980  13C1  01B0               	clrf	___fttol@f1+2
  7981  13C2  082E               	movf	___fttol@f1,w
  7982  13C3  00B6               	movwf	___fttol@lval
  7983  13C4  082F               	movf	___fttol@f1+1,w
  7984  13C5  00B7               	movwf	___fttol@lval+1
  7985  13C6  0830               	movf	___fttol@f1+2,w
  7986  13C7  00B8               	movwf	___fttol@lval+2
  7987  13C8  308E               	movlw	142
  7988  13C9  01B9               	clrf	___fttol@lval+3
  7989  13CA  02BA               	subwf	___fttol@exp1,f
  7990  13CB  1FBA               	btfss	___fttol@exp1,7
  7991  13CC  2BDA               	goto	l6859
  7992  13CD  083A               	movf	___fttol@exp1,w
  7993  13CE  3A80               	xorlw	128
  7994  13CF  3E8F               	addlw	143
  7995  13D0  1C03               	btfss	3,0
  7996  13D1  2BAE               	goto	l6837
  7997  13D2                     l6855:	
  7998  13D2  1003               	clrc
  7999  13D3  0CB9               	rrf	___fttol@lval+3,f
  8000  13D4  0CB8               	rrf	___fttol@lval+2,f
  8001  13D5  0CB7               	rrf	___fttol@lval+1,f
  8002  13D6  0CB6               	rrf	___fttol@lval,f
  8003  13D7  0FBA               	incfsz	___fttol@exp1,f
  8004  13D8  2BD2               	goto	l6855
  8005  13D9  2BE8               	goto	l6865
  8006  13DA                     l6859:	
  8007  13DA  3018               	movlw	24
  8008  13DB  023A               	subwf	___fttol@exp1,w
  8009  13DC  1803               	btfsc	3,0
  8010  13DD  2BAE               	goto	l6837
  8011  13DE                     l3506:	
  8012  13DE  08BA               	movf	___fttol@exp1,f
  8013  13DF  1903               	btfsc	3,2
  8014  13E0  2BE8               	goto	l6865
  8015  13E1  1003               	clrc
  8016  13E2  0DB6               	rlf	___fttol@lval,f
  8017  13E3  0DB7               	rlf	___fttol@lval+1,f
  8018  13E4  0DB8               	rlf	___fttol@lval+2,f
  8019  13E5  0DB9               	rlf	___fttol@lval+3,f
  8020  13E6  03BA               	decf	___fttol@exp1,f
  8021  13E7  2BDE               	goto	l3506
  8022  13E8                     l6865:	
  8023  13E8  0835               	movf	___fttol@sign1,w
  8024  13E9  1903               	btfsc	3,2
  8025  13EA  2BF6               	goto	l6869
  8026  13EB  09B6               	comf	___fttol@lval,f
  8027  13EC  09B7               	comf	___fttol@lval+1,f
  8028  13ED  09B8               	comf	___fttol@lval+2,f
  8029  13EE  09B9               	comf	___fttol@lval+3,f
  8030  13EF  0AB6               	incf	___fttol@lval,f
  8031  13F0  1903               	skipnz
  8032  13F1  0AB7               	incf	___fttol@lval+1,f
  8033  13F2  1903               	skipnz
  8034  13F3  0AB8               	incf	___fttol@lval+2,f
  8035  13F4  1903               	skipnz
  8036  13F5  0AB9               	incf	___fttol@lval+3,f
  8037  13F6                     l6869:	
  8038  13F6  0839               	movf	___fttol@lval+3,w
  8039  13F7  00B1               	movwf	?___fttol+3
  8040  13F8  0838               	movf	___fttol@lval+2,w
  8041  13F9  00B0               	movwf	?___fttol+2
  8042  13FA  0837               	movf	___fttol@lval+1,w
  8043  13FB  00AF               	movwf	?___fttol+1
  8044  13FC  0836               	movf	___fttol@lval,w
  8045  13FD  00AE               	movwf	?___fttol
  8046  13FE  0008               	return
  8047  13FF                     __end_of___fttol:	
  8048  13FF                     PL32:	
  8049  13FF  082E               	movf	___fttol@f1,w
  8050  1400  00B2               	movwf	??___fttol
  8051  1401  082F               	movf	___fttol@f1+1,w
  8052  1402  00B3               	movwf	??___fttol+1
  8053  1403  0830               	movf	___fttol@f1+2,w
  8054  1404  00B4               	movwf	??___fttol+2
  8055  1405  0008               	return
  8056                           
  8057                           	psect	text707
  8058  147D                     __ptext707:	
  8059 ;; =============== function ___bmul ends ============
  8060                           
  8061                           
  8062 ;; *************** function __div_to_l_ *****************
  8063 ;; Defined at:
  8064 ;;		line 61 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\fldivl.c"
  8065 ;; Parameters:    Size  Location     Type
  8066 ;;  f1              3    0[BANK0 ] unsigned char 
  8067 ;;  f2              3    3[BANK0 ] unsigned char 
  8068 ;; Auto vars:     Size  Location     Type
  8069 ;;  quot            4   14[BANK0 ] unsigned long 
  8070 ;;  exp1            1   19[BANK0 ] unsigned char 
  8071 ;;  cntr            1   18[BANK0 ] unsigned char 
  8072 ;; Return value:  Size  Location     Type
  8073 ;;                  4    0[BANK0 ] unsigned long 
  8074 ;; Registers used:
  8075 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  8076 ;; Tracked objects:
  8077 ;;		On entry : 0/0
  8078 ;;		On exit  : 60/0
  8079 ;;		Unchanged: FFE9F/0
  8080 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8081 ;;      Params:         0       6       0       0       0
  8082 ;;      Locals:         0       6       0       0       0
  8083 ;;      Temps:          0       8       0       0       0
  8084 ;;      Totals:         0      20       0       0       0
  8085 ;;Total ram usage:       20 bytes
  8086 ;; Hardware stack levels used:    1
  8087 ;; Hardware stack levels required when called:    2
  8088 ;; This function calls:
  8089 ;;		Nothing
  8090 ;; This function is called by:
  8091 ;;		__doprnt
  8092 ;; This function uses a non-reentrant model
  8093 ;;
  8094  147D                     __div_to_l_:	
  8095                           
  8096                           ; Regs used in __div_to_l_: [wreg-fsr0h+status,2+status,0]
  8097  147D  3020               	movlw	low __div_to_l_@f1
  8098  147E  0084               	movwf	4
  8099  147F  1383               	bcf	3,7	;select IRP bank0
  8100  1480  0800               	movf	0,w
  8101  1481  1283               	bcf	3,5	;RP0=0, select bank0
  8102  1482  1303               	bcf	3,6	;RP1=0, select bank0
  8103  1483  00A6               	movwf	??__div_to_l_
  8104  1484  0A84               	incf	4,f
  8105  1485  0800               	movf	0,w
  8106  1486  00A7               	movwf	??__div_to_l_+1
  8107  1487  0A84               	incf	4,f
  8108  1488  0800               	movf	0,w
  8109  1489  00A8               	movwf	??__div_to_l_+2
  8110  148A  0A84               	incf	4,f
  8111  148B  0800               	movf	0,w
  8112  148C  00A9               	movwf	??__div_to_l_+3
  8113  148D  1003               	clrc
  8114  148E  0D28               	rlf	??__div_to_l_+2,w
  8115  148F  0D29               	rlf	??__div_to_l_+3,w
  8116  1490  00B3               	movwf	__div_to_l_@exp1
  8117  1491  08B3               	movf	__div_to_l_@exp1,f
  8118  1492  1D03               	skipz
  8119  1493  2C99               	goto	l6691
  8120  1494                     l6689:	
  8121  1494  01A0               	clrf	?__div_to_l_
  8122  1495  01A1               	clrf	?__div_to_l_+1
  8123  1496  01A2               	clrf	?__div_to_l_+2
  8124  1497  01A3               	clrf	?__div_to_l_+3
  8125  1498  0008               	return
  8126  1499                     l6691:	
  8127  1499  3023               	movlw	low __div_to_l_@f2
  8128  149A  253C  160A  118A   	fcall	PL7	;call to abstracted procedure
  8129  149D  1003               	clrc
  8130  149E  0D28               	rlf	??__div_to_l_+2,w
  8131  149F  0D29               	rlf	??__div_to_l_+3,w
  8132  14A0  00B2               	movwf	__div_to_l_@cntr
  8133  14A1  08B2               	movf	__div_to_l_@cntr,f
  8134  14A2  1903               	btfsc	3,2
  8135  14A3  2C94               	goto	l6689
  8136  14A4  3020               	movlw	low __div_to_l_@f1
  8137  14A5  0084               	movwf	4
  8138  14A6  3080               	movlw	128
  8139  14A7  0A84               	incf	4,f
  8140  14A8  0A84               	incf	4,f
  8141  14A9  0480               	iorwf	0,f
  8142  14AA  3020               	movlw	low __div_to_l_@f1
  8143  14AB  0A84               	incf	4,f
  8144  14AC  0084               	movwf	4
  8145  14AD  3023               	movlw	low __div_to_l_@f2
  8146  14AE  0A84               	incf	4,f
  8147  14AF  0A84               	incf	4,f
  8148  14B0  0A84               	incf	4,f
  8149  14B1  0180               	clrf	0
  8150  14B2  0084               	movwf	4
  8151  14B3  3080               	movlw	128
  8152  14B4  0A84               	incf	4,f
  8153  14B5  0A84               	incf	4,f
  8154  14B6  0480               	iorwf	0,f
  8155  14B7  3023               	movlw	low __div_to_l_@f2
  8156  14B8  0A84               	incf	4,f
  8157  14B9  0084               	movwf	4
  8158  14BA  307F               	movlw	127
  8159  14BB  0A84               	incf	4,f
  8160  14BC  0A84               	incf	4,f
  8161  14BD  0A84               	incf	4,f
  8162  14BE  0180               	clrf	0
  8163  14BF  01AE               	clrf	__div_to_l_@quot
  8164  14C0  01AF               	clrf	__div_to_l_@quot+1
  8165  14C1  01B0               	clrf	__div_to_l_@quot+2
  8166  14C2  01B1               	clrf	__div_to_l_@quot+3
  8167  14C3  02B3               	subwf	__div_to_l_@exp1,f
  8168  14C4  30A0               	movlw	160
  8169  14C5  0732               	addwf	__div_to_l_@cntr,w
  8170  14C6  00A6               	movwf	??__div_to_l_
  8171  14C7  02B3               	subwf	__div_to_l_@exp1,f
  8172  14C8  3020               	movlw	32
  8173  14C9  00B2               	movwf	__div_to_l_@cntr
  8174  14CA                     l6705:	
  8175  14CA  3023               	movlw	low __div_to_l_@f2
  8176  14CB  1003               	clrc
  8177  14CC  0DAE               	rlf	__div_to_l_@quot,f
  8178  14CD  0DAF               	rlf	__div_to_l_@quot+1,f
  8179  14CE  0DB0               	rlf	__div_to_l_@quot+2,f
  8180  14CF  0DB1               	rlf	__div_to_l_@quot+3,f
  8181  14D0  253C  160A  118A   	fcall	PL7	;call to abstracted procedure
  8182  14D3  3020               	movlw	low __div_to_l_@f1
  8183  14D4  0084               	movwf	4
  8184  14D5  0800               	movf	0,w
  8185  14D6  00AA               	movwf	??__div_to_l_+4
  8186  14D7  0A84               	incf	4,f
  8187  14D8  0800               	movf	0,w
  8188  14D9  00AB               	movwf	??__div_to_l_+5
  8189  14DA  0A84               	incf	4,f
  8190  14DB  0800               	movf	0,w
  8191  14DC  00AC               	movwf	??__div_to_l_+6
  8192  14DD  0A84               	incf	4,f
  8193  14DE  0800               	movf	0,w
  8194  14DF  00AD               	movwf	??__div_to_l_+7
  8195  14E0  0829               	movf	??__div_to_l_+3,w
  8196  14E1  022D               	subwf	??__div_to_l_+7,w
  8197  14E2  1D03               	skipz
  8198  14E3  2CEE               	goto	u2515
  8199  14E4  0828               	movf	??__div_to_l_+2,w
  8200  14E5  022C               	subwf	??__div_to_l_+6,w
  8201  14E6  1D03               	skipz
  8202  14E7  2CEE               	goto	u2515
  8203  14E8  0827               	movf	??__div_to_l_+1,w
  8204  14E9  022B               	subwf	??__div_to_l_+5,w
  8205  14EA  1D03               	skipz
  8206  14EB  2CEE               	goto	u2515
  8207  14EC  0826               	movf	??__div_to_l_,w
  8208  14ED  022A               	subwf	??__div_to_l_+4,w
  8209  14EE                     u2515:	
  8210  14EE  1C03               	skipc
  8211  14EF  2D0A               	goto	l3679
  8212  14F0  3023               	movlw	low __div_to_l_@f2
  8213  14F1  253C  160A  118A   	fcall	PL7	;call to abstracted procedure
  8214  14F4  3020               	movlw	low __div_to_l_@f1
  8215  14F5  0084               	movwf	4
  8216  14F6  0826               	movf	??__div_to_l_,w
  8217  14F7  0280               	subwf	0,f
  8218  14F8  0A84               	incf	4,f
  8219  14F9  0827               	movf	??__div_to_l_+1,w
  8220  14FA  1C03               	skipc
  8221  14FB  0F27               	incfsz	??__div_to_l_+1,w
  8222  14FC  0280               	subwf	0,f
  8223  14FD  0A84               	incf	4,f
  8224  14FE  0828               	movf	??__div_to_l_+2,w
  8225  14FF  1C03               	skipc
  8226  1500  0F28               	incfsz	??__div_to_l_+2,w
  8227  1501  0280               	subwf	0,f
  8228  1502  0A84               	incf	4,f
  8229  1503  0829               	movf	??__div_to_l_+3,w
  8230  1504  1C03               	skipc
  8231  1505  0A29               	incf	??__div_to_l_+3,w
  8232  1506  0280               	subwf	0,f
  8233  1507  3003               	movlw	3
  8234  1508  0284               	subwf	4,f
  8235  1509  142E               	bsf	__div_to_l_@quot,0
  8236  150A                     l3679:	
  8237  150A  3020               	movlw	low __div_to_l_@f1
  8238  150B  0084               	movwf	4
  8239  150C  1003               	clrc
  8240  150D  0D80               	rlf	0,f
  8241  150E  0A84               	incf	4,f
  8242  150F  0D80               	rlf	0,f
  8243  1510  0A84               	incf	4,f
  8244  1511  0D80               	rlf	0,f
  8245  1512  0A84               	incf	4,f
  8246  1513  0D80               	rlf	0,f
  8247  1514  0BB2               	decfsz	__div_to_l_@cntr,f
  8248  1515  2CCA               	goto	l6705
  8249  1516  1FB3               	btfss	__div_to_l_@exp1,7
  8250  1517  2D25               	goto	l6723
  8251  1518  0833               	movf	__div_to_l_@exp1,w
  8252  1519  3A80               	xorlw	128
  8253  151A  3E9F               	addlw	159
  8254  151B  1C03               	btfss	3,0
  8255  151C  2C94               	goto	l6689
  8256  151D                     l6719:	
  8257  151D  1003               	clrc
  8258  151E  0CB1               	rrf	__div_to_l_@quot+3,f
  8259  151F  0CB0               	rrf	__div_to_l_@quot+2,f
  8260  1520  0CAF               	rrf	__div_to_l_@quot+1,f
  8261  1521  0CAE               	rrf	__div_to_l_@quot,f
  8262  1522  0FB3               	incfsz	__div_to_l_@exp1,f
  8263  1523  2D1D               	goto	l6719
  8264  1524  2D33               	goto	l6729
  8265  1525                     l6723:	
  8266  1525  3020               	movlw	32
  8267  1526  0233               	subwf	__div_to_l_@exp1,w
  8268  1527  1803               	btfsc	3,0
  8269  1528  2C94               	goto	l6689
  8270  1529                     l3687:	
  8271  1529  08B3               	movf	__div_to_l_@exp1,f
  8272  152A  1903               	btfsc	3,2
  8273  152B  2D33               	goto	l6729
  8274  152C  1003               	clrc
  8275  152D  0DAE               	rlf	__div_to_l_@quot,f
  8276  152E  0DAF               	rlf	__div_to_l_@quot+1,f
  8277  152F  0DB0               	rlf	__div_to_l_@quot+2,f
  8278  1530  0DB1               	rlf	__div_to_l_@quot+3,f
  8279  1531  03B3               	decf	__div_to_l_@exp1,f
  8280  1532  2D29               	goto	l3687
  8281  1533                     l6729:	
  8282  1533  0831               	movf	__div_to_l_@quot+3,w
  8283  1534  00A3               	movwf	?__div_to_l_+3
  8284  1535  0830               	movf	__div_to_l_@quot+2,w
  8285  1536  00A2               	movwf	?__div_to_l_+2
  8286  1537  082F               	movf	__div_to_l_@quot+1,w
  8287  1538  00A1               	movwf	?__div_to_l_+1
  8288  1539  082E               	movf	__div_to_l_@quot,w
  8289  153A  00A0               	movwf	?__div_to_l_
  8290  153B  0008               	return
  8291  153C                     __end_of__div_to_l_:	
  8292  153C                     PL7:	
  8293  153C  0084               	movwf	4
  8294  153D  0800               	movf	0,w
  8295  153E  00A6               	movwf	??__div_to_l_
  8296  153F  0A84               	incf	4,f
  8297  1540  0800               	movf	0,w
  8298  1541  00A7               	movwf	??__div_to_l_+1
  8299  1542  0A84               	incf	4,f
  8300  1543  0800               	movf	0,w
  8301  1544  00A8               	movwf	??__div_to_l_+2
  8302  1545  0A84               	incf	4,f
  8303  1546  0800               	movf	0,w
  8304  1547  00A9               	movwf	??__div_to_l_+3
  8305  1548  0008               	return
  8306                           
  8307                           	psect	text708
  8308  1406                     __ptext708:	
  8309 ;; =============== function __div_to_l_ ends ============
  8310                           
  8311                           
  8312 ;; *************** function __tdiv_to_l_ *****************
  8313 ;; Defined at:
  8314 ;;		line 61 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\ftdivl.c"
  8315 ;; Parameters:    Size  Location     Type
  8316 ;;  f1              3    0[BANK0 ] float 
  8317 ;;  f2              3    3[BANK0 ] float 
  8318 ;; Auto vars:     Size  Location     Type
  8319 ;;  quot            4    9[BANK0 ] unsigned long 
  8320 ;;  exp1            1   14[BANK0 ] unsigned char 
  8321 ;;  cntr            1   13[BANK0 ] unsigned char 
  8322 ;; Return value:  Size  Location     Type
  8323 ;;                  4    0[BANK0 ] unsigned long 
  8324 ;; Registers used:
  8325 ;;		wreg, status,2, status,0
  8326 ;; Tracked objects:
  8327 ;;		On entry : 60/0
  8328 ;;		On exit  : 60/0
  8329 ;;		Unchanged: FFF9F/0
  8330 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8331 ;;      Params:         0       6       0       0       0
  8332 ;;      Locals:         0       6       0       0       0
  8333 ;;      Temps:          0       3       0       0       0
  8334 ;;      Totals:         0      15       0       0       0
  8335 ;;Total ram usage:       15 bytes
  8336 ;; Hardware stack levels used:    1
  8337 ;; Hardware stack levels required when called:    2
  8338 ;; This function calls:
  8339 ;;		Nothing
  8340 ;; This function is called by:
  8341 ;;		__doprnt
  8342 ;; This function uses a non-reentrant model
  8343 ;;
  8344  1406                     __tdiv_to_l_:	
  8345                           
  8346                           ; Regs used in __tdiv_to_l_: [wreg+status,2+status,0]
  8347  1406  0820               	movf	__tdiv_to_l_@f1,w
  8348  1407  00A6               	movwf	??__tdiv_to_l_
  8349  1408  0821               	movf	__tdiv_to_l_@f1+1,w
  8350  1409  00A7               	movwf	??__tdiv_to_l_+1
  8351  140A  0822               	movf	__tdiv_to_l_@f1+2,w
  8352  140B  00A8               	movwf	??__tdiv_to_l_+2
  8353  140C  1003               	clrc
  8354  140D  0D27               	rlf	??__tdiv_to_l_+1,w
  8355  140E  0D28               	rlf	??__tdiv_to_l_+2,w
  8356  140F  00AE               	movwf	__tdiv_to_l_@exp1
  8357  1410  08AE               	movf	__tdiv_to_l_@exp1,f
  8358  1411  1D03               	skipz
  8359  1412  2C18               	goto	l6643
  8360  1413                     l6641:	
  8361  1413  01A0               	clrf	?__tdiv_to_l_
  8362  1414  01A1               	clrf	?__tdiv_to_l_+1
  8363  1415  01A2               	clrf	?__tdiv_to_l_+2
  8364  1416  01A3               	clrf	?__tdiv_to_l_+3
  8365  1417  0008               	return
  8366  1418                     l6643:	
  8367  1418  0823               	movf	__tdiv_to_l_@f2,w
  8368  1419  00A6               	movwf	??__tdiv_to_l_
  8369  141A  0824               	movf	__tdiv_to_l_@f2+1,w
  8370  141B  00A7               	movwf	??__tdiv_to_l_+1
  8371  141C  0825               	movf	__tdiv_to_l_@f2+2,w
  8372  141D  00A8               	movwf	??__tdiv_to_l_+2
  8373  141E  1003               	clrc
  8374  141F  0D27               	rlf	??__tdiv_to_l_+1,w
  8375  1420  0D28               	rlf	??__tdiv_to_l_+2,w
  8376  1421  00AD               	movwf	__tdiv_to_l_@cntr
  8377  1422  08AD               	movf	__tdiv_to_l_@cntr,f
  8378  1423  1903               	btfsc	3,2
  8379  1424  2C13               	goto	l6641
  8380  1425  307F               	movlw	127
  8381  1426  17A1               	bsf	__tdiv_to_l_@f1+1,7
  8382  1427  01A2               	clrf	__tdiv_to_l_@f1+2
  8383  1428  17A4               	bsf	__tdiv_to_l_@f2+1,7
  8384  1429  01A5               	clrf	__tdiv_to_l_@f2+2
  8385  142A  01A9               	clrf	__tdiv_to_l_@quot
  8386  142B  01AA               	clrf	__tdiv_to_l_@quot+1
  8387  142C  01AB               	clrf	__tdiv_to_l_@quot+2
  8388  142D  01AC               	clrf	__tdiv_to_l_@quot+3
  8389  142E  02AE               	subwf	__tdiv_to_l_@exp1,f
  8390  142F  3098               	movlw	152
  8391  1430  072D               	addwf	__tdiv_to_l_@cntr,w
  8392  1431  00A6               	movwf	??__tdiv_to_l_
  8393  1432  02AE               	subwf	__tdiv_to_l_@exp1,f
  8394  1433  3018               	movlw	24
  8395  1434  00AD               	movwf	__tdiv_to_l_@cntr
  8396  1435                     l6657:	
  8397  1435  1003               	clrc
  8398  1436  0DA9               	rlf	__tdiv_to_l_@quot,f
  8399  1437  0DAA               	rlf	__tdiv_to_l_@quot+1,f
  8400  1438  0DAB               	rlf	__tdiv_to_l_@quot+2,f
  8401  1439  0DAC               	rlf	__tdiv_to_l_@quot+3,f
  8402  143A  0825               	movf	__tdiv_to_l_@f2+2,w
  8403  143B  0222               	subwf	__tdiv_to_l_@f1+2,w
  8404  143C  1D03               	skipz
  8405  143D  2C44               	goto	u2425
  8406  143E  0824               	movf	__tdiv_to_l_@f2+1,w
  8407  143F  0221               	subwf	__tdiv_to_l_@f1+1,w
  8408  1440  1D03               	skipz
  8409  1441  2C44               	goto	u2425
  8410  1442  0823               	movf	__tdiv_to_l_@f2,w
  8411  1443  0220               	subwf	__tdiv_to_l_@f1,w
  8412  1444                     u2425:	
  8413  1444  1C03               	skipc
  8414  1445  2C52               	goto	L23
  8415  1446  0823               	movf	__tdiv_to_l_@f2,w
  8416  1447  02A0               	subwf	__tdiv_to_l_@f1,f
  8417  1448  0824               	movf	__tdiv_to_l_@f2+1,w
  8418  1449  1C03               	skipc
  8419  144A  0F24               	incfsz	__tdiv_to_l_@f2+1,w
  8420  144B  02A1               	subwf	__tdiv_to_l_@f1+1,f
  8421  144C  0825               	movf	__tdiv_to_l_@f2+2,w
  8422  144D  1C03               	skipc
  8423  144E  0A25               	incf	__tdiv_to_l_@f2+2,w
  8424  144F  02A2               	subwf	__tdiv_to_l_@f1+2,f
  8425  1450  1429               	bsf	__tdiv_to_l_@quot,0
  8426  1451  1003               	clrc
  8427  1452                     L23:	
  8428  1452  0DA0               	rlf	__tdiv_to_l_@f1,f
  8429  1453  0DA1               	rlf	__tdiv_to_l_@f1+1,f
  8430  1454  0DA2               	rlf	__tdiv_to_l_@f1+2,f
  8431  1455  0BAD               	decfsz	__tdiv_to_l_@cntr,f
  8432  1456  2C35               	goto	l6657
  8433  1457  1FAE               	btfss	__tdiv_to_l_@exp1,7
  8434  1458  2C66               	goto	l6677
  8435  1459  082E               	movf	__tdiv_to_l_@exp1,w
  8436  145A  3A80               	xorlw	128
  8437  145B  3E97               	addlw	151
  8438  145C  1C03               	btfss	3,0
  8439  145D  2C13               	goto	l6641
  8440  145E                     l6673:	
  8441  145E  1003               	clrc
  8442  145F  0CAC               	rrf	__tdiv_to_l_@quot+3,f
  8443  1460  0CAB               	rrf	__tdiv_to_l_@quot+2,f
  8444  1461  0CAA               	rrf	__tdiv_to_l_@quot+1,f
  8445  1462  0CA9               	rrf	__tdiv_to_l_@quot,f
  8446  1463  0FAE               	incfsz	__tdiv_to_l_@exp1,f
  8447  1464  2C5E               	goto	l6673
  8448  1465  2C74               	goto	l6683
  8449  1466                     l6677:	
  8450  1466  3018               	movlw	24
  8451  1467  022E               	subwf	__tdiv_to_l_@exp1,w
  8452  1468  1803               	btfsc	3,0
  8453  1469  2C13               	goto	l6641
  8454  146A                     l3644:	
  8455  146A  08AE               	movf	__tdiv_to_l_@exp1,f
  8456  146B  1903               	btfsc	3,2
  8457  146C  2C74               	goto	l6683
  8458  146D  1003               	clrc
  8459  146E  0DA9               	rlf	__tdiv_to_l_@quot,f
  8460  146F  0DAA               	rlf	__tdiv_to_l_@quot+1,f
  8461  1470  0DAB               	rlf	__tdiv_to_l_@quot+2,f
  8462  1471  0DAC               	rlf	__tdiv_to_l_@quot+3,f
  8463  1472  03AE               	decf	__tdiv_to_l_@exp1,f
  8464  1473  2C6A               	goto	l3644
  8465  1474                     l6683:	
  8466  1474  082C               	movf	__tdiv_to_l_@quot+3,w
  8467  1475  00A3               	movwf	?__tdiv_to_l_+3
  8468  1476  082B               	movf	__tdiv_to_l_@quot+2,w
  8469  1477  00A2               	movwf	?__tdiv_to_l_+2
  8470  1478  082A               	movf	__tdiv_to_l_@quot+1,w
  8471  1479  00A1               	movwf	?__tdiv_to_l_+1
  8472  147A  0829               	movf	__tdiv_to_l_@quot,w
  8473  147B  00A0               	movwf	?__tdiv_to_l_
  8474  147C  0008               	return
  8475  147D                     __end_of__tdiv_to_l_:	
  8476                           
  8477                           	psect	text711
  8478  07F2                     __ptext711:	
  8479 ;; =============== function _send_char ends ============
  8480                           
  8481                           
  8482 ;; *************** function _rx_init *****************
  8483 ;; Defined at:
  8484 ;;		line 123 in file "C:\Users\DELL\Desktop\vxl\mp\nhapdulieu.c"
  8485 ;; Parameters:    Size  Location     Type
  8486 ;;		None
  8487 ;; Auto vars:     Size  Location     Type
  8488 ;;		None
  8489 ;; Return value:  Size  Location     Type
  8490 ;;		None               void
  8491 ;; Registers used:
  8492 ;;		wreg
  8493 ;; Tracked objects:
  8494 ;;		On entry : 60/0
  8495 ;;		On exit  : 60/0
  8496 ;;		Unchanged: FFF9F/0
  8497 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8498 ;;      Params:         0       0       0       0       0
  8499 ;;      Locals:         0       0       0       0       0
  8500 ;;      Temps:          0       0       0       0       0
  8501 ;;      Totals:         0       0       0       0       0
  8502 ;;Total ram usage:        0 bytes
  8503 ;; Hardware stack levels used:    1
  8504 ;; Hardware stack levels required when called:    2
  8505 ;; This function calls:
  8506 ;;		Nothing
  8507 ;; This function is called by:
  8508 ;;		_main
  8509 ;; This function uses a non-reentrant model
  8510 ;;
  8511  07F2                     _rx_init:	
  8512                           
  8513                           ;nhapdulieu.c: 124: SPBRGH = 0x02 ;
  8514                           
  8515                           ; Regs used in _rx_init: [wreg]
  8516  07F2  3002               	movlw	2
  8517  07F3  1683               	bsf	3,5	;RP0=1, select bank1
  8518  07F4  009A               	movwf	26	;volatile
  8519                           
  8520                           ;nhapdulieu.c: 125: SPBRG = 0x08 ;
  8521  07F5  3008               	movlw	8
  8522  07F6  0099               	movwf	25	;volatile
  8523                           
  8524                           ;nhapdulieu.c: 126: SYNC = 0; BRGH =1; BRG16 = 1;
  8525  07F7  1218               	bcf	24,4
  8526  07F8  1518               	bsf	24,2
  8527  07F9  1703               	bsf	3,6	;RP1=1, select bank3
  8528  07FA  1587               	bsf	7,3
  8529                           
  8530                           ;nhapdulieu.c: 127: RX9 =0;
  8531  07FB  1283               	bcf	3,5	;RP0=0, select bank0
  8532  07FC  1303               	bcf	3,6	;RP1=0, select bank0
  8533  07FD  1318               	bcf	24,6
  8534                           
  8535                           ;nhapdulieu.c: 128: SPEN =1;
  8536  07FE  1798               	bsf	24,7
  8537  07FF  0008               	return
  8538  0800                     __end_of_rx_init:	
  8539                           
  8540                           	psect	text712
  8541  1285                     __ptext712:	
  8542 ;; =============== function _rx_init ends ============
  8543                           
  8544                           
  8545 ;; *************** function _tx_init *****************
  8546 ;; Defined at:
  8547 ;;		line 113 in file "C:\Users\DELL\Desktop\vxl\mp\nhapdulieu.c"
  8548 ;; Parameters:    Size  Location     Type
  8549 ;;		None
  8550 ;; Auto vars:     Size  Location     Type
  8551 ;;		None
  8552 ;; Return value:  Size  Location     Type
  8553 ;;		None               void
  8554 ;; Registers used:
  8555 ;;		wreg
  8556 ;; Tracked objects:
  8557 ;;		On entry : 60/0
  8558 ;;		On exit  : 60/0
  8559 ;;		Unchanged: FFF9F/0
  8560 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8561 ;;      Params:         0       0       0       0       0
  8562 ;;      Locals:         0       0       0       0       0
  8563 ;;      Temps:          0       0       0       0       0
  8564 ;;      Totals:         0       0       0       0       0
  8565 ;;Total ram usage:        0 bytes
  8566 ;; Hardware stack levels used:    1
  8567 ;; Hardware stack levels required when called:    2
  8568 ;; This function calls:
  8569 ;;		Nothing
  8570 ;; This function is called by:
  8571 ;;		_main
  8572 ;; This function uses a non-reentrant model
  8573 ;;
  8574  1285                     _tx_init:	
  8575                           
  8576                           ;nhapdulieu.c: 114: SPBRGH = 0x02 ;
  8577                           
  8578                           ; Regs used in _tx_init: [wreg]
  8579  1285  3002               	movlw	2
  8580  1286  1683               	bsf	3,5	;RP0=1, select bank1
  8581  1287  009A               	movwf	26	;volatile
  8582                           
  8583                           ;nhapdulieu.c: 115: SPBRG = 0x08 ;
  8584  1288  3008               	movlw	8
  8585  1289  0099               	movwf	25	;volatile
  8586                           
  8587                           ;nhapdulieu.c: 116: SYNC = 0; BRGH =1; BRG16 = 1;
  8588  128A  1218               	bcf	24,4
  8589  128B  1518               	bsf	24,2
  8590  128C  1703               	bsf	3,6	;RP1=1, select bank3
  8591  128D  1587               	bsf	7,3
  8592                           
  8593                           ;nhapdulieu.c: 117: TX9 =0;
  8594  128E  1303               	bcf	3,6	;RP1=0, select bank1
  8595  128F  1318               	bcf	24,6
  8596                           
  8597                           ;nhapdulieu.c: 118: TXEN = 1;
  8598  1290  1698               	bsf	24,5
  8599                           
  8600                           ;nhapdulieu.c: 119: SPEN =1;
  8601  1291  1283               	bcf	3,5	;RP0=0, select bank0
  8602  1292  1798               	bsf	24,7
  8603                           
  8604                           ;nhapdulieu.c: 120: CREN=1;
  8605  1293  1618               	bsf	24,4
  8606  1294  0008               	return
  8607  1295                     __end_of_tx_init:	
  8608                           
  8609                           	psect	text714
  8610  1357                     __ptext714:	
  8611 ;; =============== function _isprint ends ============
  8612                           
  8613                           
  8614 ;; *************** function _ngat *****************
  8615 ;; Defined at:
  8616 ;;		line 76 in file "C:\Users\DELL\Desktop\vxl\mp\nhapdulieu.c"
  8617 ;; Parameters:    Size  Location     Type
  8618 ;;		None
  8619 ;; Auto vars:     Size  Location     Type
  8620 ;;		None
  8621 ;; Return value:  Size  Location     Type
  8622 ;;		None               void
  8623 ;; Registers used:
  8624 ;;		wreg, status,2, status,0, pclath, cstack
  8625 ;; Tracked objects:
  8626 ;;		On entry : 0/0
  8627 ;;		On exit  : 60/0
  8628 ;;		Unchanged: FFF9F/0
  8629 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8630 ;;      Params:         0       0       0       0       0
  8631 ;;      Locals:         0       0       0       0       0
  8632 ;;      Temps:          2       0       0       0       0
  8633 ;;      Totals:         2       0       0       0       0
  8634 ;;Total ram usage:        2 bytes
  8635 ;; Hardware stack levels used:    1
  8636 ;; Hardware stack levels required when called:    1
  8637 ;; This function calls:
  8638 ;;		_abs
  8639 ;; This function is called by:
  8640 ;;		Interrupt level 1
  8641 ;; This function uses a non-reentrant model
  8642 ;;
  8643  1357                     _ngat:	
  8644                           
  8645                           ;nhapdulieu.c: 77: if(T0IF)
  8646  1357  1D0B               	btfss	11,2
  8647  1358  2B83               	goto	i1l6609
  8648                           
  8649                           ;nhapdulieu.c: 78: {
  8650                           ;nhapdulieu.c: 79: dem++;
  8651  1359  0AF4               	incf	_dem,f
  8652  135A  1903               	skipnz
  8653  135B  0AF5               	incf	_dem+1,f
  8654                           
  8655                           ;nhapdulieu.c: 80: if(dem == 250)
  8656  135C  0874               	movf	_dem,w
  8657  135D  3AFA               	xorlw	250
  8658  135E  0475               	iorwf	_dem+1,w
  8659  135F  1D03               	skipz
  8660  1360  2B83               	goto	i1l6609
  8661                           
  8662                           ;nhapdulieu.c: 81: {dem= 0;
  8663  1361  01F4               	clrf	_dem
  8664  1362  01F5               	clrf	_dem+1
  8665                           
  8666                           ;nhapdulieu.c: 82: xung=abs(TMR1-xung_old);
  8667  1363  1283               	bcf	3,5	;RP0=0, select bank0
  8668  1364  1303               	bcf	3,6	;RP1=0, select bank0
  8669  1365  080F               	movf	15,w	;volatile
  8670  1366  00F7               	movwf	?_abs+1
  8671  1367  080E               	movf	14,w	;volatile
  8672  1368  00F6               	movwf	?_abs
  8673  1369  0870               	movf	_xung_old,w
  8674  136A  02F6               	subwf	?_abs,f
  8675  136B  0871               	movf	_xung_old+1,w
  8676  136C  1C03               	skipc
  8677  136D  03F7               	decf	?_abs+1,f
  8678  136E  02F7               	subwf	?_abs+1,f
  8679  136F  2396  160A  118A   	fcall	_abs
  8680  1372  0876               	movf	?_abs,w
  8681  1373  1683               	bsf	3,5	;RP0=1, select bank1
  8682  1374  00D8               	movwf	_xung^(0+128)
  8683  1375  0877               	movf	?_abs+1,w
  8684  1376  00D9               	movwf	(_xung+1)^(0+128)
  8685  1377  3000               	movlw	0
  8686  1378  1BD9               	btfsc	(_xung+1)^(0+128),7
  8687  1379  30FF               	movlw	255
  8688  137A  00DA               	movwf	(_xung+2)^(0+128)
  8689  137B  00DB               	movwf	(_xung+3)^(0+128)
  8690                           
  8691                           ;nhapdulieu.c: 83: xung_old=TMR1;}
  8692  137C  1283               	bcf	3,5	;RP0=0, select bank0
  8693  137D  080E               	movf	14,w	;volatile
  8694  137E  00F0               	movwf	_xung_old
  8695  137F  080F               	movf	15,w	;volatile
  8696  1380  00F1               	movwf	_xung_old+1
  8697  1381  01F2               	clrf	_xung_old+2
  8698  1382  01F3               	clrf	_xung_old+3
  8699  1383                     i1l6609:	
  8700                           
  8701                           ;nhapdulieu.c: 84: }
  8702                           ;nhapdulieu.c: 85: if(RCIF)
  8703  1383  1283               	bcf	3,5	;RP0=0, select bank0
  8704  1384  1303               	bcf	3,6	;RP1=0, select bank0
  8705  1385  1E8C               	btfss	12,5
  8706  1386  2B8A               	goto	i1l6613
  8707                           
  8708                           ;nhapdulieu.c: 86: {
  8709                           ;nhapdulieu.c: 87: rx_data=RCREG;
  8710  1387  081A               	movf	26,w	;volatile
  8711  1388  1683               	bsf	3,5	;RP0=1, select bank1
  8712  1389  00D7               	movwf	_rx_data^(0+128)
  8713  138A                     i1l6613:	
  8714                           
  8715                           ;nhapdulieu.c: 88: }
  8716                           ;nhapdulieu.c: 89: RCIF=0;
  8717  138A  1283               	bcf	3,5	;RP0=0, select bank0
  8718  138B  3006               	movlw	6
  8719  138C  128C               	bcf	12,5
  8720                           
  8721                           ;nhapdulieu.c: 90: TMR0 = 6;
  8722  138D  0081               	movwf	1	;volatile
  8723                           
  8724                           ;nhapdulieu.c: 91: T0IF = 0;
  8725  138E  110B               	bcf	11,2
  8726  138F  087B               	movf	??_ngat+1,w
  8727  1390  008A               	movwf	10
  8728  1391  0E7A               	swapf	??_ngat^(0+-128),w
  8729  1392  0083               	movwf	3
  8730  1393  0EFE               	swapf	126,f
  8731  1394  0E7E               	swapf	126,w
  8732  1395  0009               	retfie
  8733  1396                     __end_of_ngat:	
  8734  1396                     __ptext715:	
  8735 ;; =============== function _ngat ends ============
  8736                           
  8737                           
  8738 ;; *************** function _abs *****************
  8739 ;; Defined at:
  8740 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\abs.c"
  8741 ;; Parameters:    Size  Location     Type
  8742 ;;  a               2    0[COMMON] int 
  8743 ;; Auto vars:     Size  Location     Type
  8744 ;;		None
  8745 ;; Return value:  Size  Location     Type
  8746 ;;                  2    0[COMMON] int 
  8747 ;; Registers used:
  8748 ;;		wreg, status,2, status,0
  8749 ;; Tracked objects:
  8750 ;;		On entry : 60/0
  8751 ;;		On exit  : 60/0
  8752 ;;		Unchanged: FFF9F/0
  8753 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8754 ;;      Params:         2       0       0       0       0
  8755 ;;      Locals:         0       0       0       0       0
  8756 ;;      Temps:          2       0       0       0       0
  8757 ;;      Totals:         4       0       0       0       0
  8758 ;;Total ram usage:        4 bytes
  8759 ;; Hardware stack levels used:    1
  8760 ;; This function calls:
  8761 ;;		Nothing
  8762 ;; This function is called by:
  8763 ;;		_ngat
  8764 ;; This function uses a non-reentrant model
  8765 ;;
  8766  1396                     _abs:	
  8767                           
  8768                           ; Regs used in _abs: [wreg+status,2+status,0]
  8769  1396  1FF7               	btfss	abs@a+1,7
  8770  1397  0008               	return
  8771  1398  0976               	comf	abs@a,w
  8772  1399  00F8               	movwf	??_abs
  8773  139A  0977               	comf	abs@a+1,w
  8774  139B  00F9               	movwf	??_abs+1
  8775  139C  0AF8               	incf	??_abs,f
  8776  139D  1903               	skipnz
  8777  139E  0AF9               	incf	??_abs+1,f
  8778  139F  0878               	movf	??_abs,w
  8779  13A0  00F6               	movwf	?_abs
  8780  13A1  0879               	movf	??_abs+1,w
  8781  13A2  00F7               	movwf	?_abs+1
  8782  13A3  0008               	return
  8783  13A4                     __end_of_abs:	
  8784                           
  8785 ;; =============== function _abs ends ============
  8786  0002                     
  8787                           	psect	intentry
  8788  0004                     __pintentry:	
  8789                           ; Regs used in _ngat: [wreg+status,2+status,0+pclath+cstack]
  8790                           
  8791  0004                     interrupt_function:	
  8792  007E                     saved_w	set	btemp
  8793  0004  00FE               	movwf	btemp
  8794  0005  0E03               	swapf	3,w
  8795  0006  00FA               	movwf	??_ngat
  8796  0007  080A               	movf	10,w
  8797  0008  00FB               	movwf	??_ngat+1
  8798  0009  160A  118A  2B57   	ljmp	_ngat
  8799                           
  8800                           	psect	functab
  8801  0100                     __pfunctab:	
  8802  0100                     fptable:	
  8803  0100  00FF               	movwf	(btemp+1)& (0+127)
  8804  0101  3001               	movlw	high fptable
  8805  0102  008A               	movwf	10
  8806  0103  087F               	movf	(btemp+1)& (0+127),w
  8807  0104  0782               	addwf	2,f
  8808  0105                     fpbase:	
  8809  0105  2905               	goto	fpbase	; Call via a null pointer and you will get stuck here.
  8810  0106                     fp__putch:	
  8811  0106  120A  118A  2CFA   	ljmp	_putch
  8812  007E                     btemp	set	126	;btemp
  8813  007E                     wtemp0	set	126


HI-TECH Software PICC Macro Assembler V9.83 build 10920 
Symbol Table                                                                                   Tue Dec 06 11:34:29 2022

         ___altoft@exp 002C                      _v 00D4                      pc 0002         ___bmul@product 002A  
        ___altoft@sign 002D           ___awdiv@sign 002B                     fsr 0004    ___wmul@multiplicand 0022  
         ___ftadd@exp1 0057           ___ftadd@exp2 0056          ?_lcd_put_byte 0020           ___ftadd@sign 0055  
                  _GIE 005F                    _RA3 002B                    _RA4 002C                    _RD1 0041  
                  _RD2 0042                    _RD3 0043                    _RD4 0044                    _RD5 0045  
                  _RD6 0046                    _RD7 0047                    _PS0 0408                    _PR2 0092  
                  _PS1 0409                    _PS2 040A                    _PSA 040B                    _RX9 00C6  
                  _TX9 04C6                    _abs 1396                    _dem 0074                    fsr0 0004  
                  indf 0000           ___awmod@sign 0025      pwm_10bit@data_pwm 002E           ___ftdiv@cntr 0037  
         ___ftdiv@sign 003C                   ?_abs 0076                   l1056 0000                   l2201 0000  
                 l1090 0000                   l1067 0000                   l1059 0000                   l2204 0000  
                 l2244 083B                   l2166 170F                   l2186 00F5                   l2195 0000  
                 l2259 08BE                   l2189 0000                   l2198 0000                   l3422 0000  
                 l2366 0000                   l3360 0000                   l3506 13DE                   l3450 0780  
                 l3355 0000                   l3419 165A                   l3428 0000                   l3380 0000  
                 l3621 0000                   l3373 0000                   l3607 0000                   l3392 0000  
                 l3472 0000                   l3553 0000                   l3386 0000                   l3539 0000  
                 l7011 03C6                   l7003 03BA                   l3644 146A                   l3637 0000  
                 l3549 0000                   l7021 0000                   l3629 0000                   l7023 03E1  
                 l7031 0000                   l7103 0727                   l3479 018C                   l3680 0000  
                 l3568 0000                   l7017 0000                   l7041 062D                   l7121 0000  
                 l7113 073D                   l7201 0000                   l7019 03D9                   l7051 0000  
                 l7043 063C                   l7035 0000                   l7027 0000                   l7131 075A  
                 l7123 0000                   l7115 0000                   l7107 072E                   l7211 0000  
                 l7203 019F                   l7061 0000                   l7053 0675                   l7045 064C  
                 l7037 0000                   l7029 0000                   l7133 075F                   l7125 074B  
                 l7109 0000                   l7213 0000                   l7301 0000                   l3687 1529  
                 l3679 150A                   l7055 0682                   l7047 0000                   l7039 0000  
                 l7071 0000                   l7063 0000                   l7151 078B                   l7143 0777  
                 l7127 0000                   l7135 0764                   l7207 0000                   l7231 0000  
                 l7223 03F7                   l7311 05B6                   l7303 0000                   l7057 0691  
                 l7049 0000                   l7073 0000                   l7065 0000                   l7081 0000  
                 l7161 0000                   l7145 077C                   l7137 0768                   l7241 0000  
                 l7233 0000                   l7217 0000                   l7305 0000                   l7401 0308  
                 l7059 0000                   l7067 0000                   l7091 0000                   l7155 0000  
                 l7139 0000                   l7251 0423                   l7243 0000                   l7235 0000  
                 l7331 05F2                   l7323 05DA                   l7315 05C2                   l7307 0000  
                 l7411 0000                   l6701 0000                   l7069 0000                   l7077 0000  
                 l7093 00DE                   l7165 0000                   l7157 0796                   l7149 0000  
                 l7173 0000                   l7253 0000                   l7245 0000                   l7237 0000  
                 l7229 0408                   l7309 0000                   l7341 0504                   l7413 0000  
                 l7421 051D                   l7501 0000                   l6623 0000                   l6711 0000  
                 l6703 0000                   l7079 0000                   l7087 0000                   l7167 0000  
                 l7159 0000                   l7095 0000                   l7191 0000                   l7263 0439  
                 l7255 0000                   l7247 0419                   l7239 0000                   l7335 05FE  
                 l7327 05E6                   l7319 05CE                   l7343 0505                   l7407 034D  
                 l7423 0524                   l7511 0000                   l7503 092C                   l6641 1413  
                 l6721 0000                   l6713 0000                   l6705 14CA                   l6801 1681  
                 l7169 07B2                   l7097 0000                   l7193 0000                   l7185 0000  
                 l7265 0000                   l7257 0000                   l7273 0000                   l7345 0000  
                 l7337 0000                   l7353 0000                   l7425 0528                   l7433 053B  
                 l7417 0000                   l7601 0000                   l7513 0000                   l7505 0000  
                 l6571 0000                   l6635 0FDA                   l6627 0000                   l6651 0000  
                 l6643 1418                   l6723 1525                   l6707 0000                   l6803 0000  
                 l6811 046B                   l7099 0000                   l7195 0000                   l7187 0000  
                 l7179 017B                   l7267 0000                   l7259 042F                   l7283 014D  
                 l7275 0000                   l7347 050E                   l7339 0000                   l7363 0000  
                 l7371 0000                   l7419 0517                   l7435 0000                   l7611 0B6B  
                 l7603 0B4C                   l7531 09C7                   l7523 098D                   l7515 0000  
                 l7451 0000                   l6565 06E7                   l6557 0000                   l6581 0000  
                 l6573 0000                   l6629 0000                   l6653 0000                   l6741 0000  
                 l6733 0000                   l6821 0483                   l7197 0000                   l7189 0000  
                 l7269 0000                   l7285 0158                   l7277 0000                   l7293 010B  
                 l7349 0000                   l7429 0534                   l7613 0000                   l7605 0B51  
                 l7525 0000                   l7517 0000                   l7509 0000                   l7461 085A  
                 l7445 082C                   l7437 0000                   l6559 0000                   l6583 0000  
                 l6575 0000                   l6591 0000                   l6663 0000                   l6655 0000  
                 l6647 0000                   l6639 0000                   l6719 151D                   l6743 0000  
                 l6735 0457                   l6751 0FE1                   l6831 0000                   l6823 0488  
                 l6815 046F                   l6807 0000                   l6911 0000                   l6903 0000  
                 l7199 0000                   l7295 0116                   l7367 1628                   l7359 15D4  
                 l7383 0242                   l7375 0000                   l7711 0D74                   l7615 0B71  
                 l7607 0B5D                   l7551 0A4A                   l7527 0000                   l7519 0000  
                 l7535 09D9                   l7471 0000                   l7463 0000                   l7455 083F  
                 l7447 0000                   l6577 0000                   l6569 0000                   l6593 0000  
                 l6585 0000                   l6673 145E                   l6657 1435                   l6649 0000  
                 l6729 1533                   l6833 0000                   l6825 048D                   l6817 0474  
                 l6809 0000                   l6841 0000                   l6913 03A4                   l7289 0000  
                 l7393 029E                   l7705 0D72                   l7625 0B95                   l7617 0B76  
                 l7561 0000                   l7473 0000                   l7481 08B9                   l7465 0000  
                 l7457 084B                   l7449 0836                   l6579 0000                   l6595 0000  
                 l6587 0000                   l6683 1474                   l6675 0000                   l6667 0000  
                 l6659 0000                   l6691 1499                   l6755 0FE9                   l6771 1654  
                 l6819 0479                   l6843 0000                   l6835 0000                   l6907 0000  
                 l6931 0000                   l7299 0000                   l7803 0E97                   l7723 0DBC  
                 l7651 0C20                   l7643 0C14                   l7563 0A8B                   l7547 0A39  
                 l7539 0A0E                   l7483 0000                   l7467 087F                   l7811 0000  
                 l6589 0000                   l6677 1466                   l6757 0000                   l6749 0000  
                 l6765 0000                   l6829 0000                   l6845 0000                   l6837 13AE  
                 l6909 039C                   l6925 12E1                   l6933 1306                   l6917 0000  
                 l7389 0287                   l7741 0DFE                   l7733 0DE1                   l7717 0000  
                 l7661 0C51                   l7645 0000                   l7629 0B99                   l7637 0BF7  
                 l7581 0B04                   l7573 0AD0                   l7565 0000                   l7557 0000  
                 l7477 0000                   l7805 080A                   l7813 0000                   l7901 0000  
                 l6687 0000                   l6759 0000                   l6783 0000                   l6775 0000  
                 l6767 0000                   l6791 0000                   l6855 13D2                   l6847 0000  
                 l6839 13B3                   l7727 0DD4                   l7719 0DA8                   l7663 0000  
                 l7655 0C2F                   l7647 0C1A                   l7591 0B35                   l7583 0000  
                 l7567 0ACE                   l7559 0000                   l7495 08E8                   l7807 0EED  
                 l7487 08C0                   l7479 0890                   l7815 0000                   l7823 0000  
                 l7903 16EC                   l6697 0000                   l6689 1494                   l6769 0000  
                 l6785 1667                   l6793 166D                   l6865 13E8                   l6857 0000  
                 l6849 0000                   l6881 036E                   l6873 0000                   l6937 0000  
                 l6953 07E4                   l6945 0000                   l7745 0E1A                   l7673 0000  
                 l7657 0000                   l7665 0C5A                   l7649 0BFB                   l7497 0000  
                 l7489 08D8                   l7817 0000                   l7825 0000                   l7921 171A  
                 l7913 0000                   l7841 0000                   l7833 0000                   l6699 0000  
                 l6779 0000                   l6795 0000                   l6867 0000                   l6859 13DA  
                 l6875 0000                   l6955 0000                   l7755 0E32                   l7771 0E5B  
                 l7747 0E1D                   l7739 0DFB                   l7683 0D31                   l7675 0CDD  
                 l7667 0C7F                   l7595 0B38                   l7587 0B2D                   l7579 0000  
                 l7691 0D3D                   l7819 0000                   l7827 0000                   l7931 0000  
                 l7923 0000                   l7915 1706                   l7907 16FB                   l7851 0000  
                 l7843 0000                   l7835 0000                   l6797 0000                   l6789 0000  
                 l6869 13F6                   l6885 0000                   l6957 0000                   l6949 07D5  
                 l6981 0000                   l6965 0000                   l7781 0E74                   l7773 0E5F  
                 l7765 0E4F                   l7757 0000                   l7693 0000                   l7685 0000  
                 l7829 0000                   l7925 0000                   l7909 16FD                   l7861 0000  
                 l7853 0000                   l7845 0000                   l7837 0000                   l6887 0377  
                 l6879 0000                   l6975 1323                   l6967 0000                   l6991 0000  
                 l7783 0E7D                   l7767 0000                   l7759 0E3B                   l7687 0D37  
                 l7599 0B46                   l7943 0000                   l7935 17BC                   l7919 0000  
                 l7871 0000                   l7863 0000                   l7855 0000                   l7847 0000  
                 l7839 0000                   l6897 0385                   l6889 0000                   l6985 0000  
                 l6977 0000                   l6993 0000                   l7777 0E6E                   l7769 0E55  
                 l7697 0000                   l7689 0D1E                   l7945 0000                   l7937 17B3  
                 l7929 0000                   l7881 0000                   l7873 0000                   l7865 0000  
                 l7857 0000                   l7849 0000                   l6899 0000                   l6987 134E  
                 l7795 0000                   l7779 0000                   l7699 0D66                   l7947 0000  
                 l7891 0000                   l7883 0000                   l7875 0000                   l7867 0000  
                 l7859 0000                   l6997 0000                   l7789 0E90                   l7893 0000  
                 l7885 0000                   l7877 0000                   l7869 0000                   l6999 03B3  
                 l7799 0EE7                   l7895 0000                   l7887 0000                   l7879 0000  
                 l7897 16E2                   l7889 0000                   STR_1 009B                   STR_2 00A6  
                 STR_3 00B1                   STR_4 00BC                   STR_5 008B                   STR_6 00D5  
                 STR_7 00D2                   STR_8 00C7                   _BRGH 04C2                   _T0IE 005D  
                 _T0IF 005A                   _CREN 00C4                   _T0CS 040D                   u3110 062A  
                 u3015 1336                   u3210 067F                   u3130 0639                   u3230 068E  
                 u3150 0649                   u2425 1444                   u4105 0B5A                   u4025 0A37  
                 u3250 069E                   u3170 0657                   u2515 14EE                   u3075 03CC  
                 u4125 0B7F                   u4045 0AFD                   u3190 0672                   u3264 06A1  
                 u3184 065A                   u4315 0DB6                   u3525 01AD                   u4325 0DCC  
                 u4185 0C04                   u2770 0000                   u4195 0C2A                   u4540 16F8  
                 u4365 0DF1                   u2775 13B7                   u2935 12EF                   u4375 0E0C  
                 u4295 0DA1                   u4617 1720                   u4707 06C2                   u4627 1731  
                 u3940 0000                   u4580 1717                   _RCIF 0065                   u2885 038E  
                 u4717 06CD                   u4637 0556                   u4727 06D4                   u4647 0569  
                 u4737 0612                   u4657 057C                   u3945 0943                   u4747 0619  
                 u4667 0591                   u4757 065C                   u4677 05A0                   u4767 0663  
                 u4687 05AF                   u4777 06A3                   u4697 06BB                   u3985 09E3  
                 u4787 06AA                   u3995 0A18                   _TMR0 0001                   _TMR1 000E  
                 _TMR2 0011                   _SPEN 00C7                   _TXEN 04C5                   _TXIF 0064  
                 _SYNC 04C4                   abs@a 0076                   _main 169B                   _ngat 1357  
         ___ftpack@arg 0020           ___ftpack@exp 0023           lcd_busy@busy 0021                   btemp 007E  
                 _xung 00D8                   start 000C      ___bmul@multiplier 002B           ___ftmul@cntr 004A  
         ___ftmul@sign 004B           ___fttol@exp1 003A                  ??_abs 0078           ___fttol@lval 0036  
       ??_lcd_put_byte 0021                  _DC1B0 00BC                  _DC1B1 00BD                  ?_main 0076  
                ?_ngat 0076        __end_of___awdiv 03A9        __end_of___lbdiv 1669        __end_of___ftadd 07C6  
                _BRG16 0C3B        __end_of___awmod 03E6        __end_of___lbmod 1685        __end_of___ftdiv 01D2  
      __end_of___ftneg 1000                  _ANSEL 0188        __end_of___lldiv 1357        __end_of___ftmul 0455  
      ___awdiv@divisor 0026        __end_of___llmod 130F        __end_of___ftsub 0704        __end_of___fttol 13FF  
      ___awdiv@counter 002A                  _RCREG 001A                  _SPBRG 0099        __end_of__doprnt 0EF1  
                _TXREG 0019           ___lltoft@exp 002C                  _scale 01D2        __end_of_isdigit 0FDC  
        ___ftpack@sign 0024                  _putch 04FA                  fpbase 0105        __end_of_isprint 06E9  
                pclath 000A        __end_of_rx_init 0800                  status 0003                  wtemp0 007E  
      __end_of_sprintf 12BA        __end_of_tx_init 1295        ___lbdiv@divisor 0025        ___lbdiv@counter 0027  
         __end_of_main 1800           __end_of_ngat 1396          lcd_gotoxy@col 0026          lcd_gotoxy@row 0025  
               ??_main 006D          ___fttol@sign1 0035                 ??_ngat 007A   __size_of__tdiv_to_l_ 0077  
     __end_of___altoft 016A       ___llmod@dividend 0031                 ?_scale 004C                 _CCPR1L 0015  
     ___awdiv@dividend 0028                 ?_putch 0036       __end_of___ftpack 04A1                 _ANSELH 0189  
     __end_of___lltoft 0127                 i1l2178 0000                 _T1SYNC 0082                 i1l6601 0000  
               i1l6613 138A                 i1l6605 0000                 i1l6615 0000                 i1l6607 0000  
               i1l6617 0000                 i1l6609 1383                 i1l6597 0000           ?_send_string 0076  
               _TMR1GE 0086                 _TMR1CS 0081                 _SPBRGH 009A                 _TMR1ON 0080  
               _TMR2ON 0092                 _TRISA3 042B                 _TRISC0 0438                 _TRISA4 042C  
               _TRISC2 043A                 _TRISD1 0441                 _TRISD2 0442                 _TRISD3 0443  
               _TRISD4 0444                 _TRISD5 0445                 _TRISD6 0446                 _TRISD7 0447  
         __doprnt$3212 00A0       __end_of_lcd_busy 06DB       __end_of_lcd_init 0605       __end_of_lcd_putc 0544  
               ___bmul 0455                 ___ftge 07C6                 ___wmul 0FDF              ??___awdiv 002A  
            ??___lbdiv 0026              ??___ftadd 0052              ??___awmod 0024              ??___lbmod 0021  
            ??___ftdiv 0034              ??___ftneg 0023              ??___lldiv 0028              ??___ftmul 0043  
            ??___llmod 0035              ??___ftsub 005E              ??___fttol 0032              ??__doprnt 0064  
               _fround 1549       ___awdiv@quotient 002C        ___awmod@divisor 0020           __doprnt@_val 00AD  
         __doprnt@flag 00A7        ___awmod@counter 0024                 _printf 1295           __doprnt@fval 00B1  
         __doprnt@prec 00B4          lcd_put_byte@b 0020  ___ftmul@f3_as_product 0047                 fptable 0100  
               fptotal 0002              ??_isdigit 0020                 saved_w 007E              ??_isprint 0020  
               putch@c 0036              ??_rx_init 0020              ??_sprintf 006D              ??_tx_init 0020  
     ___lbdiv@dividend 0026        ___lbmod@divisor 0020             ___altoft@c 0028        ___lbmod@counter 0023  
 __end_of_lcd_put_byte 06B0             ___ftadd@f1 004C             ___ftadd@f2 004F             ___ftge@ff1 0020  
           ___ftge@ff2 0023             ___ftdiv@f1 0031             ___ftdiv@f2 002E             ___ftdiv@f3 0038  
           ___ftneg@f1 0020    ___bmul@multiplicand 0029             ___ftmul@f1 003D             ___ftmul@f2 0040  
           ___ftsub@f1 005B             ___ftsub@f2 0058             ___fttol@f1 002E         __pcstackCOMMON 0076  
           ___lltoft@c 0028          __end_of_scale 0364          __end_of_putch 04FD       ___lbdiv@quotient 0028  
           __div_to_l_ 147D      lcd_gotoxy@address 0027             __doprnt@ap 0063             __doprnt@pb 00B7  
      __div_to_l_@exp1 0033        __div_to_l_@cntr 0032                ??_scale 004F        __div_to_l_@quot 002E  
              ??_putch 0037             __pbssBANK1 00D0          __div_to_l_@f1 0020          __div_to_l_@f2 0023  
           __pmaintext 169B                ?___bmul 0029                ?___ftge 0020                ?___wmul 0020  
           __pintentry 0004     __size_of_send_char 0006                _CCP1CON 0017              ?___altoft 0028  
   __size_of_pwm_10bit 0014                ?_fround 0058              ?___ftpack 0020                ?_printf 0069  
            ?___lltoft 0028                _T1CKPS0 0084                _T1CKPS1 0085                _T2CKPS0 0090  
              _T2CKPS1 0091             _lcd_gotoxy 04FD              ?_lcd_busy 0076              ?_lcd_init 0076  
            ?_lcd_putc 0076   __size_of_send_string 0019             _scale$4217 0053        __size_of___bmul 000E  
      __size_of___ftge 002C                ___awdiv 0364                ___lbdiv 164E                ___ftadd 0704  
              ___awmod 03A9                ___lbmod 1669                ___ftdiv 016A                ___ftneg 0FF8  
              ___lldiv 130F        __size_of___wmul 0019                ___ftmul 03E6                ___llmod 12D1  
              ___ftsub 06EE                ___fttol 13A4             ??___altoft 002C                __doprnt 0808  
           ??___ftpack 0025        __size_of_fround 0105             ??___lltoft 002C        __size_of_printf 0010  
          ?__div_to_l_ 0020                _dpowers 0063           __size_of_abs 000E                _isdigit 0FCE  
     ___awmod@dividend 0022                _isprint 06DB                _rx_data 00D7                _pwm_dem 00D0  
        __doprnt@integ 00A4                _rx_init 07F2  __size_of_lcd_put_byte 00AB                _sprintf 12A5  
              _tx_init 1285          __doprnt@width 00AB             ??_lcd_busy 0020             ??_lcd_init 0025  
           ??_lcd_putc 0028   end_of_initialization 12CD         lcd_put_byte@rs 0023      __end_of_send_char 00FA  
    __end_of_pwm_10bit 013B        ___lldiv@divisor 0020        ___lldiv@counter 002C                printf@f 00B8  
       __tdiv_to_l_@f1 0020         __tdiv_to_l_@f2 0023          send_char@data 0020          ??__tdiv_to_l_ 0026  
         _lcd_put_byte 0605       ___lbmod@dividend 0022            ?_lcd_gotoxy 0025            ___lbmod@rem 0024  
          ___ftdiv@exp 003B    __size_of__div_to_l_ 00BF            ___ftmul@exp 0046         __end_of___bmul 0463  
       __end_of___ftge 07F2         __end_of___wmul 0FF8         __end_of_fround 164E         __end_of_printf 12A5  
  start_initialization 12BA    __end_of__tdiv_to_l_ 147D            __end_of_abs 13A4        ___llmod@divisor 002D  
      ___llmod@counter 0035               ??___bmul 002A               ??___ftge 0026    __size_of_lcd_gotoxy 0018  
             ??___wmul 0024            __doprnt@exp 00A9               ??_fround 005B               ??_printf 006D  
    __size_of___altoft 002F             fround@prec 0061      __size_of___ftpack 003E      __size_of___lltoft 001E  
          __pbssCOMMON 0070          __pcstackBANK0 0020          __pcstackBANK1 00A0           _isdigit$3722 0020  
    __size_of_lcd_busy 002B      __size_of_lcd_init 00C1              __doprnt@c 00B6              __doprnt@f 0062  
    __size_of_lcd_putc 002F              __pfunctab 0100               ?___awdiv 0026               ?___lbdiv 0025  
             ?___ftadd 004C               ?___awmod 0020              __ptext700 0364              __ptext701 13A4  
            __ptext710 00F4              __ptext702 0463              __ptext711 07F2              __ptext703 1669  
            __ptext712 1285              __ptext704 164E              __ptext713 06DB              __ptext705 0FDF  
            __ptext714 1357              __ptext706 0455              __ptext715 1396              __ptext707 147D  
             ?___lbmod 0020              __ptext708 1406              __ptext709 0FCE              __ptext680 0515  
            __ptext681 06EE              __ptext690 0704              __ptext682 01D2              __ptext691 00DB  
            __ptext683 1549              __ptext692 0127              __ptext684 04FD              __ptext676 1295  
            __ptext693 06B0              __ptext685 0544              __ptext677 12A5              __ptext694 0605  
            __ptext686 0109              __ptext678 0808              __ptext695 03A9              __ptext687 013B  
            __ptext679 04FA              __ptext696 130F              __ptext688 03E6              __ptext697 07C6  
            __ptext689 016A              __ptext698 0FF8              __ptext699 12D1               ?___ftdiv 002E  
             ?___ftneg 0020               ?___lldiv 0020               ?___ftmul 003D               ?___llmod 002D  
             ?___ftsub 0058              __npowers_ 0015               ?___fttol 002E               ?__doprnt 0062  
            __pstrings 000F            __tdiv_to_l_ 1406           ??__div_to_l_ 0026               ?_isdigit 0076  
             ?_isprint 0076               ?_rx_init 0076               ?_sprintf 0069               ?_tx_init 0076  
       __size_of_scale 0192         __size_of_putch 0003          ??_send_string 0021      interrupt_function 0004  
       ___wmul@product 0024              _send_char 00F4              _pwm_10bit 0127     __end_of__div_to_l_ 153C  
          __stringbase 0014      ___wmul@multiplier 0020              lcd_putc@c 0028           ??_lcd_gotoxy 0026  
     lcd_put_byte@temp 0024           _isprint$3725 0020             ?_send_char 0076             ?_pwm_10bit 002E  
         send_string@s 0021    __end_of_send_string 00F4     __end_of_lcd_gotoxy 0515       __size_of___awdiv 0045  
     __size_of___lbdiv 001B       __size_of___ftadd 00C2       __size_of___awmod 003D       __size_of___lbmod 001C  
     __size_of___ftdiv 0068       __size_of___ftneg 0008       __size_of___lldiv 0048               ___altoft 013B  
     __size_of___ftmul 006F       __size_of___llmod 003E       __size_of___ftsub 0016       __size_of___fttol 005B  
             ___ftpack 0463       __size_of__doprnt 06E9            _fround$4215 005E            _fround$4216 005B  
             ___lltoft 0109       __size_of_isdigit 000E       __size_of_isprint 000E               __powers_ 003C  
             _lcd_busy 06B0               _lcd_init 0544               _lcd_putc 0515       __size_of_rx_init 000E  
     __size_of_sprintf 0015       __size_of_tx_init 0010          __size_of_main 0165          __size_of_ngat 003F  
             fp__putch 0106               main@data 00BC               _xung_old 0070               isdigit@c 0021  
             scale@scl 0056               intlevel1 0100              sprintf@ap 00B9              sprintf@pb 00BA  
     __tdiv_to_l_@exp1 002E       __tdiv_to_l_@cntr 002D              sprintf@wh 00B8       __tdiv_to_l_@quot 0029  
          _send_string 00DB       ___lldiv@dividend 0024               isprint@c 0021            ??_send_char 0020  
          ??_pwm_10bit 0030              stringcode 000F               printf@ap 00B9               printf@pb 00BA  
         ?__tdiv_to_l_ 0020               sprintf@f 0069       ___lldiv@quotient 0028               stringdir 000F  
             stringtab 000F  
