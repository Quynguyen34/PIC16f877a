

HI-TECH Software PIC PRO Macro Assembler V9.83 build 10920 
                                                                                               Tue Dec 06 11:41:01 2022

HI-TECH Software Omniscient Code Generator (PRO mode) build 10920
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	config,global,class=CONFIG,delta=2
     5                           	psect	strings,global,class=STRING,delta=2
     6                           	psect	cinit,global,class=CODE,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	maintext,global,class=CODE,delta=2
    13                           	psect	text643,local,class=CODE,delta=2
    14                           	psect	text644,local,class=CODE,delta=2
    15                           	psect	text645,local,class=CODE,delta=2
    16                           	psect	text646,local,class=CODE,delta=2
    17                           	psect	text648,local,class=CODE,delta=2
    18                           	psect	text650,local,class=CODE,delta=2
    19                           	psect	text653,local,class=CODE,delta=2
    20                           	psect	text658,local,class=CODE,delta=2
    21                           	psect	text663,local,class=CODE,delta=2
    22                           	psect	text664,local,class=CODE,delta=2
    23                           	psect	text666,local,class=CODE,delta=2
    24                           	psect	text668,local,class=CODE,delta=2
    25                           	psect	text674,local,class=CODE,delta=2
    26                           	psect	text675,local,class=CODE,delta=2
    27                           	psect	text678,local,class=CODE,delta=2
    28                           	psect	text680,local,class=CODE,delta=2
    29                           	psect	intentry,global,class=CODE,delta=2
    30                           	psect	functab,global,reloc=256,class=CODE,delta=2
    31                           	psect	pa_nodes,global,class=CODE,delta=2
    32                           	dabs	1,0x7E,2
    33  000A                     	;#
    34                           
    35                           	psect	config
    36  2007  E3C2               	dw	58306	;#
    37                           
    38                           	psect	strings
    39  1000                     __pstrings:	
    40  1000                     stringtab:	
    41                           ;	global	stringdir,stringtab,__stringbase
    42                           
    43  1000                     stringcode:	
    44                           ;	String table - string pointers are 1 byte each
    45                           
    46  1000                     stringdir:	
    47  1000  3010               	movlw	high stringdir
    48  1001  008A               	movwf	10
    49  1002  0804               	movf	4,w
    50  1003  0A84               	incf	4,f
    51  1004  0782               	addwf	2,f
    52  1005                     __stringbase:	
    53  1005  3400               	retlw	0
    54  1006                     __npowers_:	
    55  1006  3400               	retlw	0
    56  1007  3480               	retlw	128
    57  1008  343F               	retlw	63
    58  1009  34CD               	retlw	205
    59  100A  34CC               	retlw	204
    60  100B  343D               	retlw	61
    61  100C  34D7               	retlw	215
    62  100D  3423               	retlw	35
    63  100E  343C               	retlw	60
    64  100F  3412               	retlw	18
    65  1010  3483               	retlw	131
    66  1011  343A               	retlw	58
    67  1012  34B7               	retlw	183
    68  1013  34D1               	retlw	209
    69  1014  3438               	retlw	56
    70  1015  34C6               	retlw	198
    71  1016  3427               	retlw	39
    72  1017  3437               	retlw	55
    73  1018  3438               	retlw	56
    74  1019  3486               	retlw	134
    75  101A  3435               	retlw	53
    76  101B  34C0               	retlw	192
    77  101C  34D6               	retlw	214
    78  101D  3433               	retlw	51
    79  101E  34CC               	retlw	204
    80  101F  342B               	retlw	43
    81  1020  3432               	retlw	50
    82  1021  3470               	retlw	112
    83  1022  3489               	retlw	137
    84  1023  3430               	retlw	48
    85  1024  34E7               	retlw	231
    86  1025  34DB               	retlw	219
    87  1026  342E               	retlw	46
    88  1027  34E5               	retlw	229
    89  1028  343C               	retlw	60
    90  1029  341E               	retlw	30
    91  102A  3442               	retlw	66
    92  102B  34A2               	retlw	162
    93  102C  340D               	retlw	13
    94  102D                     __powers_:	
    95  102D  3400               	retlw	0
    96  102E  3480               	retlw	128
    97  102F  343F               	retlw	63
    98  1030  3400               	retlw	0
    99  1031  3420               	retlw	32
   100  1032  3441               	retlw	65
   101  1033  3400               	retlw	0
   102  1034  34C8               	retlw	200
   103  1035  3442               	retlw	66
   104  1036  3400               	retlw	0
   105  1037  347A               	retlw	122
   106  1038  3444               	retlw	68
   107  1039  3440               	retlw	64
   108  103A  341C               	retlw	28
   109  103B  3446               	retlw	70
   110  103C  3450               	retlw	80
   111  103D  34C3               	retlw	195
   112  103E  3447               	retlw	71
   113  103F  3424               	retlw	36
   114  1040  3474               	retlw	116
   115  1041  3449               	retlw	73
   116  1042  3497               	retlw	151
   117  1043  3418               	retlw	24
   118  1044  344B               	retlw	75
   119  1045  34BC               	retlw	188
   120  1046  34BE               	retlw	190
   121  1047  344C               	retlw	76
   122  1048  346B               	retlw	107
   123  1049  346E               	retlw	110
   124  104A  344E               	retlw	78
   125  104B  3403               	retlw	3
   126  104C  3415               	retlw	21
   127  104D  3450               	retlw	80
   128  104E  3479               	retlw	121
   129  104F  34AD               	retlw	173
   130  1050  3460               	retlw	96
   131  1051  34F3               	retlw	243
   132  1052  3449               	retlw	73
   133  1053  3471               	retlw	113
   134  1054                     _dpowers:	
   135  1054  3401               	retlw	1
   136  1055  3400               	retlw	0
   137  1056  3400               	retlw	0
   138  1057  3400               	retlw	0
   139  1058  340A               	retlw	10
   140  1059  3400               	retlw	0
   141  105A  3400               	retlw	0
   142  105B  3400               	retlw	0
   143  105C  3464               	retlw	100
   144  105D  3400               	retlw	0
   145  105E  3400               	retlw	0
   146  105F  3400               	retlw	0
   147  1060  34E8               	retlw	232
   148  1061  3403               	retlw	3
   149  1062  3400               	retlw	0
   150  1063  3400               	retlw	0
   151  1064  3410               	retlw	16
   152  1065  3427               	retlw	39
   153  1066  3400               	retlw	0
   154  1067  3400               	retlw	0
   155  1068  34A0               	retlw	160
   156  1069  3486               	retlw	134
   157  106A  3401               	retlw	1
   158  106B  3400               	retlw	0
   159  106C  3440               	retlw	64
   160  106D  3442               	retlw	66
   161  106E  340F               	retlw	15
   162  106F  3400               	retlw	0
   163  1070  3480               	retlw	128
   164  1071  3496               	retlw	150
   165  1072  3498               	retlw	152
   166  1073  3400               	retlw	0
   167  1074  3400               	retlw	0
   168  1075  34E1               	retlw	225
   169  1076  34F5               	retlw	245
   170  1077  3405               	retlw	5
   171  1078  3400               	retlw	0
   172  1079  34CA               	retlw	202
   173  107A  349A               	retlw	154
   174  107B  343B               	retlw	59
   175  000E                     _TMR1	set	14
   176  0017                     _CCP1CON	set	23
   177  0015                     _CCPR1L	set	21
   178  0001                     _TMR0	set	1
   179  0011                     _TMR2	set	17
   180  0019                     _TXREG	set	25
   181  00BC                     _DC1B0	set	188
   182  00BD                     _DC1B1	set	189
   183  005F                     _GIE	set	95
   184  0041                     _RD1	set	65
   185  0042                     _RD2	set	66
   186  0043                     _RD3	set	67
   187  0044                     _RD4	set	68
   188  0045                     _RD5	set	69
   189  0046                     _RD6	set	70
   190  0047                     _RD7	set	71
   191  00C7                     _SPEN	set	199
   192  005D                     _T0IE	set	93
   193  005A                     _T0IF	set	90
   194  0084                     _T1CKPS0	set	132
   195  0085                     _T1CKPS1	set	133
   196  0082                     _T1SYNC	set	130
   197  0090                     _T2CKPS0	set	144
   198  0091                     _T2CKPS1	set	145
   199  0081                     _TMR1CS	set	129
   200  0086                     _TMR1GE	set	134
   201  0080                     _TMR1ON	set	128
   202  0092                     _TMR2ON	set	146
   203  0064                     _TXIF	set	100
   204  0092                     _PR2	set	146
   205  0099                     _SPBRG	set	153
   206  009A                     _SPBRGH	set	154
   207  04C2                     _BRGH	set	1218
   208  0408                     _PS0	set	1032
   209  0409                     _PS1	set	1033
   210  040A                     _PS2	set	1034
   211  040B                     _PSA	set	1035
   212  04C4                     _SYNC	set	1220
   213  040D                     _T0CS	set	1037
   214  0438                     _TRISC0	set	1080
   215  043A                     _TRISC2	set	1082
   216  0441                     _TRISD1	set	1089
   217  0442                     _TRISD2	set	1090
   218  0443                     _TRISD3	set	1091
   219  0444                     _TRISD4	set	1092
   220  0445                     _TRISD5	set	1093
   221  0446                     _TRISD6	set	1094
   222  0447                     _TRISD7	set	1095
   223  04C6                     _TX9	set	1222
   224  04C5                     _TXEN	set	1221
   225  0188                     _ANSEL	set	392
   226  0189                     _ANSELH	set	393
   227  0C3B                     _BRG16	set	3131
   228  107C                     STR_1:	
   229  107C  3420               	retlw	32	;' '
   230  107D  3444               	retlw	68	;'D'
   231  107E  3448               	retlw	72	;'H'
   232  107F  3420               	retlw	32	;' '
   233  1080  3453               	retlw	83	;'S'
   234  1081  3450               	retlw	80	;'P'
   235  1082  344B               	retlw	75	;'K'
   236  1083  3454               	retlw	84	;'T'
   237  1084  3420               	retlw	32	;' '
   238  1085  3432               	retlw	50	;'2'
   239  1086  3430               	retlw	48	;'0'
   240  1087  3432               	retlw	50	;'2'
   241  1088  3432               	retlw	50	;'2'
   242  1089  3420               	retlw	32	;' '
   243  108A  3400               	retlw	0
   244  108B                     STR_5:	
   245  108B  3478               	retlw	120	;'x'
   246  108C  3475               	retlw	117	;'u'
   247  108D  346E               	retlw	110	;'n'
   248  108E  3467               	retlw	103	;'g'
   249  108F  343A               	retlw	58	;':'
   250  1090  3420               	retlw	32	;' '
   251  1091  3425               	retlw	37	;'%'
   252  1092  3430               	retlw	48	;'0'
   253  1093  3435               	retlw	53	;'5'
   254  1094  3464               	retlw	100	;'d'
   255  1095  3400               	retlw	0
   256  1096                     STR_4:	
   257  1096  3476               	retlw	118	;'v'
   258  1097  343A               	retlw	58	;':'
   259  1098  3420               	retlw	32	;' '
   260  1099  3425               	retlw	37	;'%'
   261  109A  3433               	retlw	51	;'3'
   262  109B  342E               	retlw	46	;'.'
   263  109C  3432               	retlw	50	;'2'
   264  109D  3466               	retlw	102	;'f'
   265  109E  3400               	retlw	0
   266  109F                     STR_3:	
   267  109F  3476               	retlw	118	;'v'
   268  10A0  3400               	retlw	0
   269  1099                     
   270                           	psect	cinit
   271  00E7                     start_initialization:	
   272                           
   273                           ; Clear objects allocated to COMMON
   274  00E7  01F0               	clrf	__pbssCOMMON& (0+127)
   275  00E8  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   276  00E9  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
   277  00EA  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
   278  00EB  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
   279  00EC  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
   280                           
   281                           ; Clear objects allocated to BANK1
   282  00ED  1683               	bsf	3,5	;RP0=1, select bank1
   283  00EE  01C6               	clrf	__pbssBANK1& (0+127)
   284  00EF  01C7               	clrf	(__pbssBANK1+1)& (0+127)
   285  00F0  01C8               	clrf	(__pbssBANK1+2)& (0+127)
   286  00F1  01C9               	clrf	(__pbssBANK1+3)& (0+127)
   287  00F2  01CA               	clrf	(__pbssBANK1+4)& (0+127)
   288  00F3  01CB               	clrf	(__pbssBANK1+5)& (0+127)
   289  00F4  01CC               	clrf	(__pbssBANK1+6)& (0+127)
   290  00F5  01CD               	clrf	(__pbssBANK1+7)& (0+127)
   291  00F6  01CE               	clrf	(__pbssBANK1+8)& (0+127)
   292  00F7  01CF               	clrf	(__pbssBANK1+9)& (0+127)
   293  00F8  01D0               	clrf	(__pbssBANK1+10)& (0+127)
   294  00F9                     end_of_initialization:	
   295                           ;End of C runtime variable initialization code
   296                           
   297  00F9  0183               	clrf	3
   298  00FA  120A  118A  2EEE   	ljmp	_main	;jump to C main() function
   299                           
   300                           	psect	bssCOMMON
   301  0070                     __pbssCOMMON:	
   302  0070                     _xung_old:	
   303  0070                     	ds	4
   304  0074                     _dem:	
   305  0074                     	ds	2
   306                           
   307                           	psect	bssBANK1
   308  00C6                     __pbssBANK1:	
   309  00C6                     _pwm_dem:	
   310  00C6                     	ds	4
   311  00CA                     _v:	
   312  00CA                     	ds	3
   313  00CD                     _xung:	
   314  00CD                     	ds	4
   315                           
   316                           	psect	cstackBANK1
   317  00A0                     __pcstackBANK1:	
   318  00A0                     __doprnt$3206:	
   319                           
   320                           ; 4 bytes @ 0x0
   321  00A0                     	ds	4
   322  00A4                     __doprnt@integ:	
   323                           
   324                           ; 3 bytes @ 0x4
   325  00A4                     	ds	3
   326  00A7                     __doprnt@flag:	
   327                           
   328                           ; 2 bytes @ 0x7
   329  00A7                     	ds	2
   330  00A9                     __doprnt@exp:	
   331                           
   332                           ; 2 bytes @ 0x9
   333  00A9                     	ds	2
   334  00AB                     __doprnt@width:	
   335                           
   336                           ; 2 bytes @ 0xB
   337  00AB                     	ds	2
   338  00AD                     __doprnt@_val:	
   339                           
   340                           ; 4 bytes @ 0xD
   341  00AD                     	ds	4
   342  00B1                     __doprnt@fval:	
   343                           
   344                           ; 3 bytes @ 0x11
   345  00B1                     	ds	3
   346  00B4                     __doprnt@prec:	
   347                           
   348                           ; 2 bytes @ 0x14
   349  00B4                     	ds	2
   350  00B6                     __doprnt@c:	
   351                           
   352                           ; 1 bytes @ 0x16
   353  00B6                     	ds	1
   354  00B7                     __doprnt@pb:	
   355                           
   356                           ; 1 bytes @ 0x17
   357  00B7                     	ds	1
   358  00B8                     printf@f:	
   359  00B8                     sprintf@wh:	
   360                           ; 1 bytes @ 0x18
   361                           
   362                           
   363                           ; 1 bytes @ 0x18
   364  00B8                     	ds	1
   365  00B9                     printf@ap:	
   366  00B9                     sprintf@ap:	
   367                           ; 1 bytes @ 0x19
   368                           
   369                           
   370                           ; 1 bytes @ 0x19
   371  00B9                     	ds	1
   372  00BA                     printf@pb:	
   373  00BA                     sprintf@pb:	
   374                           ; 2 bytes @ 0x1A
   375                           
   376                           
   377                           ; 2 bytes @ 0x1A
   378  00BA                     	ds	2
   379  00BC                     main@data:	
   380                           
   381                           ; 10 bytes @ 0x1C
   382  00BC                     	ds	10
   383                           
   384                           	psect	cstackCOMMON
   385  0076                     __pcstackCOMMON:	
   386  0076                     ?_isprint:	
   387  0076                     ?_tx_init:	
   388                           ; 1 bit 
   389                           
   390  0076                     ?_send_string:	
   391                           ; 0 bytes @ 0x0
   392                           
   393  0076                     ?_isdigit:	
   394                           ; 0 bytes @ 0x0
   395                           
   396  0076                     ?_lcd_init:	
   397                           ; 1 bit 
   398                           
   399  0076                     ?_lcd_putc:	
   400                           ; 0 bytes @ 0x0
   401                           
   402  0076                     ?_main:	
   403                           ; 0 bytes @ 0x0
   404                           
   405  0076                     ?_ngat:	
   406                           ; 0 bytes @ 0x0
   407                           
   408  0076                     ?_send_char:	
   409                           ; 0 bytes @ 0x0
   410                           
   411  0076                     ?_lcd_busy:	
   412                           ; 0 bytes @ 0x0
   413                           
   414  0076                     ?_abs:	
   415                           ; 1 bytes @ 0x0
   416                           
   417  0076                     abs@a:	
   418                           ; 2 bytes @ 0x0
   419                           
   420                           
   421                           ; 2 bytes @ 0x0
   422  0076                     	ds	2
   423  0078                     ??_abs:	
   424                           
   425                           ; 0 bytes @ 0x2
   426  0078                     	ds	2
   427  007A                     ??_ngat:	
   428                           
   429                           ; 0 bytes @ 0x4
   430  007A                     	ds	2
   431                           
   432                           	psect	cstackBANK0
   433  0020                     __pcstackBANK0:	
   434  0020                     ?_lcd_put_byte:	
   435  0020                     ??_lcd_busy:	
   436                           ; 0 bytes @ 0x0
   437                           
   438  0020                     ??_isprint:	
   439                           ; 0 bytes @ 0x0
   440                           
   441  0020                     ??_tx_init:	
   442                           ; 0 bytes @ 0x0
   443                           
   444  0020                     ??_isdigit:	
   445                           ; 0 bytes @ 0x0
   446                           
   447  0020                     ??_send_char:	
   448                           ; 0 bytes @ 0x0
   449                           
   450  0020                     ?___ftge:	
   451                           ; 0 bytes @ 0x0
   452                           
   453  0020                     ?___lbmod:	
   454                           ; 1 bit 
   455                           
   456  0020                     ?___wmul:	
   457                           ; 1 bytes @ 0x0
   458                           
   459  0020                     ?___awmod:	
   460                           ; 2 bytes @ 0x0
   461                           
   462  0020                     ?___ftpack:	
   463                           ; 2 bytes @ 0x0
   464                           
   465  0020                     ?___ftneg:	
   466                           ; 3 bytes @ 0x0
   467                           
   468  0020                     ?__tdiv_to_l_:	
   469                           ; 3 bytes @ 0x0
   470                           
   471  0020                     ?__div_to_l_:	
   472                           ; 4 bytes @ 0x0
   473                           
   474  0020                     ?___lldiv:	
   475                           ; 4 bytes @ 0x0
   476                           
   477  0020                     lcd_put_byte@b:	
   478                           ; 4 bytes @ 0x0
   479                           
   480  0020                     send_char@data:	
   481                           ; 1 bytes @ 0x0
   482                           
   483  0020                     _isdigit$3716:	
   484                           ; 1 bytes @ 0x0
   485                           
   486  0020                     _isprint$3719:	
   487                           ; 1 bytes @ 0x0
   488                           
   489  0020                     ___lbmod@divisor:	
   490                           ; 1 bytes @ 0x0
   491                           
   492  0020                     ___wmul@multiplier:	
   493                           ; 1 bytes @ 0x0
   494                           
   495  0020                     ___awmod@divisor:	
   496                           ; 2 bytes @ 0x0
   497                           
   498  0020                     ___ftneg@f1:	
   499                           ; 2 bytes @ 0x0
   500                           
   501  0020                     ___ftge@ff1:	
   502                           ; 3 bytes @ 0x0
   503                           
   504  0020                     __tdiv_to_l_@f1:	
   505                           ; 3 bytes @ 0x0
   506                           
   507  0020                     __div_to_l_@f1:	
   508                           ; 3 bytes @ 0x0
   509                           
   510  0020                     ___ftpack@arg:	
   511                           ; 3 bytes @ 0x0
   512                           
   513  0020                     ___lldiv@divisor:	
   514                           ; 3 bytes @ 0x0
   515                           
   516                           
   517                           ; 4 bytes @ 0x0
   518  0020                     	ds	1
   519  0021                     ??_lcd_put_byte:	
   520  0021                     ??_send_string:	
   521                           ; 0 bytes @ 0x1
   522                           
   523  0021                     ??___lbmod:	
   524                           ; 0 bytes @ 0x1
   525                           
   526  0021                     lcd_busy@busy:	
   527                           ; 0 bytes @ 0x1
   528                           
   529  0021                     send_string@s:	
   530                           ; 1 bytes @ 0x1
   531                           
   532  0021                     isdigit@c:	
   533                           ; 1 bytes @ 0x1
   534                           
   535  0021                     isprint@c:	
   536                           ; 1 bytes @ 0x1
   537                           
   538                           
   539                           ; 1 bytes @ 0x1
   540  0021                     	ds	1
   541  0022                     ___lbmod@dividend:	
   542  0022                     ___wmul@multiplicand:	
   543                           ; 1 bytes @ 0x2
   544                           
   545  0022                     ___awmod@dividend:	
   546                           ; 2 bytes @ 0x2
   547                           
   548                           
   549                           ; 2 bytes @ 0x2
   550  0022                     	ds	1
   551  0023                     ??___ftneg:	
   552  0023                     lcd_put_byte@rs:	
   553                           ; 0 bytes @ 0x3
   554                           
   555  0023                     ___lbmod@counter:	
   556                           ; 1 bytes @ 0x3
   557                           
   558  0023                     ___ftpack@exp:	
   559                           ; 1 bytes @ 0x3
   560                           
   561  0023                     ___ftge@ff2:	
   562                           ; 1 bytes @ 0x3
   563                           
   564  0023                     __tdiv_to_l_@f2:	
   565                           ; 3 bytes @ 0x3
   566                           
   567  0023                     __div_to_l_@f2:	
   568                           ; 3 bytes @ 0x3
   569                           
   570                           
   571                           ; 3 bytes @ 0x3
   572  0023                     	ds	1
   573  0024                     ??___wmul:	
   574  0024                     ??___awmod:	
   575                           ; 0 bytes @ 0x4
   576                           
   577  0024                     lcd_put_byte@temp:	
   578                           ; 0 bytes @ 0x4
   579                           
   580  0024                     ___lbmod@rem:	
   581                           ; 1 bytes @ 0x4
   582                           
   583  0024                     ___awmod@counter:	
   584                           ; 1 bytes @ 0x4
   585                           
   586  0024                     ___ftpack@sign:	
   587                           ; 1 bytes @ 0x4
   588                           
   589  0024                     ___wmul@product:	
   590                           ; 1 bytes @ 0x4
   591                           
   592  0024                     ___lldiv@dividend:	
   593                           ; 2 bytes @ 0x4
   594                           
   595                           
   596                           ; 4 bytes @ 0x4
   597  0024                     	ds	1
   598  0025                     ?_lcd_gotoxy:	
   599  0025                     ??___ftpack:	
   600                           ; 0 bytes @ 0x5
   601                           
   602  0025                     ??_lcd_init:	
   603                           ; 0 bytes @ 0x5
   604                           
   605  0025                     ?___lbdiv:	
   606                           ; 0 bytes @ 0x5
   607                           
   608  0025                     lcd_gotoxy@row:	
   609                           ; 1 bytes @ 0x5
   610                           
   611  0025                     ___lbdiv@divisor:	
   612                           ; 1 bytes @ 0x5
   613                           
   614  0025                     ___awmod@sign:	
   615                           ; 1 bytes @ 0x5
   616                           
   617                           
   618                           ; 1 bytes @ 0x5
   619  0025                     	ds	1
   620  0026                     ??_lcd_gotoxy:	
   621  0026                     ??__tdiv_to_l_:	
   622                           ; 0 bytes @ 0x6
   623                           
   624  0026                     ??__div_to_l_:	
   625                           ; 0 bytes @ 0x6
   626                           
   627  0026                     ??___lbdiv:	
   628                           ; 0 bytes @ 0x6
   629                           
   630  0026                     ??___ftge:	
   631                           ; 0 bytes @ 0x6
   632                           
   633  0026                     ?___awdiv:	
   634                           ; 0 bytes @ 0x6
   635                           
   636  0026                     lcd_gotoxy@col:	
   637                           ; 2 bytes @ 0x6
   638                           
   639  0026                     ___lbdiv@dividend:	
   640                           ; 1 bytes @ 0x6
   641                           
   642  0026                     ___awdiv@divisor:	
   643                           ; 1 bytes @ 0x6
   644                           
   645                           
   646                           ; 2 bytes @ 0x6
   647  0026                     	ds	1
   648  0027                     lcd_gotoxy@address:	
   649  0027                     ___lbdiv@counter:	
   650                           ; 1 bytes @ 0x7
   651                           
   652                           
   653                           ; 1 bytes @ 0x7
   654  0027                     	ds	1
   655  0028                     ??_lcd_putc:	
   656  0028                     ??___lldiv:	
   657                           ; 0 bytes @ 0x8
   658                           
   659  0028                     ?___altoft:	
   660                           ; 0 bytes @ 0x8
   661                           
   662  0028                     ?___lltoft:	
   663                           ; 3 bytes @ 0x8
   664                           
   665  0028                     lcd_putc@c:	
   666                           ; 3 bytes @ 0x8
   667                           
   668  0028                     ___lbdiv@quotient:	
   669                           ; 1 bytes @ 0x8
   670                           
   671  0028                     ___awdiv@dividend:	
   672                           ; 1 bytes @ 0x8
   673                           
   674  0028                     ___lldiv@quotient:	
   675                           ; 2 bytes @ 0x8
   676                           
   677  0028                     ___altoft@c:	
   678                           ; 4 bytes @ 0x8
   679                           
   680  0028                     ___lltoft@c:	
   681                           ; 4 bytes @ 0x8
   682                           
   683                           
   684                           ; 4 bytes @ 0x8
   685  0028                     	ds	1
   686  0029                     ?___bmul:	
   687  0029                     ___bmul@multiplicand:	
   688                           ; 1 bytes @ 0x9
   689                           
   690  0029                     __tdiv_to_l_@quot:	
   691                           ; 1 bytes @ 0x9
   692                           
   693                           
   694                           ; 4 bytes @ 0x9
   695  0029                     	ds	1
   696  002A                     ??___bmul:	
   697  002A                     ??___awdiv:	
   698                           ; 0 bytes @ 0xA
   699                           
   700  002A                     ___bmul@product:	
   701                           ; 0 bytes @ 0xA
   702                           
   703  002A                     ___awdiv@counter:	
   704                           ; 1 bytes @ 0xA
   705                           
   706                           
   707                           ; 1 bytes @ 0xA
   708  002A                     	ds	1
   709  002B                     ___bmul@multiplier:	
   710  002B                     ___awdiv@sign:	
   711                           ; 1 bytes @ 0xB
   712                           
   713                           
   714                           ; 1 bytes @ 0xB
   715  002B                     	ds	1
   716  002C                     ??___altoft:	
   717  002C                     ??___lltoft:	
   718                           ; 0 bytes @ 0xC
   719                           
   720  002C                     ___lldiv@counter:	
   721                           ; 0 bytes @ 0xC
   722                           
   723  002C                     ___altoft@exp:	
   724                           ; 1 bytes @ 0xC
   725                           
   726  002C                     ___lltoft@exp:	
   727                           ; 1 bytes @ 0xC
   728                           
   729  002C                     ___awdiv@quotient:	
   730                           ; 1 bytes @ 0xC
   731                           
   732                           
   733                           ; 2 bytes @ 0xC
   734  002C                     	ds	1
   735  002D                     ?___llmod:	
   736  002D                     ___altoft@sign:	
   737                           ; 4 bytes @ 0xD
   738                           
   739  002D                     __tdiv_to_l_@cntr:	
   740                           ; 1 bytes @ 0xD
   741                           
   742  002D                     ___llmod@divisor:	
   743                           ; 1 bytes @ 0xD
   744                           
   745                           
   746                           ; 4 bytes @ 0xD
   747  002D                     	ds	1
   748  002E                     ?_pwm_10bit:	
   749  002E                     ?___ftdiv:	
   750                           ; 0 bytes @ 0xE
   751                           
   752  002E                     ?___fttol:	
   753                           ; 3 bytes @ 0xE
   754                           
   755  002E                     __tdiv_to_l_@exp1:	
   756                           ; 4 bytes @ 0xE
   757                           
   758  002E                     pwm_10bit@data_pwm:	
   759                           ; 1 bytes @ 0xE
   760                           
   761  002E                     ___ftdiv@f2:	
   762                           ; 2 bytes @ 0xE
   763                           
   764  002E                     ___fttol@f1:	
   765                           ; 3 bytes @ 0xE
   766                           
   767  002E                     __div_to_l_@quot:	
   768                           ; 3 bytes @ 0xE
   769                           
   770                           
   771                           ; 4 bytes @ 0xE
   772  002E                     	ds	2
   773  0030                     ??_pwm_10bit:	
   774                           
   775                           ; 0 bytes @ 0x10
   776  0030                     	ds	1
   777  0031                     ___ftdiv@f1:	
   778  0031                     ___llmod@dividend:	
   779                           ; 3 bytes @ 0x11
   780                           
   781                           
   782                           ; 4 bytes @ 0x11
   783  0031                     	ds	1
   784  0032                     ??___fttol:	
   785  0032                     __div_to_l_@cntr:	
   786                           ; 0 bytes @ 0x12
   787                           
   788                           
   789                           ; 1 bytes @ 0x12
   790  0032                     	ds	1
   791  0033                     __div_to_l_@exp1:	
   792                           
   793                           ; 1 bytes @ 0x13
   794  0033                     	ds	1
   795  0034                     ??___ftdiv:	
   796                           
   797                           ; 0 bytes @ 0x14
   798  0034                     	ds	1
   799  0035                     ??___llmod:	
   800  0035                     ___fttol@sign1:	
   801                           ; 0 bytes @ 0x15
   802                           
   803  0035                     ___llmod@counter:	
   804                           ; 1 bytes @ 0x15
   805                           
   806                           
   807                           ; 1 bytes @ 0x15
   808  0035                     	ds	1
   809  0036                     ?_putch:	
   810  0036                     putch@c:	
   811                           ; 0 bytes @ 0x16
   812                           
   813  0036                     ___fttol@lval:	
   814                           ; 1 bytes @ 0x16
   815                           
   816                           
   817                           ; 4 bytes @ 0x16
   818  0036                     	ds	1
   819  0037                     ??_putch:	
   820  0037                     ___ftdiv@cntr:	
   821                           ; 0 bytes @ 0x17
   822                           
   823                           
   824                           ; 1 bytes @ 0x17
   825  0037                     	ds	1
   826  0038                     ___ftdiv@f3:	
   827                           
   828                           ; 3 bytes @ 0x18
   829  0038                     	ds	2
   830  003A                     ___fttol@exp1:	
   831                           
   832                           ; 1 bytes @ 0x1A
   833  003A                     	ds	1
   834  003B                     ___ftdiv@exp:	
   835                           
   836                           ; 1 bytes @ 0x1B
   837  003B                     	ds	1
   838  003C                     ___ftdiv@sign:	
   839                           
   840                           ; 1 bytes @ 0x1C
   841  003C                     	ds	1
   842  003D                     ?___ftmul:	
   843  003D                     ___ftmul@f1:	
   844                           ; 3 bytes @ 0x1D
   845                           
   846                           
   847                           ; 3 bytes @ 0x1D
   848  003D                     	ds	3
   849  0040                     ___ftmul@f2:	
   850                           
   851                           ; 3 bytes @ 0x20
   852  0040                     	ds	3
   853  0043                     ??___ftmul:	
   854                           
   855                           ; 0 bytes @ 0x23
   856  0043                     	ds	3
   857  0046                     ___ftmul@exp:	
   858                           
   859                           ; 1 bytes @ 0x26
   860  0046                     	ds	1
   861  0047                     ___ftmul@f3_as_product:	
   862                           
   863                           ; 3 bytes @ 0x27
   864  0047                     	ds	3
   865  004A                     ___ftmul@cntr:	
   866                           
   867                           ; 1 bytes @ 0x2A
   868  004A                     	ds	1
   869  004B                     ___ftmul@sign:	
   870                           
   871                           ; 1 bytes @ 0x2B
   872  004B                     	ds	1
   873  004C                     ?_scale:	
   874  004C                     ?___ftadd:	
   875                           ; 3 bytes @ 0x2C
   876                           
   877  004C                     ___ftadd@f1:	
   878                           ; 3 bytes @ 0x2C
   879                           
   880                           
   881                           ; 3 bytes @ 0x2C
   882  004C                     	ds	3
   883  004F                     ??_scale:	
   884  004F                     ___ftadd@f2:	
   885                           ; 0 bytes @ 0x2F
   886                           
   887                           
   888                           ; 3 bytes @ 0x2F
   889  004F                     	ds	3
   890  0052                     ??___ftadd:	
   891                           
   892                           ; 0 bytes @ 0x32
   893  0052                     	ds	1
   894  0053                     _scale$4211:	
   895                           
   896                           ; 3 bytes @ 0x33
   897  0053                     	ds	2
   898  0055                     ___ftadd@sign:	
   899                           
   900                           ; 1 bytes @ 0x35
   901  0055                     	ds	1
   902  0056                     scale@scl:	
   903  0056                     ___ftadd@exp2:	
   904                           ; 1 bytes @ 0x36
   905                           
   906                           
   907                           ; 1 bytes @ 0x36
   908  0056                     	ds	1
   909  0057                     ___ftadd@exp1:	
   910                           
   911                           ; 1 bytes @ 0x37
   912  0057                     	ds	1
   913  0058                     ?_fround:	
   914  0058                     ?___ftsub:	
   915                           ; 3 bytes @ 0x38
   916                           
   917  0058                     ___ftsub@f2:	
   918                           ; 3 bytes @ 0x38
   919                           
   920                           
   921                           ; 3 bytes @ 0x38
   922  0058                     	ds	3
   923  005B                     ??_fround:	
   924  005B                     ___ftsub@f1:	
   925                           ; 0 bytes @ 0x3B
   926                           
   927  005B                     _fround$4210:	
   928                           ; 3 bytes @ 0x3B
   929                           
   930                           
   931                           ; 3 bytes @ 0x3B
   932  005B                     	ds	3
   933  005E                     ??___ftsub:	
   934  005E                     _fround$4209:	
   935                           ; 0 bytes @ 0x3E
   936                           
   937                           
   938                           ; 3 bytes @ 0x3E
   939  005E                     	ds	3
   940  0061                     fround@prec:	
   941                           
   942                           ; 1 bytes @ 0x41
   943  0061                     	ds	1
   944  0062                     ?__doprnt:	
   945  0062                     __doprnt@f:	
   946                           ; 2 bytes @ 0x42
   947                           
   948                           
   949                           ; 1 bytes @ 0x42
   950  0062                     	ds	1
   951  0063                     __doprnt@ap:	
   952                           
   953                           ; 1 bytes @ 0x43
   954  0063                     	ds	1
   955  0064                     ??__doprnt:	
   956                           
   957                           ; 0 bytes @ 0x44
   958  0064                     	ds	5
   959  0069                     ?_sprintf:	
   960  0069                     ?_printf:	
   961                           ; 2 bytes @ 0x49
   962                           
   963  0069                     sprintf@f:	
   964                           ; 2 bytes @ 0x49
   965                           
   966                           
   967                           ; 1 bytes @ 0x49
   968  0069                     	ds	4
   969  006D                     ??_sprintf:	
   970  006D                     ??_printf:	
   971                           ; 0 bytes @ 0x4D
   972                           
   973  006D                     ??_main:	
   974                           ; 0 bytes @ 0x4D
   975                           
   976                           
   977                           	psect	maintext
   978  06EE                     __pmaintext:	
   979                           ; 0 bytes @ 0x4D
   980 ;;Data sizes: Strings 37, constant 118, data 0, bss 17, persistent 0 stack 0
   981 ;;Auto spaces:   Size  Autos    Used
   982 ;; COMMON          14      6      12
   983 ;; BANK0           80     77      77
   984 ;; BANK1           80     38      49
   985 ;; BANK3           96      0       0
   986 ;; BANK2           96      0       0
   987 ;;
   988 ;; Pointer list with targets:
   989 ;; ?___ftpack	float  size(1) Largest target is 2
   990 ;;		 -> ?_sprintf(BANK0[2]), ?_printf(BANK0[2]), 
   991 ;;
   992 ;; ?___lldiv	unsigned long  size(1) Largest target is 0
   993 ;;
   994 ;; ?___llmod	unsigned long  size(1) Largest target is 2
   995 ;;		 -> ?_sprintf(BANK0[2]), ?_printf(BANK0[2]), 
   996 ;;
   997 ;; ?___ftsub	float  size(1) Largest target is 0
   998 ;;
   999 ;; ?___lltoft	float  size(1) Largest target is 0
  1000 ;;
  1001 ;; ?__tdiv_to_l_	unsigned long  size(1) Largest target is 0
  1002 ;;
  1003 ;; ?__div_to_l_	unsigned long  size(1) Largest target is 0
  1004 ;;
  1005 ;; ?___fttol	long  size(1) Largest target is 2
  1006 ;;		 -> ?_sprintf(BANK0[2]), ?_printf(BANK0[2]), 
  1007 ;;
  1008 ;; ?___ftadd	float  size(1) Largest target is 2
  1009 ;;		 -> ?_sprintf(BANK0[2]), ?_printf(BANK0[2]), 
  1010 ;;
  1011 ;; ?___ftneg	float  size(1) Largest target is 2
  1012 ;;		 -> ?_sprintf(BANK0[2]), ?_printf(BANK0[2]), 
  1013 ;;
  1014 ;; ?___awmod	int  size(2) Largest target is 40
  1015 ;;		 -> ?_sprintf(BANK0[2]), ?_printf(BANK0[2]), dpowers(CODE[40]), 
  1016 ;;
  1017 ;; ?_scale	int  size(1) Largest target is 0
  1018 ;;
  1019 ;; ?___wmul	unsigned int  size(1) Largest target is 0
  1020 ;;
  1021 ;; ?_fround	unsigned int  size(1) Largest target is 0
  1022 ;;
  1023 ;; ?___awdiv	int  size(1) Largest target is 0
  1024 ;;
  1025 ;; ?_abs	int  size(1) Largest target is 0
  1026 ;;
  1027 ;; ?___ftdiv	float  size(1) Largest target is 0
  1028 ;;
  1029 ;; ?___altoft	float  size(1) Largest target is 0
  1030 ;;
  1031 ;; ?___ftmul	float  size(1) Largest target is 0
  1032 ;;
  1033 ;; sprintf@f	PTR const unsigned char  size(1) Largest target is 6
  1034 ;;		 -> STR_2(CODE[6]), 
  1035 ;;
  1036 ;; ?_sprintf	int  size(1) Largest target is 10
  1037 ;;		 -> NULL(NULL[0]), main@data(BANK1[10]), 
  1038 ;;
  1039 ;; sprintf@ap	PTR void [1] size(1) Largest target is 2
  1040 ;;		 -> ?_sprintf(BANK0[2]), ?_printf(BANK0[2]), 
  1041 ;;
  1042 ;; sprintf@wh	PTR unsigned char  size(1) Largest target is 10
  1043 ;;		 -> main@data(BANK1[10]), 
  1044 ;;
  1045 ;; pb.func	PTR FTN(unsigned char ,)void  size(1) Largest target is 0
  1046 ;;		 -> Absolute function(), putch(), 
  1047 ;;
  1048 ;; pb.ptr	PTR unsigned char  size(1) Largest target is 10
  1049 ;;		 -> NULL(NULL[0]), main@data(BANK1[10]), 
  1050 ;;
  1051 ;; printf@f	PTR const unsigned char  size(1) Largest target is 11
  1052 ;;		 -> STR_5(CODE[11]), STR_4(CODE[9]), 
  1053 ;;
  1054 ;; ?_printf	int  size(1) Largest target is 0
  1055 ;;
  1056 ;; printf@ap	PTR void [1] size(1) Largest target is 2
  1057 ;;		 -> ?_sprintf(BANK0[2]), ?_printf(BANK0[2]), 
  1058 ;;
  1059 ;; pb.func	PTR FTN(unsigned char ,)void  size(1) Largest target is 0
  1060 ;;		 -> Absolute function(), putch(), 
  1061 ;;
  1062 ;; pb.ptr	PTR unsigned char  size(1) Largest target is 10
  1063 ;;		 -> NULL(NULL[0]), main@data(BANK1[10]), 
  1064 ;;
  1065 ;; _doprnt@ap	PTR PTR void  size(1) Largest target is 2
  1066 ;;		 -> sprintf@ap(BANK1[1]), printf@ap(BANK1[1]), 
  1067 ;;
  1068 ;; _doprnt@f	PTR const unsigned char  size(1) Largest target is 11
  1069 ;;		 -> STR_5(CODE[11]), STR_4(CODE[9]), STR_2(CODE[6]), 
  1070 ;;
  1071 ;; S3142__prbuf$func	PTR FTN(unsigned char ,)void  size(1) Largest target is 0
  1072 ;;		 -> Absolute function(), putch(), 
  1073 ;;
  1074 ;; _doprnt@pb.func	PTR FTN(unsigned char ,)void  size(1) Largest target is 0
  1075 ;;		 -> Absolute function(), putch(), 
  1076 ;;
  1077 ;; S3142__prbuf$ptr	PTR unsigned char  size(1) Largest target is 10
  1078 ;;		 -> NULL(NULL[0]), main@data(BANK1[10]), 
  1079 ;;
  1080 ;; _doprnt@pb.ptr	PTR unsigned char  size(1) Largest target is 10
  1081 ;;		 -> NULL(NULL[0]), main@data(BANK1[10]), 
  1082 ;;
  1083 ;; _doprnt@pb	PTR struct __prbuf size(1) Largest target is 3
  1084 ;;		 -> sprintf@pb(BANK1[2]), printf@pb(BANK1[2]), 
  1085 ;;
  1086 ;; S3188$_cp	PTR const unsigned char  size(1) Largest target is 0
  1087 ;;
  1088 ;; _val._str._cp	PTR const unsigned char  size(1) Largest target is 0
  1089 ;;
  1090 ;; send_string@s	PTR const unsigned char  size(1) Largest target is 15
  1091 ;;		 -> STR_3(CODE[2]), STR_1(CODE[15]), 
  1092 ;;
  1093 ;;
  1094 ;; Critical Paths under _main in COMMON
  1095 ;;
  1096 ;;   None.
  1097 ;;
  1098 ;; Critical Paths under _ngat in COMMON
  1099 ;;
  1100 ;;   _ngat->_abs
  1101 ;;
  1102 ;; Critical Paths under _main in BANK0
  1103 ;;
  1104 ;;   _main->_sprintf
  1105 ;;   _main->_printf
  1106 ;;   _printf->__doprnt
  1107 ;;   _sprintf->__doprnt
  1108 ;;   __doprnt->_fround
  1109 ;;   _putch->___llmod
  1110 ;;   _lcd_putc->_lcd_gotoxy
  1111 ;;   ___ftsub->___ftadd
  1112 ;;   _scale->___ftmul
  1113 ;;   _fround->___ftadd
  1114 ;;   _lcd_gotoxy->_lcd_put_byte
  1115 ;;   _lcd_init->_lcd_put_byte
  1116 ;;   ___lltoft->___ftpack
  1117 ;;   ___altoft->___ftpack
  1118 ;;   ___ftmul->___ftdiv
  1119 ;;   ___ftdiv->___altoft
  1120 ;;   ___ftadd->___ftmul
  1121 ;;   _send_string->_send_char
  1122 ;;   _pwm_10bit->___awdiv
  1123 ;;   ___llmod->___lldiv
  1124 ;;   ___awdiv->___awmod
  1125 ;;   ___fttol->___awdiv
  1126 ;;   ___lbdiv->___lbmod
  1127 ;;   ___bmul->___lbdiv
  1128 ;;
  1129 ;; Critical Paths under _ngat in BANK0
  1130 ;;
  1131 ;;   None.
  1132 ;;
  1133 ;; Critical Paths under _main in BANK1
  1134 ;;
  1135 ;;   _main->_sprintf
  1136 ;;   _main->_printf
  1137 ;;   _printf->__doprnt
  1138 ;;   _sprintf->__doprnt
  1139 ;;
  1140 ;; Critical Paths under _ngat in BANK1
  1141 ;;
  1142 ;;   None.
  1143 ;;
  1144 ;; Critical Paths under _main in BANK3
  1145 ;;
  1146 ;;   None.
  1147 ;;
  1148 ;; Critical Paths under _ngat in BANK3
  1149 ;;
  1150 ;;   None.
  1151 ;;
  1152 ;; Critical Paths under _main in BANK2
  1153 ;;
  1154 ;;   None.
  1155 ;;
  1156 ;; Critical Paths under _ngat in BANK2
  1157 ;;
  1158 ;;   None.
  1159 ;;
  1160 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1161 ;;
  1162 ;;
  1163 ;;Call Graph Tables:
  1164 ;;
  1165 ;; ---------------------------------------------------------------------------------
  1166 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1167 ;; ---------------------------------------------------------------------------------
  1168 ;; (0) _main                                                10    10      0   27677
  1169 ;;                                             28 BANK1     10    10      0
  1170 ;;                           _lcd_init
  1171 ;;                          _pwm_10bit
  1172 ;;                            _tx_init
  1173 ;;                        _send_string
  1174 ;;                           ___altoft
  1175 ;;                            ___ftdiv
  1176 ;;                            ___ftmul
  1177 ;;                            _sprintf
  1178 ;;                             ___ftge
  1179 ;;                         _lcd_gotoxy
  1180 ;;                             _printf
  1181 ;; ---------------------------------------------------------------------------------
  1182 ;; (1) _printf                                               8     4      4   12536
  1183 ;;                                             73 BANK0      4     0      4
  1184 ;;                                             24 BANK1      4     4      0
  1185 ;;                            __doprnt
  1186 ;; ---------------------------------------------------------------------------------
  1187 ;; (1) _sprintf                                              8     4      4   12592
  1188 ;;                                             73 BANK0      4     0      4
  1189 ;;                                             24 BANK1      4     4      0
  1190 ;;                            __doprnt
  1191 ;; ---------------------------------------------------------------------------------
  1192 ;; (2) __doprnt                                             35    33      2   12370
  1193 ;;                                             66 BANK0      7     5      2
  1194 ;;                                              0 BANK1     24    24      0
  1195 ;;                   Absolute function
  1196 ;;                              _putch
  1197 ;;                            _isdigit
  1198 ;;                             ___wmul
  1199 ;;                             ___ftge
  1200 ;;                            ___ftneg
  1201 ;;                            ___awdiv
  1202 ;;                              _scale
  1203 ;;                            ___ftmul
  1204 ;;                             _fround
  1205 ;;                            ___ftadd
  1206 ;;                            ___fttol
  1207 ;;                         __div_to_l_
  1208 ;;                        __tdiv_to_l_
  1209 ;;                           ___lltoft
  1210 ;;                            ___ftsub
  1211 ;;                            ___lldiv
  1212 ;;                            ___llmod
  1213 ;; ---------------------------------------------------------------------------------
  1214 ;; (3) _putch                                                1     0      1     713
  1215 ;;                                             22 BANK0      1     0      1
  1216 ;;                           _lcd_putc
  1217 ;;                            ___llmod (ARG)
  1218 ;;                            ___lldiv (ARG)
  1219 ;; ---------------------------------------------------------------------------------
  1220 ;; (4) _lcd_putc                                             1     1      0     691
  1221 ;;                                              8 BANK0      1     1      0
  1222 ;;                       _lcd_put_byte
  1223 ;;                           _lcd_busy
  1224 ;;                         _lcd_gotoxy
  1225 ;;                            _isprint
  1226 ;; ---------------------------------------------------------------------------------
  1227 ;; (3) ___ftsub                                              6     0      6    1094
  1228 ;;                                             56 BANK0      6     0      6
  1229 ;;                            ___ftadd
  1230 ;;                           ___lltoft (ARG)
  1231 ;; ---------------------------------------------------------------------------------
  1232 ;; (3) _scale                                               14    11      3    1688
  1233 ;;                                             44 BANK0     11     8      3
  1234 ;;                            ___awmod
  1235 ;;                            ___awdiv
  1236 ;;                            ___ftmul
  1237 ;;                             ___bmul
  1238 ;;                            ___fttol (ARG)
  1239 ;; ---------------------------------------------------------------------------------
  1240 ;; (3) _fround                                              13    10      3    1215
  1241 ;;                                             56 BANK0     10     7      3
  1242 ;;                            ___lbmod
  1243 ;;                             ___bmul
  1244 ;;                            ___lbdiv
  1245 ;;                            ___ftmul
  1246 ;;                            ___ftadd (ARG)
  1247 ;; ---------------------------------------------------------------------------------
  1248 ;; (5) _lcd_gotoxy                                           3     2      1     313
  1249 ;;                                              5 BANK0      3     2      1
  1250 ;;                       _lcd_put_byte
  1251 ;;                           _lcd_busy
  1252 ;; ---------------------------------------------------------------------------------
  1253 ;; (1) _lcd_init                                             4     4      0     244
  1254 ;;                                              5 BANK0      3     3      0
  1255 ;;                       _lcd_put_byte
  1256 ;;                           _lcd_busy
  1257 ;; ---------------------------------------------------------------------------------
  1258 ;; (3) ___lltoft                                             5     1      4     278
  1259 ;;                                              8 BANK0      5     1      4
  1260 ;;                           ___ftpack
  1261 ;; ---------------------------------------------------------------------------------
  1262 ;; (1) ___altoft                                             6     2      4     347
  1263 ;;                                              8 BANK0      6     2      4
  1264 ;;                           ___ftpack
  1265 ;; ---------------------------------------------------------------------------------
  1266 ;; (4) ___ftmul                                             15     9      6     535
  1267 ;;                                             29 BANK0     15     9      6
  1268 ;;                           ___ftpack
  1269 ;;                            ___ftdiv (ARG)
  1270 ;;                           ___altoft (ARG)
  1271 ;;                            ___fttol (ARG)
  1272 ;;                            ___awdiv (ARG)
  1273 ;;                            ___awmod (ARG)
  1274 ;;                             ___bmul (ARG)
  1275 ;;                            ___lbdiv (ARG)
  1276 ;;                            ___lbmod (ARG)
  1277 ;; ---------------------------------------------------------------------------------
  1278 ;; (1) ___ftdiv                                             15     9      6     489
  1279 ;;                                             14 BANK0     15     9      6
  1280 ;;                           ___ftpack
  1281 ;;                           ___altoft (ARG)
  1282 ;; ---------------------------------------------------------------------------------
  1283 ;; (4) ___ftadd                                             12     6      6    1049
  1284 ;;                                             44 BANK0     12     6      6
  1285 ;;                           ___ftpack
  1286 ;;                            ___lbmod (ARG)
  1287 ;;                             ___bmul (ARG)
  1288 ;;                            ___lbdiv (ARG)
  1289 ;;                            ___ftmul (ARG)
  1290 ;; ---------------------------------------------------------------------------------
  1291 ;; (1) _send_string                                          1     1      0      67
  1292 ;;                                              1 BANK0      1     1      0
  1293 ;;                          _send_char
  1294 ;; ---------------------------------------------------------------------------------
  1295 ;; (1) _pwm_10bit                                            2     0      2     366
  1296 ;;                                             14 BANK0      2     0      2
  1297 ;;                            ___awdiv
  1298 ;; ---------------------------------------------------------------------------------
  1299 ;; (6) _lcd_busy                                             2     2      0      23
  1300 ;;                                              0 BANK0      2     2      0
  1301 ;; ---------------------------------------------------------------------------------
  1302 ;; (6) _lcd_put_byte                                         5     4      1     221
  1303 ;;                                              0 BANK0      5     4      1
  1304 ;; ---------------------------------------------------------------------------------
  1305 ;; (4) ___awmod                                              6     2      4     296
  1306 ;;                                              0 BANK0      6     2      4
  1307 ;; ---------------------------------------------------------------------------------
  1308 ;; (3) ___lldiv                                             13     5      8     162
  1309 ;;                                              0 BANK0     13     5      8
  1310 ;; ---------------------------------------------------------------------------------
  1311 ;; (3) ___ftge                                               6     0      6     136
  1312 ;;                                              0 BANK0      6     0      6
  1313 ;; ---------------------------------------------------------------------------------
  1314 ;; (3) ___ftneg                                              3     0      3      45
  1315 ;;                                              0 BANK0      3     0      3
  1316 ;; ---------------------------------------------------------------------------------
  1317 ;; (3) ___llmod                                              9     1      8     159
  1318 ;;                                             13 BANK0      9     1      8
  1319 ;;                            ___lldiv (ARG)
  1320 ;; ---------------------------------------------------------------------------------
  1321 ;; (4) ___awdiv                                              8     4      4     300
  1322 ;;                                              6 BANK0      8     4      4
  1323 ;;                            ___awmod (ARG)
  1324 ;; ---------------------------------------------------------------------------------
  1325 ;; (3) ___fttol                                             13     9      4     252
  1326 ;;                                             14 BANK0     13     9      4
  1327 ;;                           ___ftpack (ARG)
  1328 ;;                            ___awmod (ARG)
  1329 ;;                            ___awdiv (ARG)
  1330 ;;                             ___bmul (ARG)
  1331 ;; ---------------------------------------------------------------------------------
  1332 ;; (5) ___ftpack                                             8     3      5     209
  1333 ;;                                              0 BANK0      8     3      5
  1334 ;; ---------------------------------------------------------------------------------
  1335 ;; (4) ___lbmod                                              5     4      1     159
  1336 ;;                                              0 BANK0      5     4      1
  1337 ;; ---------------------------------------------------------------------------------
  1338 ;; (4) ___lbdiv                                              4     3      1     162
  1339 ;;                                              5 BANK0      4     3      1
  1340 ;;                            ___lbmod (ARG)
  1341 ;; ---------------------------------------------------------------------------------
  1342 ;; (3) ___wmul                                               6     2      4      92
  1343 ;;                                              0 BANK0      6     2      4
  1344 ;; ---------------------------------------------------------------------------------
  1345 ;; (4) ___bmul                                               3     2      1      68
  1346 ;;                                              9 BANK0      3     2      1
  1347 ;;                            ___lbmod (ARG)
  1348 ;;                            ___lbdiv (ARG)
  1349 ;; ---------------------------------------------------------------------------------
  1350 ;; (3) __div_to_l_                                          20    14      6     446
  1351 ;;                                              0 BANK0     20    14      6
  1352 ;; ---------------------------------------------------------------------------------
  1353 ;; (3) __tdiv_to_l_                                         15     9      6     303
  1354 ;;                                              0 BANK0     15     9      6
  1355 ;; ---------------------------------------------------------------------------------
  1356 ;; (3) _isdigit                                              2     2      0      68
  1357 ;;                                              0 BANK0      2     2      0
  1358 ;; ---------------------------------------------------------------------------------
  1359 ;; (3) Absolute function(Fake)                               1     0      1       0
  1360 ;;                                              0 BANK0      1     0      1
  1361 ;; ---------------------------------------------------------------------------------
  1362 ;; (2) _send_char                                            1     1      0      22
  1363 ;;                                              0 BANK0      1     1      0
  1364 ;; ---------------------------------------------------------------------------------
  1365 ;; (1) _tx_init                                              0     0      0       0
  1366 ;; ---------------------------------------------------------------------------------
  1367 ;; (5) _isprint                                              2     2      0      68
  1368 ;;                                              0 BANK0      2     2      0
  1369 ;; ---------------------------------------------------------------------------------
  1370 ;; Estimated maximum stack depth 6
  1371 ;; ---------------------------------------------------------------------------------
  1372 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1373 ;; ---------------------------------------------------------------------------------
  1374 ;; (7) _ngat                                                 2     2      0      66
  1375 ;;                                              4 COMMON     2     2      0
  1376 ;;                                _abs
  1377 ;; ---------------------------------------------------------------------------------
  1378 ;; (8) _abs                                                  4     2      2      66
  1379 ;;                                              0 COMMON     4     2      2
  1380 ;; ---------------------------------------------------------------------------------
  1381 ;; Estimated maximum stack depth 8
  1382 ;; ---------------------------------------------------------------------------------
  1383 ;; Call Graph Graphs:
  1384 ;; _main (ROOT)
  1385 ;;   _lcd_init
  1386 ;;     _lcd_put_byte
  1387 ;;     _lcd_busy
  1388 ;;   _pwm_10bit
  1389 ;;     ___awdiv
  1390 ;;       ___awmod (ARG)
  1391 ;;   _tx_init
  1392 ;;   _send_string
  1393 ;;     _send_char
  1394 ;;   ___altoft
  1395 ;;     ___ftpack
  1396 ;;   ___ftdiv
  1397 ;;     ___ftpack
  1398 ;;     ___altoft (ARG)
  1399 ;;       ___ftpack
  1400 ;;   ___ftmul
  1401 ;;     ___ftpack
  1402 ;;     ___ftdiv (ARG)
  1403 ;;       ___ftpack
  1404 ;;       ___altoft (ARG)
  1405 ;;         ___ftpack
  1406 ;;     ___altoft (ARG)
  1407 ;;       ___ftpack
  1408 ;;     ___fttol (ARG)
  1409 ;;       ___ftpack (ARG)
  1410 ;;       ___awmod (ARG)
  1411 ;;       ___awdiv (ARG)
  1412 ;;         ___awmod (ARG)
  1413 ;;       ___bmul (ARG)
  1414 ;;         ___lbmod (ARG)
  1415 ;;         ___lbdiv (ARG)
  1416 ;;           ___lbmod (ARG)
  1417 ;;     ___awdiv (ARG)
  1418 ;;       ___awmod (ARG)
  1419 ;;     ___awmod (ARG)
  1420 ;;     ___bmul (ARG)
  1421 ;;       ___lbmod (ARG)
  1422 ;;       ___lbdiv (ARG)
  1423 ;;         ___lbmod (ARG)
  1424 ;;     ___lbdiv (ARG)
  1425 ;;       ___lbmod (ARG)
  1426 ;;     ___lbmod (ARG)
  1427 ;;   _sprintf
  1428 ;;     __doprnt
  1429 ;;       Absolute function(Fake)
  1430 ;;       _putch
  1431 ;;         _lcd_putc
  1432 ;;           _lcd_put_byte
  1433 ;;           _lcd_busy
  1434 ;;           _lcd_gotoxy
  1435 ;;             _lcd_put_byte
  1436 ;;             _lcd_busy
  1437 ;;           _isprint
  1438 ;;         ___llmod (ARG)
  1439 ;;           ___lldiv (ARG)
  1440 ;;         ___lldiv (ARG)
  1441 ;;       _isdigit
  1442 ;;       ___wmul
  1443 ;;       ___ftge
  1444 ;;       ___ftneg
  1445 ;;       ___awdiv
  1446 ;;         ___awmod (ARG)
  1447 ;;       _scale
  1448 ;;         ___awmod
  1449 ;;         ___awdiv
  1450 ;;           ___awmod (ARG)
  1451 ;;         ___ftmul
  1452 ;;           ___ftpack
  1453 ;;           ___ftdiv (ARG)
  1454 ;;             ___ftpack
  1455 ;;             ___altoft (ARG)
  1456 ;;               ___ftpack
  1457 ;;           ___altoft (ARG)
  1458 ;;             ___ftpack
  1459 ;;           ___fttol (ARG)
  1460 ;;             ___ftpack (ARG)
  1461 ;;             ___awmod (ARG)
  1462 ;;             ___awdiv (ARG)
  1463 ;;               ___awmod (ARG)
  1464 ;;             ___bmul (ARG)
  1465 ;;               ___lbmod (ARG)
  1466 ;;               ___lbdiv (ARG)
  1467 ;;                 ___lbmod (ARG)
  1468 ;;           ___awdiv (ARG)
  1469 ;;             ___awmod (ARG)
  1470 ;;           ___awmod (ARG)
  1471 ;;           ___bmul (ARG)
  1472 ;;             ___lbmod (ARG)
  1473 ;;             ___lbdiv (ARG)
  1474 ;;               ___lbmod (ARG)
  1475 ;;           ___lbdiv (ARG)
  1476 ;;             ___lbmod (ARG)
  1477 ;;           ___lbmod (ARG)
  1478 ;;         ___bmul
  1479 ;;           ___lbmod (ARG)
  1480 ;;           ___lbdiv (ARG)
  1481 ;;             ___lbmod (ARG)
  1482 ;;         ___fttol (ARG)
  1483 ;;           ___ftpack (ARG)
  1484 ;;           ___awmod (ARG)
  1485 ;;           ___awdiv (ARG)
  1486 ;;             ___awmod (ARG)
  1487 ;;           ___bmul (ARG)
  1488 ;;             ___lbmod (ARG)
  1489 ;;             ___lbdiv (ARG)
  1490 ;;               ___lbmod (ARG)
  1491 ;;       ___ftmul
  1492 ;;         ___ftpack
  1493 ;;         ___ftdiv (ARG)
  1494 ;;           ___ftpack
  1495 ;;           ___altoft (ARG)
  1496 ;;             ___ftpack
  1497 ;;         ___altoft (ARG)
  1498 ;;           ___ftpack
  1499 ;;         ___fttol (ARG)
  1500 ;;           ___ftpack (ARG)
  1501 ;;           ___awmod (ARG)
  1502 ;;           ___awdiv (ARG)
  1503 ;;             ___awmod (ARG)
  1504 ;;           ___bmul (ARG)
  1505 ;;             ___lbmod (ARG)
  1506 ;;             ___lbdiv (ARG)
  1507 ;;               ___lbmod (ARG)
  1508 ;;         ___awdiv (ARG)
  1509 ;;           ___awmod (ARG)
  1510 ;;         ___awmod (ARG)
  1511 ;;         ___bmul (ARG)
  1512 ;;           ___lbmod (ARG)
  1513 ;;           ___lbdiv (ARG)
  1514 ;;             ___lbmod (ARG)
  1515 ;;         ___lbdiv (ARG)
  1516 ;;           ___lbmod (ARG)
  1517 ;;         ___lbmod (ARG)
  1518 ;;       _fround
  1519 ;;         ___lbmod
  1520 ;;         ___bmul
  1521 ;;           ___lbmod (ARG)
  1522 ;;           ___lbdiv (ARG)
  1523 ;;             ___lbmod (ARG)
  1524 ;;         ___lbdiv
  1525 ;;           ___lbmod (ARG)
  1526 ;;         ___ftmul
  1527 ;;           ___ftpack
  1528 ;;           ___ftdiv (ARG)
  1529 ;;             ___ftpack
  1530 ;;             ___altoft (ARG)
  1531 ;;               ___ftpack
  1532 ;;           ___altoft (ARG)
  1533 ;;             ___ftpack
  1534 ;;           ___fttol (ARG)
  1535 ;;             ___ftpack (ARG)
  1536 ;;             ___awmod (ARG)
  1537 ;;             ___awdiv (ARG)
  1538 ;;               ___awmod (ARG)
  1539 ;;             ___bmul (ARG)
  1540 ;;               ___lbmod (ARG)
  1541 ;;               ___lbdiv (ARG)
  1542 ;;                 ___lbmod (ARG)
  1543 ;;           ___awdiv (ARG)
  1544 ;;             ___awmod (ARG)
  1545 ;;           ___awmod (ARG)
  1546 ;;           ___bmul (ARG)
  1547 ;;             ___lbmod (ARG)
  1548 ;;             ___lbdiv (ARG)
  1549 ;;               ___lbmod (ARG)
  1550 ;;           ___lbdiv (ARG)
  1551 ;;             ___lbmod (ARG)
  1552 ;;           ___lbmod (ARG)
  1553 ;;         ___ftadd (ARG)
  1554 ;;           ___ftpack
  1555 ;;           ___lbmod (ARG)
  1556 ;;           ___bmul (ARG)
  1557 ;;             ___lbmod (ARG)
  1558 ;;             ___lbdiv (ARG)
  1559 ;;               ___lbmod (ARG)
  1560 ;;           ___lbdiv (ARG)
  1561 ;;             ___lbmod (ARG)
  1562 ;;           ___ftmul (ARG)
  1563 ;;             ___ftpack
  1564 ;;             ___ftdiv (ARG)
  1565 ;;               ___ftpack
  1566 ;;               ___altoft (ARG)
  1567 ;;                 ___ftpack
  1568 ;;             ___altoft (ARG)
  1569 ;;               ___ftpack
  1570 ;;             ___fttol (ARG)
  1571 ;;               ___ftpack (ARG)
  1572 ;;               ___awmod (ARG)
  1573 ;;               ___awdiv (ARG)
  1574 ;;                 ___awmod (ARG)
  1575 ;;               ___bmul (ARG)
  1576 ;;                 ___lbmod (ARG)
  1577 ;;                 ___lbdiv (ARG)
  1578 ;;                   ___lbmod (ARG)
  1579 ;;             ___awdiv (ARG)
  1580 ;;               ___awmod (ARG)
  1581 ;;             ___awmod (ARG)
  1582 ;;             ___bmul (ARG)
  1583 ;;               ___lbmod (ARG)
  1584 ;;               ___lbdiv (ARG)
  1585 ;;                 ___lbmod (ARG)
  1586 ;;             ___lbdiv (ARG)
  1587 ;;               ___lbmod (ARG)
  1588 ;;             ___lbmod (ARG)
  1589 ;;       ___ftadd
  1590 ;;         ___ftpack
  1591 ;;         ___lbmod (ARG)
  1592 ;;         ___bmul (ARG)
  1593 ;;           ___lbmod (ARG)
  1594 ;;           ___lbdiv (ARG)
  1595 ;;             ___lbmod (ARG)
  1596 ;;         ___lbdiv (ARG)
  1597 ;;           ___lbmod (ARG)
  1598 ;;         ___ftmul (ARG)
  1599 ;;           ___ftpack
  1600 ;;           ___ftdiv (ARG)
  1601 ;;             ___ftpack
  1602 ;;             ___altoft (ARG)
  1603 ;;               ___ftpack
  1604 ;;           ___altoft (ARG)
  1605 ;;             ___ftpack
  1606 ;;           ___fttol (ARG)
  1607 ;;             ___ftpack (ARG)
  1608 ;;             ___awmod (ARG)
  1609 ;;             ___awdiv (ARG)
  1610 ;;               ___awmod (ARG)
  1611 ;;             ___bmul (ARG)
  1612 ;;               ___lbmod (ARG)
  1613 ;;               ___lbdiv (ARG)
  1614 ;;                 ___lbmod (ARG)
  1615 ;;           ___awdiv (ARG)
  1616 ;;             ___awmod (ARG)
  1617 ;;           ___awmod (ARG)
  1618 ;;           ___bmul (ARG)
  1619 ;;             ___lbmod (ARG)
  1620 ;;             ___lbdiv (ARG)
  1621 ;;               ___lbmod (ARG)
  1622 ;;           ___lbdiv (ARG)
  1623 ;;             ___lbmod (ARG)
  1624 ;;           ___lbmod (ARG)
  1625 ;;       ___fttol
  1626 ;;         ___ftpack (ARG)
  1627 ;;         ___awmod (ARG)
  1628 ;;         ___awdiv (ARG)
  1629 ;;           ___awmod (ARG)
  1630 ;;         ___bmul (ARG)
  1631 ;;           ___lbmod (ARG)
  1632 ;;           ___lbdiv (ARG)
  1633 ;;             ___lbmod (ARG)
  1634 ;;       __div_to_l_
  1635 ;;       __tdiv_to_l_
  1636 ;;       ___lltoft
  1637 ;;         ___ftpack
  1638 ;;       ___ftsub
  1639 ;;         ___ftadd
  1640 ;;           ___ftpack
  1641 ;;           ___lbmod (ARG)
  1642 ;;           ___bmul (ARG)
  1643 ;;             ___lbmod (ARG)
  1644 ;;             ___lbdiv (ARG)
  1645 ;;               ___lbmod (ARG)
  1646 ;;           ___lbdiv (ARG)
  1647 ;;             ___lbmod (ARG)
  1648 ;;           ___ftmul (ARG)
  1649 ;;             ___ftpack
  1650 ;;             ___ftdiv (ARG)
  1651 ;;               ___ftpack
  1652 ;;               ___altoft (ARG)
  1653 ;;                 ___ftpack
  1654 ;;             ___altoft (ARG)
  1655 ;;               ___ftpack
  1656 ;;             ___fttol (ARG)
  1657 ;;               ___ftpack (ARG)
  1658 ;;               ___awmod (ARG)
  1659 ;;               ___awdiv (ARG)
  1660 ;;                 ___awmod (ARG)
  1661 ;;               ___bmul (ARG)
  1662 ;;                 ___lbmod (ARG)
  1663 ;;                 ___lbdiv (ARG)
  1664 ;;                   ___lbmod (ARG)
  1665 ;;             ___awdiv (ARG)
  1666 ;;               ___awmod (ARG)
  1667 ;;             ___awmod (ARG)
  1668 ;;             ___bmul (ARG)
  1669 ;;               ___lbmod (ARG)
  1670 ;;               ___lbdiv (ARG)
  1671 ;;                 ___lbmod (ARG)
  1672 ;;             ___lbdiv (ARG)
  1673 ;;               ___lbmod (ARG)
  1674 ;;             ___lbmod (ARG)
  1675 ;;         ___lltoft (ARG)
  1676 ;;           ___ftpack
  1677 ;;       ___lldiv
  1678 ;;       ___llmod
  1679 ;;         ___lldiv (ARG)
  1680 ;;   ___ftge
  1681 ;;   _lcd_gotoxy
  1682 ;;     _lcd_put_byte
  1683 ;;     _lcd_busy
  1684 ;;   _printf
  1685 ;;     __doprnt
  1686 ;;       Absolute function(Fake)
  1687 ;;       _putch
  1688 ;;         _lcd_putc
  1689 ;;           _lcd_put_byte
  1690 ;;           _lcd_busy
  1691 ;;           _lcd_gotoxy
  1692 ;;             _lcd_put_byte
  1693 ;;             _lcd_busy
  1694 ;;           _isprint
  1695 ;;         ___llmod (ARG)
  1696 ;;           ___lldiv (ARG)
  1697 ;;         ___lldiv (ARG)
  1698 ;;       _isdigit
  1699 ;;       ___wmul
  1700 ;;       ___ftge
  1701 ;;       ___ftneg
  1702 ;;       ___awdiv
  1703 ;;         ___awmod (ARG)
  1704 ;;       _scale
  1705 ;;         ___awmod
  1706 ;;         ___awdiv
  1707 ;;           ___awmod (ARG)
  1708 ;;         ___ftmul
  1709 ;;           ___ftpack
  1710 ;;           ___ftdiv (ARG)
  1711 ;;             ___ftpack
  1712 ;;             ___altoft (ARG)
  1713 ;;               ___ftpack
  1714 ;;           ___altoft (ARG)
  1715 ;;             ___ftpack
  1716 ;;           ___fttol (ARG)
  1717 ;;             ___ftpack (ARG)
  1718 ;;             ___awmod (ARG)
  1719 ;;             ___awdiv (ARG)
  1720 ;;               ___awmod (ARG)
  1721 ;;             ___bmul (ARG)
  1722 ;;               ___lbmod (ARG)
  1723 ;;               ___lbdiv (ARG)
  1724 ;;                 ___lbmod (ARG)
  1725 ;;           ___awdiv (ARG)
  1726 ;;             ___awmod (ARG)
  1727 ;;           ___awmod (ARG)
  1728 ;;           ___bmul (ARG)
  1729 ;;             ___lbmod (ARG)
  1730 ;;             ___lbdiv (ARG)
  1731 ;;               ___lbmod (ARG)
  1732 ;;           ___lbdiv (ARG)
  1733 ;;             ___lbmod (ARG)
  1734 ;;           ___lbmod (ARG)
  1735 ;;         ___bmul
  1736 ;;           ___lbmod (ARG)
  1737 ;;           ___lbdiv (ARG)
  1738 ;;             ___lbmod (ARG)
  1739 ;;         ___fttol (ARG)
  1740 ;;           ___ftpack (ARG)
  1741 ;;           ___awmod (ARG)
  1742 ;;           ___awdiv (ARG)
  1743 ;;             ___awmod (ARG)
  1744 ;;           ___bmul (ARG)
  1745 ;;             ___lbmod (ARG)
  1746 ;;             ___lbdiv (ARG)
  1747 ;;               ___lbmod (ARG)
  1748 ;;       ___ftmul
  1749 ;;         ___ftpack
  1750 ;;         ___ftdiv (ARG)
  1751 ;;           ___ftpack
  1752 ;;           ___altoft (ARG)
  1753 ;;             ___ftpack
  1754 ;;         ___altoft (ARG)
  1755 ;;           ___ftpack
  1756 ;;         ___fttol (ARG)
  1757 ;;           ___ftpack (ARG)
  1758 ;;           ___awmod (ARG)
  1759 ;;           ___awdiv (ARG)
  1760 ;;             ___awmod (ARG)
  1761 ;;           ___bmul (ARG)
  1762 ;;             ___lbmod (ARG)
  1763 ;;             ___lbdiv (ARG)
  1764 ;;               ___lbmod (ARG)
  1765 ;;         ___awdiv (ARG)
  1766 ;;           ___awmod (ARG)
  1767 ;;         ___awmod (ARG)
  1768 ;;         ___bmul (ARG)
  1769 ;;           ___lbmod (ARG)
  1770 ;;           ___lbdiv (ARG)
  1771 ;;             ___lbmod (ARG)
  1772 ;;         ___lbdiv (ARG)
  1773 ;;           ___lbmod (ARG)
  1774 ;;         ___lbmod (ARG)
  1775 ;;       _fround
  1776 ;;         ___lbmod
  1777 ;;         ___bmul
  1778 ;;           ___lbmod (ARG)
  1779 ;;           ___lbdiv (ARG)
  1780 ;;             ___lbmod (ARG)
  1781 ;;         ___lbdiv
  1782 ;;           ___lbmod (ARG)
  1783 ;;         ___ftmul
  1784 ;;           ___ftpack
  1785 ;;           ___ftdiv (ARG)
  1786 ;;             ___ftpack
  1787 ;;             ___altoft (ARG)
  1788 ;;               ___ftpack
  1789 ;;           ___altoft (ARG)
  1790 ;;             ___ftpack
  1791 ;;           ___fttol (ARG)
  1792 ;;             ___ftpack (ARG)
  1793 ;;             ___awmod (ARG)
  1794 ;;             ___awdiv (ARG)
  1795 ;;               ___awmod (ARG)
  1796 ;;             ___bmul (ARG)
  1797 ;;               ___lbmod (ARG)
  1798 ;;               ___lbdiv (ARG)
  1799 ;;                 ___lbmod (ARG)
  1800 ;;           ___awdiv (ARG)
  1801 ;;             ___awmod (ARG)
  1802 ;;           ___awmod (ARG)
  1803 ;;           ___bmul (ARG)
  1804 ;;             ___lbmod (ARG)
  1805 ;;             ___lbdiv (ARG)
  1806 ;;               ___lbmod (ARG)
  1807 ;;           ___lbdiv (ARG)
  1808 ;;             ___lbmod (ARG)
  1809 ;;           ___lbmod (ARG)
  1810 ;;         ___ftadd (ARG)
  1811 ;;           ___ftpack
  1812 ;;           ___lbmod (ARG)
  1813 ;;           ___bmul (ARG)
  1814 ;;             ___lbmod (ARG)
  1815 ;;             ___lbdiv (ARG)
  1816 ;;               ___lbmod (ARG)
  1817 ;;           ___lbdiv (ARG)
  1818 ;;             ___lbmod (ARG)
  1819 ;;           ___ftmul (ARG)
  1820 ;;             ___ftpack
  1821 ;;             ___ftdiv (ARG)
  1822 ;;               ___ftpack
  1823 ;;               ___altoft (ARG)
  1824 ;;                 ___ftpack
  1825 ;;             ___altoft (ARG)
  1826 ;;               ___ftpack
  1827 ;;             ___fttol (ARG)
  1828 ;;               ___ftpack (ARG)
  1829 ;;               ___awmod (ARG)
  1830 ;;               ___awdiv (ARG)
  1831 ;;                 ___awmod (ARG)
  1832 ;;               ___bmul (ARG)
  1833 ;;                 ___lbmod (ARG)
  1834 ;;                 ___lbdiv (ARG)
  1835 ;;                   ___lbmod (ARG)
  1836 ;;             ___awdiv (ARG)
  1837 ;;               ___awmod (ARG)
  1838 ;;             ___awmod (ARG)
  1839 ;;             ___bmul (ARG)
  1840 ;;               ___lbmod (ARG)
  1841 ;;               ___lbdiv (ARG)
  1842 ;;                 ___lbmod (ARG)
  1843 ;;             ___lbdiv (ARG)
  1844 ;;               ___lbmod (ARG)
  1845 ;;             ___lbmod (ARG)
  1846 ;;       ___ftadd
  1847 ;;         ___ftpack
  1848 ;;         ___lbmod (ARG)
  1849 ;;         ___bmul (ARG)
  1850 ;;           ___lbmod (ARG)
  1851 ;;           ___lbdiv (ARG)
  1852 ;;             ___lbmod (ARG)
  1853 ;;         ___lbdiv (ARG)
  1854 ;;           ___lbmod (ARG)
  1855 ;;         ___ftmul (ARG)
  1856 ;;           ___ftpack
  1857 ;;           ___ftdiv (ARG)
  1858 ;;             ___ftpack
  1859 ;;             ___altoft (ARG)
  1860 ;;               ___ftpack
  1861 ;;           ___altoft (ARG)
  1862 ;;             ___ftpack
  1863 ;;           ___fttol (ARG)
  1864 ;;             ___ftpack (ARG)
  1865 ;;             ___awmod (ARG)
  1866 ;;             ___awdiv (ARG)
  1867 ;;               ___awmod (ARG)
  1868 ;;             ___bmul (ARG)
  1869 ;;               ___lbmod (ARG)
  1870 ;;               ___lbdiv (ARG)
  1871 ;;                 ___lbmod (ARG)
  1872 ;;           ___awdiv (ARG)
  1873 ;;             ___awmod (ARG)
  1874 ;;           ___awmod (ARG)
  1875 ;;           ___bmul (ARG)
  1876 ;;             ___lbmod (ARG)
  1877 ;;             ___lbdiv (ARG)
  1878 ;;               ___lbmod (ARG)
  1879 ;;           ___lbdiv (ARG)
  1880 ;;             ___lbmod (ARG)
  1881 ;;           ___lbmod (ARG)
  1882 ;;       ___fttol
  1883 ;;         ___ftpack (ARG)
  1884 ;;         ___awmod (ARG)
  1885 ;;         ___awdiv (ARG)
  1886 ;;           ___awmod (ARG)
  1887 ;;         ___bmul (ARG)
  1888 ;;           ___lbmod (ARG)
  1889 ;;           ___lbdiv (ARG)
  1890 ;;             ___lbmod (ARG)
  1891 ;;       __div_to_l_
  1892 ;;       __tdiv_to_l_
  1893 ;;       ___lltoft
  1894 ;;         ___ftpack
  1895 ;;       ___ftsub
  1896 ;;         ___ftadd
  1897 ;;           ___ftpack
  1898 ;;           ___lbmod (ARG)
  1899 ;;           ___bmul (ARG)
  1900 ;;             ___lbmod (ARG)
  1901 ;;             ___lbdiv (ARG)
  1902 ;;               ___lbmod (ARG)
  1903 ;;           ___lbdiv (ARG)
  1904 ;;             ___lbmod (ARG)
  1905 ;;           ___ftmul (ARG)
  1906 ;;             ___ftpack
  1907 ;;             ___ftdiv (ARG)
  1908 ;;               ___ftpack
  1909 ;;               ___altoft (ARG)
  1910 ;;                 ___ftpack
  1911 ;;             ___altoft (ARG)
  1912 ;;               ___ftpack
  1913 ;;             ___fttol (ARG)
  1914 ;;               ___ftpack (ARG)
  1915 ;;               ___awmod (ARG)
  1916 ;;               ___awdiv (ARG)
  1917 ;;                 ___awmod (ARG)
  1918 ;;               ___bmul (ARG)
  1919 ;;                 ___lbmod (ARG)
  1920 ;;                 ___lbdiv (ARG)
  1921 ;;                   ___lbmod (ARG)
  1922 ;;             ___awdiv (ARG)
  1923 ;;               ___awmod (ARG)
  1924 ;;             ___awmod (ARG)
  1925 ;;             ___bmul (ARG)
  1926 ;;               ___lbmod (ARG)
  1927 ;;               ___lbdiv (ARG)
  1928 ;;                 ___lbmod (ARG)
  1929 ;;             ___lbdiv (ARG)
  1930 ;;               ___lbmod (ARG)
  1931 ;;             ___lbmod (ARG)
  1932 ;;         ___lltoft (ARG)
  1933 ;;           ___ftpack
  1934 ;;       ___lldiv
  1935 ;;       ___llmod
  1936 ;;         ___lldiv (ARG)
  1937 ;;
  1938 ;; _ngat (ROOT)
  1939 ;;   _abs
  1940 ;;
  1941 ;; Address spaces:
  1942 ;;Name               Size   Autos  Total    Cost      Usage
  1943 ;;BITCOMMON            E      0       0       0        0.0%
  1944 ;;EEDATA             100      0       0       0        0.0%
  1945 ;;NULL                 0      0       0       0        0.0%
  1946 ;;CODE                 0      0       0       0        0.0%
  1947 ;;COMMON               E      6       C       1       85.7%
  1948 ;;BITSFR0              0      0       0       1        0.0%
  1949 ;;SFR0                 0      0       0       1        0.0%
  1950 ;;BITSFR1              0      0       0       2        0.0%
  1951 ;;SFR1                 0      0       0       2        0.0%
  1952 ;;STACK                0      0       A       2        0.0%
  1953 ;;ABS                  0      0      8A       3        0.0%
  1954 ;;BITBANK0            50      0       0       4        0.0%
  1955 ;;BITSFR3              0      0       0       4        0.0%
  1956 ;;SFR3                 0      0       0       4        0.0%
  1957 ;;BANK0               50     4D      4D       5       96.3%
  1958 ;;BITSFR2              0      0       0       5        0.0%
  1959 ;;SFR2                 0      0       0       5        0.0%
  1960 ;;BITBANK1            50      0       0       6        0.0%
  1961 ;;BANK1               50     26      31       7       61.3%
  1962 ;;BITBANK3            60      0       0       8        0.0%
  1963 ;;BANK3               60      0       0       9        0.0%
  1964 ;;BITBANK2            60      0       0      10        0.0%
  1965 ;;BANK2               60      0       0      11        0.0%
  1966 ;;DATA                 0      0      94      12        0.0%
  1967                           
  1968                           
  1969 ;; *************** function _main *****************
  1970 ;; Defined at:
  1971 ;;		line 20 in file "C:\Users\DELL\Desktop\vxl\mp\dulieubanphim.c"
  1972 ;; Parameters:    Size  Location     Type
  1973 ;;		None
  1974 ;; Auto vars:     Size  Location     Type
  1975 ;;  data           10   28[BANK1 ] unsigned char [10]
  1976 ;; Return value:  Size  Location     Type
  1977 ;;		None               void
  1978 ;; Registers used:
  1979 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1980 ;; Tracked objects:
  1981 ;;		On entry : 17F/0
  1982 ;;		On exit  : 60/0
  1983 ;;		Unchanged: 0/0
  1984 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1985 ;;      Params:         0       0       0       0       0
  1986 ;;      Locals:         0       0      10       0       0
  1987 ;;      Temps:          0       0       0       0       0
  1988 ;;      Totals:         0       0      10       0       0
  1989 ;;Total ram usage:       10 bytes
  1990 ;; Hardware stack levels required when called:    8
  1991 ;; This function calls:
  1992 ;;		_lcd_init
  1993 ;;		_pwm_10bit
  1994 ;;		_tx_init
  1995 ;;		_send_string
  1996 ;;		___altoft
  1997 ;;		___ftdiv
  1998 ;;		___ftmul
  1999 ;;		_sprintf
  2000 ;;		___ftge
  2001 ;;		_lcd_gotoxy
  2002 ;;		_printf
  2003 ;; This function is called by:
  2004 ;;		Startup code after reset
  2005 ;; This function uses a non-reentrant model
  2006 ;;
  2007  06EE                     _main:	
  2008                           
  2009                           ;dulieubanphim.c: 21: ANSEL = ANSELH = 0;
  2010                           
  2011                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2012  06EE  1683               	bsf	3,5	;RP0=1, select bank3
  2013  06EF  1703               	bsf	3,6	;RP1=1, select bank3
  2014  06F0  0189               	clrf	9	;volatile
  2015  06F1  0188               	clrf	8	;volatile
  2016                           
  2017                           ;dulieubanphim.c: 22: lcd_init();
  2018  06F2  120A  118A  2544   	fcall	_lcd_init
      +       120A  118A         
  2019                           
  2020                           ;dulieubanphim.c: 23: TRISC2 =0;
  2021  06F7  1683               	bsf	3,5	;RP0=1, select bank1
  2022  06F8  3007               	movlw	7
  2023  06F9  1107               	bcf	7,2
  2024                           
  2025                           ;dulieubanphim.c: 25: T0CS = 0;
  2026  06FA  1281               	bcf	1,5
  2027                           
  2028                           ;dulieubanphim.c: 26: PSA = 0;
  2029  06FB  1181               	bcf	1,3
  2030                           
  2031                           ;dulieubanphim.c: 27: PS2 = 0; PS1 = 1;PS0 = 0;
  2032  06FC  1101               	bcf	1,2
  2033  06FD  1481               	bsf	1,1
  2034  06FE  1001               	bcf	1,0
  2035                           
  2036                           ;dulieubanphim.c: 28: TMR0 = 7;
  2037  06FF  1283               	bcf	3,5	;RP0=0, select bank0
  2038  0700  0081               	movwf	1	;volatile
  2039                           
  2040                           ;dulieubanphim.c: 29: T0IE = 1; T0IF = 0; GIE = 1;
  2041  0701  168B               	bsf	11,5
  2042  0702  110B               	bcf	11,2
  2043  0703  178B               	bsf	11,7
  2044                           
  2045                           ;dulieubanphim.c: 31: TRISC0 = 1;
  2046  0704  1683               	bsf	3,5	;RP0=1, select bank1
  2047  0705  1407               	bsf	7,0
  2048                           
  2049                           ;dulieubanphim.c: 32: TMR1CS = 1;
  2050  0706  1283               	bcf	3,5	;RP0=0, select bank0
  2051  0707  1490               	bsf	16,1
  2052                           
  2053                           ;dulieubanphim.c: 33: T1CKPS1 = 0; T1CKPS0 = 0;
  2054  0708  1290               	bcf	16,5
  2055  0709  1210               	bcf	16,4
  2056                           
  2057                           ;dulieubanphim.c: 34: T1SYNC = 1;
  2058  070A  1510               	bsf	16,2
  2059                           
  2060                           ;dulieubanphim.c: 35: TMR1 = 0;
  2061  070B  018E               	clrf	14	;volatile
  2062  070C  018F               	clrf	15	;volatile
  2063                           
  2064                           ;dulieubanphim.c: 36: TMR1GE = 0; TMR1ON = 1;
  2065  070D  1310               	bcf	16,6
  2066  070E  1410               	bsf	16,0
  2067                           
  2068                           ;dulieubanphim.c: 38: T2CKPS1=0; T2CKPS0=1;
  2069  070F  1092               	bcf	18,1
  2070  0710  1412               	bsf	18,0
  2071                           
  2072                           ;dulieubanphim.c: 39: TMR2 =0;
  2073  0711  0191               	clrf	17	;volatile
  2074                           
  2075                           ;dulieubanphim.c: 40: PR2= 124;
  2076  0712  307C               	movlw	124
  2077  0713  1683               	bsf	3,5	;RP0=1, select bank1
  2078  0714  0092               	movwf	18	;volatile
  2079                           
  2080                           ;dulieubanphim.c: 41: CCP1CON = 0b00001100;
  2081  0715  300C               	movlw	12
  2082  0716  1283               	bcf	3,5	;RP0=0, select bank0
  2083  0717  0097               	movwf	23	;volatile
  2084                           
  2085                           ;dulieubanphim.c: 42: TMR2ON = 1;
  2086  0718  1512               	bsf	18,2
  2087                           
  2088                           ;dulieubanphim.c: 43: pwm_dem =350;
  2089  0719  1683               	bsf	3,5	;RP0=1, select bank1
  2090  071A  3001               	movlw	1
  2091  071B  01C9               	clrf	(_pwm_dem+3)^(0+128)
  2092  071C  01C8               	clrf	(_pwm_dem+2)^(0+128)
  2093  071D  00C7               	movwf	(_pwm_dem+1)^(0+128)
  2094  071E  305E               	movlw	94
  2095  071F  00C6               	movwf	_pwm_dem^(0+128)
  2096                           
  2097                           ;dulieubanphim.c: 44: pwm_10bit(pwm_dem);
  2098  0720  1283               	bcf	3,5	;RP0=0, select bank0
  2099  0721  00AE               	movwf	?_pwm_10bit
  2100  0722  3001               	movlw	1
  2101  0723  00AF               	movwf	?_pwm_10bit+1
  2102  0724  120A  118A  2127   	fcall	_pwm_10bit
      +       120A  118A         
  2103                           
  2104                           ;dulieubanphim.c: 47: tx_init();
  2105  0729  160A  118A  23C1   	fcall	_tx_init
      +       120A  118A         
  2106  072E                     l7813:	
  2107                           
  2108                           ;dulieubanphim.c: 50: {
  2109                           ;dulieubanphim.c: 51: send_string(" DH SPKT 2022 ");
  2110  072E  3077               	movlw	(STR_1-__stringbase)& (0+255)
  2111  072F  160A  118A  23F5   	fcall	_send_string
      +       120A  118A         
  2112                           
  2113                           ;dulieubanphim.c: 52: v = (xung/360.0)*10.0*60.0;
  2114  0734  3016               	movlw	22
  2115  0735  01BD               	clrf	?___ftmul
  2116  0736  00BE               	movwf	?___ftmul+1
  2117  0737  3044               	movlw	68
  2118  0738  00BF               	movwf	?___ftmul+2
  2119  0739  30B4               	movlw	180
  2120  073A  01AE               	clrf	?___ftdiv
  2121  073B  00AF               	movwf	?___ftdiv+1
  2122  073C  3043               	movlw	67
  2123  073D  00B0               	movwf	?___ftdiv+2
  2124  073E  1683               	bsf	3,5	;RP0=1, select bank1
  2125  073F  0850               	movf	(_xung+3)^(0+128),w
  2126  0740  1283               	bcf	3,5	;RP0=0, select bank0
  2127  0741  00AB               	movwf	?___altoft+3
  2128  0742  1683               	bsf	3,5	;RP0=1, select bank1
  2129  0743  084F               	movf	(_xung+2)^(0+128),w
  2130  0744  1283               	bcf	3,5	;RP0=0, select bank0
  2131  0745  00AA               	movwf	?___altoft+2
  2132  0746  1683               	bsf	3,5	;RP0=1, select bank1
  2133  0747  084E               	movf	(_xung+1)^(0+128),w
  2134  0748  1283               	bcf	3,5	;RP0=0, select bank0
  2135  0749  00A9               	movwf	?___altoft+1
  2136  074A  1683               	bsf	3,5	;RP0=1, select bank1
  2137  074B  084D               	movf	_xung^(0+128),w
  2138  074C  1283               	bcf	3,5	;RP0=0, select bank0
  2139  074D  00A8               	movwf	?___altoft
  2140  074E  120A  118A  213B   	fcall	___altoft
      +       120A  118A         
  2141  0753  0828               	movf	?___altoft,w
  2142  0754  00B1               	movwf	?___ftdiv+3
  2143  0755  0829               	movf	?___altoft+1,w
  2144  0756  00B2               	movwf	?___ftdiv+4
  2145  0757  082A               	movf	?___altoft+2,w
  2146  0758  00B3               	movwf	?___ftdiv+5
  2147  0759  120A  118A  216A   	fcall	___ftdiv
      +       120A  118A         
  2148  075E  082E               	movf	?___ftdiv,w
  2149  075F  00C0               	movwf	?___ftmul+3
  2150  0760  082F               	movf	?___ftdiv+1,w
  2151  0761  00C1               	movwf	?___ftmul+4
  2152  0762  0830               	movf	?___ftdiv+2,w
  2153  0763  00C2               	movwf	?___ftmul+5
  2154  0764  120A  118A  23E6   	fcall	___ftmul
      +       120A  118A         
  2155  0769  083D               	movf	?___ftmul,w
  2156  076A  1683               	bsf	3,5	;RP0=1, select bank1
  2157  076B  00CA               	movwf	_v^(0+128)
  2158  076C  1283               	bcf	3,5	;RP0=0, select bank0
  2159  076D  083E               	movf	?___ftmul+1,w
  2160  076E  1683               	bsf	3,5	;RP0=1, select bank1
  2161  076F  00CB               	movwf	(_v+1)^(0+128)
  2162  0770  1283               	bcf	3,5	;RP0=0, select bank0
  2163  0771  083F               	movf	?___ftmul+2,w
  2164  0772  1683               	bsf	3,5	;RP0=1, select bank1
  2165  0773  00CC               	movwf	(_v+2)^(0+128)
  2166                           
  2167                           ;dulieubanphim.c: 53: sprintf(data,"%3.2f",v);
  2168  0774  3094               	movlw	((STR_4+3)-__stringbase)& (0+255)
  2169  0775  1283               	bcf	3,5	;RP0=0, select bank0
  2170  0776  00E9               	movwf	?_sprintf
  2171  0777  1683               	bsf	3,5	;RP0=1, select bank1
  2172  0778  084A               	movf	_v^(0+128),w
  2173  0779  1283               	bcf	3,5	;RP0=0, select bank0
  2174  077A  00EA               	movwf	?_sprintf+1
  2175  077B  1683               	bsf	3,5	;RP0=1, select bank1
  2176  077C  084B               	movf	(_v+1)^(0+128),w
  2177  077D  1283               	bcf	3,5	;RP0=0, select bank0
  2178  077E  00EB               	movwf	?_sprintf+2
  2179  077F  1683               	bsf	3,5	;RP0=1, select bank1
  2180  0780  084C               	movf	(_v+2)^(0+128),w
  2181  0781  1283               	bcf	3,5	;RP0=0, select bank0
  2182  0782  00EC               	movwf	?_sprintf+3
  2183  0783  30BC               	movlw	main@data& (0+255)
  2184  0784  160A  118A  23E0   	fcall	_sprintf
      +       120A  118A         
  2185                           
  2186                           ;dulieubanphim.c: 54: send_string("v");
  2187  0789  309A               	movlw	(STR_3-__stringbase)& (0+255)
  2188  078A  160A  118A  23F5   	fcall	_send_string
      +       120A  118A         
  2189                           
  2190                           ;dulieubanphim.c: 55: if(v<30.000){pwm_dem++;pwm_10bit(pwm_dem);}
  2191  078F  1683               	bsf	3,5	;RP0=1, select bank1
  2192  0790  084A               	movf	_v^(0+128),w
  2193  0791  1283               	bcf	3,5	;RP0=0, select bank0
  2194  0792  00A0               	movwf	?___ftge
  2195  0793  1683               	bsf	3,5	;RP0=1, select bank1
  2196  0794  084B               	movf	(_v+1)^(0+128),w
  2197  0795  1283               	bcf	3,5	;RP0=0, select bank0
  2198  0796  00A1               	movwf	?___ftge+1
  2199  0797  1683               	bsf	3,5	;RP0=1, select bank1
  2200  0798  084C               	movf	(_v+2)^(0+128),w
  2201  0799  1283               	bcf	3,5	;RP0=0, select bank0
  2202  079A  00A2               	movwf	?___ftge+2
  2203  079B  30F0               	movlw	240
  2204  079C  01A3               	clrf	?___ftge+3
  2205  079D  00A4               	movwf	?___ftge+4
  2206  079E  3041               	movlw	65
  2207  079F  00A5               	movwf	?___ftge+5
  2208  07A0  160A  118A  2413   	fcall	___ftge
      +       120A  118A         
  2209  07A5  1803               	btfsc	3,0
  2210  07A6  2FB0               	goto	l7827
  2211  07A7  1683               	bsf	3,5	;RP0=1, select bank1
  2212  07A8  0AC6               	incf	_pwm_dem^(0+128),f
  2213  07A9  1903               	skipnz
  2214  07AA  0AC7               	incf	(_pwm_dem+1)^(0+128),f
  2215  07AB  1903               	skipnz
  2216  07AC  0AC8               	incf	(_pwm_dem+2)^(0+128),f
  2217  07AD  1903               	skipnz
  2218  07AE  0AC9               	incf	(_pwm_dem+3)^(0+128),f
  2219  07AF  2FB9               	goto	l7825
  2220  07B0                     l7827:	
  2221                           
  2222                           ;dulieubanphim.c: 56: else {pwm_dem--;pwm_10bit(pwm_dem);}
  2223  07B0  30FF               	movlw	255
  2224  07B1  1683               	bsf	3,5	;RP0=1, select bank1
  2225  07B2  07C6               	addwf	_pwm_dem^(0+128),f
  2226  07B3  1C03               	skipc
  2227  07B4  07C7               	addwf	(_pwm_dem+1)^(0+128),f
  2228  07B5  1C03               	skipc
  2229  07B6  07C8               	addwf	(_pwm_dem+2)^(0+128),f
  2230  07B7  1C03               	skipc
  2231  07B8  07C9               	addwf	(_pwm_dem+3)^(0+128),f
  2232  07B9                     l7825:	
  2233  07B9  0847               	movf	(_pwm_dem+1)^(0+128),w
  2234  07BA  1283               	bcf	3,5	;RP0=0, select bank0
  2235  07BB  00AF               	movwf	?_pwm_10bit+1
  2236  07BC  1683               	bsf	3,5	;RP0=1, select bank1
  2237  07BD  0846               	movf	_pwm_dem^(0+128),w
  2238  07BE  1283               	bcf	3,5	;RP0=0, select bank0
  2239  07BF  00AE               	movwf	?_pwm_10bit
  2240  07C0  120A  118A  2127   	fcall	_pwm_10bit
      +       120A  118A         
  2241  07C5  3000               	movlw	0
  2242                           
  2243                           ;dulieubanphim.c: 57: lcd_gotoxy(0,0);
  2244  07C6  01A5               	clrf	?_lcd_gotoxy
  2245  07C7  120A  118A  24FD   	fcall	_lcd_gotoxy
      +       120A  118A         
  2246                           
  2247                           ;dulieubanphim.c: 58: printf("v: %3.2f",v);
  2248  07CC  1683               	bsf	3,5	;RP0=1, select bank1
  2249  07CD  084A               	movf	_v^(0+128),w
  2250  07CE  1283               	bcf	3,5	;RP0=0, select bank0
  2251  07CF  00E9               	movwf	?_printf
  2252  07D0  1683               	bsf	3,5	;RP0=1, select bank1
  2253  07D1  084B               	movf	(_v+1)^(0+128),w
  2254  07D2  1283               	bcf	3,5	;RP0=0, select bank0
  2255  07D3  00EA               	movwf	?_printf+1
  2256  07D4  1683               	bsf	3,5	;RP0=1, select bank1
  2257  07D5  084C               	movf	(_v+2)^(0+128),w
  2258  07D6  1283               	bcf	3,5	;RP0=0, select bank0
  2259  07D7  00EB               	movwf	?_printf+2
  2260  07D8  3091               	movlw	(STR_4-__stringbase)& (0+255)
  2261  07D9  160A  118A  23D0   	fcall	_printf
      +       120A  118A         
  2262  07DE  3000               	movlw	0
  2263                           
  2264                           ;dulieubanphim.c: 59: lcd_gotoxy(0,1);
  2265  07DF  01A5               	clrf	?_lcd_gotoxy
  2266  07E0  0AA5               	incf	?_lcd_gotoxy,f
  2267  07E1  120A  118A  24FD   	fcall	_lcd_gotoxy
      +       120A  118A         
  2268                           
  2269                           ;dulieubanphim.c: 60: printf("xung: %05d",xung);
  2270  07E6  1683               	bsf	3,5	;RP0=1, select bank1
  2271  07E7  0850               	movf	(_xung+3)^(0+128),w
  2272  07E8  1283               	bcf	3,5	;RP0=0, select bank0
  2273  07E9  00EC               	movwf	?_printf+3
  2274  07EA  1683               	bsf	3,5	;RP0=1, select bank1
  2275  07EB  084F               	movf	(_xung+2)^(0+128),w
  2276  07EC  1283               	bcf	3,5	;RP0=0, select bank0
  2277  07ED  00EB               	movwf	?_printf+2
  2278  07EE  1683               	bsf	3,5	;RP0=1, select bank1
  2279  07EF  084E               	movf	(_xung+1)^(0+128),w
  2280  07F0  1283               	bcf	3,5	;RP0=0, select bank0
  2281  07F1  00EA               	movwf	?_printf+1
  2282  07F2  1683               	bsf	3,5	;RP0=1, select bank1
  2283  07F3  084D               	movf	_xung^(0+128),w
  2284  07F4  1283               	bcf	3,5	;RP0=0, select bank0
  2285  07F5  00E9               	movwf	?_printf
  2286  07F6  3086               	movlw	(STR_5-__stringbase)& (0+255)
  2287  07F7  160A  118A  23D0   	fcall	_printf
      +       120A  118A         
  2288  07FC  2F2E               	goto	l7813
  2289  07FD                     __end_of_main:	
  2290                           
  2291                           	psect	text643
  2292  13D0                     __ptext643:	
  2293 ;; =============== function _main ends ============
  2294                           
  2295                           
  2296 ;; *************** function _printf *****************
  2297 ;; Defined at:
  2298 ;;		line 14 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\printf.c"
  2299 ;; Parameters:    Size  Location     Type
  2300 ;;  f               1    wreg     PTR const unsigned char 
  2301 ;;		 -> STR_5(11), STR_4(9), 
  2302 ;; Auto vars:     Size  Location     Type
  2303 ;;  f               1   24[BANK1 ] PTR const unsigned char 
  2304 ;;		 -> STR_5(11), STR_4(9), 
  2305 ;;  pb              2   26[BANK1 ] struct __prbuf
  2306 ;;  ap              1   25[BANK1 ] PTR void [1]
  2307 ;;		 -> ?_sprintf(2), ?_printf(2), 
  2308 ;; Return value:  Size  Location     Type
  2309 ;;                  2   73[BANK0 ] int 
  2310 ;; Registers used:
  2311 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2312 ;; Tracked objects:
  2313 ;;		On entry : 60/0
  2314 ;;		On exit  : 60/0
  2315 ;;		Unchanged: 0/0
  2316 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2317 ;;      Params:         0       4       0       0       0
  2318 ;;      Locals:         0       0       4       0       0
  2319 ;;      Temps:          0       0       0       0       0
  2320 ;;      Totals:         0       4       4       0       0
  2321 ;;Total ram usage:        8 bytes
  2322 ;; Hardware stack levels used:    1
  2323 ;; Hardware stack levels required when called:    7
  2324 ;; This function calls:
  2325 ;;		__doprnt
  2326 ;; This function is called by:
  2327 ;;		_main
  2328 ;; This function uses a non-reentrant model
  2329 ;;
  2330  13D0                     _printf:	
  2331                           
  2332                           ; Regs used in _printf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2333                           ;printf@f stored from wreg
  2334  13D0  1683               	bsf	3,5	;RP0=1, select bank1
  2335  13D1  00B8               	movwf	printf@f^(0+128)
  2336  13D2  3001               	movlw	(fp__putch-fpbase)& (0+255)
  2337  13D3  01BA               	clrf	printf@pb^(0+128)
  2338  13D4  00BB               	movwf	(printf@pb+1)^(0+128)
  2339  13D5  3069               	movlw	?_printf& (0+255)
  2340  13D6  00B9               	movwf	printf@ap^(0+128)
  2341                           
  2342                           ;	Return value of _printf is never used
  2343  13D7  0838               	movf	printf@f^(0+128),w
  2344  13D8  1283               	bcf	3,5	;RP0=0, select bank0
  2345  13D9  00E2               	movwf	?__doprnt
  2346  13DA  30B9               	movlw	printf@ap& (0+255)
  2347  13DB  00E3               	movwf	?__doprnt+1
  2348  13DC  30BA               	movlw	printf@pb& (0+255)
  2349  13DD  120A  158A  2808   	ljmp	__doprnt
  2350  13E0                     __end_of_printf:	
  2351                           
  2352                           	psect	text644
  2353  13E0                     __ptext644:	
  2354 ;; =============== function _printf ends ============
  2355                           
  2356                           
  2357 ;; *************** function _sprintf *****************
  2358 ;; Defined at:
  2359 ;;		line 14 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\sprintf.c"
  2360 ;; Parameters:    Size  Location     Type
  2361 ;;  wh              1    wreg     PTR unsigned char 
  2362 ;;		 -> main@data(10), 
  2363 ;;  f               1   73[BANK0 ] PTR const unsigned char 
  2364 ;;		 -> STR_2(6), 
  2365 ;; Auto vars:     Size  Location     Type
  2366 ;;  wh              1   24[BANK1 ] PTR unsigned char 
  2367 ;;		 -> main@data(10), 
  2368 ;;  pb              2   26[BANK1 ] struct __prbuf
  2369 ;;  ap              1   25[BANK1 ] PTR void [1]
  2370 ;;		 -> ?_sprintf(2), ?_printf(2), 
  2371 ;; Return value:  Size  Location     Type
  2372 ;;                  2   73[BANK0 ] int 
  2373 ;; Registers used:
  2374 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2375 ;; Tracked objects:
  2376 ;;		On entry : 60/0
  2377 ;;		On exit  : 160/20
  2378 ;;		Unchanged: 0/0
  2379 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2380 ;;      Params:         0       4       0       0       0
  2381 ;;      Locals:         0       0       4       0       0
  2382 ;;      Temps:          0       0       0       0       0
  2383 ;;      Totals:         0       4       4       0       0
  2384 ;;Total ram usage:        8 bytes
  2385 ;; Hardware stack levels used:    1
  2386 ;; Hardware stack levels required when called:    7
  2387 ;; This function calls:
  2388 ;;		__doprnt
  2389 ;; This function is called by:
  2390 ;;		_main
  2391 ;; This function uses a non-reentrant model
  2392 ;;
  2393  13E0                     _sprintf:	
  2394                           
  2395                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2396                           ;sprintf@wh stored from wreg
  2397  13E0  1683               	bsf	3,5	;RP0=1, select bank1
  2398  13E1  00B8               	movwf	sprintf@wh^(0+128)
  2399  13E2  00BA               	movwf	sprintf@pb^(0+128)
  2400  13E3  306A               	movlw	(?_sprintf+1)& (0+255)
  2401  13E4  01BB               	clrf	(sprintf@pb+1)^(0+128)
  2402  13E5  00B9               	movwf	sprintf@ap^(0+128)
  2403  13E6  1283               	bcf	3,5	;RP0=0, select bank0
  2404  13E7  0869               	movf	sprintf@f,w
  2405  13E8  00E2               	movwf	?__doprnt
  2406  13E9  30B9               	movlw	sprintf@ap& (0+255)
  2407  13EA  00E3               	movwf	?__doprnt+1
  2408  13EB  30BA               	movlw	sprintf@pb& (0+255)
  2409  13EC  120A  158A  2008   	fcall	__doprnt
  2410  13EF  1683               	bsf	3,5	;RP0=1, select bank1
  2411  13F0  083A               	movf	sprintf@pb^(0+128),w
  2412  13F1  0084               	movwf	4
  2413  13F2  1383               	bcf	3,7	;select IRP bank0
  2414  13F3  0180               	clrf	0
  2415  13F4  0008               	return
  2416  13F5                     __end_of_sprintf:	
  2417                           
  2418                           	psect	text645
  2419  0808                     __ptext645:	
  2420 ;; =============== function _sprintf ends ============
  2421                           
  2422                           
  2423 ;; *************** function __doprnt *****************
  2424 ;; Defined at:
  2425 ;;		line 455 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\lib\doprnt.c"
  2426 ;; Parameters:    Size  Location     Type
  2427 ;;  pb              1    wreg     PTR struct __prbuf
  2428 ;;		 -> sprintf@pb(2), printf@pb(2), 
  2429 ;;  f               1   66[BANK0 ] PTR const unsigned char 
  2430 ;;		 -> STR_5(11), STR_4(9), STR_2(6), 
  2431 ;;  ap              1   67[BANK0 ] PTR PTR void 
  2432 ;;		 -> sprintf@ap(1), printf@ap(1), 
  2433 ;; Auto vars:     Size  Location     Type
  2434 ;;  pb              1   23[BANK1 ] PTR struct __prbuf
  2435 ;;		 -> sprintf@pb(2), printf@pb(2), 
  2436 ;;  _val            4   13[BANK1 ] struct .
  2437 ;;  fval            3   17[BANK1 ] struct .
  2438 ;;  integ           3    4[BANK1 ] struct .
  2439 ;;  ival            3    0        struct .
  2440 ;;  prec            2   20[BANK1 ] int 
  2441 ;;  width           2   11[BANK1 ] int 
  2442 ;;  exp             2    9[BANK1 ] int 
  2443 ;;  flag            2    7[BANK1 ] unsigned short 
  2444 ;;  c               1   22[BANK1 ] char 
  2445 ;;  d               1    0        unsigned char 
  2446 ;; Return value:  Size  Location     Type
  2447 ;;                  2   66[BANK0 ] int 
  2448 ;; Registers used:
  2449 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2450 ;; Tracked objects:
  2451 ;;		On entry : 60/0
  2452 ;;		On exit  : 60/0
  2453 ;;		Unchanged: 0/0
  2454 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2455 ;;      Params:         0       2       0       0       0
  2456 ;;      Locals:         0       0      24       0       0
  2457 ;;      Temps:          0       5       0       0       0
  2458 ;;      Totals:         0       7      24       0       0
  2459 ;;Total ram usage:       31 bytes
  2460 ;; Hardware stack levels used:    1
  2461 ;; Hardware stack levels required when called:    6
  2462 ;; This function calls:
  2463 ;;		Absolute function
  2464 ;;		_putch
  2465 ;;		_isdigit
  2466 ;;		___wmul
  2467 ;;		___ftge
  2468 ;;		___ftneg
  2469 ;;		___awdiv
  2470 ;;		_scale
  2471 ;;		___ftmul
  2472 ;;		_fround
  2473 ;;		___ftadd
  2474 ;;		___fttol
  2475 ;;		__div_to_l_
  2476 ;;		__tdiv_to_l_
  2477 ;;		___lltoft
  2478 ;;		___ftsub
  2479 ;;		___lldiv
  2480 ;;		___llmod
  2481 ;; This function is called by:
  2482 ;;		_printf
  2483 ;;		_sprintf
  2484 ;; This function uses a non-reentrant model
  2485 ;;
  2486  0808                     __doprnt:	
  2487                           
  2488 ;; using string table level
  2489                           ; Regs used in __doprnt: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2490                           ;__doprnt@pb stored from wreg
  2491  0808  1683               	bsf	3,5	;RP0=1, select bank1
  2492  0809  00B7               	movwf	__doprnt@pb^(0+128)
  2493  080A                     l7727:	
  2494  080A  1283               	bcf	3,5	;RP0=0, select bank0
  2495  080B  1303               	bcf	3,6	;RP1=0, select bank0
  2496  080C  0862               	movf	__doprnt@f,w
  2497  080D  0AE2               	incf	__doprnt@f,f
  2498  080E  0084               	movwf	4
  2499  080F  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  2500  0814  1683               	bsf	3,5	;RP0=1, select bank1
  2501  0815  00B6               	movwf	__doprnt@c^(0+128)
  2502  0816  08B6               	movf	__doprnt@c^(0+128),f
  2503  0817  1903               	btfsc	3,2
  2504  0818  2EED               	goto	l7729
  2505  0819  0836               	movf	__doprnt@c^(0+128),w
  2506  081A  3A25               	xorlw	37
  2507  081B  1903               	skipnz
  2508  081C  2836               	goto	l7371
  2509  081D  0837               	movf	__doprnt@pb^(0+128),w
  2510  081E  3E01               	addlw	1
  2511  081F  0084               	movwf	4
  2512  0820  1383               	bcf	3,7	;select IRP bank0
  2513  0821  0880               	movf	0,f
  2514  0822  1903               	skipnz
  2515  0823  282C               	goto	l7367
  2516  0824  0836               	movf	__doprnt@c^(0+128),w
  2517  0825  2712               	fcall	PL4	;call to abstracted procedure
  2518  0826  120A  118A  2100   	fcall	fptable
      +       120A  158A         
  2519  082B  280A               	goto	l7727
  2520  082C                     l7367:	
  2521  082C  0837               	movf	__doprnt@pb^(0+128),w
  2522  082D  0084               	movwf	4
  2523  082E  0800               	movf	0,w
  2524  082F  0084               	movwf	4
  2525  0830  0836               	movf	__doprnt@c^(0+128),w
  2526  0831  0080               	movwf	0
  2527  0832  0837               	movf	__doprnt@pb^(0+128),w
  2528  0833  0084               	movwf	4
  2529  0834  0A80               	incf	0,f
  2530  0835  280A               	goto	l7727
  2531  0836                     l7371:	
  2532  0836  01AB               	clrf	__doprnt@width^(0+128)
  2533  0837  01AC               	clrf	(__doprnt@width+1)^(0+128)
  2534  0838  01A7               	clrf	__doprnt@flag^(0+128)
  2535  0839  01A8               	clrf	(__doprnt@flag+1)^(0+128)
  2536  083A  283F               	goto	l7377
  2537  083B                     l2234:	
  2538  083B  1683               	bsf	3,5	;RP0=1, select bank1
  2539  083C  1527               	bsf	__doprnt@flag^(0+128),2
  2540  083D  1283               	bcf	3,5	;RP0=0, select bank0
  2541  083E  0AE2               	incf	__doprnt@f,f
  2542  083F                     l7377:	
  2543  083F  1283               	bcf	3,5	;RP0=0, select bank0
  2544  0840  0862               	movf	__doprnt@f,w
  2545  0841  0084               	movwf	4
  2546  0842  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  2547                           
  2548                           ; Switch size 1, requested type "space"
  2549                           ; Number of cases is 1, Range of values is 48 to 48
  2550                           ; switch strategies available:
  2551                           ; Name         Instructions Cycles
  2552                           ; simple_byte            4     3 (average)
  2553                           ; direct_byte           14    11 (fixed)
  2554                           ; jumptable            263     9 (fixed)
  2555                           ;	Chosen strategy is simple_byte
  2556  0847  3A30               	xorlw	48	; case 48
  2557  0848  1903               	skipnz
  2558  0849  283B               	goto	l2234
  2559  084A  284B               	goto	l7379
  2560  084B                     l7379:	
  2561  084B  0862               	movf	__doprnt@f,w
  2562  084C  0084               	movwf	4
  2563  084D  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  2564  0852  27CE  120A  158A   	fcall	_isdigit
  2565  0855  1C03               	btfss	3,0
  2566  0856  287F               	goto	l7389
  2567  0857  1683               	bsf	3,5	;RP0=1, select bank1
  2568  0858  01AB               	clrf	__doprnt@width^(0+128)
  2569  0859  01AC               	clrf	(__doprnt@width+1)^(0+128)
  2570  085A                     l7383:	
  2571  085A  1683               	bsf	3,5	;RP0=1, select bank1
  2572  085B  082C               	movf	(__doprnt@width+1)^(0+128),w
  2573  085C  1283               	bcf	3,5	;RP0=0, select bank0
  2574  085D  00A1               	movwf	?___wmul+1
  2575  085E  1683               	bsf	3,5	;RP0=1, select bank1
  2576  085F  082B               	movf	__doprnt@width^(0+128),w
  2577  0860  27C8  120A  158A   	fcall	PL40	;call to abstracted procedure
  2578  0863  27DF               	fcall	___wmul
  2579  0864  0862               	movf	__doprnt@f,w
  2580  0865  0084               	movwf	4
  2581  0866  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  2582  086B  2772  120A  158A   	fcall	PL19	;call to abstracted procedure
  2583  086E  00AB               	movwf	__doprnt@width^(0+128)
  2584  086F  27B6               	fcall	PL36	;call to abstracted procedure
  2585  0870  00AC               	movwf	(__doprnt@width+1)^(0+128)
  2586  0871  1283               	bcf	3,5	;RP0=0, select bank0
  2587  0872  0AE2               	incf	__doprnt@f,f
  2588  0873  0862               	movf	__doprnt@f,w
  2589  0874  0084               	movwf	4
  2590  0875  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  2591  087A  27CE  120A  158A   	fcall	_isdigit
  2592  087D  1803               	btfsc	3,0
  2593  087E  285A               	goto	l7383
  2594  087F                     l7389:	
  2595  087F  0862               	movf	__doprnt@f,w
  2596  0880  0084               	movwf	4
  2597  0881  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  2598  0886  3A2E               	xorlw	46
  2599  0887  1D03               	skipz
  2600  0888  28B9               	goto	l7403
  2601  0889  1683               	bsf	3,5	;RP0=1, select bank1
  2602  088A  1728               	bsf	(__doprnt@flag^(0+128)+1),6
  2603  088B  1283               	bcf	3,5	;RP0=0, select bank0
  2604  088C  0AE2               	incf	__doprnt@f,f
  2605  088D  1683               	bsf	3,5	;RP0=1, select bank1
  2606  088E  01B4               	clrf	__doprnt@prec^(0+128)
  2607  088F  01B5               	clrf	(__doprnt@prec+1)^(0+128)
  2608  0890                     l7401:	
  2609  0890  1283               	bcf	3,5	;RP0=0, select bank0
  2610  0891  0862               	movf	__doprnt@f,w
  2611  0892  0084               	movwf	4
  2612  0893  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  2613  0898  27CE  120A  158A   	fcall	_isdigit
  2614  089B  1C03               	btfss	3,0
  2615  089C  28C0               	goto	l7409
  2616  089D  1683               	bsf	3,5	;RP0=1, select bank1
  2617  089E  0835               	movf	(__doprnt@prec+1)^(0+128),w
  2618  089F  1283               	bcf	3,5	;RP0=0, select bank0
  2619  08A0  00A1               	movwf	?___wmul+1
  2620  08A1  1683               	bsf	3,5	;RP0=1, select bank1
  2621  08A2  0834               	movf	__doprnt@prec^(0+128),w
  2622  08A3  27C8  120A  158A   	fcall	PL40	;call to abstracted procedure
  2623  08A6  27DF               	fcall	___wmul
  2624  08A7  0862               	movf	__doprnt@f,w
  2625  08A8  0084               	movwf	4
  2626  08A9  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  2627  08AE  2772  120A  158A   	fcall	PL19	;call to abstracted procedure
  2628  08B1  00B4               	movwf	__doprnt@prec^(0+128)
  2629  08B2  27B6  120A  158A   	fcall	PL36	;call to abstracted procedure
  2630  08B5  00B5               	movwf	(__doprnt@prec+1)^(0+128)
  2631  08B6  1283               	bcf	3,5	;RP0=0, select bank0
  2632  08B7  0AE2               	incf	__doprnt@f,f
  2633  08B8  2890               	goto	l7401
  2634  08B9                     l7403:	
  2635  08B9  1683               	bsf	3,5	;RP0=1, select bank1
  2636  08BA  01B4               	clrf	__doprnt@prec^(0+128)
  2637  08BB  01B5               	clrf	(__doprnt@prec+1)^(0+128)
  2638  08BC  1628               	bsf	(__doprnt@flag^(0+128)+1),4
  2639  08BD  28C0               	goto	l7409
  2640  08BE                     l2249:	
  2641  08BE  1528               	bsf	(__doprnt@flag^(0+128)+1),2
  2642  08BF  28D8               	goto	l7411
  2643  08C0                     l7409:	
  2644  08C0  1283               	bcf	3,5	;RP0=0, select bank0
  2645  08C1  0862               	movf	__doprnt@f,w
  2646  08C2  0AE2               	incf	__doprnt@f,f
  2647  08C3  0084               	movwf	4
  2648  08C4  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  2649  08C9  1683               	bsf	3,5	;RP0=1, select bank1
  2650  08CA  00B6               	movwf	__doprnt@c^(0+128)
  2651                           
  2652                           ; Switch size 1, requested type "space"
  2653                           ; Number of cases is 4, Range of values is 0 to 105
  2654                           ; switch strategies available:
  2655                           ; Name         Instructions Cycles
  2656                           ; simple_byte           13     7 (average)
  2657                           ; jumptable            260     6 (fixed)
  2658                           ; rangetable           110     6 (fixed)
  2659                           ; spacedrange          218     9 (fixed)
  2660                           ; locatedrange         106     3 (fixed)
  2661                           ;	Chosen strategy is simple_byte
  2662  08CB  3A00               	xorlw	0	; case 0
  2663  08CC  1903               	skipnz
  2664  08CD  2EED               	goto	l7729
  2665  08CE  3A64               	xorlw	100	; case 100
  2666  08CF  1903               	skipnz
  2667  08D0  28D8               	goto	l7411
  2668  08D1  3A02               	xorlw	2	; case 102
  2669  08D2  1903               	skipnz
  2670  08D3  28BE               	goto	l2249
  2671  08D4  3A0F               	xorlw	15	; case 105
  2672  08D5  1903               	skipnz
  2673  08D6  28D8               	goto	l7411
  2674  08D7  280A               	goto	l7727
  2675  08D8                     l7411:	
  2676  08D8  1283               	bcf	3,5	;RP0=0, select bank0
  2677  08D9  3007               	movlw	7
  2678  08DA  01E4               	clrf	??__doprnt
  2679  08DB  1683               	bsf	3,5	;RP0=1, select bank1
  2680  08DC  0528               	andwf	(__doprnt@flag+1)^(0+128),w
  2681  08DD  1283               	bcf	3,5	;RP0=0, select bank0
  2682  08DE  00E5               	movwf	??__doprnt+1
  2683  08DF  0464               	iorwf	??__doprnt,w
  2684  08E0  1903               	skipnz
  2685  08E1  2D3D               	goto	l7613
  2686  08E2  1683               	bsf	3,5	;RP0=1, select bank1
  2687  08E3  1E28               	btfss	(__doprnt@flag+1)^(0+128),4
  2688  08E4  28E8               	goto	l7417
  2689  08E5  3006               	movlw	6
  2690  08E6  00B4               	movwf	__doprnt@prec^(0+128)
  2691  08E7  01B5               	clrf	(__doprnt@prec+1)^(0+128)
  2692  08E8                     l7417:	
  2693  08E8  1283               	bcf	3,5	;RP0=0, select bank0
  2694  08E9  0863               	movf	__doprnt@ap,w
  2695  08EA  0084               	movwf	4
  2696  08EB  1383               	bcf	3,7	;select IRP bank0
  2697  08EC  0800               	movf	0,w
  2698  08ED  00E4               	movwf	??__doprnt
  2699  08EE  3003               	movlw	3
  2700  08EF  0780               	addwf	0,f
  2701  08F0  0864               	movf	??__doprnt,w
  2702  08F1  0084               	movwf	4
  2703  08F2  0800               	movf	0,w
  2704  08F3  1683               	bsf	3,5	;RP0=1, select bank1
  2705  08F4  00B1               	movwf	__doprnt@fval^(0+128)
  2706  08F5  0A84               	incf	4,f
  2707  08F6  0800               	movf	0,w
  2708  08F7  00B2               	movwf	(__doprnt@fval+1)^(0+128)
  2709  08F8  0A84               	incf	4,f
  2710  08F9  0800               	movf	0,w
  2711  08FA  00B3               	movwf	(__doprnt@fval+2)^(0+128)
  2712  08FB  0831               	movf	__doprnt@fval^(0+128),w
  2713  08FC  1283               	bcf	3,5	;RP0=0, select bank0
  2714  08FD  00A0               	movwf	?___ftge
  2715  08FE  1683               	bsf	3,5	;RP0=1, select bank1
  2716  08FF  0832               	movf	(__doprnt@fval+1)^(0+128),w
  2717  0900  1283               	bcf	3,5	;RP0=0, select bank0
  2718  0901  00A1               	movwf	?___ftge+1
  2719  0902  1683               	bsf	3,5	;RP0=1, select bank1
  2720  0903  0833               	movf	(__doprnt@fval+2)^(0+128),w
  2721  0904  1283               	bcf	3,5	;RP0=0, select bank0
  2722  0905  00A2               	movwf	?___ftge+2
  2723  0906  01A3               	clrf	?___ftge+3
  2724  0907  01A4               	clrf	?___ftge+4
  2725  0908  01A5               	clrf	?___ftge+5
  2726  0909  160A  118A  2413   	fcall	___ftge
      +       120A  158A         
  2727  090E  1803               	btfsc	3,0
  2728  090F  292C               	goto	l7425
  2729  0910  1683               	bsf	3,5	;RP0=1, select bank1
  2730  0911  0831               	movf	__doprnt@fval^(0+128),w
  2731  0912  1283               	bcf	3,5	;RP0=0, select bank0
  2732  0913  00A0               	movwf	?___ftneg
  2733  0914  1683               	bsf	3,5	;RP0=1, select bank1
  2734  0915  0832               	movf	(__doprnt@fval+1)^(0+128),w
  2735  0916  1283               	bcf	3,5	;RP0=0, select bank0
  2736  0917  00A1               	movwf	?___ftneg+1
  2737  0918  1683               	bsf	3,5	;RP0=1, select bank1
  2738  0919  0833               	movf	(__doprnt@fval+2)^(0+128),w
  2739  091A  1283               	bcf	3,5	;RP0=0, select bank0
  2740  091B  00A2               	movwf	?___ftneg+2
  2741  091C  27F8  120A  158A   	fcall	___ftneg
  2742  091F  0820               	movf	?___ftneg,w
  2743  0920  1683               	bsf	3,5	;RP0=1, select bank1
  2744  0921  00B1               	movwf	__doprnt@fval^(0+128)
  2745  0922  1283               	bcf	3,5	;RP0=0, select bank0
  2746  0923  0821               	movf	?___ftneg+1,w
  2747  0924  1683               	bsf	3,5	;RP0=1, select bank1
  2748  0925  00B2               	movwf	(__doprnt@fval+1)^(0+128)
  2749  0926  1283               	bcf	3,5	;RP0=0, select bank0
  2750  0927  0822               	movf	?___ftneg+2,w
  2751  0928  1683               	bsf	3,5	;RP0=1, select bank1
  2752  0929  00B3               	movwf	(__doprnt@fval+2)^(0+128)
  2753  092A  3003               	movlw	3
  2754  092B  04A7               	iorwf	__doprnt@flag^(0+128),f
  2755  092C                     l7425:	
  2756  092C  1683               	bsf	3,5	;RP0=1, select bank1
  2757  092D  01A9               	clrf	__doprnt@exp^(0+128)
  2758  092E  01AA               	clrf	(__doprnt@exp+1)^(0+128)
  2759  092F  0833               	movf	(__doprnt@fval+2)^(0+128),w
  2760  0930  0432               	iorwf	(__doprnt@fval+1)^(0+128),w
  2761  0931  0431               	iorwf	__doprnt@fval^(0+128),w
  2762  0932  1903               	skipnz
  2763  0933  29D9               	goto	l7457
  2764  0934  30B1               	movlw	low __doprnt@fval
  2765  0935  0084               	movwf	4
  2766  0936  0800               	movf	0,w
  2767  0937  1283               	bcf	3,5	;RP0=0, select bank0
  2768  0938  00E4               	movwf	??__doprnt
  2769  0939  0A84               	incf	4,f
  2770  093A  0800               	movf	0,w
  2771  093B  00E5               	movwf	??__doprnt+1
  2772  093C  0A84               	incf	4,f
  2773  093D  0800               	movf	0,w
  2774  093E  00E6               	movwf	??__doprnt+2
  2775  093F  0A84               	incf	4,f
  2776  0940  0800               	movf	0,w
  2777  0941  00E7               	movwf	??__doprnt+3
  2778  0942  300F               	movlw	15
  2779  0943                     u3845:	
  2780  0943  1003               	clrc
  2781  0944  0CE7               	rrf	??__doprnt+3,f
  2782  0945  0CE6               	rrf	??__doprnt+2,f
  2783  0946  0CE5               	rrf	??__doprnt+1,f
  2784  0947  0CE4               	rrf	??__doprnt,f
  2785  0948  3EFF               	addlw	-1
  2786  0949  1D03               	skipz
  2787  094A  2943               	goto	u3845
  2788  094B  0865               	movf	??__doprnt+1,w
  2789  094C  1683               	bsf	3,5	;RP0=1, select bank1
  2790  094D  00AA               	movwf	(__doprnt@exp+1)^(0+128)
  2791  094E  1283               	bcf	3,5	;RP0=0, select bank0
  2792  094F  0864               	movf	??__doprnt,w
  2793  0950  1683               	bsf	3,5	;RP0=1, select bank1
  2794  0951  00A9               	movwf	__doprnt@exp^(0+128)
  2795  0952  3082               	movlw	-126
  2796  0953  01AA               	clrf	(__doprnt@exp+1)^(0+128)
  2797  0954  07A9               	addwf	__doprnt@exp^(0+128),f
  2798  0955  1C03               	skipc
  2799  0956  03AA               	decf	(__doprnt@exp+1)^(0+128),f
  2800  0957  30FF               	movlw	-1
  2801  0958  07A9               	addwf	__doprnt@exp^(0+128),f
  2802  0959  1C03               	skipc
  2803  095A  03AA               	decf	(__doprnt@exp+1)^(0+128),f
  2804  095B  3003               	movlw	3
  2805  095C  1283               	bcf	3,5	;RP0=0, select bank0
  2806  095D  00A0               	movwf	?___wmul
  2807  095E  01A1               	clrf	?___wmul+1
  2808  095F  1683               	bsf	3,5	;RP0=1, select bank1
  2809  0960  082A               	movf	(__doprnt@exp+1)^(0+128),w
  2810  0961  1283               	bcf	3,5	;RP0=0, select bank0
  2811  0962  00A3               	movwf	?___wmul+3
  2812  0963  1683               	bsf	3,5	;RP0=1, select bank1
  2813  0964  0829               	movf	__doprnt@exp^(0+128),w
  2814  0965  1283               	bcf	3,5	;RP0=0, select bank0
  2815  0966  00A2               	movwf	?___wmul+2
  2816  0967  27DF               	fcall	___wmul
  2817  0968  0821               	movf	?___wmul+1,w
  2818  0969  1683               	bsf	3,5	;RP0=1, select bank1
  2819  096A  00AA               	movwf	(__doprnt@exp+1)^(0+128)
  2820  096B  1283               	bcf	3,5	;RP0=0, select bank0
  2821  096C  0820               	movf	?___wmul,w
  2822  096D  1683               	bsf	3,5	;RP0=1, select bank1
  2823  096E  00A9               	movwf	__doprnt@exp^(0+128)
  2824  096F  300A               	movlw	10
  2825  0970  1283               	bcf	3,5	;RP0=0, select bank0
  2826  0971  00A6               	movwf	?___awdiv
  2827  0972  01A7               	clrf	?___awdiv+1
  2828  0973  1683               	bsf	3,5	;RP0=1, select bank1
  2829  0974  082A               	movf	(__doprnt@exp+1)^(0+128),w
  2830  0975  1283               	bcf	3,5	;RP0=0, select bank0
  2831  0976  00A9               	movwf	?___awdiv+3
  2832  0977  1683               	bsf	3,5	;RP0=1, select bank1
  2833  0978  0829               	movf	__doprnt@exp^(0+128),w
  2834  0979  1283               	bcf	3,5	;RP0=0, select bank0
  2835  097A  00A8               	movwf	?___awdiv+2
  2836  097B  120A  118A  2364   	fcall	___awdiv
      +       120A  158A         
  2837  0980  0827               	movf	?___awdiv+1,w
  2838  0981  1683               	bsf	3,5	;RP0=1, select bank1
  2839  0982  00AA               	movwf	(__doprnt@exp+1)^(0+128)
  2840  0983  1283               	bcf	3,5	;RP0=0, select bank0
  2841  0984  0826               	movf	?___awdiv,w
  2842  0985  1683               	bsf	3,5	;RP0=1, select bank1
  2843  0986  00A9               	movwf	__doprnt@exp^(0+128)
  2844  0987  1FAA               	btfss	(__doprnt@exp+1)^(0+128),7
  2845  0988  298D               	goto	l7445
  2846  0989  30FF               	movlw	-1
  2847  098A  07A9               	addwf	__doprnt@exp^(0+128),f
  2848  098B  1C03               	skipc
  2849  098C  03AA               	decf	(__doprnt@exp+1)^(0+128),f
  2850  098D                     l7445:	
  2851  098D  0329               	decf	__doprnt@exp^(0+128),w
  2852  098E  3AFF               	xorlw	255
  2853  098F  120A  118A  21D2   	fcall	_scale
      +       120A  158A         
  2854  0994  274E  120A  158A   	fcall	PL11	;call to abstracted procedure
  2855  0997  2784               	fcall	PL23	;call to abstracted procedure
  2856  0998  1683               	bsf	3,5	;RP0=1, select bank1
  2857  0999  0824               	movf	__doprnt@integ^(0+128),w
  2858  099A  1283               	bcf	3,5	;RP0=0, select bank0
  2859  099B  00C0               	movwf	?___ftmul+3
  2860  099C  1683               	bsf	3,5	;RP0=1, select bank1
  2861  099D  0825               	movf	(__doprnt@integ+1)^(0+128),w
  2862  099E  1283               	bcf	3,5	;RP0=0, select bank0
  2863  099F  00C1               	movwf	?___ftmul+4
  2864  09A0  1683               	bsf	3,5	;RP0=1, select bank1
  2865  09A1  0826               	movf	(__doprnt@integ+2)^(0+128),w
  2866  09A2  1283               	bcf	3,5	;RP0=0, select bank0
  2867  09A3  00C2               	movwf	?___ftmul+5
  2868  09A4  120A  118A  23E6   	fcall	___ftmul
      +       120A  158A         
  2869  09A9  083D               	movf	?___ftmul,w
  2870  09AA  1683               	bsf	3,5	;RP0=1, select bank1
  2871  09AB  00A4               	movwf	__doprnt@integ^(0+128)
  2872  09AC  1283               	bcf	3,5	;RP0=0, select bank0
  2873  09AD  083E               	movf	?___ftmul+1,w
  2874  09AE  1683               	bsf	3,5	;RP0=1, select bank1
  2875  09AF  00A5               	movwf	(__doprnt@integ+1)^(0+128)
  2876  09B0  1283               	bcf	3,5	;RP0=0, select bank0
  2877  09B1  083F               	movf	?___ftmul+2,w
  2878  09B2  1683               	bsf	3,5	;RP0=1, select bank1
  2879  09B3  00A6               	movwf	(__doprnt@integ+2)^(0+128)
  2880  09B4  2734               	fcall	PL9	;call to abstracted procedure
  2881  09B5  3080               	movlw	128
  2882  09B6  01A3               	clrf	?___ftge+3
  2883  09B7  00A4               	movwf	?___ftge+4
  2884  09B8  303F               	movlw	63
  2885  09B9  00A5               	movwf	?___ftge+5
  2886  09BA  160A  118A  2413   	fcall	___ftge
      +       120A  158A         
  2887  09BF  1803               	btfsc	3,0
  2888  09C0  29C7               	goto	l7453
  2889  09C1  30FF               	movlw	-1
  2890  09C2  1683               	bsf	3,5	;RP0=1, select bank1
  2891  09C3  07A9               	addwf	__doprnt@exp^(0+128),f
  2892  09C4  1C03               	skipc
  2893  09C5  03AA               	decf	(__doprnt@exp+1)^(0+128),f
  2894  09C6  29D9               	goto	l7457
  2895  09C7                     l7453:	
  2896  09C7  1683               	bsf	3,5	;RP0=1, select bank1
  2897  09C8  2734               	fcall	PL9	;call to abstracted procedure
  2898  09C9  3020               	movlw	32
  2899  09CA  01A3               	clrf	?___ftge+3
  2900  09CB  00A4               	movwf	?___ftge+4
  2901  09CC  3041               	movlw	65
  2902  09CD  00A5               	movwf	?___ftge+5
  2903  09CE  160A  118A  2413   	fcall	___ftge
      +       120A  158A         
  2904  09D3  1C03               	btfss	3,0
  2905  09D4  29D9               	goto	l7457
  2906  09D5  1683               	bsf	3,5	;RP0=1, select bank1
  2907  09D6  0AA9               	incf	__doprnt@exp^(0+128),f
  2908  09D7  1903               	skipnz
  2909  09D8  0AAA               	incf	(__doprnt@exp+1)^(0+128),f
  2910  09D9                     l7457:	
  2911  09D9  1683               	bsf	3,5	;RP0=1, select bank1
  2912  09DA  0835               	movf	(__doprnt@prec+1)^(0+128),w
  2913  09DB  3A80               	xorlw	128
  2914  09DC  00FF               	movwf	127
  2915  09DD  3080               	movlw	128
  2916  09DE  027F               	subwf	127,w
  2917  09DF  1D03               	skipz
  2918  09E0  29E3               	goto	u3885
  2919  09E1  300D               	movlw	13
  2920  09E2  0234               	subwf	__doprnt@prec^(0+128),w
  2921  09E3                     u3885:	
  2922  09E3  1803               	skipnc
  2923  09E4  2A0E               	goto	l7461
  2924  09E5  27DC               	call	PL41	;select bank 1
  2925  09E6  0834               	movf	__doprnt@prec^(0+128),w
  2926  09E7  160A  118A  26AE   	fcall	_fround
      +       120A  158A         
  2927  09EC  0858               	movf	?_fround,w
  2928  09ED  00CC               	movwf	?___ftadd
  2929  09EE  0859               	movf	?_fround+1,w
  2930  09EF  00CD               	movwf	?___ftadd+1
  2931  09F0  085A               	movf	?_fround+2,w
  2932  09F1  00CE               	movwf	?___ftadd+2
  2933  09F2  1683               	bsf	3,5	;RP0=1, select bank1
  2934  09F3  0831               	movf	__doprnt@fval^(0+128),w
  2935  09F4  1283               	bcf	3,5	;RP0=0, select bank0
  2936  09F5  00CF               	movwf	?___ftadd+3
  2937  09F6  1683               	bsf	3,5	;RP0=1, select bank1
  2938  09F7  0832               	movf	(__doprnt@fval+1)^(0+128),w
  2939  09F8  1283               	bcf	3,5	;RP0=0, select bank0
  2940  09F9  00D0               	movwf	?___ftadd+4
  2941  09FA  1683               	bsf	3,5	;RP0=1, select bank1
  2942  09FB  0833               	movf	(__doprnt@fval+2)^(0+128),w
  2943  09FC  1283               	bcf	3,5	;RP0=0, select bank0
  2944  09FD  00D1               	movwf	?___ftadd+5
  2945  09FE  120A  118A  2025   	fcall	___ftadd
      +       120A  158A         
  2946  0A03  084C               	movf	?___ftadd,w
  2947  0A04  1683               	bsf	3,5	;RP0=1, select bank1
  2948  0A05  00B1               	movwf	__doprnt@fval^(0+128)
  2949  0A06  1283               	bcf	3,5	;RP0=0, select bank0
  2950  0A07  084D               	movf	?___ftadd+1,w
  2951  0A08  1683               	bsf	3,5	;RP0=1, select bank1
  2952  0A09  00B2               	movwf	(__doprnt@fval+1)^(0+128)
  2953  0A0A  1283               	bcf	3,5	;RP0=0, select bank0
  2954  0A0B  084E               	movf	?___ftadd+2,w
  2955  0A0C  1683               	bsf	3,5	;RP0=1, select bank1
  2956  0A0D  00B3               	movwf	(__doprnt@fval+2)^(0+128)
  2957  0A0E                     l7461:	
  2958  0A0E  27DC               	call	PL41	;select bank 1
  2959  0A0F  082A               	movf	(__doprnt@exp+1)^(0+128),w
  2960  0A10  3A80               	xorlw	128
  2961  0A11  00FF               	movwf	127
  2962  0A12  3080               	movlw	128
  2963  0A13  027F               	subwf	127,w
  2964  0A14  1D03               	skipz
  2965  0A15  2A18               	goto	u3895
  2966  0A16  300A               	movlw	10
  2967  0A17  0229               	subwf	__doprnt@exp^(0+128),w
  2968  0A18                     u3895:	
  2969  0A18  1803               	skipnc
  2970  0A19  2A39               	goto	l7469
  2971  0A1A  27DC               	call	PL41	;select bank 1
  2972  0A1B  0833               	movf	(__doprnt@fval+2)^(0+128),w
  2973  0A1C  0432               	iorwf	(__doprnt@fval+1)^(0+128),w
  2974  0A1D  0431               	iorwf	__doprnt@fval^(0+128),w
  2975  0A1E  1903               	skipnz
  2976  0A1F  2A8B               	goto	l7485
  2977  0A20  0831               	movf	__doprnt@fval^(0+128),w
  2978  0A21  2767               	fcall	PL18	;call to abstracted procedure
  2979  0A22  160A  118A  2509   	fcall	___fttol
      +       120A  158A         
  2980  0A27  0831               	movf	?___fttol+3,w
  2981  0A28  0430               	iorwf	?___fttol+2,w
  2982  0A29  042F               	iorwf	?___fttol+1,w
  2983  0A2A  042E               	iorwf	?___fttol,w
  2984  0A2B  1D03               	skipz
  2985  0A2C  2A8B               	goto	l7485
  2986  0A2D  1683               	bsf	3,5	;RP0=1, select bank1
  2987  0A2E  082A               	movf	(__doprnt@exp+1)^(0+128),w
  2988  0A2F  3A80               	xorlw	128
  2989  0A30  00FF               	movwf	127
  2990  0A31  3080               	movlw	128
  2991  0A32  027F               	subwf	127,w
  2992  0A33  1D03               	skipz
  2993  0A34  2A37               	goto	u3925
  2994  0A35  3002               	movlw	2
  2995  0A36  0229               	subwf	__doprnt@exp^(0+128),w
  2996  0A37                     u3925:	
  2997  0A37  1C03               	skipc
  2998  0A38  2A8B               	goto	l7485
  2999  0A39                     l7469:	
  3000  0A39  27DC               	call	PL41	;select bank 1
  3001  0A3A  2734               	fcall	PL9	;call to abstracted procedure
  3002  0A3B  3070               	movlw	112
  3003  0A3C  00A3               	movwf	?___ftge+3
  3004  0A3D  3089               	movlw	137
  3005  0A3E  00A4               	movwf	?___ftge+4
  3006  0A3F  3040               	movlw	64
  3007  0A40  00A5               	movwf	?___ftge+5
  3008  0A41  160A  118A  2413   	fcall	___ftge
      +       120A  158A         
  3009  0A46  1803               	btfsc	3,0
  3010  0A47  2A4A               	goto	l7473
  3011  0A48  30F7               	movlw	-9
  3012  0A49  2A4B               	goto	L1
  3013  0A4A                     l7473:	
  3014  0A4A  30F8               	movlw	-8
  3015  0A4B                     L1:	
  3016  0A4B  1683               	bsf	3,5	;RP0=1, select bank1
  3017  0A4C  07A9               	addwf	__doprnt@exp^(0+128),f
  3018  0A4D  1C03               	skipc
  3019  0A4E  03AA               	decf	(__doprnt@exp+1)^(0+128),f
  3020  0A4F  0829               	movf	__doprnt@exp^(0+128),w
  3021  0A50  120A  118A  21D2   	fcall	_scale
      +       120A  158A         
  3022  0A55  274E               	fcall	PL11	;call to abstracted procedure
  3023  0A56  00A0               	movwf	?__tdiv_to_l_
  3024  0A57  1683               	bsf	3,5	;RP0=1, select bank1
  3025  0A58  0832               	movf	(__doprnt@fval+1)^(0+128),w
  3026  0A59  1283               	bcf	3,5	;RP0=0, select bank0
  3027  0A5A  00A1               	movwf	?__tdiv_to_l_+1
  3028  0A5B  1683               	bsf	3,5	;RP0=1, select bank1
  3029  0A5C  0833               	movf	(__doprnt@fval+2)^(0+128),w
  3030  0A5D  1283               	bcf	3,5	;RP0=0, select bank0
  3031  0A5E  00A2               	movwf	?__tdiv_to_l_+2
  3032  0A5F  1683               	bsf	3,5	;RP0=1, select bank1
  3033  0A60  0824               	movf	__doprnt@integ^(0+128),w
  3034  0A61  1283               	bcf	3,5	;RP0=0, select bank0
  3035  0A62  00A3               	movwf	?__tdiv_to_l_+3
  3036  0A63  1683               	bsf	3,5	;RP0=1, select bank1
  3037  0A64  0825               	movf	(__doprnt@integ+1)^(0+128),w
  3038  0A65  1283               	bcf	3,5	;RP0=0, select bank0
  3039  0A66  00A4               	movwf	?__tdiv_to_l_+4
  3040  0A67  1683               	bsf	3,5	;RP0=1, select bank1
  3041  0A68  0826               	movf	(__doprnt@integ+2)^(0+128),w
  3042  0A69  1283               	bcf	3,5	;RP0=0, select bank0
  3043  0A6A  00A5               	movwf	?__tdiv_to_l_+5
  3044  0A6B  160A  118A  256B   	fcall	__tdiv_to_l_
      +       120A  158A         
  3045  0A70  0823               	movf	?__tdiv_to_l_+3,w
  3046  0A71  1683               	bsf	3,5	;RP0=1, select bank1
  3047  0A72  00A3               	movwf	(__doprnt$3206+3)^(0+128)
  3048  0A73  1283               	bcf	3,5	;RP0=0, select bank0
  3049  0A74  0822               	movf	?__tdiv_to_l_+2,w
  3050  0A75  1683               	bsf	3,5	;RP0=1, select bank1
  3051  0A76  00A2               	movwf	(__doprnt$3206+2)^(0+128)
  3052  0A77  1283               	bcf	3,5	;RP0=0, select bank0
  3053  0A78  0821               	movf	?__tdiv_to_l_+1,w
  3054  0A79  1683               	bsf	3,5	;RP0=1, select bank1
  3055  0A7A  00A1               	movwf	(__doprnt$3206+1)^(0+128)
  3056  0A7B  1283               	bcf	3,5	;RP0=0, select bank0
  3057  0A7C  0820               	movf	?__tdiv_to_l_,w
  3058  0A7D  1683               	bsf	3,5	;RP0=1, select bank1
  3059  0A7E  00A0               	movwf	__doprnt$3206^(0+128)
  3060  0A7F  0823               	movf	(__doprnt$3206+3)^(0+128),w
  3061  0A80  00B0               	movwf	(__doprnt@_val+3)^(0+128)
  3062  0A81  0822               	movf	(__doprnt$3206+2)^(0+128),w
  3063  0A82  00AF               	movwf	(__doprnt@_val+2)^(0+128)
  3064  0A83  0821               	movf	(__doprnt$3206+1)^(0+128),w
  3065  0A84  00AE               	movwf	(__doprnt@_val+1)^(0+128)
  3066  0A85  0820               	movf	__doprnt$3206^(0+128),w
  3067  0A86  00AD               	movwf	__doprnt@_val^(0+128)
  3068  0A87  01B1               	clrf	__doprnt@fval^(0+128)
  3069  0A88  01B2               	clrf	(__doprnt@fval+1)^(0+128)
  3070  0A89  01B3               	clrf	(__doprnt@fval+2)^(0+128)
  3071  0A8A  2ACE               	goto	l7489
  3072  0A8B                     l7485:	
  3073  0A8B  27DC               	call	PL41	;select bank 1
  3074  0A8C  0831               	movf	__doprnt@fval^(0+128),w
  3075  0A8D  2767               	fcall	PL18	;call to abstracted procedure
  3076  0A8E  160A  118A  2509   	fcall	___fttol
      +       120A  158A         
  3077  0A93  2740               	fcall	PL10	;call to abstracted procedure
  3078  0A94  1683               	bsf	3,5	;RP0=1, select bank1
  3079  0A95  00AD               	movwf	__doprnt@_val^(0+128)
  3080  0A96  0830               	movf	(__doprnt@_val+3)^(0+128),w
  3081  0A97  1283               	bcf	3,5	;RP0=0, select bank0
  3082  0A98  00AB               	movwf	?___lltoft+3
  3083  0A99  1683               	bsf	3,5	;RP0=1, select bank1
  3084  0A9A  082F               	movf	(__doprnt@_val+2)^(0+128),w
  3085  0A9B  1283               	bcf	3,5	;RP0=0, select bank0
  3086  0A9C  00AA               	movwf	?___lltoft+2
  3087  0A9D  1683               	bsf	3,5	;RP0=1, select bank1
  3088  0A9E  082E               	movf	(__doprnt@_val+1)^(0+128),w
  3089  0A9F  1283               	bcf	3,5	;RP0=0, select bank0
  3090  0AA0  00A9               	movwf	?___lltoft+1
  3091  0AA1  1683               	bsf	3,5	;RP0=1, select bank1
  3092  0AA2  082D               	movf	__doprnt@_val^(0+128),w
  3093  0AA3  1283               	bcf	3,5	;RP0=0, select bank0
  3094  0AA4  00A8               	movwf	?___lltoft
  3095  0AA5  120A  118A  2109   	fcall	___lltoft
      +       120A  158A         
  3096  0AAA  0828               	movf	?___lltoft,w
  3097  0AAB  00D8               	movwf	?___ftsub
  3098  0AAC  0829               	movf	?___lltoft+1,w
  3099  0AAD  00D9               	movwf	?___ftsub+1
  3100  0AAE  082A               	movf	?___lltoft+2,w
  3101  0AAF  00DA               	movwf	?___ftsub+2
  3102  0AB0  1683               	bsf	3,5	;RP0=1, select bank1
  3103  0AB1  0831               	movf	__doprnt@fval^(0+128),w
  3104  0AB2  1283               	bcf	3,5	;RP0=0, select bank0
  3105  0AB3  00DB               	movwf	?___ftsub+3
  3106  0AB4  1683               	bsf	3,5	;RP0=1, select bank1
  3107  0AB5  0832               	movf	(__doprnt@fval+1)^(0+128),w
  3108  0AB6  1283               	bcf	3,5	;RP0=0, select bank0
  3109  0AB7  00DC               	movwf	?___ftsub+4
  3110  0AB8  1683               	bsf	3,5	;RP0=1, select bank1
  3111  0AB9  0833               	movf	(__doprnt@fval+2)^(0+128),w
  3112  0ABA  1283               	bcf	3,5	;RP0=0, select bank0
  3113  0ABB  00DD               	movwf	?___ftsub+5
  3114  0ABC  120A  118A  200F   	fcall	___ftsub
      +       120A  158A         
  3115  0AC1  0858               	movf	?___ftsub,w
  3116  0AC2  1683               	bsf	3,5	;RP0=1, select bank1
  3117  0AC3  00B1               	movwf	__doprnt@fval^(0+128)
  3118  0AC4  1283               	bcf	3,5	;RP0=0, select bank0
  3119  0AC5  0859               	movf	?___ftsub+1,w
  3120  0AC6  1683               	bsf	3,5	;RP0=1, select bank1
  3121  0AC7  00B2               	movwf	(__doprnt@fval+1)^(0+128)
  3122  0AC8  1283               	bcf	3,5	;RP0=0, select bank0
  3123  0AC9  085A               	movf	?___ftsub+2,w
  3124  0ACA  1683               	bsf	3,5	;RP0=1, select bank1
  3125  0ACB  00B3               	movwf	(__doprnt@fval+2)^(0+128)
  3126  0ACC  01A9               	clrf	__doprnt@exp^(0+128)
  3127  0ACD  01AA               	clrf	(__doprnt@exp+1)^(0+128)
  3128  0ACE                     l7489:	
  3129  0ACE  01B6               	clrf	__doprnt@c^(0+128)
  3130  0ACF  0AB6               	incf	__doprnt@c^(0+128),f
  3131  0AD0                     l7495:	
  3132  0AD0  271A               	fcall	PL5	;call to abstracted procedure
  3133  0AD1  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  3134  0AD6  00E5               	movwf	??__doprnt+1
  3135  0AD7  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  3136  0ADC  00E6               	movwf	??__doprnt+2
  3137  0ADD  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  3138  0AE2  00E7               	movwf	??__doprnt+3
  3139  0AE3  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  3140  0AE8  00E8               	movwf	??__doprnt+4
  3141  0AE9  1683               	bsf	3,5	;RP0=1, select bank1
  3142  0AEA  0230               	subwf	(__doprnt@_val+3)^(0+128),w
  3143  0AEB  1D03               	skipz
  3144  0AEC  2AFD               	goto	u3945
  3145  0AED  1283               	bcf	3,5	;RP0=0, select bank0
  3146  0AEE  0867               	movf	??__doprnt+3,w
  3147  0AEF  1683               	bsf	3,5	;RP0=1, select bank1
  3148  0AF0  022F               	subwf	(__doprnt@_val+2)^(0+128),w
  3149  0AF1  1D03               	skipz
  3150  0AF2  2AFD               	goto	u3945
  3151  0AF3  1283               	bcf	3,5	;RP0=0, select bank0
  3152  0AF4  0866               	movf	??__doprnt+2,w
  3153  0AF5  1683               	bsf	3,5	;RP0=1, select bank1
  3154  0AF6  022E               	subwf	(__doprnt@_val+1)^(0+128),w
  3155  0AF7  1D03               	skipz
  3156  0AF8  2AFD               	goto	u3945
  3157  0AF9  1283               	bcf	3,5	;RP0=0, select bank0
  3158  0AFA  0865               	movf	??__doprnt+1,w
  3159  0AFB  1683               	bsf	3,5	;RP0=1, select bank1
  3160  0AFC  022D               	subwf	__doprnt@_val^(0+128),w
  3161  0AFD                     u3945:	
  3162  0AFD  1C03               	btfss	3,0
  3163  0AFE  2B04               	goto	l7503
  3164  0AFF  0AB6               	incf	__doprnt@c^(0+128),f
  3165  0B00  0836               	movf	__doprnt@c^(0+128),w
  3166  0B01  3A0A               	xorlw	10
  3167  0B02  1D03               	skipz
  3168  0B03  2AD0               	goto	l7495
  3169  0B04                     l7503:	
  3170  0B04  0834               	movf	__doprnt@prec^(0+128),w
  3171  0B05  0736               	addwf	__doprnt@c^(0+128),w
  3172  0B06  1283               	bcf	3,5	;RP0=0, select bank0
  3173  0B07  00E4               	movwf	??__doprnt
  3174  0B08  1683               	bsf	3,5	;RP0=1, select bank1
  3175  0B09  0835               	movf	(__doprnt@prec+1)^(0+128),w
  3176  0B0A  1803               	skipnc
  3177  0B0B  0A35               	incf	(__doprnt@prec+1)^(0+128),w
  3178  0B0C  1BB6               	btfsc	__doprnt@c^(0+128),7
  3179  0B0D  3EFF               	addlw	255
  3180  0B0E  1283               	bcf	3,5	;RP0=0, select bank0
  3181  0B0F  00E5               	movwf	??__doprnt+1
  3182  0B10  1683               	bsf	3,5	;RP0=1, select bank1
  3183  0B11  0829               	movf	__doprnt@exp^(0+128),w
  3184  0B12  1283               	bcf	3,5	;RP0=0, select bank0
  3185  0B13  0764               	addwf	??__doprnt,w
  3186  0B14  00E6               	movwf	??__doprnt+2
  3187  0B15  1683               	bsf	3,5	;RP0=1, select bank1
  3188  0B16  082A               	movf	(__doprnt@exp+1)^(0+128),w
  3189  0B17  1803               	skipnc
  3190  0B18  0A2A               	incf	(__doprnt@exp+1)^(0+128),w
  3191  0B19  1283               	bcf	3,5	;RP0=0, select bank0
  3192  0B1A  0765               	addwf	??__doprnt+1,w
  3193  0B1B  00E7               	movwf	??__doprnt+3
  3194  0B1C  0866               	movf	??__doprnt+2,w
  3195  0B1D  1683               	bsf	3,5	;RP0=1, select bank1
  3196  0B1E  02AB               	subwf	__doprnt@width^(0+128),f
  3197  0B1F  1283               	bcf	3,5	;RP0=0, select bank0
  3198  0B20  0867               	movf	??__doprnt+3,w
  3199  0B21  1683               	bsf	3,5	;RP0=1, select bank1
  3200  0B22  1C03               	skipc
  3201  0B23  03AC               	decf	(__doprnt@width+1)^(0+128),f
  3202  0B24  02AC               	subwf	(__doprnt@width+1)^(0+128),f
  3203  0B25  0835               	movf	(__doprnt@prec+1)^(0+128),w
  3204  0B26  0434               	iorwf	__doprnt@prec^(0+128),w
  3205  0B27  1903               	skipnz
  3206  0B28  2B2D               	goto	l7509
  3207  0B29  30FF               	movlw	-1
  3208  0B2A  07AB               	addwf	__doprnt@width^(0+128),f
  3209  0B2B  1C03               	skipc
  3210  0B2C  03AC               	decf	(__doprnt@width+1)^(0+128),f
  3211  0B2D                     l7509:	
  3212  0B2D  0827               	movf	__doprnt@flag^(0+128),w
  3213  0B2E  3903               	andlw	3
  3214  0B2F  1903               	btfsc	3,2
  3215  0B30  2B35               	goto	l7513
  3216  0B31  30FF               	movlw	-1
  3217  0B32  07AB               	addwf	__doprnt@width^(0+128),f
  3218  0B33  1C03               	skipc
  3219  0B34  03AC               	decf	(__doprnt@width+1)^(0+128),f
  3220  0B35                     l7513:	
  3221  0B35  1927               	btfsc	__doprnt@flag^(0+128),2
  3222  0B36  2B51               	goto	l7527
  3223  0B37  2B76               	goto	l7539
  3224  0B38                     l7517:	
  3225  0B38  1683               	bsf	3,5	;RP0=1, select bank1
  3226  0B39  27A1  120A  158A   	fcall	PL26	;call to abstracted procedure
  3227  0B3C  1903               	skipnz
  3228  0B3D  2B46               	goto	l7521
  3229  0B3E  3030               	movlw	48
  3230  0B3F  2712               	fcall	PL4	;call to abstracted procedure
  3231  0B40  120A  118A  2100   	fcall	fptable
      +       120A  158A         
  3232  0B45  2B4C               	goto	l7525
  3233  0B46                     l7521:	
  3234  0B46  0837               	movf	__doprnt@pb^(0+128),w
  3235  0B47  0084               	movwf	4
  3236  0B48  0800               	movf	0,w
  3237  0B49  277D  120A  158A   	fcall	PL21	;call to abstracted procedure
  3238  0B4C                     l7525:	
  3239  0B4C  30FF               	movlw	-1
  3240  0B4D  27DC               	call	PL41	;select bank 1
  3241  0B4E  07AB               	addwf	__doprnt@width^(0+128),f
  3242  0B4F  1C03               	skipc
  3243  0B50  03AC               	decf	(__doprnt@width+1)^(0+128),f
  3244  0B51                     l7527:	
  3245  0B51  082C               	movf	(__doprnt@width+1)^(0+128),w
  3246  0B52  3A80               	xorlw	128
  3247  0B53  00FF               	movwf	127
  3248  0B54  3080               	movlw	128
  3249  0B55  027F               	subwf	127,w
  3250  0B56  1D03               	skipz
  3251  0B57  2B5A               	goto	u4005
  3252  0B58  3001               	movlw	1
  3253  0B59  022B               	subwf	__doprnt@width^(0+128),w
  3254  0B5A                     u4005:	
  3255  0B5A  1C03               	btfss	3,0
  3256  0B5B  2BF7               	goto	l7559
  3257  0B5C  2B38               	goto	l7517
  3258  0B5D                     l7529:	
  3259  0B5D  1683               	bsf	3,5	;RP0=1, select bank1
  3260  0B5E  27A1  120A  158A   	fcall	PL26	;call to abstracted procedure
  3261  0B61  1903               	skipnz
  3262  0B62  2B6B               	goto	l7533
  3263  0B63  3020               	movlw	32
  3264  0B64  2712               	fcall	PL4	;call to abstracted procedure
  3265  0B65  120A  118A  2100   	fcall	fptable
      +       120A  158A         
  3266  0B6A  2B71               	goto	l7537
  3267  0B6B                     l7533:	
  3268  0B6B  0837               	movf	__doprnt@pb^(0+128),w
  3269  0B6C  0084               	movwf	4
  3270  0B6D  0800               	movf	0,w
  3271  0B6E  27AF  120A  158A   	fcall	PL34	;call to abstracted procedure
  3272  0B71                     l7537:	
  3273  0B71  30FF               	movlw	-1
  3274  0B72  27DC               	call	PL41	;select bank 1
  3275  0B73  07AB               	addwf	__doprnt@width^(0+128),f
  3276  0B74  1C03               	skipc
  3277  0B75  03AC               	decf	(__doprnt@width+1)^(0+128),f
  3278  0B76                     l7539:	
  3279  0B76  082C               	movf	(__doprnt@width+1)^(0+128),w
  3280  0B77  3A80               	xorlw	128
  3281  0B78  00FF               	movwf	127
  3282  0B79  3080               	movlw	128
  3283  0B7A  027F               	subwf	127,w
  3284  0B7B  1D03               	skipz
  3285  0B7C  2B7F               	goto	u4025
  3286  0B7D  3001               	movlw	1
  3287  0B7E  022B               	subwf	__doprnt@width^(0+128),w
  3288  0B7F                     u4025:	
  3289  0B7F  1803               	skipnc
  3290  0B80  2B5D               	goto	l7529
  3291  0B81  27DC               	call	PL41	;select bank 1
  3292  0B82  0827               	movf	__doprnt@flag^(0+128),w
  3293  0B83  3903               	andlw	3
  3294  0B84  1903               	btfsc	3,2
  3295  0B85  2BF7               	goto	l7559
  3296  0B86  0837               	movf	__doprnt@pb^(0+128),w
  3297  0B87  3E01               	addlw	1
  3298  0B88  0084               	movwf	4
  3299  0B89  1383               	bcf	3,7	;select IRP bank0
  3300  0B8A  0880               	movf	0,f
  3301  0B8B  1903               	skipnz
  3302  0B8C  2B95               	goto	l7547
  3303  0B8D  302D               	movlw	45
  3304  0B8E  2712               	fcall	PL4	;call to abstracted procedure
  3305  0B8F  120A  118A  2100   	fcall	fptable
      +       120A  158A         
  3306  0B94  2BF7               	goto	l7559
  3307  0B95                     l7547:	
  3308  0B95  27BD  120A  158A   	fcall	PL37	;call to abstracted procedure
  3309  0B98  2BF4               	goto	L4
  3310  0B99                     l7551:	
  3311  0B99  27A8  120A  158A   	fcall	PL32	;call to abstracted procedure
  3312  0B9C  1903               	skipnz
  3313  0B9D  2BCC               	goto	L7
  3314  0B9E  1283               	bcf	3,5	;RP0=0, select bank0
  3315  0B9F  2703               	fcall	PL3	;call to abstracted procedure
  3316  0BA0  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  3317  0BA5  00A0               	movwf	?___lldiv
  3318  0BA6  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  3319  0BAB  00A1               	movwf	?___lldiv+1
  3320  0BAC  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  3321  0BB1  00A2               	movwf	?___lldiv+2
  3322  0BB2  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  3323  0BB7  26F1               	fcall	PL2	;call to abstracted procedure
  3324  0BB8  160A  118A  24C1   	fcall	___lldiv
      +       120A  158A         
  3325  0BBD  272B               	fcall	PL8	;call to abstracted procedure
  3326  0BBE  160A  118A  243F   	fcall	___llmod
      +       120A  158A         
  3327  0BC3  082D               	movf	?___llmod,w
  3328  0BC4  3E30               	addlw	48
  3329  0BC5  2724               	fcall	PL6	;call to abstracted procedure
  3330  0BC6  120A  118A  2100   	fcall	fptable
      +       120A  158A         
  3331  0BCB  2BF7               	goto	l7559
  3332  0BCC                     L7:	
  3333  0BCC  1283               	bcf	3,5	;RP0=0, select bank0
  3334  0BCD  2703               	fcall	PL3	;call to abstracted procedure
  3335  0BCE  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  3336  0BD3  00A0               	movwf	?___lldiv
  3337  0BD4  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  3338  0BD9  00A1               	movwf	?___lldiv+1
  3339  0BDA  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  3340  0BDF  00A2               	movwf	?___lldiv+2
  3341  0BE0  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  3342  0BE5  26F1               	fcall	PL2	;call to abstracted procedure
  3343  0BE6  160A  118A  24C1   	fcall	___lldiv
      +       120A  158A         
  3344  0BEB  272B               	fcall	PL8	;call to abstracted procedure
  3345  0BEC  160A  118A  243F   	fcall	___llmod
      +       120A  158A         
  3346  0BF1  275C  120A  158A   	fcall	PL16	;call to abstracted procedure
  3347  0BF4                     L4:	
  3348  0BF4  27C2  120A  158A   	fcall	PL39	;call to abstracted procedure
  3349  0BF7                     l7559:	
  3350  0BF7  27DC               	call	PL41	;select bank 1
  3351  0BF8  03B6               	decf	__doprnt@c^(0+128),f
  3352  0BF9  0F36               	incfsz	__doprnt@c^(0+128),w
  3353  0BFA  2B99               	goto	l7551
  3354  0BFB                     l7571:	
  3355  0BFB  082A               	movf	(__doprnt@exp+1)^(0+128),w
  3356  0BFC  3A80               	xorlw	128
  3357  0BFD  00FF               	movwf	127
  3358  0BFE  3080               	movlw	128
  3359  0BFF  027F               	subwf	127,w
  3360  0C00  1D03               	skipz
  3361  0C01  2C04               	goto	u4085
  3362  0C02  3001               	movlw	1
  3363  0C03  0229               	subwf	__doprnt@exp^(0+128),w
  3364  0C04                     u4085:	
  3365  0C04  1C03               	btfss	3,0
  3366  0C05  2C20               	goto	l7573
  3367  0C06  1683               	bsf	3,5	;RP0=1, select bank1
  3368  0C07  27A1  120A  158A   	fcall	PL26	;call to abstracted procedure
  3369  0C0A  1903               	skipnz
  3370  0C0B  2C14               	goto	l7565
  3371  0C0C  3030               	movlw	48
  3372  0C0D  2712               	fcall	PL4	;call to abstracted procedure
  3373  0C0E  120A  118A  2100   	fcall	fptable
      +       120A  158A         
  3374  0C13  2C1A               	goto	l7569
  3375  0C14                     l7565:	
  3376  0C14  0837               	movf	__doprnt@pb^(0+128),w
  3377  0C15  0084               	movwf	4
  3378  0C16  0800               	movf	0,w
  3379  0C17  277D  120A  158A   	fcall	PL21	;call to abstracted procedure
  3380  0C1A                     l7569:	
  3381  0C1A  30FF               	movlw	-1
  3382  0C1B  27DC               	call	PL41	;select bank 1
  3383  0C1C  07A9               	addwf	__doprnt@exp^(0+128),f
  3384  0C1D  1C03               	skipc
  3385  0C1E  03AA               	decf	(__doprnt@exp+1)^(0+128),f
  3386  0C1F  2BFB               	goto	l7571
  3387  0C20                     l7573:	
  3388  0C20  27DC               	call	PL41	;select bank 1
  3389  0C21  0835               	movf	(__doprnt@prec+1)^(0+128),w
  3390  0C22  3A80               	xorlw	128
  3391  0C23  00FF               	movwf	127
  3392  0C24  3080               	movlw	128
  3393  0C25  027F               	subwf	127,w
  3394  0C26  1D03               	skipz
  3395  0C27  2C2A               	goto	u4095
  3396  0C28  3009               	movlw	9
  3397  0C29  0234               	subwf	__doprnt@prec^(0+128),w
  3398  0C2A                     u4095:	
  3399  0C2A  1C03               	skipc
  3400  0C2B  2C2F               	goto	l7577
  3401  0C2C  3008               	movlw	8
  3402  0C2D  27DC               	call	PL41	;select bank 1
  3403  0C2E  2C31               	goto	L2
  3404  0C2F                     l7577:	
  3405  0C2F  27DC               	call	PL41	;select bank 1
  3406  0C30  0834               	movf	__doprnt@prec^(0+128),w
  3407  0C31                     L2:	
  3408  0C31  00B6               	movwf	__doprnt@c^(0+128)
  3409  0C32  1283               	bcf	3,5	;RP0=0, select bank0
  3410  0C33  00E4               	movwf	??__doprnt
  3411  0C34  01E5               	clrf	??__doprnt+1
  3412  0C35  1BE4               	btfsc	??__doprnt,7
  3413  0C36  03E5               	decf	??__doprnt+1,f
  3414  0C37  1683               	bsf	3,5	;RP0=1, select bank1
  3415  0C38  02B4               	subwf	__doprnt@prec^(0+128),f
  3416  0C39  1283               	bcf	3,5	;RP0=0, select bank0
  3417  0C3A  0865               	movf	??__doprnt+1,w
  3418  0C3B  1683               	bsf	3,5	;RP0=1, select bank1
  3419  0C3C  1C03               	skipc
  3420  0C3D  03B5               	decf	(__doprnt@prec+1)^(0+128),f
  3421  0C3E  02B5               	subwf	(__doprnt@prec+1)^(0+128),f
  3422  0C3F  0836               	movf	__doprnt@c^(0+128),w
  3423  0C40  1903               	btfsc	3,2
  3424  0C41  2C5A               	goto	l7587
  3425  0C42  0837               	movf	__doprnt@pb^(0+128),w
  3426  0C43  3E01               	addlw	1
  3427  0C44  0084               	movwf	4
  3428  0C45  1383               	bcf	3,7	;select IRP bank0
  3429  0C46  0880               	movf	0,f
  3430  0C47  1903               	skipnz
  3431  0C48  2C51               	goto	l7583
  3432  0C49  302E               	movlw	46
  3433  0C4A  2712               	fcall	PL4	;call to abstracted procedure
  3434  0C4B  120A  118A  2100   	fcall	fptable
      +       120A  158A         
  3435  0C50  2C5A               	goto	l7587
  3436  0C51                     l7583:	
  3437  0C51  0837               	movf	__doprnt@pb^(0+128),w
  3438  0C52  0084               	movwf	4
  3439  0C53  0800               	movf	0,w
  3440  0C54  0084               	movwf	4
  3441  0C55  302E               	movlw	46
  3442  0C56  0080               	movwf	0
  3443  0C57  0837               	movf	__doprnt@pb^(0+128),w
  3444  0C58  0084               	movwf	4
  3445  0C59  0A80               	incf	0,f
  3446  0C5A                     l7587:	
  3447  0C5A  27DC               	call	PL41	;select bank 1
  3448  0C5B  0836               	movf	__doprnt@c^(0+128),w
  3449  0C5C  120A  118A  21D2   	fcall	_scale
      +       120A  158A         
  3450  0C61  084C               	movf	?_scale,w
  3451  0C62  00C0               	movwf	?___ftmul+3
  3452  0C63  084D               	movf	?_scale+1,w
  3453  0C64  00C1               	movwf	?___ftmul+4
  3454  0C65  084E               	movf	?_scale+2,w
  3455  0C66  00C2               	movwf	?___ftmul+5
  3456  0C67  1683               	bsf	3,5	;RP0=1, select bank1
  3457  0C68  0831               	movf	__doprnt@fval^(0+128),w
  3458  0C69  1283               	bcf	3,5	;RP0=0, select bank0
  3459  0C6A  2784               	fcall	PL23	;call to abstracted procedure
  3460  0C6B  120A  118A  23E6   	fcall	___ftmul
      +       120A  158A         
  3461  0C70  083D               	movf	?___ftmul,w
  3462  0C71  00AE               	movwf	?___fttol
  3463  0C72  083E               	movf	?___ftmul+1,w
  3464  0C73  00AF               	movwf	?___fttol+1
  3465  0C74  083F               	movf	?___ftmul+2,w
  3466  0C75  00B0               	movwf	?___fttol+2
  3467  0C76  160A  118A  2509   	fcall	___fttol
      +       120A  158A         
  3468  0C7B  2740  120A  158A   	fcall	PL10	;call to abstracted procedure
  3469  0C7E  2D19               	goto	L3
  3470  0C7F                     l7589:	
  3471  0C7F  27A8  120A  158A   	fcall	PL32	;call to abstracted procedure
  3472  0C82  1903               	skipnz
  3473  0C83  2CB2               	goto	L8
  3474  0C84  1283               	bcf	3,5	;RP0=0, select bank0
  3475  0C85  2703               	fcall	PL3	;call to abstracted procedure
  3476  0C86  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  3477  0C8B  00A0               	movwf	?___lldiv
  3478  0C8C  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  3479  0C91  00A1               	movwf	?___lldiv+1
  3480  0C92  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  3481  0C97  00A2               	movwf	?___lldiv+2
  3482  0C98  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  3483  0C9D  26F1               	fcall	PL2	;call to abstracted procedure
  3484  0C9E  160A  118A  24C1   	fcall	___lldiv
      +       120A  158A         
  3485  0CA3  272B               	fcall	PL8	;call to abstracted procedure
  3486  0CA4  160A  118A  243F   	fcall	___llmod
      +       120A  158A         
  3487  0CA9  082D               	movf	?___llmod,w
  3488  0CAA  3E30               	addlw	48
  3489  0CAB  2724               	fcall	PL6	;call to abstracted procedure
  3490  0CAC  120A  118A  2100   	fcall	fptable
      +       120A  158A         
  3491  0CB1  2CDD               	goto	l7597
  3492  0CB2                     L8:	
  3493  0CB2  1283               	bcf	3,5	;RP0=0, select bank0
  3494  0CB3  2703               	fcall	PL3	;call to abstracted procedure
  3495  0CB4  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  3496  0CB9  00A0               	movwf	?___lldiv
  3497  0CBA  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  3498  0CBF  00A1               	movwf	?___lldiv+1
  3499  0CC0  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  3500  0CC5  00A2               	movwf	?___lldiv+2
  3501  0CC6  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  3502  0CCB  26F1               	fcall	PL2	;call to abstracted procedure
  3503  0CCC  160A  118A  24C1   	fcall	___lldiv
      +       120A  158A         
  3504  0CD1  272B               	fcall	PL8	;call to abstracted procedure
  3505  0CD2  160A  118A  243F   	fcall	___llmod
      +       120A  158A         
  3506  0CD7  275C  120A  158A   	fcall	PL16	;call to abstracted procedure
  3507  0CDA  27C2  120A  158A   	fcall	PL39	;call to abstracted procedure
  3508  0CDD                     l7597:	
  3509  0CDD  27DC               	call	PL41	;select bank 1
  3510  0CDE  271A               	fcall	PL5	;call to abstracted procedure
  3511  0CDF  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  3512  0CE4  00AD               	movwf	?___llmod
  3513  0CE5  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  3514  0CEA  00AE               	movwf	?___llmod+1
  3515  0CEB  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  3516  0CF0  00AF               	movwf	?___llmod+2
  3517  0CF1  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  3518  0CF6  00B0               	movwf	?___llmod+3
  3519  0CF7  1683               	bsf	3,5	;RP0=1, select bank1
  3520  0CF8  0830               	movf	(__doprnt@_val+3)^(0+128),w
  3521  0CF9  1283               	bcf	3,5	;RP0=0, select bank0
  3522  0CFA  00B4               	movwf	?___llmod+7
  3523  0CFB  1683               	bsf	3,5	;RP0=1, select bank1
  3524  0CFC  082F               	movf	(__doprnt@_val+2)^(0+128),w
  3525  0CFD  1283               	bcf	3,5	;RP0=0, select bank0
  3526  0CFE  00B3               	movwf	?___llmod+6
  3527  0CFF  1683               	bsf	3,5	;RP0=1, select bank1
  3528  0D00  082E               	movf	(__doprnt@_val+1)^(0+128),w
  3529  0D01  1283               	bcf	3,5	;RP0=0, select bank0
  3530  0D02  00B2               	movwf	?___llmod+5
  3531  0D03  1683               	bsf	3,5	;RP0=1, select bank1
  3532  0D04  082D               	movf	__doprnt@_val^(0+128),w
  3533  0D05  1283               	bcf	3,5	;RP0=0, select bank0
  3534  0D06  00B1               	movwf	?___llmod+4
  3535  0D07  160A  118A  243F   	fcall	___llmod
      +       120A  158A         
  3536  0D0C  0830               	movf	?___llmod+3,w
  3537  0D0D  1683               	bsf	3,5	;RP0=1, select bank1
  3538  0D0E  00B0               	movwf	(__doprnt@_val+3)^(0+128)
  3539  0D0F  1283               	bcf	3,5	;RP0=0, select bank0
  3540  0D10  082F               	movf	?___llmod+2,w
  3541  0D11  1683               	bsf	3,5	;RP0=1, select bank1
  3542  0D12  00AF               	movwf	(__doprnt@_val+2)^(0+128)
  3543  0D13  1283               	bcf	3,5	;RP0=0, select bank0
  3544  0D14  082E               	movf	?___llmod+1,w
  3545  0D15  1683               	bsf	3,5	;RP0=1, select bank1
  3546  0D16  00AE               	movwf	(__doprnt@_val+1)^(0+128)
  3547  0D17  1283               	bcf	3,5	;RP0=0, select bank0
  3548  0D18  082D               	movf	?___llmod,w
  3549  0D19                     L3:	
  3550  0D19  1683               	bsf	3,5	;RP0=1, select bank1
  3551  0D1A  00AD               	movwf	__doprnt@_val^(0+128)
  3552  0D1B  03B6               	decf	__doprnt@c^(0+128),f
  3553  0D1C  0F36               	incfsz	__doprnt@c^(0+128),w
  3554  0D1D  2C7F               	goto	l7589
  3555  0D1E                     l7611:	
  3556  0D1E  0835               	movf	(__doprnt@prec+1)^(0+128),w
  3557  0D1F  0434               	iorwf	__doprnt@prec^(0+128),w
  3558  0D20  1903               	btfsc	3,2
  3559  0D21  280A               	goto	l7727
  3560  0D22  0837               	movf	__doprnt@pb^(0+128),w
  3561  0D23  3E01               	addlw	1
  3562  0D24  0084               	movwf	4
  3563  0D25  1383               	bcf	3,7	;select IRP bank0
  3564  0D26  0880               	movf	0,f
  3565  0D27  1903               	skipnz
  3566  0D28  2D31               	goto	l7605
  3567  0D29  3030               	movlw	48
  3568  0D2A  2712               	fcall	PL4	;call to abstracted procedure
  3569  0D2B  120A  118A  2100   	fcall	fptable
      +       120A  158A         
  3570  0D30  2D37               	goto	l7609
  3571  0D31                     l7605:	
  3572  0D31  0837               	movf	__doprnt@pb^(0+128),w
  3573  0D32  0084               	movwf	4
  3574  0D33  0800               	movf	0,w
  3575  0D34  277D  120A  158A   	fcall	PL21	;call to abstracted procedure
  3576  0D37                     l7609:	
  3577  0D37  30FF               	movlw	-1
  3578  0D38  27DC               	call	PL41	;select bank 1
  3579  0D39  07B4               	addwf	__doprnt@prec^(0+128),f
  3580  0D3A  1C03               	skipc
  3581  0D3B  03B5               	decf	(__doprnt@prec+1)^(0+128),f
  3582  0D3C  2D1E               	goto	l7611
  3583  0D3D                     l7613:	
  3584  0D3D  0863               	movf	__doprnt@ap,w
  3585  0D3E  0084               	movwf	4
  3586  0D3F  1383               	bcf	3,7	;select IRP bank0
  3587  0D40  0800               	movf	0,w
  3588  0D41  00E4               	movwf	??__doprnt
  3589  0D42  3002               	movlw	2
  3590  0D43  0780               	addwf	0,f
  3591  0D44  0864               	movf	??__doprnt,w
  3592  0D45  0084               	movwf	4
  3593  0D46  0800               	movf	0,w
  3594  0D47  00E5               	movwf	??__doprnt+1
  3595  0D48  0A84               	incf	4,f
  3596  0D49  0800               	movf	0,w
  3597  0D4A  00E6               	movwf	??__doprnt+2
  3598  0D4B  0865               	movf	??__doprnt+1,w
  3599  0D4C  1683               	bsf	3,5	;RP0=1, select bank1
  3600  0D4D  00AD               	movwf	__doprnt@_val^(0+128)
  3601  0D4E  1283               	bcf	3,5	;RP0=0, select bank0
  3602  0D4F  0866               	movf	??__doprnt+2,w
  3603  0D50  1683               	bsf	3,5	;RP0=1, select bank1
  3604  0D51  00AE               	movwf	(__doprnt@_val+1)^(0+128)
  3605  0D52  3000               	movlw	0
  3606  0D53  1BAE               	btfsc	(__doprnt@_val+1)^(0+128),7
  3607  0D54  30FF               	movlw	255
  3608  0D55  00AF               	movwf	(__doprnt@_val+2)^(0+128)
  3609  0D56  00B0               	movwf	(__doprnt@_val+3)^(0+128)
  3610  0D57  1FB0               	btfss	(__doprnt@_val+3)^(0+128),7
  3611  0D58  2D66               	goto	l7621
  3612  0D59  3003               	movlw	3
  3613  0D5A  04A7               	iorwf	__doprnt@flag^(0+128),f
  3614  0D5B  09AD               	comf	__doprnt@_val^(0+128),f
  3615  0D5C  09AE               	comf	(__doprnt@_val+1)^(0+128),f
  3616  0D5D  09AF               	comf	(__doprnt@_val+2)^(0+128),f
  3617  0D5E  09B0               	comf	(__doprnt@_val+3)^(0+128),f
  3618  0D5F  0AAD               	incf	__doprnt@_val^(0+128),f
  3619  0D60  1903               	skipnz
  3620  0D61  0AAE               	incf	(__doprnt@_val+1)^(0+128),f
  3621  0D62  1903               	skipnz
  3622  0D63  0AAF               	incf	(__doprnt@_val+2)^(0+128),f
  3623  0D64  1903               	skipnz
  3624  0D65  0AB0               	incf	(__doprnt@_val+3)^(0+128),f
  3625  0D66                     l7621:	
  3626  0D66  0835               	movf	(__doprnt@prec+1)^(0+128),w
  3627  0D67  0434               	iorwf	__doprnt@prec^(0+128),w
  3628  0D68  1D03               	skipz
  3629  0D69  2D72               	goto	l7627
  3630  0D6A  0830               	movf	(__doprnt@_val+3)^(0+128),w
  3631  0D6B  042F               	iorwf	(__doprnt@_val+2)^(0+128),w
  3632  0D6C  042E               	iorwf	(__doprnt@_val+1)^(0+128),w
  3633  0D6D  042D               	iorwf	__doprnt@_val^(0+128),w
  3634  0D6E  1903               	btfsc	3,2
  3635  0D6F  0AB4               	incf	__doprnt@prec^(0+128),f
  3636  0D70  1903               	skipnz
  3637  0D71  0AB5               	incf	(__doprnt@prec+1)^(0+128),f
  3638  0D72                     l7627:	
  3639  0D72  01B6               	clrf	__doprnt@c^(0+128)
  3640  0D73  0AB6               	incf	__doprnt@c^(0+128),f
  3641  0D74                     l7633:	
  3642  0D74  271A               	fcall	PL5	;call to abstracted procedure
  3643  0D75  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  3644  0D7A  00E5               	movwf	??__doprnt+1
  3645  0D7B  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  3646  0D80  00E6               	movwf	??__doprnt+2
  3647  0D81  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  3648  0D86  00E7               	movwf	??__doprnt+3
  3649  0D87  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  3650  0D8C  00E8               	movwf	??__doprnt+4
  3651  0D8D  1683               	bsf	3,5	;RP0=1, select bank1
  3652  0D8E  0230               	subwf	(__doprnt@_val+3)^(0+128),w
  3653  0D8F  1D03               	skipz
  3654  0D90  2DA1               	goto	u4195
  3655  0D91  1283               	bcf	3,5	;RP0=0, select bank0
  3656  0D92  0867               	movf	??__doprnt+3,w
  3657  0D93  1683               	bsf	3,5	;RP0=1, select bank1
  3658  0D94  022F               	subwf	(__doprnt@_val+2)^(0+128),w
  3659  0D95  1D03               	skipz
  3660  0D96  2DA1               	goto	u4195
  3661  0D97  1283               	bcf	3,5	;RP0=0, select bank0
  3662  0D98  0866               	movf	??__doprnt+2,w
  3663  0D99  1683               	bsf	3,5	;RP0=1, select bank1
  3664  0D9A  022E               	subwf	(__doprnt@_val+1)^(0+128),w
  3665  0D9B  1D03               	skipz
  3666  0D9C  2DA1               	goto	u4195
  3667  0D9D  1283               	bcf	3,5	;RP0=0, select bank0
  3668  0D9E  0865               	movf	??__doprnt+1,w
  3669  0D9F  1683               	bsf	3,5	;RP0=1, select bank1
  3670  0DA0  022D               	subwf	__doprnt@_val^(0+128),w
  3671  0DA1                     u4195:	
  3672  0DA1  1C03               	btfss	3,0
  3673  0DA2  2DA8               	goto	l7641
  3674  0DA3  0AB6               	incf	__doprnt@c^(0+128),f
  3675  0DA4  0836               	movf	__doprnt@c^(0+128),w
  3676  0DA5  3A0A               	xorlw	10
  3677  0DA6  1D03               	skipz
  3678  0DA7  2D74               	goto	l7633
  3679  0DA8                     l7641:	
  3680  0DA8  0836               	movf	__doprnt@c^(0+128),w
  3681  0DA9  278E  120A  158A   	fcall	PL24	;call to abstracted procedure
  3682  0DAC  0835               	movf	(__doprnt@prec+1)^(0+128),w
  3683  0DAD  3A80               	xorlw	128
  3684  0DAE  1283               	bcf	3,5	;RP0=0, select bank0
  3685  0DAF  0266               	subwf	??__doprnt+2,w
  3686  0DB0  1D03               	skipz
  3687  0DB1  2DB6               	goto	u4215
  3688  0DB2  1683               	bsf	3,5	;RP0=1, select bank1
  3689  0DB3  0834               	movf	__doprnt@prec^(0+128),w
  3690  0DB4  1283               	bcf	3,5	;RP0=0, select bank0
  3691  0DB5  0264               	subwf	??__doprnt,w
  3692  0DB6                     u4215:	
  3693  0DB6  1803               	skipnc
  3694  0DB7  2DBC               	goto	l7645
  3695  0DB8  27DC               	call	PL41	;select bank 1
  3696  0DB9  0834               	movf	__doprnt@prec^(0+128),w
  3697  0DBA  00B6               	movwf	__doprnt@c^(0+128)
  3698  0DBB  2DD4               	goto	l7649
  3699  0DBC                     l7645:	
  3700  0DBC  1683               	bsf	3,5	;RP0=1, select bank1
  3701  0DBD  2798  120A  158A   	fcall	PL25	;call to abstracted procedure
  3702  0DC0  0835               	movf	(__doprnt@prec+1)^(0+128),w
  3703  0DC1  3A80               	xorlw	128
  3704  0DC2  1283               	bcf	3,5	;RP0=0, select bank0
  3705  0DC3  00E6               	movwf	??__doprnt+2
  3706  0DC4  0865               	movf	??__doprnt+1,w
  3707  0DC5  3A80               	xorlw	128
  3708  0DC6  0266               	subwf	??__doprnt+2,w
  3709  0DC7  1D03               	skipz
  3710  0DC8  2DCC               	goto	u4225
  3711  0DC9  0864               	movf	??__doprnt,w
  3712  0DCA  1683               	bsf	3,5	;RP0=1, select bank1
  3713  0DCB  0234               	subwf	__doprnt@prec^(0+128),w
  3714  0DCC                     u4225:	
  3715  0DCC  1803               	skipnc
  3716  0DCD  2DD4               	goto	l7649
  3717  0DCE  27DC               	call	PL41	;select bank 1
  3718  0DCF  0836               	movf	__doprnt@c^(0+128),w
  3719  0DD0  00B4               	movwf	__doprnt@prec^(0+128)
  3720  0DD1  01B5               	clrf	(__doprnt@prec+1)^(0+128)
  3721  0DD2  1BB4               	btfsc	__doprnt@prec^(0+128),7
  3722  0DD3  03B5               	decf	(__doprnt@prec+1)^(0+128),f
  3723  0DD4                     l7649:	
  3724  0DD4  27DC               	call	PL41	;select bank 1
  3725  0DD5  082C               	movf	(__doprnt@width+1)^(0+128),w
  3726  0DD6  042B               	iorwf	__doprnt@width^(0+128),w
  3727  0DD7  1903               	skipnz
  3728  0DD8  2DE1               	goto	l7655
  3729  0DD9  0827               	movf	__doprnt@flag^(0+128),w
  3730  0DDA  3903               	andlw	3
  3731  0DDB  1903               	btfsc	3,2
  3732  0DDC  2DE1               	goto	l7655
  3733  0DDD  30FF               	movlw	-1
  3734  0DDE  07AB               	addwf	__doprnt@width^(0+128),f
  3735  0DDF  1C03               	skipc
  3736  0DE0  03AC               	decf	(__doprnt@width+1)^(0+128),f
  3737  0DE1                     l7655:	
  3738  0DE1  1F28               	btfss	(__doprnt@flag+1)^(0+128),6
  3739  0DE2  2DFE               	goto	l7663
  3740  0DE3  0835               	movf	(__doprnt@prec+1)^(0+128),w
  3741  0DE4  3A80               	xorlw	128
  3742  0DE5  1283               	bcf	3,5	;RP0=0, select bank0
  3743  0DE6  00E4               	movwf	??__doprnt
  3744  0DE7  1683               	bsf	3,5	;RP0=1, select bank1
  3745  0DE8  082C               	movf	(__doprnt@width+1)^(0+128),w
  3746  0DE9  3A80               	xorlw	128
  3747  0DEA  1283               	bcf	3,5	;RP0=0, select bank0
  3748  0DEB  0264               	subwf	??__doprnt,w
  3749  0DEC  1D03               	skipz
  3750  0DED  2DF1               	goto	u4265
  3751  0DEE  1683               	bsf	3,5	;RP0=1, select bank1
  3752  0DEF  082B               	movf	__doprnt@width^(0+128),w
  3753  0DF0  0234               	subwf	__doprnt@prec^(0+128),w
  3754  0DF1                     u4265:	
  3755  0DF1  1803               	skipnc
  3756  0DF2  2DFB               	goto	l7661
  3757  0DF3  27DC               	call	PL41	;select bank 1
  3758  0DF4  0834               	movf	__doprnt@prec^(0+128),w
  3759  0DF5  02AB               	subwf	__doprnt@width^(0+128),f
  3760  0DF6  0835               	movf	(__doprnt@prec+1)^(0+128),w
  3761  0DF7  1C03               	skipc
  3762  0DF8  03AC               	decf	(__doprnt@width+1)^(0+128),f
  3763  0DF9  02AC               	subwf	(__doprnt@width+1)^(0+128),f
  3764  0DFA  2DFE               	goto	l7663
  3765  0DFB                     l7661:	
  3766  0DFB  27DC               	call	PL41	;select bank 1
  3767  0DFC  01AB               	clrf	__doprnt@width^(0+128)
  3768  0DFD  01AC               	clrf	(__doprnt@width+1)^(0+128)
  3769  0DFE                     l7663:	
  3770  0DFE  0836               	movf	__doprnt@c^(0+128),w
  3771  0DFF  278E  120A  158A   	fcall	PL24	;call to abstracted procedure
  3772  0E02  082C               	movf	(__doprnt@width+1)^(0+128),w
  3773  0E03  3A80               	xorlw	128
  3774  0E04  1283               	bcf	3,5	;RP0=0, select bank0
  3775  0E05  0266               	subwf	??__doprnt+2,w
  3776  0E06  1D03               	skipz
  3777  0E07  2E0C               	goto	u4275
  3778  0E08  1683               	bsf	3,5	;RP0=1, select bank1
  3779  0E09  082B               	movf	__doprnt@width^(0+128),w
  3780  0E0A  1283               	bcf	3,5	;RP0=0, select bank0
  3781  0E0B  0264               	subwf	??__doprnt,w
  3782  0E0C                     u4275:	
  3783  0E0C  1803               	skipnc
  3784  0E0D  2E1A               	goto	l7667
  3785  0E0E  1683               	bsf	3,5	;RP0=1, select bank1
  3786  0E0F  2798  120A  158A   	fcall	PL25	;call to abstracted procedure
  3787  0E12  02AB               	subwf	__doprnt@width^(0+128),f
  3788  0E13  1283               	bcf	3,5	;RP0=0, select bank0
  3789  0E14  0865               	movf	??__doprnt+1,w
  3790  0E15  1683               	bsf	3,5	;RP0=1, select bank1
  3791  0E16  1C03               	skipc
  3792  0E17  03AC               	decf	(__doprnt@width+1)^(0+128),f
  3793  0E18  02AC               	subwf	(__doprnt@width+1)^(0+128),f
  3794  0E19  2E1D               	goto	l7669
  3795  0E1A                     l7667:	
  3796  0E1A  27DC               	call	PL41	;select bank 1
  3797  0E1B  01AB               	clrf	__doprnt@width^(0+128)
  3798  0E1C  01AC               	clrf	(__doprnt@width+1)^(0+128)
  3799  0E1D                     l7669:	
  3800  0E1D  1D27               	btfss	__doprnt@flag^(0+128),2
  3801  0E1E  2E5B               	goto	l7693
  3802  0E1F  0827               	movf	__doprnt@flag^(0+128),w
  3803  0E20  3903               	andlw	3
  3804  0E21  1903               	btfsc	3,2
  3805  0E22  2E3B               	goto	l7681
  3806  0E23  0837               	movf	__doprnt@pb^(0+128),w
  3807  0E24  3E01               	addlw	1
  3808  0E25  0084               	movwf	4
  3809  0E26  1383               	bcf	3,7	;select IRP bank0
  3810  0E27  0880               	movf	0,f
  3811  0E28  1903               	skipnz
  3812  0E29  2E32               	goto	l7677
  3813  0E2A  302D               	movlw	45
  3814  0E2B  2712               	fcall	PL4	;call to abstracted procedure
  3815  0E2C  120A  118A  2100   	fcall	fptable
      +       120A  158A         
  3816  0E31  2E3B               	goto	l7681
  3817  0E32                     l7677:	
  3818  0E32  0837               	movf	__doprnt@pb^(0+128),w
  3819  0E33  0084               	movwf	4
  3820  0E34  0800               	movf	0,w
  3821  0E35  0084               	movwf	4
  3822  0E36  302D               	movlw	45
  3823  0E37  0080               	movwf	0
  3824  0E38  0837               	movf	__doprnt@pb^(0+128),w
  3825  0E39  0084               	movwf	4
  3826  0E3A  0A80               	incf	0,f
  3827  0E3B                     l7681:	
  3828  0E3B  27DC               	call	PL41	;select bank 1
  3829  0E3C                     L5:	
  3830  0E3C  082C               	movf	(__doprnt@width+1)^(0+128),w
  3831  0E3D  042B               	iorwf	__doprnt@width^(0+128),w
  3832  0E3E  1903               	skipnz
  3833  0E3F  2E97               	goto	l7725
  3834  0E40  0837               	movf	__doprnt@pb^(0+128),w
  3835  0E41  3E01               	addlw	1
  3836  0E42  0084               	movwf	4
  3837  0E43  1383               	bcf	3,7	;select IRP bank0
  3838  0E44  0880               	movf	0,f
  3839  0E45  1903               	skipnz
  3840  0E46  2E4F               	goto	l7687
  3841  0E47  3030               	movlw	48
  3842  0E48  2712               	fcall	PL4	;call to abstracted procedure
  3843  0E49  120A  118A  2100   	fcall	fptable
      +       120A  158A         
  3844  0E4E  2E55               	goto	l7691
  3845  0E4F                     l7687:	
  3846  0E4F  0837               	movf	__doprnt@pb^(0+128),w
  3847  0E50  0084               	movwf	4
  3848  0E51  0800               	movf	0,w
  3849  0E52  277D  120A  158A   	fcall	PL21	;call to abstracted procedure
  3850  0E55                     l7691:	
  3851  0E55  30FF               	movlw	-1
  3852  0E56  27DC               	call	PL41	;select bank 1
  3853  0E57  07AB               	addwf	__doprnt@width^(0+128),f
  3854  0E58  1C03               	skipc
  3855  0E59  03AC               	decf	(__doprnt@width+1)^(0+128),f
  3856  0E5A  2E3C               	goto	L5
  3857  0E5B                     l7693:	
  3858  0E5B  082C               	movf	(__doprnt@width+1)^(0+128),w
  3859  0E5C  042B               	iorwf	__doprnt@width^(0+128),w
  3860  0E5D  1903               	skipnz
  3861  0E5E  2E7D               	goto	l7705
  3862  0E5F                     l7695:	
  3863  0E5F  0837               	movf	__doprnt@pb^(0+128),w
  3864  0E60  3E01               	addlw	1
  3865  0E61  0084               	movwf	4
  3866  0E62  1383               	bcf	3,7	;select IRP bank0
  3867  0E63  0880               	movf	0,f
  3868  0E64  1903               	skipnz
  3869  0E65  2E6E               	goto	l7699
  3870  0E66  3020               	movlw	32
  3871  0E67  2712               	fcall	PL4	;call to abstracted procedure
  3872  0E68  120A  118A  2100   	fcall	fptable
      +       120A  158A         
  3873  0E6D  2E74               	goto	l7703
  3874  0E6E                     l7699:	
  3875  0E6E  0837               	movf	__doprnt@pb^(0+128),w
  3876  0E6F  0084               	movwf	4
  3877  0E70  0800               	movf	0,w
  3878  0E71  27AF  120A  158A   	fcall	PL34	;call to abstracted procedure
  3879  0E74                     l7703:	
  3880  0E74  30FF               	movlw	-1
  3881  0E75  27DC               	call	PL41	;select bank 1
  3882  0E76  07AB               	addwf	__doprnt@width^(0+128),f
  3883  0E77  1C03               	skipc
  3884  0E78  03AC               	decf	(__doprnt@width+1)^(0+128),f
  3885  0E79  082C               	movf	(__doprnt@width+1)^(0+128),w
  3886  0E7A  042B               	iorwf	__doprnt@width^(0+128),w
  3887  0E7B  1D03               	skipz
  3888  0E7C  2E5F               	goto	l7695
  3889  0E7D                     l7705:	
  3890  0E7D  0827               	movf	__doprnt@flag^(0+128),w
  3891  0E7E  3903               	andlw	3
  3892  0E7F  1903               	btfsc	3,2
  3893  0E80  2E97               	goto	l7725
  3894  0E81  0837               	movf	__doprnt@pb^(0+128),w
  3895  0E82  3E01               	addlw	1
  3896  0E83  0084               	movwf	4
  3897  0E84  1383               	bcf	3,7	;select IRP bank0
  3898  0E85  0880               	movf	0,f
  3899  0E86  1903               	skipnz
  3900  0E87  2E90               	goto	l7711
  3901  0E88  302D               	movlw	45
  3902  0E89  2712               	fcall	PL4	;call to abstracted procedure
  3903  0E8A  120A  118A  2100   	fcall	fptable
      +       120A  158A         
  3904  0E8F  2E97               	goto	l7725
  3905  0E90                     l7711:	
  3906  0E90  27BD  120A  158A   	fcall	PL37	;call to abstracted procedure
  3907  0E93                     L6:	
  3908  0E93  0080               	movwf	0
  3909  0E94  0837               	movf	__doprnt@pb^(0+128),w
  3910  0E95  0084               	movwf	4
  3911  0E96  0A80               	incf	0,f
  3912  0E97                     l7725:	
  3913  0E97  30FF               	movlw	-1
  3914  0E98  27DC               	call	PL41	;select bank 1
  3915  0E99  07B4               	addwf	__doprnt@prec^(0+128),f
  3916  0E9A  1C03               	skipc
  3917  0E9B  03B5               	decf	(__doprnt@prec+1)^(0+128),f
  3918  0E9C  0A34               	incf	__doprnt@prec^(0+128),w
  3919  0E9D  1903               	skipnz
  3920  0E9E  0A35               	incf	(__doprnt@prec+1)^(0+128),w
  3921  0E9F  1903               	btfsc	3,2
  3922  0EA0  280A               	goto	l7727
  3923  0EA1  300A               	movlw	10
  3924  0EA2  1283               	bcf	3,5	;RP0=0, select bank0
  3925  0EA3  00AD               	movwf	?___llmod
  3926  0EA4  01AE               	clrf	?___llmod+1
  3927  0EA5  01AF               	clrf	?___llmod+2
  3928  0EA6  01B0               	clrf	?___llmod+3
  3929  0EA7  1683               	bsf	3,5	;RP0=1, select bank1
  3930  0EA8  0834               	movf	__doprnt@prec^(0+128),w
  3931  0EA9  1283               	bcf	3,5	;RP0=0, select bank0
  3932  0EAA  00E4               	movwf	??__doprnt
  3933  0EAB  1003               	clrc
  3934  0EAC  0DE4               	rlf	??__doprnt,f
  3935  0EAD  1003               	clrc
  3936  0EAE  0D64               	rlf	??__doprnt,w
  3937  0EAF  3E4F               	addlw	low (_dpowers-__stringbase)
  3938  0EB0  0084               	movwf	4
  3939  0EB1  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  3940  0EB6  00A0               	movwf	?___lldiv
  3941  0EB7  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  3942  0EBC  00A1               	movwf	?___lldiv+1
  3943  0EBD  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  3944  0EC2  00A2               	movwf	?___lldiv+2
  3945  0EC3  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  3946  0EC8  26F1               	fcall	PL2	;call to abstracted procedure
  3947  0EC9  160A  118A  24C1   	fcall	___lldiv
      +       120A  158A         
  3948  0ECE  272B               	fcall	PL8	;call to abstracted procedure
  3949  0ECF  160A  118A  243F   	fcall	___llmod
      +       120A  158A         
  3950  0ED4  082D               	movf	?___llmod,w
  3951  0ED5  3E30               	addlw	48
  3952  0ED6  1683               	bsf	3,5	;RP0=1, select bank1
  3953  0ED7  00B6               	movwf	__doprnt@c^(0+128)
  3954  0ED8  0837               	movf	__doprnt@pb^(0+128),w
  3955  0ED9  3E01               	addlw	1
  3956  0EDA  0084               	movwf	4
  3957  0EDB  1383               	bcf	3,7	;select IRP bank0
  3958  0EDC  0880               	movf	0,f
  3959  0EDD  1903               	skipnz
  3960  0EDE  2EE7               	goto	l7721
  3961  0EDF  0836               	movf	__doprnt@c^(0+128),w
  3962  0EE0  2712               	fcall	PL4	;call to abstracted procedure
  3963  0EE1  120A  118A  2100   	fcall	fptable
      +       120A  158A         
  3964  0EE6  2E97               	goto	l7725
  3965  0EE7                     l7721:	
  3966  0EE7  0837               	movf	__doprnt@pb^(0+128),w
  3967  0EE8  0084               	movwf	4
  3968  0EE9  0800               	movf	0,w
  3969  0EEA  0084               	movwf	4
  3970  0EEB  0836               	movf	__doprnt@c^(0+128),w
  3971  0EEC  2E93               	goto	L6
  3972  0EED                     l7729:	
  3973  0EED  1283               	bcf	3,5	;RP0=0, select bank0
  3974  0EEE  01E2               	clrf	?__doprnt
  3975  0EEF  01E3               	clrf	?__doprnt+1
  3976  0EF0  0008               	return
  3977  0EF1                     __end_of__doprnt:	
  3978  0EF1                     PL2:	
  3979  0EF1  00A3               	movwf	?___lldiv+3
  3980  0EF2  1683               	bsf	3,5	;RP0=1, select bank1
  3981  0EF3  0830               	movf	(__doprnt@_val+3)^(0+128),w
  3982  0EF4  1283               	bcf	3,5	;RP0=0, select bank0
  3983  0EF5  00A7               	movwf	?___lldiv+7
  3984  0EF6  1683               	bsf	3,5	;RP0=1, select bank1
  3985  0EF7  082F               	movf	(__doprnt@_val+2)^(0+128),w
  3986  0EF8  1283               	bcf	3,5	;RP0=0, select bank0
  3987  0EF9  00A6               	movwf	?___lldiv+6
  3988  0EFA  1683               	bsf	3,5	;RP0=1, select bank1
  3989  0EFB  082E               	movf	(__doprnt@_val+1)^(0+128),w
  3990  0EFC  1283               	bcf	3,5	;RP0=0, select bank0
  3991  0EFD  00A5               	movwf	?___lldiv+5
  3992  0EFE  1683               	bsf	3,5	;RP0=1, select bank1
  3993  0EFF  082D               	movf	__doprnt@_val^(0+128),w
  3994  0F00  1283               	bcf	3,5	;RP0=0, select bank0
  3995  0F01  00A4               	movwf	?___lldiv+4
  3996  0F02  0008               	return
  3997  0F03                     PL3:	
  3998  0F03  00AD               	movwf	?___llmod
  3999  0F04  01AE               	clrf	?___llmod+1
  4000  0F05  01AF               	clrf	?___llmod+2
  4001  0F06  01B0               	clrf	?___llmod+3
  4002  0F07  1683               	bsf	3,5	;RP0=1, select bank1
  4003  0F08  0836               	movf	__doprnt@c^(0+128),w
  4004  0F09  1283               	bcf	3,5	;RP0=0, select bank0
  4005  0F0A  00E4               	movwf	??__doprnt
  4006  0F0B  1003               	clrc
  4007  0F0C  0DE4               	rlf	??__doprnt,f
  4008  0F0D  1003               	clrc
  4009  0F0E  0D64               	rlf	??__doprnt,w
  4010  0F0F  3E4F               	addlw	low (_dpowers-__stringbase)
  4011  0F10  0084               	movwf	4
  4012  0F11  0008               	return
  4013  0F12                     PL4:	
  4014  0F12  1283               	bcf	3,5	;RP0=0, select bank0
  4015  0F13  00B6               	movwf	?_putch
  4016  0F14  1683               	bsf	3,5	;RP0=1, select bank1
  4017  0F15  0837               	movf	__doprnt@pb^(0+128),w
  4018  0F16  3E01               	addlw	1
  4019  0F17  0084               	movwf	4
  4020  0F18  0800               	movf	0,w
  4021  0F19  0008               	return
  4022  0F1A                     PL5:	
  4023  0F1A  0836               	movf	__doprnt@c^(0+128),w
  4024  0F1B  1283               	bcf	3,5	;RP0=0, select bank0
  4025  0F1C  00E4               	movwf	??__doprnt
  4026  0F1D  1003               	clrc
  4027  0F1E  0DE4               	rlf	??__doprnt,f
  4028  0F1F  1003               	clrc
  4029  0F20  0D64               	rlf	??__doprnt,w
  4030  0F21  3E4F               	addlw	low (_dpowers-__stringbase)
  4031  0F22  0084               	movwf	4
  4032  0F23  0008               	return
  4033  0F24                     PL6:	
  4034  0F24  00B6               	movwf	?_putch
  4035  0F25  1683               	bsf	3,5	;RP0=1, select bank1
  4036  0F26  0837               	movf	__doprnt@pb^(0+128),w
  4037  0F27  3E01               	addlw	1
  4038  0F28  0084               	movwf	4
  4039  0F29  0800               	movf	0,w
  4040  0F2A  0008               	return
  4041  0F2B                     PL8:	
  4042  0F2B  0823               	movf	?___lldiv+3,w
  4043  0F2C  00B4               	movwf	?___llmod+7
  4044  0F2D  0822               	movf	?___lldiv+2,w
  4045  0F2E  00B3               	movwf	?___llmod+6
  4046  0F2F  0821               	movf	?___lldiv+1,w
  4047  0F30  00B2               	movwf	?___llmod+5
  4048  0F31  0820               	movf	?___lldiv,w
  4049  0F32  00B1               	movwf	?___llmod+4
  4050  0F33  0008               	return
  4051  0F34                     PL9:	
  4052  0F34  0824               	movf	__doprnt@integ^(0+128),w
  4053  0F35  1283               	bcf	3,5	;RP0=0, select bank0
  4054  0F36  00A0               	movwf	?___ftge
  4055  0F37  1683               	bsf	3,5	;RP0=1, select bank1
  4056  0F38  0825               	movf	(__doprnt@integ+1)^(0+128),w
  4057  0F39  1283               	bcf	3,5	;RP0=0, select bank0
  4058  0F3A  00A1               	movwf	?___ftge+1
  4059  0F3B  1683               	bsf	3,5	;RP0=1, select bank1
  4060  0F3C  0826               	movf	(__doprnt@integ+2)^(0+128),w
  4061  0F3D  1283               	bcf	3,5	;RP0=0, select bank0
  4062  0F3E  00A2               	movwf	?___ftge+2
  4063  0F3F  0008               	return
  4064  0F40                     PL10:	
  4065  0F40  0831               	movf	?___fttol+3,w
  4066  0F41  1683               	bsf	3,5	;RP0=1, select bank1
  4067  0F42  00B0               	movwf	(__doprnt@_val+3)^(0+128)
  4068  0F43  1283               	bcf	3,5	;RP0=0, select bank0
  4069  0F44  0830               	movf	?___fttol+2,w
  4070  0F45  1683               	bsf	3,5	;RP0=1, select bank1
  4071  0F46  00AF               	movwf	(__doprnt@_val+2)^(0+128)
  4072  0F47  1283               	bcf	3,5	;RP0=0, select bank0
  4073  0F48  082F               	movf	?___fttol+1,w
  4074  0F49  1683               	bsf	3,5	;RP0=1, select bank1
  4075  0F4A  00AE               	movwf	(__doprnt@_val+1)^(0+128)
  4076  0F4B  1283               	bcf	3,5	;RP0=0, select bank0
  4077  0F4C  082E               	movf	?___fttol,w
  4078  0F4D  0008               	return
  4079  0F4E                     PL11:	
  4080  0F4E  084C               	movf	?_scale,w
  4081  0F4F  1683               	bsf	3,5	;RP0=1, select bank1
  4082  0F50  00A4               	movwf	__doprnt@integ^(0+128)
  4083  0F51  1283               	bcf	3,5	;RP0=0, select bank0
  4084  0F52  084D               	movf	?_scale+1,w
  4085  0F53  1683               	bsf	3,5	;RP0=1, select bank1
  4086  0F54  00A5               	movwf	(__doprnt@integ+1)^(0+128)
  4087  0F55  1283               	bcf	3,5	;RP0=0, select bank0
  4088  0F56  084E               	movf	?_scale+2,w
  4089  0F57  1683               	bsf	3,5	;RP0=1, select bank1
  4090  0F58  00A6               	movwf	(__doprnt@integ+2)^(0+128)
  4091  0F59  0831               	movf	__doprnt@fval^(0+128),w
  4092  0F5A  1283               	bcf	3,5	;RP0=0, select bank0
  4093  0F5B  0008               	return
  4094  0F5C                     PL16:	
  4095  0F5C  082D               	movf	?___llmod,w
  4096  0F5D  3E30               	addlw	48
  4097  0F5E  00E5               	movwf	??__doprnt+1
  4098  0F5F  1683               	bsf	3,5	;RP0=1, select bank1
  4099  0F60  0837               	movf	__doprnt@pb^(0+128),w
  4100  0F61  0084               	movwf	4
  4101  0F62  0800               	movf	0,w
  4102  0F63  0084               	movwf	4
  4103  0F64  1283               	bcf	3,5	;RP0=0, select bank0
  4104  0F65  0865               	movf	??__doprnt+1,w
  4105  0F66  0008               	return
  4106  0F67                     PL18:	
  4107  0F67  1283               	bcf	3,5	;RP0=0, select bank0
  4108  0F68  00AE               	movwf	?___fttol
  4109  0F69  1683               	bsf	3,5	;RP0=1, select bank1
  4110  0F6A  0832               	movf	(__doprnt@fval+1)^(0+128),w
  4111  0F6B  1283               	bcf	3,5	;RP0=0, select bank0
  4112  0F6C  00AF               	movwf	?___fttol+1
  4113  0F6D  1683               	bsf	3,5	;RP0=1, select bank1
  4114  0F6E  0833               	movf	(__doprnt@fval+2)^(0+128),w
  4115  0F6F  1283               	bcf	3,5	;RP0=0, select bank0
  4116  0F70  00B0               	movwf	?___fttol+2
  4117  0F71  0008               	return
  4118  0F72                     PL19:	
  4119  0F72  0720               	addwf	?___wmul,w
  4120  0F73  00E4               	movwf	??__doprnt
  4121  0F74  3000               	movlw	0
  4122  0F75  1803               	skipnc
  4123  0F76  3001               	movlw	1
  4124  0F77  0721               	addwf	?___wmul+1,w
  4125  0F78  00E5               	movwf	??__doprnt+1
  4126  0F79  0864               	movf	??__doprnt,w
  4127  0F7A  3ED0               	addlw	208
  4128  0F7B  1683               	bsf	3,5	;RP0=1, select bank1
  4129  0F7C  0008               	return
  4130  0F7D                     PL21:	
  4131  0F7D  0084               	movwf	4
  4132  0F7E  3030               	movlw	48
  4133  0F7F  0080               	movwf	0
  4134  0F80  0837               	movf	__doprnt@pb^(0+128),w
  4135  0F81  0084               	movwf	4
  4136  0F82  0A80               	incf	0,f
  4137  0F83  0008               	return
  4138  0F84                     PL23:	
  4139  0F84  00BD               	movwf	?___ftmul
  4140  0F85  1683               	bsf	3,5	;RP0=1, select bank1
  4141  0F86  0832               	movf	(__doprnt@fval+1)^(0+128),w
  4142  0F87  1283               	bcf	3,5	;RP0=0, select bank0
  4143  0F88  00BE               	movwf	?___ftmul+1
  4144  0F89  1683               	bsf	3,5	;RP0=1, select bank1
  4145  0F8A  0833               	movf	(__doprnt@fval+2)^(0+128),w
  4146  0F8B  1283               	bcf	3,5	;RP0=0, select bank0
  4147  0F8C  00BF               	movwf	?___ftmul+2
  4148  0F8D  0008               	return
  4149  0F8E                     PL24:	
  4150  0F8E  1283               	bcf	3,5	;RP0=0, select bank0
  4151  0F8F  00E4               	movwf	??__doprnt
  4152  0F90  01E5               	clrf	??__doprnt+1
  4153  0F91  1BE4               	btfsc	??__doprnt,7
  4154  0F92  03E5               	decf	??__doprnt+1,f
  4155  0F93  0865               	movf	??__doprnt+1,w
  4156  0F94  3A80               	xorlw	128
  4157  0F95  00E6               	movwf	??__doprnt+2
  4158  0F96  1683               	bsf	3,5	;RP0=1, select bank1
  4159  0F97  0008               	return
  4160  0F98                     PL25:	
  4161  0F98  1303               	bcf	3,6	;RP1=0, select bank1
  4162  0F99  0836               	movf	__doprnt@c^(0+128),w
  4163  0F9A  1283               	bcf	3,5	;RP0=0, select bank0
  4164  0F9B  00E4               	movwf	??__doprnt
  4165  0F9C  01E5               	clrf	??__doprnt+1
  4166  0F9D  1BE4               	btfsc	??__doprnt,7
  4167  0F9E  03E5               	decf	??__doprnt+1,f
  4168  0F9F  1683               	bsf	3,5	;RP0=1, select bank1
  4169  0FA0  0008               	return
  4170  0FA1                     PL26:	
  4171  0FA1  1303               	bcf	3,6	;RP1=0, select bank1
  4172  0FA2  0837               	movf	__doprnt@pb^(0+128),w
  4173  0FA3  3E01               	addlw	1
  4174  0FA4  0084               	movwf	4
  4175  0FA5  1383               	bcf	3,7	;select IRP bank0
  4176  0FA6  0880               	movf	0,f
  4177  0FA7  0008               	return
  4178  0FA8                     PL32:	
  4179  0FA8  0837               	movf	__doprnt@pb^(0+128),w
  4180  0FA9  3E01               	addlw	1
  4181  0FAA  0084               	movwf	4
  4182  0FAB  300A               	movlw	10
  4183  0FAC  1383               	bcf	3,7	;select IRP bank0
  4184  0FAD  0880               	movf	0,f
  4185  0FAE  0008               	return
  4186  0FAF                     PL34:	
  4187  0FAF  0084               	movwf	4
  4188  0FB0  3020               	movlw	32
  4189  0FB1  0080               	movwf	0
  4190  0FB2  0837               	movf	__doprnt@pb^(0+128),w
  4191  0FB3  0084               	movwf	4
  4192  0FB4  0A80               	incf	0,f
  4193  0FB5  0008               	return
  4194  0FB6                     PL36:	
  4195  0FB6  1283               	bcf	3,5	;RP0=0, select bank0
  4196  0FB7  0865               	movf	??__doprnt+1,w
  4197  0FB8  1803               	skipnc
  4198  0FB9  3E01               	addlw	1
  4199  0FBA  3EFF               	addlw	255
  4200  0FBB  1683               	bsf	3,5	;RP0=1, select bank1
  4201  0FBC  0008               	return
  4202  0FBD                     PL37:	
  4203  0FBD  0837               	movf	__doprnt@pb^(0+128),w
  4204  0FBE  0084               	movwf	4
  4205  0FBF  0800               	movf	0,w
  4206  0FC0  0084               	movwf	4
  4207  0FC1  342D               	retlw	45
  4208  0FC2                     PL39:	
  4209  0FC2  0080               	movwf	0
  4210  0FC3  1683               	bsf	3,5	;RP0=1, select bank1
  4211  0FC4  0837               	movf	__doprnt@pb^(0+128),w
  4212  0FC5  0084               	movwf	4
  4213  0FC6  0A80               	incf	0,f
  4214  0FC7  0008               	return
  4215  0FC8                     PL40:	
  4216  0FC8  1283               	bcf	3,5	;RP0=0, select bank0
  4217  0FC9  00A0               	movwf	?___wmul
  4218  0FCA  300A               	movlw	10
  4219  0FCB  00A2               	movwf	?___wmul+2
  4220  0FCC  01A3               	clrf	?___wmul+3
  4221  0FCD  0008               	return
  4222  0FCE                     __ptext676:	
  4223 ;; =============== function __tdiv_to_l_ ends ============
  4224                           
  4225                           
  4226 ;; *************** function _isdigit *****************
  4227 ;; Defined at:
  4228 ;;		line 13 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\isdigit.c"
  4229 ;; Parameters:    Size  Location     Type
  4230 ;;  c               1    wreg     unsigned char 
  4231 ;; Auto vars:     Size  Location     Type
  4232 ;;  c               1    1[BANK0 ] unsigned char 
  4233 ;; Return value:  Size  Location     Type
  4234 ;;		None               void
  4235 ;; Registers used:
  4236 ;;		wreg, status,2, status,0
  4237 ;; Tracked objects:
  4238 ;;		On entry : 60/0
  4239 ;;		On exit  : 60/0
  4240 ;;		Unchanged: FFF9F/0
  4241 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4242 ;;      Params:         0       0       0       0       0
  4243 ;;      Locals:         0       2       0       0       0
  4244 ;;      Temps:          0       0       0       0       0
  4245 ;;      Totals:         0       2       0       0       0
  4246 ;;Total ram usage:        2 bytes
  4247 ;; Hardware stack levels used:    1
  4248 ;; Hardware stack levels required when called:    2
  4249 ;; This function calls:
  4250 ;;		Nothing
  4251 ;; This function is called by:
  4252 ;;		__doprnt
  4253 ;; This function uses a non-reentrant model
  4254 ;;
  4255  0FCE                     _isdigit:	
  4256                           
  4257                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  4258                           ;isdigit@c stored from wreg
  4259  0FCE  00A1               	movwf	isdigit@c
  4260  0FCF  303A               	movlw	58
  4261  0FD0  01A0               	clrf	_isdigit$3716
  4262  0FD1  0221               	subwf	isdigit@c,w
  4263  0FD2  1803               	skipnc
  4264  0FD3  2FDA               	goto	l6557
  4265  0FD4  3030               	movlw	48
  4266  0FD5  0221               	subwf	isdigit@c,w
  4267  0FD6  1C03               	skipc
  4268  0FD7  2FDA               	goto	l6557
  4269  0FD8  01A0               	clrf	_isdigit$3716
  4270  0FD9  0AA0               	incf	_isdigit$3716,f
  4271  0FDA                     l6557:	
  4272  0FDA  0C20               	rrf	_isdigit$3716,w
  4273  0FDB  0008               	return
  4274  0FDC                     __end_of_isdigit:	
  4275  0FDC                     PL41:	
  4276  0FDC  1683               	bsf	3,5	;RP0=1, select bank1
  4277  0FDD  1303               	bcf	3,6	;RP1=0, select bank1
  4278  0FDE  0008               	return
  4279  0FDF                     __ptext672:	
  4280 ;; =============== function ___lbdiv ends ============
  4281                           
  4282                           
  4283 ;; *************** function ___wmul *****************
  4284 ;; Defined at:
  4285 ;;		line 3 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\wmul.c"
  4286 ;; Parameters:    Size  Location     Type
  4287 ;;  multiplier      2    0[BANK0 ] unsigned int 
  4288 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  4289 ;; Auto vars:     Size  Location     Type
  4290 ;;  product         2    4[BANK0 ] unsigned int 
  4291 ;; Return value:  Size  Location     Type
  4292 ;;                  2    0[BANK0 ] unsigned int 
  4293 ;; Registers used:
  4294 ;;		wreg, status,2, status,0
  4295 ;; Tracked objects:
  4296 ;;		On entry : 60/0
  4297 ;;		On exit  : 60/0
  4298 ;;		Unchanged: FFF9F/0
  4299 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4300 ;;      Params:         0       4       0       0       0
  4301 ;;      Locals:         0       2       0       0       0
  4302 ;;      Temps:          0       0       0       0       0
  4303 ;;      Totals:         0       6       0       0       0
  4304 ;;Total ram usage:        6 bytes
  4305 ;; Hardware stack levels used:    1
  4306 ;; Hardware stack levels required when called:    2
  4307 ;; This function calls:
  4308 ;;		Nothing
  4309 ;; This function is called by:
  4310 ;;		_fround
  4311 ;;		_scale
  4312 ;;		__doprnt
  4313 ;; This function uses a non-reentrant model
  4314 ;;
  4315  0FDF                     ___wmul:	
  4316                           
  4317                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  4318  0FDF  01A4               	clrf	___wmul@product
  4319  0FE0  01A5               	clrf	___wmul@product+1
  4320  0FE1                     l6673:	
  4321  0FE1  1C20               	btfss	___wmul@multiplier,0
  4322  0FE2  2FE9               	goto	l6677
  4323  0FE3  0822               	movf	___wmul@multiplicand,w
  4324  0FE4  07A4               	addwf	___wmul@product,f
  4325  0FE5  1803               	skipnc
  4326  0FE6  0AA5               	incf	___wmul@product+1,f
  4327  0FE7  0823               	movf	___wmul@multiplicand+1,w
  4328  0FE8  07A5               	addwf	___wmul@product+1,f
  4329  0FE9                     l6677:	
  4330  0FE9  1003               	clrc
  4331  0FEA  0DA2               	rlf	___wmul@multiplicand,f
  4332  0FEB  0DA3               	rlf	___wmul@multiplicand+1,f
  4333  0FEC  1003               	clrc
  4334  0FED  0CA1               	rrf	___wmul@multiplier+1,f
  4335  0FEE  0CA0               	rrf	___wmul@multiplier,f
  4336  0FEF  0821               	movf	___wmul@multiplier+1,w
  4337  0FF0  0420               	iorwf	___wmul@multiplier,w
  4338  0FF1  1D03               	skipz
  4339  0FF2  2FE1               	goto	l6673
  4340  0FF3  0825               	movf	___wmul@product+1,w
  4341  0FF4  00A1               	movwf	?___wmul+1
  4342  0FF5  0824               	movf	___wmul@product,w
  4343  0FF6  00A0               	movwf	?___wmul
  4344  0FF7  0008               	return
  4345  0FF8                     __end_of___wmul:	
  4346  0FF8                     __ptext665:	
  4347 ;; =============== function ___ftge ends ============
  4348                           
  4349                           
  4350 ;; *************** function ___ftneg *****************
  4351 ;; Defined at:
  4352 ;;		line 16 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\ftneg.c"
  4353 ;; Parameters:    Size  Location     Type
  4354 ;;  f1              3    0[BANK0 ] float 
  4355 ;; Auto vars:     Size  Location     Type
  4356 ;;		None
  4357 ;; Return value:  Size  Location     Type
  4358 ;;                  3    0[BANK0 ] float 
  4359 ;; Registers used:
  4360 ;;		wreg
  4361 ;; Tracked objects:
  4362 ;;		On entry : 160/0
  4363 ;;		On exit  : 160/0
  4364 ;;		Unchanged: FFE9F/0
  4365 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4366 ;;      Params:         0       3       0       0       0
  4367 ;;      Locals:         0       0       0       0       0
  4368 ;;      Temps:          0       0       0       0       0
  4369 ;;      Totals:         0       3       0       0       0
  4370 ;;Total ram usage:        3 bytes
  4371 ;; Hardware stack levels used:    1
  4372 ;; Hardware stack levels required when called:    2
  4373 ;; This function calls:
  4374 ;;		Nothing
  4375 ;; This function is called by:
  4376 ;;		__doprnt
  4377 ;; This function uses a non-reentrant model
  4378 ;;
  4379  0FF8                     ___ftneg:	
  4380                           
  4381                           ; Regs used in ___ftneg: [wreg]
  4382  0FF8  0822               	movf	___ftneg@f1+2,w
  4383  0FF9  0421               	iorwf	___ftneg@f1+1,w
  4384  0FFA  0420               	iorwf	___ftneg@f1,w
  4385  0FFB  1903               	skipnz
  4386  0FFC  0008               	return
  4387  0FFD  3080               	movlw	128
  4388  0FFE  06A2               	xorwf	___ftneg@f1+2,f
  4389  0FFF  0008               	return
  4390  1000                     __end_of___ftneg:	
  4391                           
  4392                           	psect	text646
  4393  04FA                     __ptext646:	
  4394 ;; =============== function __doprnt ends ============
  4395                           
  4396                           
  4397 ;; *************** function _putch *****************
  4398 ;; Defined at:
  4399 ;;		line 105 in file "C:\Users\DELL\Desktop\vxl\mp\dulieubanphim.c"
  4400 ;; Parameters:    Size  Location     Type
  4401 ;;  c               1   22[BANK0 ] unsigned char 
  4402 ;; Auto vars:     Size  Location     Type
  4403 ;;		None
  4404 ;; Return value:  Size  Location     Type
  4405 ;;		None               void
  4406 ;; Registers used:
  4407 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4408 ;; Tracked objects:
  4409 ;;		On entry : 160/20
  4410 ;;		On exit  : 60/0
  4411 ;;		Unchanged: 0/0
  4412 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4413 ;;      Params:         0       1       0       0       0
  4414 ;;      Locals:         0       0       0       0       0
  4415 ;;      Temps:          0       0       0       0       0
  4416 ;;      Totals:         0       1       0       0       0
  4417 ;;Total ram usage:        1 bytes
  4418 ;; Hardware stack levels used:    1
  4419 ;; Hardware stack levels required when called:    5
  4420 ;; This function calls:
  4421 ;;		_lcd_putc
  4422 ;; This function is called by:
  4423 ;;		_printf
  4424 ;;		__doprnt
  4425 ;; This function uses a non-reentrant model
  4426 ;;
  4427  04FA                     _putch:	
  4428                           
  4429                           ;dulieubanphim.c: 106: lcd_putc(c);
  4430                           
  4431                           ; Regs used in _putch: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4432  04FA  1283               	bcf	3,5	;RP0=0, select bank0
  4433  04FB  0836               	movf	putch@c,w
  4434  04FC  2D15               	ljmp	_lcd_putc
  4435  04FD                     __end_of_putch:	
  4436  04FD                     __ptext651:	
  4437 ;; =============== function _fround ends ============
  4438                           
  4439                           
  4440 ;; *************** function _lcd_gotoxy *****************
  4441 ;; Defined at:
  4442 ;;		line 162 in file "C:\Users\DELL\Desktop\baitap_ttvxl\dulieu_banphim\lcd(16).c"
  4443 ;; Parameters:    Size  Location     Type
  4444 ;;  col             1    wreg     unsigned char 
  4445 ;;  row             1    5[BANK0 ] unsigned char 
  4446 ;; Auto vars:     Size  Location     Type
  4447 ;;  col             1    6[BANK0 ] unsigned char 
  4448 ;;  address         1    7[BANK0 ] unsigned char 
  4449 ;; Return value:  Size  Location     Type
  4450 ;;		None               void
  4451 ;; Registers used:
  4452 ;;		wreg, status,2, status,0, pclath, cstack
  4453 ;; Tracked objects:
  4454 ;;		On entry : 60/0
  4455 ;;		On exit  : 60/0
  4456 ;;		Unchanged: 0/0
  4457 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4458 ;;      Params:         0       1       0       0       0
  4459 ;;      Locals:         0       2       0       0       0
  4460 ;;      Temps:          0       0       0       0       0
  4461 ;;      Totals:         0       3       0       0       0
  4462 ;;Total ram usage:        3 bytes
  4463 ;; Hardware stack levels used:    1
  4464 ;; Hardware stack levels required when called:    3
  4465 ;; This function calls:
  4466 ;;		_lcd_put_byte
  4467 ;;		_lcd_busy
  4468 ;; This function is called by:
  4469 ;;		_lcd_putc
  4470 ;;		_main
  4471 ;; This function uses a non-reentrant model
  4472 ;;
  4473  04FD                     _lcd_gotoxy:	
  4474                           
  4475                           ; Regs used in _lcd_gotoxy: [wreg+status,2+status,0+pclath+cstack]
  4476                           ;lcd_gotoxy@col stored from wreg
  4477  04FD  00A6               	movwf	lcd_gotoxy@col
  4478                           
  4479                           ;lcd(16).c: 163: unsigned char address;
  4480                           ;lcd(16).c: 165: if(row!=0)
  4481  04FE  0825               	movf	lcd_gotoxy@row,w
  4482  04FF  1903               	btfsc	3,2
  4483  0500  2D04               	goto	l7263
  4484                           
  4485                           ;lcd(16).c: 166: address=0x40;
  4486  0501  3040               	movlw	64
  4487  0502  00A7               	movwf	lcd_gotoxy@address
  4488  0503  2D05               	goto	l7265
  4489  0504                     l7263:	
  4490                           
  4491                           ;lcd(16).c: 167: else
  4492                           ;lcd(16).c: 168: address=0;
  4493  0504  01A7               	clrf	lcd_gotoxy@address
  4494  0505                     l7265:	
  4495                           
  4496                           ;lcd(16).c: 170: address += col;
  4497  0505  0826               	movf	lcd_gotoxy@col,w
  4498  0506  07A7               	addwf	lcd_gotoxy@address,f
  4499                           
  4500                           ;lcd(16).c: 171: lcd_put_byte(0,0x80|address);
  4501  0507  0827               	movf	lcd_gotoxy@address,w
  4502  0508  3880               	iorlw	128
  4503  0509  00A0               	movwf	?_lcd_put_byte
  4504  050A  3000               	movlw	0
  4505  050B  2605  120A  118A   	fcall	_lcd_put_byte
  4506  050E                     l7269:	
  4507                           ;lcd(16).c: 172: while(lcd_busy());
  4508                           
  4509  050E  26B0  120A  118A   	fcall	_lcd_busy
  4510  0511  3800               	iorlw	0
  4511  0512  1903               	btfsc	3,2
  4512  0513  0008               	return
  4513  0514  2D0E               	goto	l7269
  4514  0515                     __end_of_lcd_gotoxy:	
  4515  0515                     __ptext647:	
  4516 ;; =============== function _putch ends ============
  4517                           
  4518                           
  4519 ;; *************** function _lcd_putc *****************
  4520 ;; Defined at:
  4521 ;;		line 143 in file "C:\Users\DELL\Desktop\baitap_ttvxl\dulieu_banphim\lcd(16).c"
  4522 ;; Parameters:    Size  Location     Type
  4523 ;;  c               1    wreg     unsigned char 
  4524 ;; Auto vars:     Size  Location     Type
  4525 ;;  c               1    8[BANK0 ] unsigned char 
  4526 ;; Return value:  Size  Location     Type
  4527 ;;		None               void
  4528 ;; Registers used:
  4529 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4530 ;; Tracked objects:
  4531 ;;		On entry : 160/0
  4532 ;;		On exit  : 60/0
  4533 ;;		Unchanged: 0/0
  4534 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4535 ;;      Params:         0       0       0       0       0
  4536 ;;      Locals:         0       1       0       0       0
  4537 ;;      Temps:          0       0       0       0       0
  4538 ;;      Totals:         0       1       0       0       0
  4539 ;;Total ram usage:        1 bytes
  4540 ;; Hardware stack levels used:    1
  4541 ;; Hardware stack levels required when called:    4
  4542 ;; This function calls:
  4543 ;;		_lcd_put_byte
  4544 ;;		_lcd_busy
  4545 ;;		_lcd_gotoxy
  4546 ;;		_isprint
  4547 ;; This function is called by:
  4548 ;;		_putch
  4549 ;; This function uses a non-reentrant model
  4550 ;;
  4551  0515                     _lcd_putc:	
  4552                           
  4553                           ; Regs used in _lcd_putc: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4554                           ;lcd_putc@c stored from wreg
  4555  0515  00A8               	movwf	lcd_putc@c
  4556                           
  4557                           ;lcd(16).c: 144: switch(c){
  4558  0516  2D3B               	goto	l7355
  4559  0517                     l7341:	
  4560  0517  3000               	movlw	0
  4561                           
  4562                           ;lcd(16).c: 146: lcd_put_byte(0, 1);
  4563  0518  01A0               	clrf	?_lcd_put_byte
  4564  0519  0AA0               	incf	?_lcd_put_byte,f
  4565  051A  2605  120A  118A   	fcall	_lcd_put_byte
  4566  051D                     l7343:	
  4567                           ;lcd(16).c: 147: while(lcd_busy());
  4568                           
  4569  051D  26B0  120A  118A   	fcall	_lcd_busy
  4570  0520  3800               	iorlw	0
  4571  0521  1903               	btfsc	3,2
  4572  0522  0008               	return
  4573  0523  2D1D               	goto	l7343
  4574  0524                     l7345:	
  4575  0524  3000               	movlw	0
  4576                           
  4577                           ;lcd(16).c: 150: lcd_gotoxy(0, 1);
  4578  0525  01A5               	clrf	?_lcd_gotoxy
  4579  0526  0AA5               	incf	?_lcd_gotoxy,f
  4580  0527  2CFD               	ljmp	_lcd_gotoxy
  4581  0528                     l7347:	
  4582                           ;lcd(16).c: 151: break;
  4583                           
  4584                           
  4585                           ;lcd(16).c: 153: if(isprint(c)){
  4586  0528  0828               	movf	lcd_putc@c,w
  4587  0529  26DB  120A  118A   	fcall	_isprint
  4588  052C  1C03               	btfss	3,0
  4589  052D  0008               	return
  4590                           
  4591                           ;lcd(16).c: 154: lcd_put_byte(1, c);
  4592  052E  0828               	movf	lcd_putc@c,w
  4593  052F  00A0               	movwf	?_lcd_put_byte
  4594  0530  3001               	movlw	1
  4595  0531  2605  120A  118A   	fcall	_lcd_put_byte
  4596  0534                     l7351:	
  4597                           ;lcd(16).c: 155: while(lcd_busy());
  4598                           
  4599  0534  26B0  120A  118A   	fcall	_lcd_busy
  4600  0537  3800               	iorlw	0
  4601  0538  1903               	btfsc	3,2
  4602  0539  0008               	return
  4603  053A  2D34               	goto	l7351
  4604  053B                     l7355:	
  4605  053B  0828               	movf	lcd_putc@c,w
  4606                           
  4607                           ; Switch size 1, requested type "space"
  4608                           ; Number of cases is 2, Range of values is 10 to 12
  4609                           ; switch strategies available:
  4610                           ; Name         Instructions Cycles
  4611                           ; simple_byte            7     4 (average)
  4612                           ; direct_byte           20    11 (fixed)
  4613                           ; jumptable            263     9 (fixed)
  4614                           ;	Chosen strategy is simple_byte
  4615  053C  3A0A               	xorlw	10	; case 10
  4616  053D  1903               	skipnz
  4617  053E  2D24               	goto	l7345
  4618  053F  3A06               	xorlw	6	; case 12
  4619  0540  1903               	skipnz
  4620  0541  2D17               	goto	l7341
  4621  0542  2D28               	goto	l7347
  4622  0543  0008               	return
  4623  0544                     __end_of_lcd_putc:	
  4624  0544                     __ptext652:	
  4625 ;; =============== function _lcd_gotoxy ends ============
  4626                           
  4627                           
  4628 ;; *************** function _lcd_init *****************
  4629 ;; Defined at:
  4630 ;;		line 5 in file "C:\Users\DELL\Desktop\baitap_ttvxl\dulieu_banphim\lcd(16).c"
  4631 ;; Parameters:    Size  Location     Type
  4632 ;;		None
  4633 ;; Auto vars:     Size  Location     Type
  4634 ;;  i               1    0        unsigned char 
  4635 ;; Return value:  Size  Location     Type
  4636 ;;		None               void
  4637 ;; Registers used:
  4638 ;;		wreg, status,2, status,0, pclath, cstack
  4639 ;; Tracked objects:
  4640 ;;		On entry : 17F/60
  4641 ;;		On exit  : 60/0
  4642 ;;		Unchanged: 0/0
  4643 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4644 ;;      Params:         0       0       0       0       0
  4645 ;;      Locals:         0       0       0       0       0
  4646 ;;      Temps:          0       3       0       0       0
  4647 ;;      Totals:         0       3       0       0       0
  4648 ;;Total ram usage:        3 bytes
  4649 ;; Hardware stack levels used:    1
  4650 ;; Hardware stack levels required when called:    3
  4651 ;; This function calls:
  4652 ;;		_lcd_put_byte
  4653 ;;		_lcd_busy
  4654 ;; This function is called by:
  4655 ;;		_main
  4656 ;; This function uses a non-reentrant model
  4657 ;;
  4658  0544                     _lcd_init:	
  4659                           
  4660                           ;lcd(16).c: 6: unsigned char i;
  4661                           ;lcd(16).c: 7: TRISD3 = 0;
  4662                           
  4663                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
  4664  0544  1303               	bcf	3,6	;RP1=0, select bank1
  4665  0545  1188               	bcf	8,3
  4666                           
  4667                           ;lcd(16).c: 8: TRISD1 = 0;
  4668  0546  1088               	bcf	8,1
  4669                           
  4670                           ;lcd(16).c: 9: TRISD2 = 0;
  4671  0547  1108               	bcf	8,2
  4672                           
  4673                           ;lcd(16).c: 10: TRISD4 = 0;
  4674  0548  1208               	bcf	8,4
  4675                           
  4676                           ;lcd(16).c: 11: TRISD5 = 0;
  4677  0549  1288               	bcf	8,5
  4678                           
  4679                           ;lcd(16).c: 12: TRISD6 = 0;
  4680  054A  1308               	bcf	8,6
  4681                           
  4682                           ;lcd(16).c: 13: TRISD7 = 0;
  4683  054B  1388               	bcf	8,7
  4684                           
  4685                           ;lcd(16).c: 14: RD3 = 0;
  4686  054C  1283               	bcf	3,5	;RP0=0, select bank0
  4687  054D  3003               	movlw	3
  4688  054E  1188               	bcf	8,3
  4689                           
  4690                           ;lcd(16).c: 15: RD1 = 0;
  4691  054F  1088               	bcf	8,1
  4692                           
  4693                           ;lcd(16).c: 16: RD2 = 0;
  4694  0550  1108               	bcf	8,2
  4695                           
  4696                           ;lcd(16).c: 18: _delay((unsigned long)((100)*(20000000/4000.0)));
  4697  0551  00A7               	movwf	??_lcd_init+2
  4698  0552  308A               	movlw	138
  4699  0553  00A6               	movwf	??_lcd_init+1
  4700  0554  3056               	movlw	86
  4701  0555  00A5               	movwf	??_lcd_init
  4702  0556                     u4437:	
  4703  0556  0BA5               	decfsz	??_lcd_init,f
  4704  0557  2D56               	goto	u4437
  4705  0558  0BA6               	decfsz	??_lcd_init+1,f
  4706  0559  2D56               	goto	u4437
  4707  055A  0BA7               	decfsz	??_lcd_init+2,f
  4708  055B  2D56               	goto	u4437
  4709  055C  2D5D               	nop2
  4710                           
  4711                           ;lcd(16).c: 21: lcd_put_byte(0,0x30);
  4712  055D  26E9  120A  118A   	fcall	PL38	;call to abstracted procedure
  4713  0560  2605  120A  118A   	fcall	_lcd_put_byte
  4714                           
  4715                           ;lcd(16).c: 22: _delay((unsigned long)((50)*(20000000/4000.0)));
  4716  0563  3002               	movlw	2
  4717  0564  00A7               	movwf	??_lcd_init+2
  4718  0565  3045               	movlw	69
  4719  0566  00A6               	movwf	??_lcd_init+1
  4720  0567  30A9               	movlw	169
  4721  0568  00A5               	movwf	??_lcd_init
  4722  0569                     u4447:	
  4723  0569  0BA5               	decfsz	??_lcd_init,f
  4724  056A  2D69               	goto	u4447
  4725  056B  0BA6               	decfsz	??_lcd_init+1,f
  4726  056C  2D69               	goto	u4447
  4727  056D  0BA7               	decfsz	??_lcd_init+2,f
  4728  056E  2D69               	goto	u4447
  4729  056F  2D70               	nop2
  4730                           
  4731                           ;lcd(16).c: 23: lcd_put_byte(0,0x30);
  4732  0570  26E9  120A  118A   	fcall	PL38	;call to abstracted procedure
  4733  0573  2605  120A  118A   	fcall	_lcd_put_byte
  4734                           
  4735                           ;lcd(16).c: 24: _delay((unsigned long)((50)*(20000000/4000.0)));
  4736  0576  3002               	movlw	2
  4737  0577  00A7               	movwf	??_lcd_init+2
  4738  0578  3045               	movlw	69
  4739  0579  00A6               	movwf	??_lcd_init+1
  4740  057A  30A9               	movlw	169
  4741  057B  00A5               	movwf	??_lcd_init
  4742  057C                     u4457:	
  4743  057C  0BA5               	decfsz	??_lcd_init,f
  4744  057D  2D7C               	goto	u4457
  4745  057E  0BA6               	decfsz	??_lcd_init+1,f
  4746  057F  2D7C               	goto	u4457
  4747  0580  0BA7               	decfsz	??_lcd_init+2,f
  4748  0581  2D7C               	goto	u4457
  4749  0582  2D83               	nop2
  4750                           
  4751                           ;lcd(16).c: 25: lcd_put_byte(0,0x32);
  4752  0583  3032               	movlw	50
  4753  0584  1283               	bcf	3,5	;RP0=0, select bank0
  4754  0585  1303               	bcf	3,6	;RP1=0, select bank0
  4755  0586  00A0               	movwf	?_lcd_put_byte
  4756  0587  3000               	movlw	0
  4757  0588  2605  120A  118A   	fcall	_lcd_put_byte
  4758                           
  4759                           ;lcd(16).c: 26: _delay((unsigned long)((100)*(20000000/4000.0)));
  4760  058B  3003               	movlw	3
  4761  058C  00A7               	movwf	??_lcd_init+2
  4762  058D  308A               	movlw	138
  4763  058E  00A6               	movwf	??_lcd_init+1
  4764  058F  3056               	movlw	86
  4765  0590  00A5               	movwf	??_lcd_init
  4766  0591                     u4467:	
  4767  0591  0BA5               	decfsz	??_lcd_init,f
  4768  0592  2D91               	goto	u4467
  4769  0593  0BA6               	decfsz	??_lcd_init+1,f
  4770  0594  2D91               	goto	u4467
  4771  0595  0BA7               	decfsz	??_lcd_init+2,f
  4772  0596  2D91               	goto	u4467
  4773  0597  2D98               	nop2
  4774                           
  4775                           ;lcd(16).c: 27: _delay((unsigned long)((100)*(20000000/4000.0)));
  4776  0598  3003               	movlw	3
  4777  0599  1283               	bcf	3,5	;RP0=0, select bank0
  4778  059A  1303               	bcf	3,6	;RP1=0, select bank0
  4779  059B  00A7               	movwf	??_lcd_init+2
  4780  059C  308A               	movlw	138
  4781  059D  00A6               	movwf	??_lcd_init+1
  4782  059E  3056               	movlw	86
  4783  059F  00A5               	movwf	??_lcd_init
  4784  05A0                     u4477:	
  4785  05A0  0BA5               	decfsz	??_lcd_init,f
  4786  05A1  2DA0               	goto	u4477
  4787  05A2  0BA6               	decfsz	??_lcd_init+1,f
  4788  05A3  2DA0               	goto	u4477
  4789  05A4  0BA7               	decfsz	??_lcd_init+2,f
  4790  05A5  2DA0               	goto	u4477
  4791  05A6  2DA7               	nop2
  4792                           
  4793                           ;lcd(16).c: 28: _delay((unsigned long)((100)*(20000000/4000.0)));
  4794  05A7  3003               	movlw	3
  4795  05A8  1283               	bcf	3,5	;RP0=0, select bank0
  4796  05A9  1303               	bcf	3,6	;RP1=0, select bank0
  4797  05AA  00A7               	movwf	??_lcd_init+2
  4798  05AB  308A               	movlw	138
  4799  05AC  00A6               	movwf	??_lcd_init+1
  4800  05AD  3056               	movlw	86
  4801  05AE  00A5               	movwf	??_lcd_init
  4802  05AF                     u4487:	
  4803  05AF  0BA5               	decfsz	??_lcd_init,f
  4804  05B0  2DAF               	goto	u4487
  4805  05B1  0BA6               	decfsz	??_lcd_init+1,f
  4806  05B2  2DAF               	goto	u4487
  4807  05B3  0BA7               	decfsz	??_lcd_init+2,f
  4808  05B4  2DAF               	goto	u4487
  4809  05B5  2DB6               	nop2
  4810  05B6                     l7233:	
  4811                           ;lcd(16).c: 30: while(lcd_busy());
  4812                           
  4813  05B6  26B0  120A  118A   	fcall	_lcd_busy
  4814  05B9  3800               	iorlw	0
  4815  05BA  1D03               	skipz
  4816  05BB  2DB6               	goto	l7233
  4817                           
  4818                           ;lcd(16).c: 31: lcd_put_byte(0,0b00101100 & 0b00111000);
  4819  05BC  3028               	movlw	40
  4820  05BD  00A0               	movwf	?_lcd_put_byte
  4821  05BE  3000               	movlw	0
  4822  05BF  2605  120A  118A   	fcall	_lcd_put_byte
  4823  05C2                     l7237:	
  4824                           ;lcd(16).c: 32: while(lcd_busy());
  4825                           
  4826  05C2  26B0  120A  118A   	fcall	_lcd_busy
  4827  05C5  3800               	iorlw	0
  4828  05C6  1D03               	skipz
  4829  05C7  2DC2               	goto	l7237
  4830                           
  4831                           ;lcd(16).c: 34: lcd_put_byte(0,0b00001011&0b00001101&0b00001110);
  4832  05C8  3008               	movlw	8
  4833  05C9  00A0               	movwf	?_lcd_put_byte
  4834  05CA  3000               	movlw	0
  4835  05CB  2605  120A  118A   	fcall	_lcd_put_byte
  4836  05CE                     l7241:	
  4837                           ;lcd(16).c: 35: while(lcd_busy());
  4838                           
  4839  05CE  26B0  120A  118A   	fcall	_lcd_busy
  4840  05D1  3800               	iorlw	0
  4841  05D2  1D03               	skipz
  4842  05D3  2DCE               	goto	l7241
  4843                           
  4844                           ;lcd(16).c: 36: lcd_put_byte(0,0b00001111&0b00001101&0b00001110);
  4845  05D4  300C               	movlw	12
  4846  05D5  00A0               	movwf	?_lcd_put_byte
  4847  05D6  3000               	movlw	0
  4848  05D7  2605  120A  118A   	fcall	_lcd_put_byte
  4849  05DA                     l7245:	
  4850                           ;lcd(16).c: 37: while(lcd_busy());
  4851                           
  4852  05DA  26B0  120A  118A   	fcall	_lcd_busy
  4853  05DD  3800               	iorlw	0
  4854  05DE  1D03               	skipz
  4855  05DF  2DDA               	goto	l7245
  4856  05E0  3000               	movlw	0
  4857                           
  4858                           ;lcd(16).c: 39: lcd_put_byte(0,0x01);
  4859  05E1  01A0               	clrf	?_lcd_put_byte
  4860  05E2  0AA0               	incf	?_lcd_put_byte,f
  4861  05E3  2605  120A  118A   	fcall	_lcd_put_byte
  4862  05E6                     l7249:	
  4863                           ;lcd(16).c: 40: while(lcd_busy());
  4864                           
  4865  05E6  26B0  120A  118A   	fcall	_lcd_busy
  4866  05E9  3800               	iorlw	0
  4867  05EA  1D03               	skipz
  4868  05EB  2DE6               	goto	l7249
  4869                           
  4870                           ;lcd(16).c: 41: lcd_put_byte(0,0b00000100);
  4871  05EC  3004               	movlw	4
  4872  05ED  00A0               	movwf	?_lcd_put_byte
  4873  05EE  3000               	movlw	0
  4874  05EF  2605  120A  118A   	fcall	_lcd_put_byte
  4875  05F2                     l7253:	
  4876                           ;lcd(16).c: 42: while(lcd_busy());
  4877                           
  4878  05F2  26B0  120A  118A   	fcall	_lcd_busy
  4879  05F5  3800               	iorlw	0
  4880  05F6  1D03               	skipz
  4881  05F7  2DF2               	goto	l7253
  4882  05F8  3000               	movlw	0
  4883                           
  4884                           ;lcd(16).c: 43: lcd_put_byte(0,0x01);
  4885  05F9  01A0               	clrf	?_lcd_put_byte
  4886  05FA  0AA0               	incf	?_lcd_put_byte,f
  4887  05FB  2605  120A  118A   	fcall	_lcd_put_byte
  4888  05FE                     l7257:	
  4889                           ;lcd(16).c: 44: while(lcd_busy());
  4890                           
  4891  05FE  26B0  120A  118A   	fcall	_lcd_busy
  4892  0601  3800               	iorlw	0
  4893  0602  1903               	btfsc	3,2
  4894  0603  0008               	return
  4895  0604  2DFE               	goto	l7257
  4896  0605                     __end_of_lcd_init:	
  4897  0605                     __ptext661:	
  4898 ;; =============== function _lcd_busy ends ============
  4899                           
  4900                           
  4901 ;; *************** function _lcd_put_byte *****************
  4902 ;; Defined at:
  4903 ;;		line 106 in file "C:\Users\DELL\Desktop\baitap_ttvxl\dulieu_banphim\lcd(16).c"
  4904 ;; Parameters:    Size  Location     Type
  4905 ;;  rs              1    wreg     unsigned char 
  4906 ;;  b               1    0[BANK0 ] unsigned char 
  4907 ;; Auto vars:     Size  Location     Type
  4908 ;;  rs              1    3[BANK0 ] unsigned char 
  4909 ;;  temp            1    4[BANK0 ] struct _BYTE_VAL
  4910 ;; Return value:  Size  Location     Type
  4911 ;;		None               void
  4912 ;; Registers used:
  4913 ;;		wreg, status,2, status,0
  4914 ;; Tracked objects:
  4915 ;;		On entry : 60/0
  4916 ;;		On exit  : 60/0
  4917 ;;		Unchanged: 0/0
  4918 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4919 ;;      Params:         0       1       0       0       0
  4920 ;;      Locals:         0       2       0       0       0
  4921 ;;      Temps:          0       2       0       0       0
  4922 ;;      Totals:         0       5       0       0       0
  4923 ;;Total ram usage:        5 bytes
  4924 ;; Hardware stack levels used:    1
  4925 ;; Hardware stack levels required when called:    2
  4926 ;; This function calls:
  4927 ;;		Nothing
  4928 ;; This function is called by:
  4929 ;;		_lcd_init
  4930 ;;		_lcd_putc
  4931 ;;		_lcd_gotoxy
  4932 ;; This function uses a non-reentrant model
  4933 ;;
  4934  0605                     _lcd_put_byte:	
  4935                           
  4936                           ; Regs used in _lcd_put_byte: [wreg+status,2+status,0]
  4937                           ;lcd_put_byte@rs stored from wreg
  4938  0605  00A3               	movwf	lcd_put_byte@rs
  4939                           
  4940                           ;lcd(16).c: 107: BYTE_VAL temp;
  4941                           ;lcd(16).c: 109: TRISD4 = 0;
  4942  0606  1683               	bsf	3,5	;RP0=1, select bank1
  4943  0607  1208               	bcf	8,4
  4944                           
  4945                           ;lcd(16).c: 110: TRISD5 = 0;
  4946  0608  1288               	bcf	8,5
  4947                           
  4948                           ;lcd(16).c: 111: TRISD6 = 0;
  4949  0609  1308               	bcf	8,6
  4950                           
  4951                           ;lcd(16).c: 112: TRISD7 = 0;
  4952  060A  1388               	bcf	8,7
  4953                           
  4954                           ;lcd(16).c: 114: RD1 = 0;
  4955  060B  1283               	bcf	3,5	;RP0=0, select bank0
  4956  060C  1088               	bcf	8,1
  4957                           
  4958                           ;lcd(16).c: 115: if(rs) RD1 = 1;
  4959  060D  0823               	movf	lcd_put_byte@rs,w
  4960  060E  1D03               	skipz
  4961  060F  1488               	bsf	8,1
  4962                           
  4963                           ;lcd(16).c: 117: _delay((unsigned long)((20)*(20000000/4000000.0)));
  4964  0610  3021               	movlw	33
  4965  0611  00A1               	movwf	??_lcd_put_byte
  4966  0612                     u4537:	
  4967  0612  0BA1               	decfsz	??_lcd_put_byte,f
  4968  0613  2E12               	goto	u4537
  4969                           
  4970                           ;lcd(16).c: 118: RD2 = 0;
  4971  0614  1283               	bcf	3,5	;RP0=0, select bank0
  4972  0615  1303               	bcf	3,6	;RP1=0, select bank0
  4973  0616  3021               	movlw	33
  4974  0617  1108               	bcf	8,2
  4975                           
  4976                           ;lcd(16).c: 119: _delay((unsigned long)((20)*(20000000/4000000.0)));
  4977  0618  00A1               	movwf	??_lcd_put_byte
  4978  0619                     u4547:	
  4979  0619  0BA1               	decfsz	??_lcd_put_byte,f
  4980  061A  2E19               	goto	u4547
  4981                           
  4982                           ;lcd(16).c: 120: RD3 = 0;
  4983  061B  1283               	bcf	3,5	;RP0=0, select bank0
  4984  061C  1303               	bcf	3,6	;RP1=0, select bank0
  4985  061D  1188               	bcf	8,3
  4986                           
  4987                           ;lcd(16).c: 122: temp.Val = b;
  4988  061E  0820               	movf	lcd_put_byte@b,w
  4989  061F  00A4               	movwf	lcd_put_byte@temp
  4990                           
  4991                           ;lcd(16).c: 125: RD4 = temp.bits.b4;
  4992  0620  0E24               	swapf	lcd_put_byte@temp,w
  4993  0621  3901               	andlw	1
  4994  0622  00A1               	movwf	??_lcd_put_byte
  4995  0623  0C21               	rrf	??_lcd_put_byte,w
  4996  0624  1C03               	btfss	3,0
  4997  0625  2E2A               	goto	u3010
  4998  0626  1283               	bcf	3,5	;RP0=0, select bank0
  4999  0627  1303               	bcf	3,6	;RP1=0, select bank0
  5000  0628  1608               	bsf	8,4
  5001  0629  2E2D               	goto	l6963
  5002  062A                     u3010:	
  5003  062A  1283               	bcf	3,5	;RP0=0, select bank0
  5004  062B  1303               	bcf	3,6	;RP1=0, select bank0
  5005  062C  1208               	bcf	8,4
  5006  062D                     l6963:	
  5007                           
  5008                           ;lcd(16).c: 126: RD5 = temp.bits.b5;
  5009  062D  0E24               	swapf	lcd_put_byte@temp,w
  5010  062E  00A1               	movwf	??_lcd_put_byte
  5011  062F  0C21               	rrf	??_lcd_put_byte,w
  5012  0630  3901               	andlw	1
  5013  0631  00A2               	movwf	??_lcd_put_byte+1
  5014  0632  0C22               	rrf	??_lcd_put_byte+1,w
  5015  0633  1C03               	btfss	3,0
  5016  0634  2E39               	goto	u3030
  5017  0635  1283               	bcf	3,5	;RP0=0, select bank0
  5018  0636  1303               	bcf	3,6	;RP1=0, select bank0
  5019  0637  1688               	bsf	8,5
  5020  0638  2E3C               	goto	l6965
  5021  0639                     u3030:	
  5022  0639  1283               	bcf	3,5	;RP0=0, select bank0
  5023  063A  1303               	bcf	3,6	;RP1=0, select bank0
  5024  063B  1288               	bcf	8,5
  5025  063C                     l6965:	
  5026                           
  5027                           ;lcd(16).c: 127: RD6 = temp.bits.b6;
  5028  063C  0E24               	swapf	lcd_put_byte@temp,w
  5029  063D  00A1               	movwf	??_lcd_put_byte
  5030  063E  0CA1               	rrf	??_lcd_put_byte,f
  5031  063F  0C21               	rrf	??_lcd_put_byte,w
  5032  0640  3901               	andlw	1
  5033  0641  00A2               	movwf	??_lcd_put_byte+1
  5034  0642  0C22               	rrf	??_lcd_put_byte+1,w
  5035  0643  1C03               	btfss	3,0
  5036  0644  2E49               	goto	u3050
  5037  0645  1283               	bcf	3,5	;RP0=0, select bank0
  5038  0646  1303               	bcf	3,6	;RP1=0, select bank0
  5039  0647  1708               	bsf	8,6
  5040  0648  2E4C               	goto	l6967
  5041  0649                     u3050:	
  5042  0649  1283               	bcf	3,5	;RP0=0, select bank0
  5043  064A  1303               	bcf	3,6	;RP1=0, select bank0
  5044  064B  1308               	bcf	8,6
  5045  064C                     l6967:	
  5046                           
  5047                           ;lcd(16).c: 128: RD7 = temp.bits.b7;
  5048  064C  0D24               	rlf	lcd_put_byte@temp,w
  5049  064D  0D24               	rlf	lcd_put_byte@temp,w
  5050  064E  3901               	andlw	1
  5051  064F  00A1               	movwf	??_lcd_put_byte
  5052  0650  0C21               	rrf	??_lcd_put_byte,w
  5053  0651  1C03               	btfss	3,0
  5054  0652  2E57               	goto	u3070
  5055  0653  1283               	bcf	3,5	;RP0=0, select bank0
  5056  0654  1303               	bcf	3,6	;RP1=0, select bank0
  5057  0655  1788               	bsf	8,7
  5058  0656  2E5A               	goto	u3084
  5059  0657                     u3070:	
  5060  0657  1283               	bcf	3,5	;RP0=0, select bank0
  5061  0658  1303               	bcf	3,6	;RP1=0, select bank0
  5062  0659  1388               	bcf	8,7
  5063  065A                     u3084:	
  5064                           
  5065                           ;lcd(16).c: 129: _delay((unsigned long)((20)*(20000000/4000000.0)));
  5066  065A  3021               	movlw	33
  5067  065B  00A1               	movwf	??_lcd_put_byte
  5068  065C                     u4557:	
  5069  065C  0BA1               	decfsz	??_lcd_put_byte,f
  5070  065D  2E5C               	goto	u4557
  5071                           
  5072                           ;lcd(16).c: 130: RD3 = 1;
  5073  065E  1283               	bcf	3,5	;RP0=0, select bank0
  5074  065F  1303               	bcf	3,6	;RP1=0, select bank0
  5075  0660  3021               	movlw	33
  5076  0661  1588               	bsf	8,3
  5077                           
  5078                           ;lcd(16).c: 131: _delay((unsigned long)((20)*(20000000/4000000.0)));
  5079  0662  00A1               	movwf	??_lcd_put_byte
  5080  0663                     u4567:	
  5081  0663  0BA1               	decfsz	??_lcd_put_byte,f
  5082  0664  2E63               	goto	u4567
  5083                           
  5084                           ;lcd(16).c: 132: RD3 = 0;
  5085  0665  1283               	bcf	3,5	;RP0=0, select bank0
  5086  0666  1303               	bcf	3,6	;RP1=0, select bank0
  5087  0667  1188               	bcf	8,3
  5088                           
  5089                           ;lcd(16).c: 134: RD4 = temp.bits.b0;
  5090  0668  0824               	movf	lcd_put_byte@temp,w
  5091  0669  3901               	andlw	1
  5092  066A  00A1               	movwf	??_lcd_put_byte
  5093  066B  0C21               	rrf	??_lcd_put_byte,w
  5094  066C  1C03               	btfss	3,0
  5095  066D  2E72               	goto	u3090
  5096  066E  1283               	bcf	3,5	;RP0=0, select bank0
  5097  066F  1303               	bcf	3,6	;RP1=0, select bank0
  5098  0670  1608               	bsf	8,4
  5099  0671  2E75               	goto	l6975
  5100  0672                     u3090:	
  5101  0672  1283               	bcf	3,5	;RP0=0, select bank0
  5102  0673  1303               	bcf	3,6	;RP1=0, select bank0
  5103  0674  1208               	bcf	8,4
  5104  0675                     l6975:	
  5105                           
  5106                           ;lcd(16).c: 135: RD5 = temp.bits.b1;
  5107  0675  0C24               	rrf	lcd_put_byte@temp,w
  5108  0676  3901               	andlw	1
  5109  0677  00A1               	movwf	??_lcd_put_byte
  5110  0678  0C21               	rrf	??_lcd_put_byte,w
  5111  0679  1C03               	btfss	3,0
  5112  067A  2E7F               	goto	u3110
  5113  067B  1283               	bcf	3,5	;RP0=0, select bank0
  5114  067C  1303               	bcf	3,6	;RP1=0, select bank0
  5115  067D  1688               	bsf	8,5
  5116  067E  2E82               	goto	l6977
  5117  067F                     u3110:	
  5118  067F  1283               	bcf	3,5	;RP0=0, select bank0
  5119  0680  1303               	bcf	3,6	;RP1=0, select bank0
  5120  0681  1288               	bcf	8,5
  5121  0682                     l6977:	
  5122                           
  5123                           ;lcd(16).c: 136: RD6 = temp.bits.b2;
  5124  0682  0C24               	rrf	lcd_put_byte@temp,w
  5125  0683  00A1               	movwf	??_lcd_put_byte
  5126  0684  0C21               	rrf	??_lcd_put_byte,w
  5127  0685  3901               	andlw	1
  5128  0686  00A2               	movwf	??_lcd_put_byte+1
  5129  0687  0C22               	rrf	??_lcd_put_byte+1,w
  5130  0688  1C03               	btfss	3,0
  5131  0689  2E8E               	goto	u3130
  5132  068A  1283               	bcf	3,5	;RP0=0, select bank0
  5133  068B  1303               	bcf	3,6	;RP1=0, select bank0
  5134  068C  1708               	bsf	8,6
  5135  068D  2E91               	goto	l6979
  5136  068E                     u3130:	
  5137  068E  1283               	bcf	3,5	;RP0=0, select bank0
  5138  068F  1303               	bcf	3,6	;RP1=0, select bank0
  5139  0690  1308               	bcf	8,6
  5140  0691                     l6979:	
  5141                           
  5142                           ;lcd(16).c: 137: RD7 = temp.bits.b3;
  5143  0691  0C24               	rrf	lcd_put_byte@temp,w
  5144  0692  00A1               	movwf	??_lcd_put_byte
  5145  0693  0CA1               	rrf	??_lcd_put_byte,f
  5146  0694  0C21               	rrf	??_lcd_put_byte,w
  5147  0695  3901               	andlw	1
  5148  0696  00A2               	movwf	??_lcd_put_byte+1
  5149  0697  0C22               	rrf	??_lcd_put_byte+1,w
  5150  0698  1C03               	btfss	3,0
  5151  0699  2E9E               	goto	u3150
  5152  069A  1283               	bcf	3,5	;RP0=0, select bank0
  5153  069B  1303               	bcf	3,6	;RP1=0, select bank0
  5154  069C  1788               	bsf	8,7
  5155  069D  2EA1               	goto	u3164
  5156  069E                     u3150:	
  5157  069E  1283               	bcf	3,5	;RP0=0, select bank0
  5158  069F  1303               	bcf	3,6	;RP1=0, select bank0
  5159  06A0  1388               	bcf	8,7
  5160  06A1                     u3164:	
  5161                           
  5162                           ;lcd(16).c: 138: _delay((unsigned long)((20)*(20000000/4000000.0)));
  5163  06A1  3021               	movlw	33
  5164  06A2  00A1               	movwf	??_lcd_put_byte
  5165  06A3                     u4577:	
  5166  06A3  0BA1               	decfsz	??_lcd_put_byte,f
  5167  06A4  2EA3               	goto	u4577
  5168                           
  5169                           ;lcd(16).c: 139: RD3 = 1;
  5170  06A5  1283               	bcf	3,5	;RP0=0, select bank0
  5171  06A6  1303               	bcf	3,6	;RP1=0, select bank0
  5172  06A7  3021               	movlw	33
  5173  06A8  1588               	bsf	8,3
  5174                           
  5175                           ;lcd(16).c: 140: _delay((unsigned long)((20)*(20000000/4000000.0)));
  5176  06A9  00A1               	movwf	??_lcd_put_byte
  5177  06AA                     u4587:	
  5178  06AA  0BA1               	decfsz	??_lcd_put_byte,f
  5179  06AB  2EAA               	goto	u4587
  5180                           
  5181                           ;lcd(16).c: 141: RD3 = 0;
  5182  06AC  1283               	bcf	3,5	;RP0=0, select bank0
  5183  06AD  1303               	bcf	3,6	;RP1=0, select bank0
  5184  06AE  1188               	bcf	8,3
  5185  06AF  0008               	return
  5186  06B0                     __end_of_lcd_put_byte:	
  5187  06B0                     __ptext660:	
  5188 ;; =============== function _pwm_10bit ends ============
  5189                           
  5190                           
  5191 ;; *************** function _lcd_busy *****************
  5192 ;; Defined at:
  5193 ;;		line 47 in file "C:\Users\DELL\Desktop\baitap_ttvxl\dulieu_banphim\lcd(16).c"
  5194 ;; Parameters:    Size  Location     Type
  5195 ;;		None
  5196 ;; Auto vars:     Size  Location     Type
  5197 ;;  busy            1    1[BANK0 ] unsigned char 
  5198 ;; Return value:  Size  Location     Type
  5199 ;;                  1    wreg      unsigned char 
  5200 ;; Registers used:
  5201 ;;		wreg
  5202 ;; Tracked objects:
  5203 ;;		On entry : 0/0
  5204 ;;		On exit  : 60/0
  5205 ;;		Unchanged: 0/0
  5206 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5207 ;;      Params:         0       0       0       0       0
  5208 ;;      Locals:         0       1       0       0       0
  5209 ;;      Temps:          0       1       0       0       0
  5210 ;;      Totals:         0       2       0       0       0
  5211 ;;Total ram usage:        2 bytes
  5212 ;; Hardware stack levels used:    1
  5213 ;; Hardware stack levels required when called:    2
  5214 ;; This function calls:
  5215 ;;		Nothing
  5216 ;; This function is called by:
  5217 ;;		_lcd_init
  5218 ;;		_lcd_putc
  5219 ;;		_lcd_gotoxy
  5220 ;; This function uses a non-reentrant model
  5221 ;;
  5222  06B0                     _lcd_busy:	
  5223                           
  5224                           ;lcd(16).c: 48: unsigned char busy;
  5225                           ;lcd(16).c: 50: TRISD4 = 1;
  5226                           
  5227                           ; Regs used in _lcd_busy: [wreg]
  5228  06B0  1683               	bsf	3,5	;RP0=1, select bank1
  5229  06B1  1303               	bcf	3,6	;RP1=0, select bank1
  5230  06B2  1608               	bsf	8,4
  5231                           
  5232                           ;lcd(16).c: 51: TRISD5 = 1;
  5233  06B3  1688               	bsf	8,5
  5234                           
  5235                           ;lcd(16).c: 52: TRISD6 = 1;
  5236  06B4  1708               	bsf	8,6
  5237                           
  5238                           ;lcd(16).c: 53: TRISD7 = 1;
  5239  06B5  1788               	bsf	8,7
  5240                           
  5241                           ;lcd(16).c: 55: RD2 = 1;
  5242  06B6  1283               	bcf	3,5	;RP0=0, select bank0
  5243  06B7  3021               	movlw	33
  5244  06B8  1508               	bsf	8,2
  5245                           
  5246                           ;lcd(16).c: 56: RD1 = 0;
  5247  06B9  1088               	bcf	8,1
  5248                           
  5249                           ;lcd(16).c: 57: _delay((unsigned long)((20)*(20000000/4000000.0)));
  5250  06BA  00A0               	movwf	??_lcd_busy
  5251  06BB                     u4497:	
  5252  06BB  0BA0               	decfsz	??_lcd_busy,f
  5253  06BC  2EBB               	goto	u4497
  5254                           
  5255                           ;lcd(16).c: 58: RD3 = 1;
  5256  06BD  1283               	bcf	3,5	;RP0=0, select bank0
  5257  06BE  1303               	bcf	3,6	;RP1=0, select bank0
  5258  06BF  3021               	movlw	33
  5259  06C0  1588               	bsf	8,3
  5260                           
  5261                           ;lcd(16).c: 59: _delay((unsigned long)((20)*(20000000/4000000.0)));
  5262  06C1  00A0               	movwf	??_lcd_busy
  5263  06C2                     u4507:	
  5264  06C2  0BA0               	decfsz	??_lcd_busy,f
  5265  06C3  2EC2               	goto	u4507
  5266                           
  5267                           ;lcd(16).c: 61: busy = RD7;
  5268  06C4  3000               	movlw	0
  5269  06C5  1283               	bcf	3,5	;RP0=0, select bank0
  5270  06C6  1303               	bcf	3,6	;RP1=0, select bank0
  5271  06C7  1B88               	btfsc	8,7
  5272  06C8  3001               	movlw	1
  5273  06C9  00A1               	movwf	lcd_busy@busy
  5274  06CA  3021               	movlw	33
  5275                           
  5276                           ;lcd(16).c: 63: RD3 = 0;
  5277  06CB  1188               	bcf	8,3
  5278                           
  5279                           ;lcd(16).c: 64: _delay((unsigned long)((20)*(20000000/4000000.0)));
  5280  06CC  00A0               	movwf	??_lcd_busy
  5281  06CD                     u4517:	
  5282  06CD  0BA0               	decfsz	??_lcd_busy,f
  5283  06CE  2ECD               	goto	u4517
  5284                           
  5285                           ;lcd(16).c: 65: RD3 = 1;
  5286  06CF  1283               	bcf	3,5	;RP0=0, select bank0
  5287  06D0  1303               	bcf	3,6	;RP1=0, select bank0
  5288  06D1  3021               	movlw	33
  5289  06D2  1588               	bsf	8,3
  5290                           
  5291                           ;lcd(16).c: 66: _delay((unsigned long)((20)*(20000000/4000000.0)));
  5292  06D3  00A0               	movwf	??_lcd_busy
  5293  06D4                     u4527:	
  5294  06D4  0BA0               	decfsz	??_lcd_busy,f
  5295  06D5  2ED4               	goto	u4527
  5296                           
  5297                           ;lcd(16).c: 67: RD3 = 0;
  5298  06D6  1283               	bcf	3,5	;RP0=0, select bank0
  5299  06D7  1303               	bcf	3,6	;RP1=0, select bank0
  5300  06D8  1188               	bcf	8,3
  5301                           
  5302                           ;lcd(16).c: 70: return busy;
  5303  06D9  0821               	movf	lcd_busy@busy,w
  5304  06DA  0008               	return
  5305  06DB                     __end_of_lcd_busy:	
  5306  06DB                     __ptext679:	
  5307 ;; =============== function _tx_init ends ============
  5308                           
  5309                           
  5310 ;; *************** function _isprint *****************
  5311 ;; Defined at:
  5312 ;;		line 13 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\isprint.c"
  5313 ;; Parameters:    Size  Location     Type
  5314 ;;  c               1    wreg     unsigned char 
  5315 ;; Auto vars:     Size  Location     Type
  5316 ;;  c               1    1[BANK0 ] unsigned char 
  5317 ;; Return value:  Size  Location     Type
  5318 ;;		None               void
  5319 ;; Registers used:
  5320 ;;		wreg, status,2, status,0
  5321 ;; Tracked objects:
  5322 ;;		On entry : 160/0
  5323 ;;		On exit  : 160/0
  5324 ;;		Unchanged: FFE9F/0
  5325 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5326 ;;      Params:         0       0       0       0       0
  5327 ;;      Locals:         0       2       0       0       0
  5328 ;;      Temps:          0       0       0       0       0
  5329 ;;      Totals:         0       2       0       0       0
  5330 ;;Total ram usage:        2 bytes
  5331 ;; Hardware stack levels used:    1
  5332 ;; Hardware stack levels required when called:    2
  5333 ;; This function calls:
  5334 ;;		Nothing
  5335 ;; This function is called by:
  5336 ;;		_lcd_putc
  5337 ;; This function uses a non-reentrant model
  5338 ;;
  5339  06DB                     _isprint:	
  5340                           
  5341                           ; Regs used in _isprint: [wreg+status,2+status,0]
  5342                           ;isprint@c stored from wreg
  5343  06DB  00A1               	movwf	isprint@c
  5344  06DC  307F               	movlw	127
  5345  06DD  01A0               	clrf	_isprint$3719
  5346  06DE  0221               	subwf	isprint@c,w
  5347  06DF  1803               	skipnc
  5348  06E0  2EE7               	goto	l6505
  5349  06E1  3020               	movlw	32
  5350  06E2  0221               	subwf	isprint@c,w
  5351  06E3  1C03               	skipc
  5352  06E4  2EE7               	goto	l6505
  5353  06E5  01A0               	clrf	_isprint$3719
  5354  06E6  0AA0               	incf	_isprint$3719,f
  5355  06E7                     l6505:	
  5356  06E7  0C20               	rrf	_isprint$3719,w
  5357  06E8  0008               	return
  5358  06E9                     __end_of_isprint:	
  5359  06E9                     PL38:	
  5360  06E9  3030               	movlw	48
  5361  06EA  1283               	bcf	3,5	;RP0=0, select bank0
  5362  06EB  1303               	bcf	3,6	;RP1=0, select bank0
  5363  06EC  00A0               	movwf	?_lcd_put_byte
  5364  06ED  3400               	retlw	0
  5365                           
  5366                           	psect	text648
  5367  000F                     __ptext648:	
  5368 ;; =============== function _lcd_putc ends ============
  5369                           
  5370                           
  5371 ;; *************** function ___ftsub *****************
  5372 ;; Defined at:
  5373 ;;		line 17 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\ftsub.c"
  5374 ;; Parameters:    Size  Location     Type
  5375 ;;  f2              3   56[BANK0 ] float 
  5376 ;;  f1              3   59[BANK0 ] float 
  5377 ;; Auto vars:     Size  Location     Type
  5378 ;;		None
  5379 ;; Return value:  Size  Location     Type
  5380 ;;                  3   56[BANK0 ] float 
  5381 ;; Registers used:
  5382 ;;		wreg, status,2, status,0, pclath, cstack
  5383 ;; Tracked objects:
  5384 ;;		On entry : 60/0
  5385 ;;		On exit  : 60/0
  5386 ;;		Unchanged: FFF9F/0
  5387 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5388 ;;      Params:         0       6       0       0       0
  5389 ;;      Locals:         0       0       0       0       0
  5390 ;;      Temps:          0       0       0       0       0
  5391 ;;      Totals:         0       6       0       0       0
  5392 ;;Total ram usage:        6 bytes
  5393 ;; Hardware stack levels used:    1
  5394 ;; Hardware stack levels required when called:    4
  5395 ;; This function calls:
  5396 ;;		___ftadd
  5397 ;; This function is called by:
  5398 ;;		__doprnt
  5399 ;; This function uses a non-reentrant model
  5400 ;;
  5401  000F                     ___ftsub:	
  5402                           
  5403                           ; Regs used in ___ftsub: [wreg+status,2+status,0+pclath+cstack]
  5404  000F  3080               	movlw	128
  5405  0010  06DA               	xorwf	___ftsub@f2+2,f
  5406  0011  085B               	movf	___ftsub@f1,w
  5407  0012  00CC               	movwf	?___ftadd
  5408  0013  085C               	movf	___ftsub@f1+1,w
  5409  0014  00CD               	movwf	?___ftadd+1
  5410  0015  085D               	movf	___ftsub@f1+2,w
  5411  0016  00CE               	movwf	?___ftadd+2
  5412  0017  0858               	movf	___ftsub@f2,w
  5413  0018  00CF               	movwf	?___ftadd+3
  5414  0019  0859               	movf	___ftsub@f2+1,w
  5415  001A  00D0               	movwf	?___ftadd+4
  5416  001B  085A               	movf	___ftsub@f2+2,w
  5417  001C  00D1               	movwf	?___ftadd+5
  5418  001D  2025               	fcall	___ftadd
  5419  001E  084C               	movf	?___ftadd,w
  5420  001F  00D8               	movwf	?___ftsub
  5421  0020  084D               	movf	?___ftadd+1,w
  5422  0021  00D9               	movwf	?___ftsub+1
  5423  0022  084E               	movf	?___ftadd+2,w
  5424  0023  00DA               	movwf	?___ftsub+2
  5425  0024  0008               	return
  5426  0025                     __end_of___ftsub:	
  5427  0025                     __ptext657:	
  5428 ;; =============== function ___ftdiv ends ============
  5429                           
  5430                           
  5431 ;; *************** function ___ftadd *****************
  5432 ;; Defined at:
  5433 ;;		line 87 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\ftadd.c"
  5434 ;; Parameters:    Size  Location     Type
  5435 ;;  f1              3   44[BANK0 ] float 
  5436 ;;  f2              3   47[BANK0 ] float 
  5437 ;; Auto vars:     Size  Location     Type
  5438 ;;  exp1            1   55[BANK0 ] unsigned char 
  5439 ;;  exp2            1   54[BANK0 ] unsigned char 
  5440 ;;  sign            1   53[BANK0 ] unsigned char 
  5441 ;; Return value:  Size  Location     Type
  5442 ;;                  3   44[BANK0 ] float 
  5443 ;; Registers used:
  5444 ;;		wreg, status,2, status,0, pclath, cstack
  5445 ;; Tracked objects:
  5446 ;;		On entry : 60/0
  5447 ;;		On exit  : 60/0
  5448 ;;		Unchanged: FFF9F/0
  5449 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5450 ;;      Params:         0       6       0       0       0
  5451 ;;      Locals:         0       3       0       0       0
  5452 ;;      Temps:          0       3       0       0       0
  5453 ;;      Totals:         0      12       0       0       0
  5454 ;;Total ram usage:       12 bytes
  5455 ;; Hardware stack levels used:    1
  5456 ;; Hardware stack levels required when called:    3
  5457 ;; This function calls:
  5458 ;;		___ftpack
  5459 ;; This function is called by:
  5460 ;;		__doprnt
  5461 ;;		___ftsub
  5462 ;; This function uses a non-reentrant model
  5463 ;;
  5464  0025                     ___ftadd:	
  5465                           
  5466                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  5467  0025  084C               	movf	___ftadd@f1,w
  5468  0026  00D2               	movwf	??___ftadd
  5469  0027  084D               	movf	___ftadd@f1+1,w
  5470  0028  00D3               	movwf	??___ftadd+1
  5471  0029  084E               	movf	___ftadd@f1+2,w
  5472  002A  00D4               	movwf	??___ftadd+2
  5473  002B  1003               	clrc
  5474  002C  0D53               	rlf	??___ftadd+1,w
  5475  002D  0D54               	rlf	??___ftadd+2,w
  5476  002E  00D7               	movwf	___ftadd@exp1
  5477  002F  084F               	movf	___ftadd@f2,w
  5478  0030  00D2               	movwf	??___ftadd
  5479  0031  0850               	movf	___ftadd@f2+1,w
  5480  0032  00D3               	movwf	??___ftadd+1
  5481  0033  0851               	movf	___ftadd@f2+2,w
  5482  0034  00D4               	movwf	??___ftadd+2
  5483  0035  1003               	clrc
  5484  0036  0D53               	rlf	??___ftadd+1,w
  5485  0037  0D54               	rlf	??___ftadd+2,w
  5486  0038  00D6               	movwf	___ftadd@exp2
  5487  0039  0857               	movf	___ftadd@exp1,w
  5488  003A  1903               	btfsc	3,2
  5489  003B  2848               	goto	l7025
  5490  003C  0856               	movf	___ftadd@exp2,w
  5491  003D  0257               	subwf	___ftadd@exp1,w
  5492  003E  0856               	movf	___ftadd@exp2,w
  5493  003F  1803               	skipnc
  5494  0040  2850               	goto	L10
  5495  0041  00D2               	movwf	??___ftadd
  5496  0042  0857               	movf	___ftadd@exp1,w
  5497  0043  02D2               	subwf	??___ftadd,f
  5498  0044  3019               	movlw	25
  5499  0045  0252               	subwf	??___ftadd,w
  5500  0046  1C03               	skipc
  5501  0047  284F               	goto	l7029
  5502  0048                     l7025:	
  5503  0048  084F               	movf	___ftadd@f2,w
  5504  0049  00CC               	movwf	?___ftadd
  5505  004A  0850               	movf	___ftadd@f2+1,w
  5506  004B  00CD               	movwf	?___ftadd+1
  5507  004C  0851               	movf	___ftadd@f2+2,w
  5508  004D  00CE               	movwf	?___ftadd+2
  5509  004E  0008               	return
  5510  004F                     l7029:	
  5511  004F  0856               	movf	___ftadd@exp2,w
  5512  0050                     L10:	
  5513  0050  1903               	btfsc	3,2
  5514  0051  0008               	return
  5515  0052  0857               	movf	___ftadd@exp1,w
  5516  0053  0256               	subwf	___ftadd@exp2,w
  5517  0054  1803               	skipnc
  5518  0055  285E               	goto	l7035
  5519  0056  0857               	movf	___ftadd@exp1,w
  5520  0057  00D2               	movwf	??___ftadd
  5521  0058  0856               	movf	___ftadd@exp2,w
  5522  0059  02D2               	subwf	??___ftadd,f
  5523  005A  3019               	movlw	25
  5524  005B  0252               	subwf	??___ftadd,w
  5525  005C  1803               	btfsc	3,0
  5526  005D  0008               	return
  5527  005E                     l7035:	
  5528  005E  3006               	movlw	6
  5529  005F  00D5               	movwf	___ftadd@sign
  5530  0060  1BCE               	btfsc	___ftadd@f1+2,7
  5531  0061  17D5               	bsf	___ftadd@sign,7
  5532  0062  1BD1               	btfsc	___ftadd@f2+2,7
  5533  0063  1755               	bsf	___ftadd@sign,6
  5534  0064  17CD               	bsf	___ftadd@f1+1,7
  5535  0065  01CE               	clrf	___ftadd@f1+2
  5536  0066  17D0               	bsf	___ftadd@f2+1,7
  5537  0067  01D1               	clrf	___ftadd@f2+2
  5538  0068  0856               	movf	___ftadd@exp2,w
  5539  0069  0257               	subwf	___ftadd@exp1,w
  5540  006A  1803               	skipnc
  5541  006B  2885               	goto	l7057
  5542  006C                     l7047:	
  5543  006C  1003               	clrc
  5544  006D  0DCF               	rlf	___ftadd@f2,f
  5545  006E  0DD0               	rlf	___ftadd@f2+1,f
  5546  006F  0DD1               	rlf	___ftadd@f2+2,f
  5547  0070  03D6               	decf	___ftadd@exp2,f
  5548  0071  0856               	movf	___ftadd@exp2,w
  5549  0072  0657               	xorwf	___ftadd@exp1,w
  5550  0073  1903               	skipnz
  5551  0074  2880               	goto	l7055
  5552  0075  03D5               	decf	___ftadd@sign,f
  5553  0076  0855               	movf	___ftadd@sign,w
  5554  0077  3907               	andlw	7
  5555  0078  1903               	btfsc	3,2
  5556  0079  2880               	goto	l7055
  5557  007A  286C               	goto	l7047
  5558  007B                     l7053:	
  5559  007B  1003               	clrc
  5560  007C  0CCE               	rrf	___ftadd@f1+2,f
  5561  007D  0CCD               	rrf	___ftadd@f1+1,f
  5562  007E  0CCC               	rrf	___ftadd@f1,f
  5563  007F  0AD7               	incf	___ftadd@exp1,f
  5564  0080                     l7055:	
  5565  0080  0857               	movf	___ftadd@exp1,w
  5566  0081  0656               	xorwf	___ftadd@exp2,w
  5567  0082  1903               	btfsc	3,2
  5568  0083  28A1               	goto	l3440
  5569  0084  287B               	goto	l7053
  5570  0085                     l7057:	
  5571  0085  0857               	movf	___ftadd@exp1,w
  5572  0086  0256               	subwf	___ftadd@exp2,w
  5573  0087  1803               	skipnc
  5574  0088  28A1               	goto	l3440
  5575  0089                     l7059:	
  5576  0089  1003               	clrc
  5577  008A  0DCC               	rlf	___ftadd@f1,f
  5578  008B  0DCD               	rlf	___ftadd@f1+1,f
  5579  008C  0DCE               	rlf	___ftadd@f1+2,f
  5580  008D  03D7               	decf	___ftadd@exp1,f
  5581  008E  0856               	movf	___ftadd@exp2,w
  5582  008F  0657               	xorwf	___ftadd@exp1,w
  5583  0090  1903               	skipnz
  5584  0091  289D               	goto	l7067
  5585  0092  03D5               	decf	___ftadd@sign,f
  5586  0093  0855               	movf	___ftadd@sign,w
  5587  0094  3907               	andlw	7
  5588  0095  1903               	btfsc	3,2
  5589  0096  289D               	goto	l7067
  5590  0097  2889               	goto	l7059
  5591  0098                     l7065:	
  5592  0098  1003               	clrc
  5593  0099  0CD1               	rrf	___ftadd@f2+2,f
  5594  009A  0CD0               	rrf	___ftadd@f2+1,f
  5595  009B  0CCF               	rrf	___ftadd@f2,f
  5596  009C  0AD6               	incf	___ftadd@exp2,f
  5597  009D                     l7067:	
  5598  009D  0857               	movf	___ftadd@exp1,w
  5599  009E  0656               	xorwf	___ftadd@exp2,w
  5600  009F  1D03               	skipz
  5601  00A0  2898               	goto	l7065
  5602  00A1                     l3440:	
  5603  00A1  1FD5               	btfss	___ftadd@sign,7
  5604  00A2  28AC               	goto	l7073
  5605  00A3  30FF               	movlw	255
  5606  00A4  06CC               	xorwf	___ftadd@f1,f
  5607  00A5  06CD               	xorwf	___ftadd@f1+1,f
  5608  00A6  06CE               	xorwf	___ftadd@f1+2,f
  5609  00A7  0ACC               	incf	___ftadd@f1,f
  5610  00A8  1903               	skipnz
  5611  00A9  0ACD               	incf	___ftadd@f1+1,f
  5612  00AA  1903               	skipnz
  5613  00AB  0ACE               	incf	___ftadd@f1+2,f
  5614  00AC                     l7073:	
  5615  00AC  1F55               	btfss	___ftadd@sign,6
  5616  00AD  28B7               	goto	l7079
  5617  00AE  30FF               	movlw	255
  5618  00AF  06CF               	xorwf	___ftadd@f2,f
  5619  00B0  06D0               	xorwf	___ftadd@f2+1,f
  5620  00B1  06D1               	xorwf	___ftadd@f2+2,f
  5621  00B2  0ACF               	incf	___ftadd@f2,f
  5622  00B3  1903               	skipnz
  5623  00B4  0AD0               	incf	___ftadd@f2+1,f
  5624  00B5  1903               	skipnz
  5625  00B6  0AD1               	incf	___ftadd@f2+2,f
  5626  00B7                     l7079:	
  5627  00B7  01D5               	clrf	___ftadd@sign
  5628  00B8  084C               	movf	___ftadd@f1,w
  5629  00B9  07CF               	addwf	___ftadd@f2,f
  5630  00BA  084D               	movf	___ftadd@f1+1,w
  5631  00BB  1103               	clrz
  5632  00BC  1803               	skipnc
  5633  00BD  0A4D               	incf	___ftadd@f1+1,w
  5634  00BE  1D03               	btfss	3,2
  5635  00BF  07D0               	addwf	___ftadd@f2+1,f
  5636  00C0  084E               	movf	___ftadd@f1+2,w
  5637  00C1  1103               	clrz
  5638  00C2  1803               	skipnc
  5639  00C3  0A4E               	incf	___ftadd@f1+2,w
  5640  00C4  1D03               	btfss	3,2
  5641  00C5  07D1               	addwf	___ftadd@f2+2,f
  5642  00C6  1FD1               	btfss	___ftadd@f2+2,7
  5643  00C7  28D3               	goto	l7091
  5644  00C8  30FF               	movlw	255
  5645  00C9  06CF               	xorwf	___ftadd@f2,f
  5646  00CA  06D0               	xorwf	___ftadd@f2+1,f
  5647  00CB  06D1               	xorwf	___ftadd@f2+2,f
  5648  00CC  0ACF               	incf	___ftadd@f2,f
  5649  00CD  1903               	skipnz
  5650  00CE  0AD0               	incf	___ftadd@f2+1,f
  5651  00CF  1903               	skipnz
  5652  00D0  0AD1               	incf	___ftadd@f2+2,f
  5653  00D1  01D5               	clrf	___ftadd@sign
  5654  00D2  0AD5               	incf	___ftadd@sign,f
  5655  00D3                     l7091:	
  5656  00D3  084F               	movf	___ftadd@f2,w
  5657  00D4  00A0               	movwf	?___ftpack
  5658  00D5  0850               	movf	___ftadd@f2+1,w
  5659  00D6  00A1               	movwf	?___ftpack+1
  5660  00D7  0851               	movf	___ftadd@f2+2,w
  5661  00D8  00A2               	movwf	?___ftpack+2
  5662  00D9  0857               	movf	___ftadd@exp1,w
  5663  00DA  00A3               	movwf	?___ftpack+3
  5664  00DB  0855               	movf	___ftadd@sign,w
  5665  00DC  00A4               	movwf	?___ftpack+4
  5666  00DD  120A  118A  2463   	fcall	___ftpack
  5667  00E0  0820               	movf	?___ftpack,w
  5668  00E1  00CC               	movwf	?___ftadd
  5669  00E2  0821               	movf	?___ftpack+1,w
  5670  00E3  00CD               	movwf	?___ftadd+1
  5671  00E4  0822               	movf	?___ftpack+2,w
  5672  00E5  00CE               	movwf	?___ftadd+2
  5673  00E6  0008               	return
  5674  00E7                     __end_of___ftadd:	
  5675                           
  5676                           	psect	text650
  5677  16AE                     __ptext650:	
  5678 ;; =============== function _scale ends ============
  5679                           
  5680                           
  5681 ;; *************** function _fround *****************
  5682 ;; Defined at:
  5683 ;;		line 406 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\lib\doprnt.c"
  5684 ;; Parameters:    Size  Location     Type
  5685 ;;  prec            1    wreg     unsigned char 
  5686 ;; Auto vars:     Size  Location     Type
  5687 ;;  prec            1   65[BANK0 ] unsigned char 
  5688 ;; Return value:  Size  Location     Type
  5689 ;;                  3   56[BANK0 ] unsigned char 
  5690 ;; Registers used:
  5691 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5692 ;; Tracked objects:
  5693 ;;		On entry : 60/20
  5694 ;;		On exit  : 60/0
  5695 ;;		Unchanged: FFF9F/0
  5696 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5697 ;;      Params:         0       3       0       0       0
  5698 ;;      Locals:         0       7       0       0       0
  5699 ;;      Temps:          0       0       0       0       0
  5700 ;;      Totals:         0      10       0       0       0
  5701 ;;Total ram usage:       10 bytes
  5702 ;; Hardware stack levels used:    1
  5703 ;; Hardware stack levels required when called:    4
  5704 ;; This function calls:
  5705 ;;		___lbmod
  5706 ;;		___bmul
  5707 ;;		___lbdiv
  5708 ;;		___ftmul
  5709 ;; This function is called by:
  5710 ;;		__doprnt
  5711 ;; This function uses a non-reentrant model
  5712 ;;
  5713  16AE                     _fround:	
  5714                           
  5715                           ; Regs used in _fround: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5716                           ;fround@prec stored from wreg
  5717  16AE  1283               	bcf	3,5	;RP0=0, select bank0
  5718  16AF  00E1               	movwf	fround@prec
  5719  16B0  306E               	movlw	110
  5720  16B1  0261               	subwf	fround@prec,w
  5721  16B2  1C03               	skipc
  5722  16B3  2F39               	goto	l7281
  5723  16B4  3003               	movlw	3
  5724  16B5  00A9               	movwf	?___bmul
  5725  16B6  300A               	movlw	10
  5726  16B7  00A5               	movwf	?___lbdiv
  5727  16B8  3064               	movlw	100
  5728  16B9  00A0               	movwf	?___lbmod
  5729  16BA  0861               	movf	fround@prec,w
  5730  16BB  27CE  160A  118A   	fcall	___lbmod
  5731  16BE  27B3               	fcall	___lbdiv
  5732  16BF  120A  118A  2455   	fcall	___bmul
      +       160A  118A         
  5733  16C4  3E1C               	addlw	low ((__npowers_-__stringbase+27))
  5734  16C5  0084               	movwf	4
  5735  16C6  160A  118A  2000   	fcall	stringdir
      +       160A  118A         
  5736  16CB  00BD               	movwf	?___ftmul
  5737  16CC  160A  118A  2000   	fcall	stringdir
      +       160A  118A         
  5738  16D1  00BE               	movwf	?___ftmul+1
  5739  16D2  160A  118A  2000   	fcall	stringdir
      +       160A  118A         
  5740  16D7  00BF               	movwf	?___ftmul+2
  5741  16D8  3003               	movlw	3
  5742  16D9  00A9               	movwf	?___bmul
  5743  16DA  3064               	movlw	100
  5744  16DB  00A5               	movwf	?___lbdiv
  5745  16DC  0861               	movf	fround@prec,w
  5746  16DD  27B3               	fcall	___lbdiv
  5747  16DE  120A  118A  2455   	fcall	___bmul
      +       160A  118A         
  5748  16E3  3E37               	addlw	low ((__npowers_-__stringbase+54))
  5749  16E4  0084               	movwf	4
  5750  16E5  160A  118A  2000   	fcall	stringdir
      +       160A  118A         
  5751  16EA  00C0               	movwf	?___ftmul+3
  5752  16EB  160A  118A  2000   	fcall	stringdir
      +       160A  118A         
  5753  16F0  00C1               	movwf	?___ftmul+4
  5754  16F1  160A  118A  2000   	fcall	stringdir
      +       160A  118A         
  5755  16F6  00C2               	movwf	?___ftmul+5
  5756  16F7  120A  118A  23E6   	fcall	___ftmul
      +       160A  118A         
  5757  16FC  27F9  160A  118A   	fcall	PL33	;call to abstracted procedure
  5758  16FF  3003               	movlw	3
  5759  1700  00A9               	movwf	?___bmul
  5760  1701  300A               	movlw	10
  5761  1702  00A0               	movwf	?___lbmod
  5762  1703  0861               	movf	fround@prec,w
  5763  1704  27CE               	fcall	___lbmod
  5764  1705  120A  118A  2455   	fcall	___bmul
      +       160A  118A         
  5765  170A  3E01               	addlw	low (__npowers_-__stringbase)
  5766  170B  0084               	movwf	4
  5767  170C  160A  118A  2000   	fcall	stringdir
      +       160A  118A         
  5768  1711  00BD               	movwf	?___ftmul
  5769  1712  160A  118A  2000   	fcall	stringdir
      +       160A  118A         
  5770  1717  00BE               	movwf	?___ftmul+1
  5771  1718  160A  118A  2000   	fcall	stringdir
      +       160A  118A         
  5772  171D  27F1               	fcall	PL30	;call to abstracted procedure
  5773  171E  120A  118A  23E6   	fcall	___ftmul
      +       160A  118A         
  5774  1723  083D               	movf	?___ftmul,w
  5775  1724  00DB               	movwf	_fround$4210
  5776  1725  083E               	movf	?___ftmul+1,w
  5777  1726  00DC               	movwf	_fround$4210+1
  5778  1727  083F               	movf	?___ftmul+2,w
  5779  1728  00DD               	movwf	_fround$4210+2
  5780  1729  303F               	movlw	63
  5781  172A  01BD               	clrf	?___ftmul
  5782  172B  01BE               	clrf	?___ftmul+1
  5783  172C  00BF               	movwf	?___ftmul+2
  5784  172D  085B               	movf	_fround$4210,w
  5785  172E  00C0               	movwf	?___ftmul+3
  5786  172F  085C               	movf	_fround$4210+1,w
  5787  1730  00C1               	movwf	?___ftmul+4
  5788  1731  085D               	movf	_fround$4210+2,w
  5789  1732  00C2               	movwf	?___ftmul+5
  5790  1733  120A  118A  23E6   	fcall	___ftmul
      +       160A  118A         
  5791  1738  2FEA               	ljmp	PL20	;call to abstracted procedure
  5792  1739                     l7281:	
  5793  1739  300B               	movlw	11
  5794  173A  0261               	subwf	fround@prec,w
  5795  173B  1C03               	skipc
  5796  173C  2F8D               	goto	l7289
  5797  173D  3003               	movlw	3
  5798  173E  00A9               	movwf	?___bmul
  5799  173F  300A               	movlw	10
  5800  1740  00A0               	movwf	?___lbmod
  5801  1741  0861               	movf	fround@prec,w
  5802  1742  27CE               	fcall	___lbmod
  5803  1743  120A  118A  2455   	fcall	___bmul
      +       160A  118A         
  5804  1748  3E01               	addlw	low (__npowers_-__stringbase)
  5805  1749  0084               	movwf	4
  5806  174A  160A  118A  2000   	fcall	stringdir
      +       160A  118A         
  5807  174F  00BD               	movwf	?___ftmul
  5808  1750  160A  118A  2000   	fcall	stringdir
      +       160A  118A         
  5809  1755  00BE               	movwf	?___ftmul+1
  5810  1756  160A  118A  2000   	fcall	stringdir
      +       160A  118A         
  5811  175B  00BF               	movwf	?___ftmul+2
  5812  175C  3003               	movlw	3
  5813  175D  00A9               	movwf	?___bmul
  5814  175E  300A               	movlw	10
  5815  175F  00A5               	movwf	?___lbdiv
  5816  1760  0861               	movf	fround@prec,w
  5817  1761  27B3               	fcall	___lbdiv
  5818  1762  120A  118A  2455   	fcall	___bmul
      +       160A  118A         
  5819  1767  3E1C               	addlw	low ((__npowers_-__stringbase+27))
  5820  1768  0084               	movwf	4
  5821  1769  160A  118A  2000   	fcall	stringdir
      +       160A  118A         
  5822  176E  00C0               	movwf	?___ftmul+3
  5823  176F  160A  118A  2000   	fcall	stringdir
      +       160A  118A         
  5824  1774  00C1               	movwf	?___ftmul+4
  5825  1775  160A  118A  2000   	fcall	stringdir
      +       160A  118A         
  5826  177A  00C2               	movwf	?___ftmul+5
  5827  177B  120A  118A  23E6   	fcall	___ftmul
      +       160A  118A         
  5828  1780  27F9  160A  118A   	fcall	PL33	;call to abstracted procedure
  5829  1783  303F               	movlw	63
  5830  1784  01BD               	clrf	?___ftmul
  5831  1785  01BE               	clrf	?___ftmul+1
  5832  1786  27F1               	fcall	PL30	;call to abstracted procedure
  5833  1787  120A  118A  23E6   	fcall	___ftmul
      +       160A  118A         
  5834  178C  2FEA               	ljmp	PL20	;call to abstracted procedure
  5835  178D                     l7289:	
  5836  178D  303F               	movlw	63
  5837  178E  01BD               	clrf	?___ftmul
  5838  178F  01BE               	clrf	?___ftmul+1
  5839  1790  00BF               	movwf	?___ftmul+2
  5840  1791  3003               	movlw	3
  5841  1792  00A9               	movwf	?___bmul
  5842  1793  0861               	movf	fround@prec,w
  5843  1794  120A  118A  2455   	fcall	___bmul
      +       160A  118A         
  5844  1799  3E01               	addlw	low (__npowers_-__stringbase)
  5845  179A  0084               	movwf	4
  5846  179B  160A  118A  2000   	fcall	stringdir
      +       160A  118A         
  5847  17A0  00C0               	movwf	?___ftmul+3
  5848  17A1  160A  118A  2000   	fcall	stringdir
      +       160A  118A         
  5849  17A6  00C1               	movwf	?___ftmul+4
  5850  17A7  160A  118A  2000   	fcall	stringdir
      +       160A  118A         
  5851  17AC  00C2               	movwf	?___ftmul+5
  5852  17AD  120A  118A  23E6   	fcall	___ftmul
      +       160A  118A         
  5853  17B2  2FEA               	ljmp	PL20	;call to abstracted procedure
  5854  17B3                     __end_of_fround:	
  5855  17B3                     __ptext671:	
  5856 ;; =============== function ___lbmod ends ============
  5857                           
  5858                           
  5859 ;; *************** function ___lbdiv *****************
  5860 ;; Defined at:
  5861 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\lbdiv.c"
  5862 ;; Parameters:    Size  Location     Type
  5863 ;;  dividend        1    wreg     unsigned char 
  5864 ;;  divisor         1    5[BANK0 ] unsigned char 
  5865 ;; Auto vars:     Size  Location     Type
  5866 ;;  dividend        1    6[BANK0 ] unsigned char 
  5867 ;;  quotient        1    8[BANK0 ] unsigned char 
  5868 ;;  counter         1    7[BANK0 ] unsigned char 
  5869 ;; Return value:  Size  Location     Type
  5870 ;;                  1    wreg      unsigned char 
  5871 ;; Registers used:
  5872 ;;		wreg, status,2, status,0
  5873 ;; Tracked objects:
  5874 ;;		On entry : 60/0
  5875 ;;		On exit  : 60/0
  5876 ;;		Unchanged: FFF9F/0
  5877 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5878 ;;      Params:         0       1       0       0       0
  5879 ;;      Locals:         0       3       0       0       0
  5880 ;;      Temps:          0       0       0       0       0
  5881 ;;      Totals:         0       4       0       0       0
  5882 ;;Total ram usage:        4 bytes
  5883 ;; Hardware stack levels used:    1
  5884 ;; Hardware stack levels required when called:    2
  5885 ;; This function calls:
  5886 ;;		Nothing
  5887 ;; This function is called by:
  5888 ;;		_fround
  5889 ;; This function uses a non-reentrant model
  5890 ;;
  5891  17B3                     ___lbdiv:	
  5892                           
  5893                           ; Regs used in ___lbdiv: [wreg+status,2+status,0]
  5894                           ;___lbdiv@dividend stored from wreg
  5895  17B3  00A6               	movwf	___lbdiv@dividend
  5896  17B4  01A8               	clrf	___lbdiv@quotient
  5897  17B5  0825               	movf	___lbdiv@divisor,w
  5898  17B6  1903               	btfsc	3,2
  5899  17B7  2FCC               	goto	l6707
  5900  17B8  01A7               	clrf	___lbdiv@counter
  5901  17B9                     l6693:	
  5902  17B9  0AA7               	incf	___lbdiv@counter,f
  5903  17BA  1BA5               	btfsc	___lbdiv@divisor,7
  5904  17BB  2FBF               	goto	l3409
  5905  17BC  1003               	clrc
  5906  17BD  0DA5               	rlf	___lbdiv@divisor,f
  5907  17BE  2FB9               	goto	l6693
  5908  17BF                     l3409:	
  5909  17BF  1003               	clrc
  5910  17C0  0DA8               	rlf	___lbdiv@quotient,f
  5911  17C1  0825               	movf	___lbdiv@divisor,w
  5912  17C2  0226               	subwf	___lbdiv@dividend,w
  5913  17C3  1C03               	skipc
  5914  17C4  2FC9               	goto	L21
  5915  17C5  0825               	movf	___lbdiv@divisor,w
  5916  17C6  02A6               	subwf	___lbdiv@dividend,f
  5917  17C7  1428               	bsf	___lbdiv@quotient,0
  5918  17C8  1003               	clrc
  5919  17C9                     L21:	
  5920  17C9  0CA5               	rrf	___lbdiv@divisor,f
  5921  17CA  0BA7               	decfsz	___lbdiv@counter,f
  5922  17CB  2FBF               	goto	l3409
  5923  17CC                     l6707:	
  5924  17CC  0828               	movf	___lbdiv@quotient,w
  5925  17CD  0008               	return
  5926  17CE                     __end_of___lbdiv:	
  5927  17CE                     __ptext670:	
  5928 ;; =============== function ___ftpack ends ============
  5929                           
  5930                           
  5931 ;; *************** function ___lbmod *****************
  5932 ;; Defined at:
  5933 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\lbmod.c"
  5934 ;; Parameters:    Size  Location     Type
  5935 ;;  dividend        1    wreg     unsigned char 
  5936 ;;  divisor         1    0[BANK0 ] unsigned char 
  5937 ;; Auto vars:     Size  Location     Type
  5938 ;;  dividend        1    2[BANK0 ] unsigned char 
  5939 ;;  rem             1    4[BANK0 ] unsigned char 
  5940 ;;  counter         1    3[BANK0 ] unsigned char 
  5941 ;; Return value:  Size  Location     Type
  5942 ;;                  1    wreg      unsigned char 
  5943 ;; Registers used:
  5944 ;;		wreg, status,2, status,0
  5945 ;; Tracked objects:
  5946 ;;		On entry : 60/0
  5947 ;;		On exit  : 60/0
  5948 ;;		Unchanged: FFF9F/0
  5949 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5950 ;;      Params:         0       1       0       0       0
  5951 ;;      Locals:         0       3       0       0       0
  5952 ;;      Temps:          0       1       0       0       0
  5953 ;;      Totals:         0       5       0       0       0
  5954 ;;Total ram usage:        5 bytes
  5955 ;; Hardware stack levels used:    1
  5956 ;; Hardware stack levels required when called:    2
  5957 ;; This function calls:
  5958 ;;		Nothing
  5959 ;; This function is called by:
  5960 ;;		_fround
  5961 ;; This function uses a non-reentrant model
  5962 ;;
  5963  17CE                     ___lbmod:	
  5964                           
  5965                           ; Regs used in ___lbmod: [wreg+status,2+status,0]
  5966                           ;___lbmod@dividend stored from wreg
  5967  17CE  00A2               	movwf	___lbmod@dividend
  5968  17CF  3008               	movlw	8
  5969  17D0  00A3               	movwf	___lbmod@counter
  5970  17D1  01A4               	clrf	___lbmod@rem
  5971  17D2                     l6715:	
  5972  17D2  0822               	movf	___lbmod@dividend,w
  5973  17D3  00A1               	movwf	??___lbmod
  5974  17D4  3007               	movlw	7
  5975  17D5  1003               	clrc
  5976  17D6                     L20:	
  5977  17D6  0CA1               	rrf	??___lbmod,f
  5978  17D7  3EFF               	addlw	-1
  5979  17D8  1003               	clrc
  5980  17D9  1D03               	skipz
  5981  17DA  2FD6               	goto	L20
  5982  17DB  0D24               	rlf	___lbmod@rem,w
  5983  17DC  0421               	iorwf	??___lbmod,w
  5984  17DD  00A4               	movwf	___lbmod@rem
  5985  17DE  1003               	clrc
  5986  17DF  0DA2               	rlf	___lbmod@dividend,f
  5987  17E0  0820               	movf	___lbmod@divisor,w
  5988  17E1  0224               	subwf	___lbmod@rem,w
  5989  17E2  1C03               	skipc
  5990  17E3  2FE6               	goto	l6723
  5991  17E4  0820               	movf	___lbmod@divisor,w
  5992  17E5  02A4               	subwf	___lbmod@rem,f
  5993  17E6                     l6723:	
  5994  17E6  0BA3               	decfsz	___lbmod@counter,f
  5995  17E7  2FD2               	goto	l6715
  5996  17E8  0824               	movf	___lbmod@rem,w
  5997  17E9  0008               	return
  5998  17EA                     __end_of___lbmod:	
  5999  17EA                     PL20:	
  6000  17EA  083D               	movf	?___ftmul,w
  6001  17EB  00D8               	movwf	?_fround
  6002  17EC  083E               	movf	?___ftmul+1,w
  6003  17ED  00D9               	movwf	?_fround+1
  6004  17EE  083F               	movf	?___ftmul+2,w
  6005  17EF  00DA               	movwf	?_fround+2
  6006  17F0  0008               	return
  6007  17F1                     PL30:	
  6008  17F1  00BF               	movwf	?___ftmul+2
  6009  17F2  085E               	movf	_fround$4209,w
  6010  17F3  00C0               	movwf	?___ftmul+3
  6011  17F4  085F               	movf	_fround$4209+1,w
  6012  17F5  00C1               	movwf	?___ftmul+4
  6013  17F6  0860               	movf	_fround$4209+2,w
  6014  17F7  00C2               	movwf	?___ftmul+5
  6015  17F8  0008               	return
  6016  17F9                     PL33:	
  6017  17F9  083D               	movf	?___ftmul,w
  6018  17FA  00DE               	movwf	_fround$4209
  6019  17FB  083E               	movf	?___ftmul+1,w
  6020  17FC  00DF               	movwf	_fround$4209+1
  6021  17FD  083F               	movf	?___ftmul+2,w
  6022  17FE  00E0               	movwf	_fround$4209+2
  6023  17FF  0008               	return
  6024                           
  6025                           	psect	text653
  6026  0109                     __ptext653:	
  6027 ;; =============== function _lcd_init ends ============
  6028                           
  6029                           
  6030 ;; *************** function ___lltoft *****************
  6031 ;; Defined at:
  6032 ;;		line 36 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\lltoft.c"
  6033 ;; Parameters:    Size  Location     Type
  6034 ;;  c               4    8[BANK0 ] unsigned long 
  6035 ;; Auto vars:     Size  Location     Type
  6036 ;;  exp             1   12[BANK0 ] unsigned char 
  6037 ;; Return value:  Size  Location     Type
  6038 ;;                  3    8[BANK0 ] float 
  6039 ;; Registers used:
  6040 ;;		wreg, status,2, status,0, pclath, cstack
  6041 ;; Tracked objects:
  6042 ;;		On entry : 60/0
  6043 ;;		On exit  : 60/0
  6044 ;;		Unchanged: FFF9F/0
  6045 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6046 ;;      Params:         0       4       0       0       0
  6047 ;;      Locals:         0       1       0       0       0
  6048 ;;      Temps:          0       0       0       0       0
  6049 ;;      Totals:         0       5       0       0       0
  6050 ;;Total ram usage:        5 bytes
  6051 ;; Hardware stack levels used:    1
  6052 ;; Hardware stack levels required when called:    3
  6053 ;; This function calls:
  6054 ;;		___ftpack
  6055 ;; This function is called by:
  6056 ;;		__doprnt
  6057 ;; This function uses a non-reentrant model
  6058 ;;
  6059  0109                     ___lltoft:	
  6060                           
  6061                           ; Regs used in ___lltoft: [wreg+status,2+status,0+pclath+cstack]
  6062  0109  308E               	movlw	142
  6063  010A  00AC               	movwf	___lltoft@exp
  6064  010B                     l7215:	
  6065  010B  30FF               	movlw	255
  6066  010C  052B               	andwf	___lltoft@c+3,w
  6067  010D  1903               	btfsc	3,2
  6068  010E  2916               	goto	l7217
  6069  010F  1003               	clrc
  6070  0110  0CAB               	rrf	___lltoft@c+3,f
  6071  0111  0CAA               	rrf	___lltoft@c+2,f
  6072  0112  0CA9               	rrf	___lltoft@c+1,f
  6073  0113  0CA8               	rrf	___lltoft@c,f
  6074  0114  0AAC               	incf	___lltoft@exp,f
  6075  0115  290B               	goto	l7215
  6076  0116                     l7217:	
  6077  0116  0828               	movf	___lltoft@c,w
  6078  0117  00A0               	movwf	?___ftpack
  6079  0118  0829               	movf	___lltoft@c+1,w
  6080  0119  00A1               	movwf	?___ftpack+1
  6081  011A  082A               	movf	___lltoft@c+2,w
  6082  011B  00A2               	movwf	?___ftpack+2
  6083  011C  082C               	movf	___lltoft@exp,w
  6084  011D  00A3               	movwf	?___ftpack+3
  6085  011E  01A4               	clrf	?___ftpack+4
  6086  011F  2463               	fcall	___ftpack
  6087  0120  0820               	movf	?___ftpack,w
  6088  0121  00A8               	movwf	?___lltoft
  6089  0122  0821               	movf	?___ftpack+1,w
  6090  0123  00A9               	movwf	?___lltoft+1
  6091  0124  0822               	movf	?___ftpack+2,w
  6092  0125  00AA               	movwf	?___lltoft+2
  6093  0126  0008               	return
  6094  0127                     __end_of___lltoft:	
  6095  0127                     __ptext659:	
  6096 ;; =============== function _send_string ends ============
  6097                           
  6098                           
  6099 ;; *************** function _pwm_10bit *****************
  6100 ;; Defined at:
  6101 ;;		line 78 in file "C:\Users\DELL\Desktop\vxl\mp\dulieubanphim.c"
  6102 ;; Parameters:    Size  Location     Type
  6103 ;;  data_pwm        2   14[BANK0 ] int 
  6104 ;; Auto vars:     Size  Location     Type
  6105 ;;		None
  6106 ;; Return value:  Size  Location     Type
  6107 ;;		None               void
  6108 ;; Registers used:
  6109 ;;		wreg, status,2, status,0, pclath, cstack
  6110 ;; Tracked objects:
  6111 ;;		On entry : 60/0
  6112 ;;		On exit  : 60/0
  6113 ;;		Unchanged: FFF9F/0
  6114 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6115 ;;      Params:         0       2       0       0       0
  6116 ;;      Locals:         0       0       0       0       0
  6117 ;;      Temps:          0       0       0       0       0
  6118 ;;      Totals:         0       2       0       0       0
  6119 ;;Total ram usage:        2 bytes
  6120 ;; Hardware stack levels used:    1
  6121 ;; Hardware stack levels required when called:    3
  6122 ;; This function calls:
  6123 ;;		___awdiv
  6124 ;; This function is called by:
  6125 ;;		_main
  6126 ;; This function uses a non-reentrant model
  6127 ;;
  6128  0127                     _pwm_10bit:	
  6129                           
  6130                           ;dulieubanphim.c: 79: CCPR1L = data_pwm/4;
  6131                           
  6132                           ; Regs used in _pwm_10bit: [wreg+status,2+status,0+pclath+cstack]
  6133  0127  3004               	movlw	4
  6134  0128  00A6               	movwf	?___awdiv
  6135  0129  01A7               	clrf	?___awdiv+1
  6136  012A  082F               	movf	pwm_10bit@data_pwm+1,w
  6137  012B  00A9               	movwf	?___awdiv+3
  6138  012C  082E               	movf	pwm_10bit@data_pwm,w
  6139  012D  00A8               	movwf	?___awdiv+2
  6140  012E  2364               	fcall	___awdiv
  6141  012F  0826               	movf	?___awdiv,w
  6142  0130  0095               	movwf	21	;volatile
  6143                           
  6144                           ;dulieubanphim.c: 80: DC1B1 = DC1B0 = 0;
  6145  0131  1217               	bcf	23,4
  6146  0132  1297               	bcf	23,5
  6147                           
  6148                           ;dulieubanphim.c: 81: if((data_pwm &2 ) ==1) DC1B1 = 1;
  6149  0133  082E               	movf	pwm_10bit@data_pwm,w
  6150  0134  3902               	andlw	2
  6151  0135  3A01               	xorlw	1
  6152  0136  1903               	btfsc	3,2
  6153  0137  1697               	bsf	23,5
  6154                           
  6155                           ;dulieubanphim.c: 82: if((data_pwm &1 ) ==1) DC1B0 = 1;
  6156  0138  182E               	btfsc	pwm_10bit@data_pwm,0
  6157  0139  1617               	bsf	23,4
  6158  013A  0008               	return
  6159  013B                     __end_of_pwm_10bit:	
  6160  013B                     __ptext654:	
  6161 ;; =============== function ___lltoft ends ============
  6162                           
  6163                           
  6164 ;; *************** function ___altoft *****************
  6165 ;; Defined at:
  6166 ;;		line 43 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\altoft.c"
  6167 ;; Parameters:    Size  Location     Type
  6168 ;;  c               4    8[BANK0 ] long 
  6169 ;; Auto vars:     Size  Location     Type
  6170 ;;  sign            1   13[BANK0 ] unsigned char 
  6171 ;;  exp             1   12[BANK0 ] unsigned char 
  6172 ;; Return value:  Size  Location     Type
  6173 ;;                  3    8[BANK0 ] float 
  6174 ;; Registers used:
  6175 ;;		wreg, status,2, status,0, pclath, cstack
  6176 ;; Tracked objects:
  6177 ;;		On entry : 60/0
  6178 ;;		On exit  : 60/0
  6179 ;;		Unchanged: FFF9F/0
  6180 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6181 ;;      Params:         0       4       0       0       0
  6182 ;;      Locals:         0       2       0       0       0
  6183 ;;      Temps:          0       0       0       0       0
  6184 ;;      Totals:         0       6       0       0       0
  6185 ;;Total ram usage:        6 bytes
  6186 ;; Hardware stack levels used:    1
  6187 ;; Hardware stack levels required when called:    3
  6188 ;; This function calls:
  6189 ;;		___ftpack
  6190 ;; This function is called by:
  6191 ;;		_main
  6192 ;; This function uses a non-reentrant model
  6193 ;;
  6194  013B                     ___altoft:	
  6195  013B  308E               	movlw	142
  6196                           
  6197                           ; Regs used in ___altoft: [wreg+status,2+status,0+pclath+cstack]
  6198  013C  01AD               	clrf	___altoft@sign
  6199  013D  00AC               	movwf	___altoft@exp
  6200  013E  1FAB               	btfss	___altoft@c+3,7
  6201  013F  294D               	goto	l7205
  6202  0140  09A8               	comf	___altoft@c,f
  6203  0141  09A9               	comf	___altoft@c+1,f
  6204  0142  09AA               	comf	___altoft@c+2,f
  6205  0143  09AB               	comf	___altoft@c+3,f
  6206  0144  0AA8               	incf	___altoft@c,f
  6207  0145  1903               	skipnz
  6208  0146  0AA9               	incf	___altoft@c+1,f
  6209  0147  1903               	skipnz
  6210  0148  0AAA               	incf	___altoft@c+2,f
  6211  0149  1903               	skipnz
  6212  014A  0AAB               	incf	___altoft@c+3,f
  6213  014B  01AD               	clrf	___altoft@sign
  6214  014C  0AAD               	incf	___altoft@sign,f
  6215  014D                     l7205:	
  6216  014D  30FF               	movlw	255
  6217  014E  052B               	andwf	___altoft@c+3,w
  6218  014F  1903               	btfsc	3,2
  6219  0150  2958               	goto	l7207
  6220  0151  1003               	clrc
  6221  0152  0CAB               	rrf	___altoft@c+3,f
  6222  0153  0CAA               	rrf	___altoft@c+2,f
  6223  0154  0CA9               	rrf	___altoft@c+1,f
  6224  0155  0CA8               	rrf	___altoft@c,f
  6225  0156  0AAC               	incf	___altoft@exp,f
  6226  0157  294D               	goto	l7205
  6227  0158                     l7207:	
  6228  0158  0828               	movf	___altoft@c,w
  6229  0159  00A0               	movwf	?___ftpack
  6230  015A  0829               	movf	___altoft@c+1,w
  6231  015B  00A1               	movwf	?___ftpack+1
  6232  015C  082A               	movf	___altoft@c+2,w
  6233  015D  00A2               	movwf	?___ftpack+2
  6234  015E  082C               	movf	___altoft@exp,w
  6235  015F  00A3               	movwf	?___ftpack+3
  6236  0160  082D               	movf	___altoft@sign,w
  6237  0161  00A4               	movwf	?___ftpack+4
  6238  0162  2463               	fcall	___ftpack
  6239  0163  0820               	movf	?___ftpack,w
  6240  0164  00A8               	movwf	?___altoft
  6241  0165  0821               	movf	?___ftpack+1,w
  6242  0166  00A9               	movwf	?___altoft+1
  6243  0167  0822               	movf	?___ftpack+2,w
  6244  0168  00AA               	movwf	?___altoft+2
  6245  0169  0008               	return
  6246  016A                     __end_of___altoft:	
  6247  016A                     __ptext656:	
  6248 ;; =============== function ___ftmul ends ============
  6249                           
  6250                           
  6251 ;; *************** function ___ftdiv *****************
  6252 ;; Defined at:
  6253 ;;		line 50 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\ftdiv.c"
  6254 ;; Parameters:    Size  Location     Type
  6255 ;;  f2              3   14[BANK0 ] float 
  6256 ;;  f1              3   17[BANK0 ] float 
  6257 ;; Auto vars:     Size  Location     Type
  6258 ;;  f3              3   24[BANK0 ] float 
  6259 ;;  sign            1   28[BANK0 ] unsigned char 
  6260 ;;  exp             1   27[BANK0 ] unsigned char 
  6261 ;;  cntr            1   23[BANK0 ] unsigned char 
  6262 ;; Return value:  Size  Location     Type
  6263 ;;                  3   14[BANK0 ] float 
  6264 ;; Registers used:
  6265 ;;		wreg, status,2, status,0, pclath, cstack
  6266 ;; Tracked objects:
  6267 ;;		On entry : 60/0
  6268 ;;		On exit  : 60/0
  6269 ;;		Unchanged: FFF9F/0
  6270 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6271 ;;      Params:         0       6       0       0       0
  6272 ;;      Locals:         0       6       0       0       0
  6273 ;;      Temps:          0       3       0       0       0
  6274 ;;      Totals:         0      15       0       0       0
  6275 ;;Total ram usage:       15 bytes
  6276 ;; Hardware stack levels used:    1
  6277 ;; Hardware stack levels required when called:    3
  6278 ;; This function calls:
  6279 ;;		___ftpack
  6280 ;; This function is called by:
  6281 ;;		_main
  6282 ;; This function uses a non-reentrant model
  6283 ;;
  6284  016A                     ___ftdiv:	
  6285                           
  6286                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  6287  016A  0831               	movf	___ftdiv@f1,w
  6288  016B  00B4               	movwf	??___ftdiv
  6289  016C  0832               	movf	___ftdiv@f1+1,w
  6290  016D  00B5               	movwf	??___ftdiv+1
  6291  016E  0833               	movf	___ftdiv@f1+2,w
  6292  016F  00B6               	movwf	??___ftdiv+2
  6293  0170  1003               	clrc
  6294  0171  0D35               	rlf	??___ftdiv+1,w
  6295  0172  0D36               	rlf	??___ftdiv+2,w
  6296  0173  00BB               	movwf	___ftdiv@exp
  6297  0174  08BB               	movf	___ftdiv@exp,f
  6298  0175  1D03               	skipz
  6299  0176  297B               	goto	l7101
  6300  0177  01AE               	clrf	?___ftdiv
  6301  0178  01AF               	clrf	?___ftdiv+1
  6302  0179  01B0               	clrf	?___ftdiv+2
  6303  017A  0008               	return
  6304  017B                     l7101:	
  6305  017B  082E               	movf	___ftdiv@f2,w
  6306  017C  00B4               	movwf	??___ftdiv
  6307  017D  082F               	movf	___ftdiv@f2+1,w
  6308  017E  00B5               	movwf	??___ftdiv+1
  6309  017F  0830               	movf	___ftdiv@f2+2,w
  6310  0180  00B6               	movwf	??___ftdiv+2
  6311  0181  1003               	clrc
  6312  0182  0D35               	rlf	??___ftdiv+1,w
  6313  0183  0D36               	rlf	??___ftdiv+2,w
  6314  0184  00BC               	movwf	___ftdiv@sign
  6315  0185  08BC               	movf	___ftdiv@sign,f
  6316  0186  1D03               	skipz
  6317  0187  298C               	goto	l3469
  6318  0188  01AE               	clrf	?___ftdiv
  6319  0189  01AF               	clrf	?___ftdiv+1
  6320  018A  01B0               	clrf	?___ftdiv+2
  6321  018B  0008               	return
  6322  018C                     l3469:	
  6323  018C  3089               	movlw	137
  6324  018D  01B8               	clrf	___ftdiv@f3
  6325  018E  01B9               	clrf	___ftdiv@f3+1
  6326  018F  01BA               	clrf	___ftdiv@f3+2
  6327  0190  073C               	addwf	___ftdiv@sign,w
  6328  0191  00B4               	movwf	??___ftdiv
  6329  0192  02BB               	subwf	___ftdiv@exp,f
  6330  0193  0833               	movf	___ftdiv@f1+2,w
  6331  0194  00BC               	movwf	___ftdiv@sign
  6332  0195  0830               	movf	___ftdiv@f2+2,w
  6333  0196  06BC               	xorwf	___ftdiv@sign,f
  6334  0197  3080               	movlw	128
  6335  0198  05BC               	andwf	___ftdiv@sign,f
  6336  0199  3018               	movlw	24
  6337  019A  17B2               	bsf	___ftdiv@f1+1,7
  6338  019B  01B3               	clrf	___ftdiv@f1+2
  6339  019C  17AF               	bsf	___ftdiv@f2+1,7
  6340  019D  01B0               	clrf	___ftdiv@f2+2
  6341  019E  00B7               	movwf	___ftdiv@cntr
  6342  019F                     l7125:	
  6343  019F  1003               	clrc
  6344  01A0  0DB8               	rlf	___ftdiv@f3,f
  6345  01A1  0DB9               	rlf	___ftdiv@f3+1,f
  6346  01A2  0DBA               	rlf	___ftdiv@f3+2,f
  6347  01A3  0830               	movf	___ftdiv@f2+2,w
  6348  01A4  0233               	subwf	___ftdiv@f1+2,w
  6349  01A5  1D03               	skipz
  6350  01A6  29AD               	goto	u3425
  6351  01A7  082F               	movf	___ftdiv@f2+1,w
  6352  01A8  0232               	subwf	___ftdiv@f1+1,w
  6353  01A9  1D03               	skipz
  6354  01AA  29AD               	goto	u3425
  6355  01AB  082E               	movf	___ftdiv@f2,w
  6356  01AC  0231               	subwf	___ftdiv@f1,w
  6357  01AD                     u3425:	
  6358  01AD  1C03               	skipc
  6359  01AE  29BB               	goto	L9
  6360  01AF  082E               	movf	___ftdiv@f2,w
  6361  01B0  02B1               	subwf	___ftdiv@f1,f
  6362  01B1  082F               	movf	___ftdiv@f2+1,w
  6363  01B2  1C03               	skipc
  6364  01B3  0F2F               	incfsz	___ftdiv@f2+1,w
  6365  01B4  02B2               	subwf	___ftdiv@f1+1,f
  6366  01B5  0830               	movf	___ftdiv@f2+2,w
  6367  01B6  1C03               	skipc
  6368  01B7  0A30               	incf	___ftdiv@f2+2,w
  6369  01B8  02B3               	subwf	___ftdiv@f1+2,f
  6370  01B9  1438               	bsf	___ftdiv@f3,0
  6371  01BA  1003               	clrc
  6372  01BB                     L9:	
  6373  01BB  0DB1               	rlf	___ftdiv@f1,f
  6374  01BC  0DB2               	rlf	___ftdiv@f1+1,f
  6375  01BD  0DB3               	rlf	___ftdiv@f1+2,f
  6376  01BE  0BB7               	decfsz	___ftdiv@cntr,f
  6377  01BF  299F               	goto	l7125
  6378  01C0  0838               	movf	___ftdiv@f3,w
  6379  01C1  00A0               	movwf	?___ftpack
  6380  01C2  0839               	movf	___ftdiv@f3+1,w
  6381  01C3  00A1               	movwf	?___ftpack+1
  6382  01C4  083A               	movf	___ftdiv@f3+2,w
  6383  01C5  00A2               	movwf	?___ftpack+2
  6384  01C6  083B               	movf	___ftdiv@exp,w
  6385  01C7  00A3               	movwf	?___ftpack+3
  6386  01C8  083C               	movf	___ftdiv@sign,w
  6387  01C9  00A4               	movwf	?___ftpack+4
  6388  01CA  2463               	fcall	___ftpack
  6389  01CB  0820               	movf	?___ftpack,w
  6390  01CC  00AE               	movwf	?___ftdiv
  6391  01CD  0821               	movf	?___ftpack+1,w
  6392  01CE  00AF               	movwf	?___ftdiv+1
  6393  01CF  0822               	movf	?___ftpack+2,w
  6394  01D0  00B0               	movwf	?___ftdiv+2
  6395  01D1  0008               	return
  6396  01D2                     __end_of___ftdiv:	
  6397  01D2                     __ptext649:	
  6398 ;; =============== function ___ftsub ends ============
  6399                           
  6400                           
  6401 ;; *************** function _scale *****************
  6402 ;; Defined at:
  6403 ;;		line 422 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\lib\doprnt.c"
  6404 ;; Parameters:    Size  Location     Type
  6405 ;;  scl             1    wreg     char 
  6406 ;; Auto vars:     Size  Location     Type
  6407 ;;  scl             1   54[BANK0 ] char 
  6408 ;; Return value:  Size  Location     Type
  6409 ;;                  3   44[BANK0 ] char 
  6410 ;; Registers used:
  6411 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6412 ;; Tracked objects:
  6413 ;;		On entry : 60/20
  6414 ;;		On exit  : 60/0
  6415 ;;		Unchanged: FFF9F/0
  6416 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6417 ;;      Params:         0       3       0       0       0
  6418 ;;      Locals:         0       4       0       0       0
  6419 ;;      Temps:          0       4       0       0       0
  6420 ;;      Totals:         0      11       0       0       0
  6421 ;;Total ram usage:       11 bytes
  6422 ;; Hardware stack levels used:    1
  6423 ;; Hardware stack levels required when called:    4
  6424 ;; This function calls:
  6425 ;;		___awmod
  6426 ;;		___awdiv
  6427 ;;		___ftmul
  6428 ;;		___bmul
  6429 ;; This function is called by:
  6430 ;;		__doprnt
  6431 ;; This function uses a non-reentrant model
  6432 ;;
  6433  01D2                     _scale:	
  6434                           
  6435                           ; Regs used in _scale: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6436                           ;scale@scl stored from wreg
  6437  01D2  1283               	bcf	3,5	;RP0=0, select bank0
  6438  01D3  00D6               	movwf	scale@scl
  6439  01D4  1FD6               	btfss	scale@scl,7
  6440  01D5  2A9E               	goto	l7315
  6441  01D6  09D6               	comf	scale@scl,f
  6442  01D7  0AD6               	incf	scale@scl,f
  6443  01D8  0856               	movf	scale@scl,w
  6444  01D9  3A80               	xorlw	128
  6445  01DA  3E12               	addlw	-238
  6446  01DB  1C03               	skipc
  6447  01DC  2A42               	goto	l7305
  6448  01DD  300A               	movlw	10
  6449  01DE  24C5  120A  118A   	fcall	PL17	;call to abstracted procedure
  6450  01E1  23A9  120A  118A   	fcall	___awmod
  6451  01E4  0821               	movf	?___awmod+1,w
  6452  01E5  00A9               	movwf	?___awdiv+3
  6453  01E6  0820               	movf	?___awmod,w
  6454  01E7  00A8               	movwf	?___awdiv+2
  6455  01E8  2364  120A  118A   	fcall	___awdiv
  6456  01EB  24EA               	fcall	PL29	;call to abstracted procedure
  6457  01EC  3E1C               	addlw	low ((__npowers_-__stringbase+27))
  6458  01ED  0084               	movwf	4
  6459  01EE  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  6460  01F3  00BD               	movwf	?___ftmul
  6461  01F4  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  6462  01F9  00BE               	movwf	?___ftmul+1
  6463  01FA  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  6464  01FF  24F2  120A  118A   	fcall	PL31	;call to abstracted procedure
  6465  0202  1BA8               	btfsc	?___awdiv+2,7
  6466  0203  03A9               	decf	?___awdiv+3,f
  6467  0204  2364  120A  118A   	fcall	___awdiv
  6468  0207  24B6               	fcall	PL14	;call to abstracted procedure
  6469  0208  3E37               	addlw	low ((__npowers_-__stringbase+54))
  6470  0209  0084               	movwf	4
  6471  020A  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  6472  020F  00C0               	movwf	?___ftmul+3
  6473  0210  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  6474  0215  00C1               	movwf	?___ftmul+4
  6475  0216  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  6476  021B  00C2               	movwf	?___ftmul+5
  6477  021C  23E6  120A  118A   	fcall	___ftmul
  6478  021F  24A1  120A  118A   	fcall	PL12	;call to abstracted procedure
  6479  0222  1BA2               	btfsc	?___awmod+2,7
  6480  0223  03A3               	decf	?___awmod+3,f
  6481  0224  23A9  120A  118A   	fcall	___awmod
  6482  0227  24AE               	fcall	PL13	;call to abstracted procedure
  6483  0228  3E01               	addlw	low (__npowers_-__stringbase)
  6484  0229  0084               	movwf	4
  6485  022A  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  6486  022F  00BD               	movwf	?___ftmul
  6487  0230  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  6488  0235  00BE               	movwf	?___ftmul+1
  6489  0236  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  6490  023B  24E2  120A  118A   	fcall	PL28	;call to abstracted procedure
  6491  023E  23E6  120A  118A   	fcall	___ftmul
  6492  0241  2CBE               	ljmp	PL15	;call to abstracted procedure
  6493  0242                     l7305:	
  6494  0242  0856               	movf	scale@scl,w
  6495  0243  3A80               	xorlw	128
  6496  0244  3E75               	addlw	-139
  6497  0245  1C03               	skipc
  6498  0246  2A87               	goto	l7311
  6499  0247  300A               	movlw	10
  6500  0248  00A0               	movwf	?___awmod
  6501  0249  01A1               	clrf	?___awmod+1
  6502  024A  0856               	movf	scale@scl,w
  6503  024B  00A2               	movwf	?___awmod+2
  6504  024C  01A3               	clrf	?___awmod+3
  6505  024D  1BA2               	btfsc	?___awmod+2,7
  6506  024E  03A3               	decf	?___awmod+3,f
  6507  024F  23A9  120A  118A   	fcall	___awmod
  6508  0252  24AE               	fcall	PL13	;call to abstracted procedure
  6509  0253  3E01               	addlw	low (__npowers_-__stringbase)
  6510  0254  0084               	movwf	4
  6511  0255  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  6512  025A  00BD               	movwf	?___ftmul
  6513  025B  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  6514  0260  00BE               	movwf	?___ftmul+1
  6515  0261  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  6516  0266  24DA  120A  118A   	fcall	PL27	;call to abstracted procedure
  6517  0269  1BA8               	btfsc	?___awdiv+2,7
  6518  026A  03A9               	decf	?___awdiv+3,f
  6519  026B  2364  120A  118A   	fcall	___awdiv
  6520  026E  24B6               	fcall	PL14	;call to abstracted procedure
  6521  026F  3E1C               	addlw	low ((__npowers_-__stringbase+27))
  6522  0270  0084               	movwf	4
  6523  0271  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  6524  0276  00C0               	movwf	?___ftmul+3
  6525  0277  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  6526  027C  00C1               	movwf	?___ftmul+4
  6527  027D  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  6528  0282  00C2               	movwf	?___ftmul+5
  6529  0283  23E6  120A  118A   	fcall	___ftmul
  6530  0286  2CBE               	ljmp	PL15	;call to abstracted procedure
  6531  0287                     l7311:	
  6532  0287  3003               	movlw	3
  6533  0288  00A9               	movwf	?___bmul
  6534  0289  0856               	movf	scale@scl,w
  6535  028A  2455               	fcall	___bmul
  6536  028B  3E01               	addlw	low (__npowers_-__stringbase)
  6537  028C  0084               	movwf	4
  6538  028D  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  6539  0292  00CC               	movwf	?_scale
  6540  0293  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  6541  0298  00CD               	movwf	?_scale+1
  6542  0299  160A  118A  2000   	fcall	stringdir
  6543  029C  00CE               	movwf	?_scale+2
  6544  029D  0008               	return
  6545  029E                     l7315:	
  6546  029E  0856               	movf	scale@scl,w
  6547  029F  3A80               	xorlw	128
  6548  02A0  3E12               	addlw	-238
  6549  02A1  1C03               	skipc
  6550  02A2  2B08               	goto	l7323
  6551  02A3  300A               	movlw	10
  6552  02A4  24C5  120A  118A   	fcall	PL17	;call to abstracted procedure
  6553  02A7  23A9  120A  118A   	fcall	___awmod
  6554  02AA  0821               	movf	?___awmod+1,w
  6555  02AB  00A9               	movwf	?___awdiv+3
  6556  02AC  0820               	movf	?___awmod,w
  6557  02AD  00A8               	movwf	?___awdiv+2
  6558  02AE  2364  120A  118A   	fcall	___awdiv
  6559  02B1  24EA               	fcall	PL29	;call to abstracted procedure
  6560  02B2  3E43               	addlw	low ((__powers_-__stringbase+27))
  6561  02B3  0084               	movwf	4
  6562  02B4  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  6563  02B9  00BD               	movwf	?___ftmul
  6564  02BA  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  6565  02BF  00BE               	movwf	?___ftmul+1
  6566  02C0  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  6567  02C5  24F2  120A  118A   	fcall	PL31	;call to abstracted procedure
  6568  02C8  1BA8               	btfsc	?___awdiv+2,7
  6569  02C9  03A9               	decf	?___awdiv+3,f
  6570  02CA  2364  120A  118A   	fcall	___awdiv
  6571  02CD  24B6               	fcall	PL14	;call to abstracted procedure
  6572  02CE  3E5E               	addlw	low ((__powers_-__stringbase+54))
  6573  02CF  0084               	movwf	4
  6574  02D0  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  6575  02D5  00C0               	movwf	?___ftmul+3
  6576  02D6  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  6577  02DB  00C1               	movwf	?___ftmul+4
  6578  02DC  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  6579  02E1  00C2               	movwf	?___ftmul+5
  6580  02E2  23E6  120A  118A   	fcall	___ftmul
  6581  02E5  24A1  120A  118A   	fcall	PL12	;call to abstracted procedure
  6582  02E8  1BA2               	btfsc	?___awmod+2,7
  6583  02E9  03A3               	decf	?___awmod+3,f
  6584  02EA  23A9  120A  118A   	fcall	___awmod
  6585  02ED  24AE               	fcall	PL13	;call to abstracted procedure
  6586  02EE  3E28               	addlw	low (__powers_-__stringbase)
  6587  02EF  0084               	movwf	4
  6588  02F0  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  6589  02F5  00BD               	movwf	?___ftmul
  6590  02F6  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  6591  02FB  00BE               	movwf	?___ftmul+1
  6592  02FC  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  6593  0301  24E2  120A  118A   	fcall	PL28	;call to abstracted procedure
  6594  0304  23E6  120A  118A   	fcall	___ftmul
  6595  0307  2CBE               	ljmp	PL15	;call to abstracted procedure
  6596  0308                     l7323:	
  6597  0308  0856               	movf	scale@scl,w
  6598  0309  3A80               	xorlw	128
  6599  030A  3E75               	addlw	-139
  6600  030B  1C03               	skipc
  6601  030C  2B4D               	goto	l7329
  6602  030D  300A               	movlw	10
  6603  030E  00A0               	movwf	?___awmod
  6604  030F  01A1               	clrf	?___awmod+1
  6605  0310  0856               	movf	scale@scl,w
  6606  0311  00A2               	movwf	?___awmod+2
  6607  0312  01A3               	clrf	?___awmod+3
  6608  0313  1BA2               	btfsc	?___awmod+2,7
  6609  0314  03A3               	decf	?___awmod+3,f
  6610  0315  23A9  120A  118A   	fcall	___awmod
  6611  0318  24AE               	fcall	PL13	;call to abstracted procedure
  6612  0319  3E28               	addlw	low (__powers_-__stringbase)
  6613  031A  0084               	movwf	4
  6614  031B  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  6615  0320  00BD               	movwf	?___ftmul
  6616  0321  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  6617  0326  00BE               	movwf	?___ftmul+1
  6618  0327  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  6619  032C  24DA  120A  118A   	fcall	PL27	;call to abstracted procedure
  6620  032F  1BA8               	btfsc	?___awdiv+2,7
  6621  0330  03A9               	decf	?___awdiv+3,f
  6622  0331  2364  120A  118A   	fcall	___awdiv
  6623  0334  24B6               	fcall	PL14	;call to abstracted procedure
  6624  0335  3E43               	addlw	low ((__powers_-__stringbase+27))
  6625  0336  0084               	movwf	4
  6626  0337  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  6627  033C  00C0               	movwf	?___ftmul+3
  6628  033D  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  6629  0342  00C1               	movwf	?___ftmul+4
  6630  0343  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  6631  0348  00C2               	movwf	?___ftmul+5
  6632  0349  23E6  120A  118A   	fcall	___ftmul
  6633  034C  2CBE               	ljmp	PL15	;call to abstracted procedure
  6634  034D                     l7329:	
  6635  034D  3003               	movlw	3
  6636  034E  00A9               	movwf	?___bmul
  6637  034F  0856               	movf	scale@scl,w
  6638  0350  2455               	fcall	___bmul
  6639  0351  3E28               	addlw	low (__powers_-__stringbase)
  6640  0352  0084               	movwf	4
  6641  0353  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  6642  0358  00CC               	movwf	?_scale
  6643  0359  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  6644  035E  00CD               	movwf	?_scale+1
  6645  035F  160A  118A  2000   	fcall	stringdir
  6646  0362  00CE               	movwf	?_scale+2
  6647  0363  0008               	return
  6648  0364                     __end_of_scale:	
  6649  0364                     __ptext667:	
  6650 ;; =============== function ___llmod ends ============
  6651                           
  6652                           
  6653 ;; *************** function ___awdiv *****************
  6654 ;; Defined at:
  6655 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\awdiv.c"
  6656 ;; Parameters:    Size  Location     Type
  6657 ;;  divisor         2    6[BANK0 ] int 
  6658 ;;  dividend        2    8[BANK0 ] int 
  6659 ;; Auto vars:     Size  Location     Type
  6660 ;;  quotient        2   12[BANK0 ] int 
  6661 ;;  sign            1   11[BANK0 ] unsigned char 
  6662 ;;  counter         1   10[BANK0 ] unsigned char 
  6663 ;; Return value:  Size  Location     Type
  6664 ;;                  2    6[BANK0 ] int 
  6665 ;; Registers used:
  6666 ;;		wreg, status,2, status,0
  6667 ;; Tracked objects:
  6668 ;;		On entry : 60/0
  6669 ;;		On exit  : 60/0
  6670 ;;		Unchanged: FFF9F/0
  6671 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6672 ;;      Params:         0       4       0       0       0
  6673 ;;      Locals:         0       4       0       0       0
  6674 ;;      Temps:          0       0       0       0       0
  6675 ;;      Totals:         0       8       0       0       0
  6676 ;;Total ram usage:        8 bytes
  6677 ;; Hardware stack levels used:    1
  6678 ;; Hardware stack levels required when called:    2
  6679 ;; This function calls:
  6680 ;;		Nothing
  6681 ;; This function is called by:
  6682 ;;		_pwm_10bit
  6683 ;;		_scale
  6684 ;;		__doprnt
  6685 ;; This function uses a non-reentrant model
  6686 ;;
  6687  0364                     ___awdiv:	
  6688                           
  6689                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  6690  0364  01AB               	clrf	___awdiv@sign
  6691  0365  1FA7               	btfss	___awdiv@divisor+1,7
  6692  0366  2B6E               	goto	l6803
  6693  0367  09A6               	comf	___awdiv@divisor,f
  6694  0368  09A7               	comf	___awdiv@divisor+1,f
  6695  0369  0AA6               	incf	___awdiv@divisor,f
  6696  036A  1903               	skipnz
  6697  036B  0AA7               	incf	___awdiv@divisor+1,f
  6698  036C  01AB               	clrf	___awdiv@sign
  6699  036D  0AAB               	incf	___awdiv@sign,f
  6700  036E                     l6803:	
  6701  036E  1FA9               	btfss	___awdiv@dividend+1,7
  6702  036F  2B77               	goto	l6809
  6703  0370  09A8               	comf	___awdiv@dividend,f
  6704  0371  09A9               	comf	___awdiv@dividend+1,f
  6705  0372  0AA8               	incf	___awdiv@dividend,f
  6706  0373  1903               	skipnz
  6707  0374  0AA9               	incf	___awdiv@dividend+1,f
  6708  0375  3001               	movlw	1
  6709  0376  06AB               	xorwf	___awdiv@sign,f
  6710  0377                     l6809:	
  6711  0377  01AC               	clrf	___awdiv@quotient
  6712  0378  01AD               	clrf	___awdiv@quotient+1
  6713  0379  0827               	movf	___awdiv@divisor+1,w
  6714  037A  0426               	iorwf	___awdiv@divisor,w
  6715  037B  1903               	skipnz
  6716  037C  2B9C               	goto	l6831
  6717  037D  01AA               	clrf	___awdiv@counter
  6718  037E                     L18:	
  6719  037E  0AAA               	incf	___awdiv@counter,f
  6720  037F  1BA7               	btfsc	___awdiv@divisor+1,7
  6721  0380  2B85               	goto	l6819
  6722  0381  1003               	clrc
  6723  0382  0DA6               	rlf	___awdiv@divisor,f
  6724  0383  0DA7               	rlf	___awdiv@divisor+1,f
  6725  0384  2B7E               	goto	L18
  6726  0385                     l6819:	
  6727  0385  1003               	clrc
  6728  0386  0DAC               	rlf	___awdiv@quotient,f
  6729  0387  0DAD               	rlf	___awdiv@quotient+1,f
  6730  0388  0827               	movf	___awdiv@divisor+1,w
  6731  0389  0229               	subwf	___awdiv@dividend+1,w
  6732  038A  1D03               	skipz
  6733  038B  2B8E               	goto	u2785
  6734  038C  0826               	movf	___awdiv@divisor,w
  6735  038D  0228               	subwf	___awdiv@dividend,w
  6736  038E                     u2785:	
  6737  038E  1C03               	skipc
  6738  038F  2B98               	goto	L19
  6739  0390  0826               	movf	___awdiv@divisor,w
  6740  0391  02A8               	subwf	___awdiv@dividend,f
  6741  0392  0827               	movf	___awdiv@divisor+1,w
  6742  0393  1C03               	skipc
  6743  0394  03A9               	decf	___awdiv@dividend+1,f
  6744  0395  02A9               	subwf	___awdiv@dividend+1,f
  6745  0396  142C               	bsf	___awdiv@quotient,0
  6746  0397  1003               	clrc
  6747  0398                     L19:	
  6748  0398  0CA7               	rrf	___awdiv@divisor+1,f
  6749  0399  0CA6               	rrf	___awdiv@divisor,f
  6750  039A  0BAA               	decfsz	___awdiv@counter,f
  6751  039B  2B85               	goto	l6819
  6752  039C                     l6831:	
  6753  039C  082B               	movf	___awdiv@sign,w
  6754  039D  1903               	btfsc	3,2
  6755  039E  2BA4               	goto	l6835
  6756  039F  09AC               	comf	___awdiv@quotient,f
  6757  03A0  09AD               	comf	___awdiv@quotient+1,f
  6758  03A1  0AAC               	incf	___awdiv@quotient,f
  6759  03A2  1903               	skipnz
  6760  03A3  0AAD               	incf	___awdiv@quotient+1,f
  6761  03A4                     l6835:	
  6762  03A4  082D               	movf	___awdiv@quotient+1,w
  6763  03A5  00A7               	movwf	?___awdiv+1
  6764  03A6  082C               	movf	___awdiv@quotient,w
  6765  03A7  00A6               	movwf	?___awdiv
  6766  03A8  0008               	return
  6767  03A9                     __end_of___awdiv:	
  6768  03A9                     __ptext662:	
  6769 ;; =============== function _lcd_put_byte ends ============
  6770                           
  6771                           
  6772 ;; *************** function ___awmod *****************
  6773 ;; Defined at:
  6774 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\awmod.c"
  6775 ;; Parameters:    Size  Location     Type
  6776 ;;  divisor         2    0[BANK0 ] int 
  6777 ;;  dividend        2    2[BANK0 ] int 
  6778 ;; Auto vars:     Size  Location     Type
  6779 ;;  sign            1    5[BANK0 ] unsigned char 
  6780 ;;  counter         1    4[BANK0 ] unsigned char 
  6781 ;; Return value:  Size  Location     Type
  6782 ;;                  2    0[BANK0 ] int 
  6783 ;; Registers used:
  6784 ;;		wreg, status,2, status,0
  6785 ;; Tracked objects:
  6786 ;;		On entry : 60/0
  6787 ;;		On exit  : 60/0
  6788 ;;		Unchanged: FFF9F/0
  6789 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6790 ;;      Params:         0       4       0       0       0
  6791 ;;      Locals:         0       2       0       0       0
  6792 ;;      Temps:          0       0       0       0       0
  6793 ;;      Totals:         0       6       0       0       0
  6794 ;;Total ram usage:        6 bytes
  6795 ;; Hardware stack levels used:    1
  6796 ;; Hardware stack levels required when called:    2
  6797 ;; This function calls:
  6798 ;;		Nothing
  6799 ;; This function is called by:
  6800 ;;		_scale
  6801 ;; This function uses a non-reentrant model
  6802 ;;
  6803  03A9                     ___awmod:	
  6804                           
  6805                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  6806  03A9  01A5               	clrf	___awmod@sign
  6807  03AA  1FA3               	btfss	___awmod@dividend+1,7
  6808  03AB  2BB3               	goto	l6921
  6809  03AC  09A2               	comf	___awmod@dividend,f
  6810  03AD  09A3               	comf	___awmod@dividend+1,f
  6811  03AE  0AA2               	incf	___awmod@dividend,f
  6812  03AF  1903               	skipnz
  6813  03B0  0AA3               	incf	___awmod@dividend+1,f
  6814  03B1  01A5               	clrf	___awmod@sign
  6815  03B2  0AA5               	incf	___awmod@sign,f
  6816  03B3                     l6921:	
  6817  03B3  1FA1               	btfss	___awmod@divisor+1,7
  6818  03B4  2BBA               	goto	l6925
  6819  03B5  09A0               	comf	___awmod@divisor,f
  6820  03B6  09A1               	comf	___awmod@divisor+1,f
  6821  03B7  0AA0               	incf	___awmod@divisor,f
  6822  03B8  1903               	skipnz
  6823  03B9  0AA1               	incf	___awmod@divisor+1,f
  6824  03BA                     l6925:	
  6825  03BA  0821               	movf	___awmod@divisor+1,w
  6826  03BB  0420               	iorwf	___awmod@divisor,w
  6827  03BC  1903               	skipnz
  6828  03BD  2BD9               	goto	l6941
  6829  03BE  01A4               	clrf	___awmod@counter
  6830  03BF                     L11:	
  6831  03BF  0AA4               	incf	___awmod@counter,f
  6832  03C0  1BA1               	btfsc	___awmod@divisor+1,7
  6833  03C1  2BC6               	goto	l6933
  6834  03C2  1003               	clrc
  6835  03C3  0DA0               	rlf	___awmod@divisor,f
  6836  03C4  0DA1               	rlf	___awmod@divisor+1,f
  6837  03C5  2BBF               	goto	L11
  6838  03C6                     l6933:	
  6839  03C6  0821               	movf	___awmod@divisor+1,w
  6840  03C7  0223               	subwf	___awmod@dividend+1,w
  6841  03C8  1D03               	skipz
  6842  03C9  2BCC               	goto	u2975
  6843  03CA  0820               	movf	___awmod@divisor,w
  6844  03CB  0222               	subwf	___awmod@dividend,w
  6845  03CC                     u2975:	
  6846  03CC  1C03               	skipc
  6847  03CD  2BD5               	goto	L12
  6848  03CE  0820               	movf	___awmod@divisor,w
  6849  03CF  02A2               	subwf	___awmod@dividend,f
  6850  03D0  0821               	movf	___awmod@divisor+1,w
  6851  03D1  1C03               	skipc
  6852  03D2  03A3               	decf	___awmod@dividend+1,f
  6853  03D3  02A3               	subwf	___awmod@dividend+1,f
  6854  03D4  1003               	clrc
  6855  03D5                     L12:	
  6856  03D5  0CA1               	rrf	___awmod@divisor+1,f
  6857  03D6  0CA0               	rrf	___awmod@divisor,f
  6858  03D7  0BA4               	decfsz	___awmod@counter,f
  6859  03D8  2BC6               	goto	l6933
  6860  03D9                     l6941:	
  6861  03D9  0825               	movf	___awmod@sign,w
  6862  03DA  1903               	btfsc	3,2
  6863  03DB  2BE1               	goto	l6945
  6864  03DC  09A2               	comf	___awmod@dividend,f
  6865  03DD  09A3               	comf	___awmod@dividend+1,f
  6866  03DE  0AA2               	incf	___awmod@dividend,f
  6867  03DF  1903               	skipnz
  6868  03E0  0AA3               	incf	___awmod@dividend+1,f
  6869  03E1                     l6945:	
  6870  03E1  0823               	movf	___awmod@dividend+1,w
  6871  03E2  00A1               	movwf	?___awmod+1
  6872  03E3  0822               	movf	___awmod@dividend,w
  6873  03E4  00A0               	movwf	?___awmod
  6874  03E5  0008               	return
  6875  03E6                     __end_of___awmod:	
  6876  03E6                     __ptext655:	
  6877 ;; =============== function ___altoft ends ============
  6878                           
  6879                           
  6880 ;; *************** function ___ftmul *****************
  6881 ;; Defined at:
  6882 ;;		line 52 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\ftmul.c"
  6883 ;; Parameters:    Size  Location     Type
  6884 ;;  f1              3   29[BANK0 ] float 
  6885 ;;  f2              3   32[BANK0 ] float 
  6886 ;; Auto vars:     Size  Location     Type
  6887 ;;  f3_as_produc    3   39[BANK0 ] unsigned um
  6888 ;;  sign            1   43[BANK0 ] unsigned char 
  6889 ;;  cntr            1   42[BANK0 ] unsigned char 
  6890 ;;  exp             1   38[BANK0 ] unsigned char 
  6891 ;; Return value:  Size  Location     Type
  6892 ;;                  3   29[BANK0 ] float 
  6893 ;; Registers used:
  6894 ;;		wreg, status,2, status,0, pclath, cstack
  6895 ;; Tracked objects:
  6896 ;;		On entry : 60/0
  6897 ;;		On exit  : 60/0
  6898 ;;		Unchanged: FFF9F/0
  6899 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6900 ;;      Params:         0       6       0       0       0
  6901 ;;      Locals:         0       6       0       0       0
  6902 ;;      Temps:          0       3       0       0       0
  6903 ;;      Totals:         0      15       0       0       0
  6904 ;;Total ram usage:       15 bytes
  6905 ;; Hardware stack levels used:    1
  6906 ;; Hardware stack levels required when called:    3
  6907 ;; This function calls:
  6908 ;;		___ftpack
  6909 ;; This function is called by:
  6910 ;;		_main
  6911 ;;		_fround
  6912 ;;		_scale
  6913 ;;		__doprnt
  6914 ;; This function uses a non-reentrant model
  6915 ;;
  6916  03E6                     ___ftmul:	
  6917                           
  6918                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  6919  03E6  083D               	movf	___ftmul@f1,w
  6920  03E7  00C3               	movwf	??___ftmul
  6921  03E8  083E               	movf	___ftmul@f1+1,w
  6922  03E9  00C4               	movwf	??___ftmul+1
  6923  03EA  083F               	movf	___ftmul@f1+2,w
  6924  03EB  00C5               	movwf	??___ftmul+2
  6925  03EC  1003               	clrc
  6926  03ED  0D44               	rlf	??___ftmul+1,w
  6927  03EE  0D45               	rlf	??___ftmul+2,w
  6928  03EF  00C6               	movwf	___ftmul@exp
  6929  03F0  08C6               	movf	___ftmul@exp,f
  6930  03F1  1D03               	skipz
  6931  03F2  2BF7               	goto	l7145
  6932  03F3  01BD               	clrf	?___ftmul
  6933  03F4  01BE               	clrf	?___ftmul+1
  6934  03F5  01BF               	clrf	?___ftmul+2
  6935  03F6  0008               	return
  6936  03F7                     l7145:	
  6937  03F7  0840               	movf	___ftmul@f2,w
  6938  03F8  00C3               	movwf	??___ftmul
  6939  03F9  0841               	movf	___ftmul@f2+1,w
  6940  03FA  00C4               	movwf	??___ftmul+1
  6941  03FB  0842               	movf	___ftmul@f2+2,w
  6942  03FC  00C5               	movwf	??___ftmul+2
  6943  03FD  1003               	clrc
  6944  03FE  0D44               	rlf	??___ftmul+1,w
  6945  03FF  0D45               	rlf	??___ftmul+2,w
  6946  0400  00CB               	movwf	___ftmul@sign
  6947  0401  08CB               	movf	___ftmul@sign,f
  6948  0402  1D03               	skipz
  6949  0403  2C08               	goto	l7151
  6950  0404  01BD               	clrf	?___ftmul
  6951  0405  01BE               	clrf	?___ftmul+1
  6952  0406  01BF               	clrf	?___ftmul+2
  6953  0407  0008               	return
  6954  0408                     l7151:	
  6955  0408  084B               	movf	___ftmul@sign,w
  6956  0409  3E7B               	addlw	123
  6957  040A  07C6               	addwf	___ftmul@exp,f
  6958  040B  083F               	movf	___ftmul@f1+2,w
  6959  040C  00CB               	movwf	___ftmul@sign
  6960  040D  0842               	movf	___ftmul@f2+2,w
  6961  040E  06CB               	xorwf	___ftmul@sign,f
  6962  040F  3080               	movlw	128
  6963  0410  05CB               	andwf	___ftmul@sign,f
  6964  0411  3007               	movlw	7
  6965  0412  17BE               	bsf	___ftmul@f1+1,7
  6966  0413  17C1               	bsf	___ftmul@f2+1,7
  6967  0414  01C2               	clrf	___ftmul@f2+2
  6968  0415  01C7               	clrf	___ftmul@f3_as_product
  6969  0416  01C8               	clrf	___ftmul@f3_as_product+1
  6970  0417  01C9               	clrf	___ftmul@f3_as_product+2
  6971  0418  00CA               	movwf	___ftmul@cntr
  6972  0419                     l7169:	
  6973  0419  1C3D               	btfss	___ftmul@f1,0
  6974  041A  2C23               	goto	l7173
  6975  041B  0840               	movf	___ftmul@f2,w
  6976  041C  24D0  120A  118A   	fcall	PL22	;call to abstracted procedure
  6977  041F  1803               	skipnc
  6978  0420  0A42               	incf	___ftmul@f2+2,w
  6979  0421  1D03               	btfss	3,2
  6980  0422  07C9               	addwf	___ftmul@f3_as_product+2,f
  6981  0423                     l7173:	
  6982  0423  1003               	clrc
  6983  0424  0CBF               	rrf	___ftmul@f1+2,f
  6984  0425  0CBE               	rrf	___ftmul@f1+1,f
  6985  0426  0CBD               	rrf	___ftmul@f1,f
  6986  0427  1003               	clrc
  6987  0428  0DC0               	rlf	___ftmul@f2,f
  6988  0429  0DC1               	rlf	___ftmul@f2+1,f
  6989  042A  0DC2               	rlf	___ftmul@f2+2,f
  6990  042B  0BCA               	decfsz	___ftmul@cntr,f
  6991  042C  2C19               	goto	l7169
  6992  042D  3009               	movlw	9
  6993  042E  00CA               	movwf	___ftmul@cntr
  6994  042F                     l7181:	
  6995  042F  1C3D               	btfss	___ftmul@f1,0
  6996  0430  2C39               	goto	l7185
  6997  0431  0840               	movf	___ftmul@f2,w
  6998  0432  24D0  120A  118A   	fcall	PL22	;call to abstracted procedure
  6999  0435  1803               	skipnc
  7000  0436  0A42               	incf	___ftmul@f2+2,w
  7001  0437  1D03               	btfss	3,2
  7002  0438  07C9               	addwf	___ftmul@f3_as_product+2,f
  7003  0439                     l7185:	
  7004  0439  1003               	clrc
  7005  043A  0CBF               	rrf	___ftmul@f1+2,f
  7006  043B  0CBE               	rrf	___ftmul@f1+1,f
  7007  043C  0CBD               	rrf	___ftmul@f1,f
  7008  043D  1003               	clrc
  7009  043E  0CC9               	rrf	___ftmul@f3_as_product+2,f
  7010  043F  0CC8               	rrf	___ftmul@f3_as_product+1,f
  7011  0440  0CC7               	rrf	___ftmul@f3_as_product,f
  7012  0441  0BCA               	decfsz	___ftmul@cntr,f
  7013  0442  2C2F               	goto	l7181
  7014  0443  0847               	movf	___ftmul@f3_as_product,w
  7015  0444  00A0               	movwf	?___ftpack
  7016  0445  0848               	movf	___ftmul@f3_as_product+1,w
  7017  0446  00A1               	movwf	?___ftpack+1
  7018  0447  0849               	movf	___ftmul@f3_as_product+2,w
  7019  0448  00A2               	movwf	?___ftpack+2
  7020  0449  0846               	movf	___ftmul@exp,w
  7021  044A  00A3               	movwf	?___ftpack+3
  7022  044B  084B               	movf	___ftmul@sign,w
  7023  044C  00A4               	movwf	?___ftpack+4
  7024  044D  2463               	fcall	___ftpack
  7025  044E  0820               	movf	?___ftpack,w
  7026  044F  00BD               	movwf	?___ftmul
  7027  0450  0821               	movf	?___ftpack+1,w
  7028  0451  00BE               	movwf	?___ftmul+1
  7029  0452  0822               	movf	?___ftpack+2,w
  7030  0453  00BF               	movwf	?___ftmul+2
  7031  0454  0008               	return
  7032  0455                     __end_of___ftmul:	
  7033  0455                     __ptext673:	
  7034 ;; =============== function ___wmul ends ============
  7035                           
  7036                           
  7037 ;; *************** function ___bmul *****************
  7038 ;; Defined at:
  7039 ;;		line 3 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\bmul.c"
  7040 ;; Parameters:    Size  Location     Type
  7041 ;;  multiplier      1    wreg     unsigned char 
  7042 ;;  multiplicand    1    9[BANK0 ] unsigned char 
  7043 ;; Auto vars:     Size  Location     Type
  7044 ;;  multiplier      1   11[BANK0 ] unsigned char 
  7045 ;;  product         1   10[BANK0 ] unsigned char 
  7046 ;; Return value:  Size  Location     Type
  7047 ;;                  1    wreg      unsigned char 
  7048 ;; Registers used:
  7049 ;;		wreg, status,2, status,0
  7050 ;; Tracked objects:
  7051 ;;		On entry : 60/0
  7052 ;;		On exit  : 60/0
  7053 ;;		Unchanged: FFF9F/0
  7054 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7055 ;;      Params:         0       1       0       0       0
  7056 ;;      Locals:         0       2       0       0       0
  7057 ;;      Temps:          0       0       0       0       0
  7058 ;;      Totals:         0       3       0       0       0
  7059 ;;Total ram usage:        3 bytes
  7060 ;; Hardware stack levels used:    1
  7061 ;; Hardware stack levels required when called:    2
  7062 ;; This function calls:
  7063 ;;		Nothing
  7064 ;; This function is called by:
  7065 ;;		_fround
  7066 ;;		_scale
  7067 ;; This function uses a non-reentrant model
  7068 ;;
  7069  0455                     ___bmul:	
  7070                           
  7071                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  7072                           ;___bmul@multiplier stored from wreg
  7073  0455  00AB               	movwf	___bmul@multiplier
  7074  0456  01AA               	clrf	___bmul@product
  7075  0457                     l6657:	
  7076  0457  0829               	movf	___bmul@multiplicand,w
  7077  0458  182B               	btfsc	___bmul@multiplier,0
  7078  0459  07AA               	addwf	___bmul@product,f
  7079  045A  1003               	clrc
  7080  045B  0DA9               	rlf	___bmul@multiplicand,f
  7081  045C  1003               	clrc
  7082  045D  0CAB               	rrf	___bmul@multiplier,f
  7083  045E  08AB               	movf	___bmul@multiplier,f
  7084  045F  1D03               	skipz
  7085  0460  2C57               	goto	l6657
  7086  0461  082A               	movf	___bmul@product,w
  7087  0462  0008               	return
  7088  0463                     __end_of___bmul:	
  7089  0463                     __ptext669:	
  7090 ;; =============== function ___fttol ends ============
  7091                           
  7092                           
  7093 ;; *************** function ___ftpack *****************
  7094 ;; Defined at:
  7095 ;;		line 63 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\float.c"
  7096 ;; Parameters:    Size  Location     Type
  7097 ;;  arg             3    0[BANK0 ] unsigned um
  7098 ;;  exp             1    3[BANK0 ] unsigned char 
  7099 ;;  sign            1    4[BANK0 ] unsigned char 
  7100 ;; Auto vars:     Size  Location     Type
  7101 ;;		None
  7102 ;; Return value:  Size  Location     Type
  7103 ;;                  3    0[BANK0 ] float 
  7104 ;; Registers used:
  7105 ;;		wreg, status,2, status,0
  7106 ;; Tracked objects:
  7107 ;;		On entry : 60/0
  7108 ;;		On exit  : 60/0
  7109 ;;		Unchanged: FFF9F/0
  7110 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7111 ;;      Params:         0       5       0       0       0
  7112 ;;      Locals:         0       0       0       0       0
  7113 ;;      Temps:          0       3       0       0       0
  7114 ;;      Totals:         0       8       0       0       0
  7115 ;;Total ram usage:        8 bytes
  7116 ;; Hardware stack levels used:    1
  7117 ;; Hardware stack levels required when called:    2
  7118 ;; This function calls:
  7119 ;;		Nothing
  7120 ;; This function is called by:
  7121 ;;		___ftadd
  7122 ;;		___ftdiv
  7123 ;;		___ftmul
  7124 ;;		___altoft
  7125 ;;		___lltoft
  7126 ;; This function uses a non-reentrant model
  7127 ;;
  7128  0463                     ___ftpack:	
  7129                           
  7130                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  7131  0463  0823               	movf	___ftpack@exp,w
  7132  0464  1903               	btfsc	3,2
  7133  0465  2C6B               	goto	l6733
  7134  0466  0822               	movf	___ftpack@arg+2,w
  7135  0467  0421               	iorwf	___ftpack@arg+1,w
  7136  0468  0420               	iorwf	___ftpack@arg,w
  7137  0469  1D03               	skipz
  7138  046A  2C74               	goto	l6739
  7139  046B                     l6733:	
  7140  046B  01A0               	clrf	?___ftpack
  7141  046C  01A1               	clrf	?___ftpack+1
  7142  046D  01A2               	clrf	?___ftpack+2
  7143  046E  0008               	return
  7144  046F                     l6737:	
  7145  046F  0AA3               	incf	___ftpack@exp,f
  7146  0470  1003               	clrc
  7147  0471  0CA2               	rrf	___ftpack@arg+2,f
  7148  0472  0CA1               	rrf	___ftpack@arg+1,f
  7149  0473  0CA0               	rrf	___ftpack@arg,f
  7150  0474                     l6739:	
  7151  0474  30FE               	movlw	254
  7152  0475  0522               	andwf	___ftpack@arg+2,w
  7153  0476  1903               	btfsc	3,2
  7154  0477  2C83               	goto	l6743
  7155  0478  2C6F               	goto	l6737
  7156  0479                     l6741:	
  7157  0479  0AA3               	incf	___ftpack@exp,f
  7158  047A  0AA0               	incf	___ftpack@arg,f
  7159  047B  1903               	skipnz
  7160  047C  0AA1               	incf	___ftpack@arg+1,f
  7161  047D  1903               	skipnz
  7162  047E  0AA2               	incf	___ftpack@arg+2,f
  7163  047F  1003               	clrc
  7164  0480  0CA2               	rrf	___ftpack@arg+2,f
  7165  0481  0CA1               	rrf	___ftpack@arg+1,f
  7166  0482  0CA0               	rrf	___ftpack@arg,f
  7167  0483                     l6743:	
  7168  0483  30FF               	movlw	255
  7169  0484  0522               	andwf	___ftpack@arg+2,w
  7170  0485  1903               	btfsc	3,2
  7171  0486  2C8D               	goto	l6747
  7172  0487  2C79               	goto	l6741
  7173  0488                     l6745:	
  7174  0488  03A3               	decf	___ftpack@exp,f
  7175  0489  1003               	clrc
  7176  048A  0DA0               	rlf	___ftpack@arg,f
  7177  048B  0DA1               	rlf	___ftpack@arg+1,f
  7178  048C  0DA2               	rlf	___ftpack@arg+2,f
  7179  048D                     l6747:	
  7180  048D  1FA1               	btfss	___ftpack@arg+1,7
  7181  048E  2C88               	goto	l6745
  7182  048F  1C23               	btfss	___ftpack@exp,0
  7183  0490  13A1               	bcf	___ftpack@arg+1,7
  7184  0491  1003               	clrc
  7185  0492  0CA3               	rrf	___ftpack@exp,f
  7186  0493  0823               	movf	___ftpack@exp,w
  7187  0494  00A7               	movwf	??___ftpack+2
  7188  0495  01A6               	clrf	??___ftpack+1
  7189  0496  01A5               	clrf	??___ftpack
  7190  0497  0825               	movf	??___ftpack,w
  7191  0498  04A0               	iorwf	___ftpack@arg,f
  7192  0499  0826               	movf	??___ftpack+1,w
  7193  049A  04A1               	iorwf	___ftpack@arg+1,f
  7194  049B  0827               	movf	??___ftpack+2,w
  7195  049C  04A2               	iorwf	___ftpack@arg+2,f
  7196  049D  0824               	movf	___ftpack@sign,w
  7197  049E  1D03               	skipz
  7198  049F  17A2               	bsf	___ftpack@arg+2,7
  7199  04A0  0008               	return
  7200  04A1                     __end_of___ftpack:	
  7201  04A1                     PL12:	
  7202  04A1  083D               	movf	?___ftmul,w
  7203  04A2  00D3               	movwf	_scale$4211
  7204  04A3  083E               	movf	?___ftmul+1,w
  7205  04A4  00D4               	movwf	_scale$4211+1
  7206  04A5  083F               	movf	?___ftmul+2,w
  7207  04A6  00D5               	movwf	_scale$4211+2
  7208  04A7  300A               	movlw	10
  7209  04A8  00A0               	movwf	?___awmod
  7210  04A9  01A1               	clrf	?___awmod+1
  7211  04AA  0856               	movf	scale@scl,w
  7212  04AB  00A2               	movwf	?___awmod+2
  7213  04AC  01A3               	clrf	?___awmod+3
  7214  04AD  0008               	return
  7215  04AE                     PL13:	
  7216  04AE  0820               	movf	?___awmod,w
  7217  04AF  00CF               	movwf	??_scale
  7218  04B0  0821               	movf	?___awmod+1,w
  7219  04B1  00D0               	movwf	??_scale+1
  7220  04B2  084F               	movf	??_scale,w
  7221  04B3  074F               	addwf	??_scale,w
  7222  04B4  074F               	addwf	??_scale,w
  7223  04B5  0008               	return
  7224  04B6                     PL14:	
  7225  04B6  0826               	movf	?___awdiv,w
  7226  04B7  00D1               	movwf	??_scale+2
  7227  04B8  0827               	movf	?___awdiv+1,w
  7228  04B9  00D2               	movwf	??_scale+3
  7229  04BA  0851               	movf	??_scale+2,w
  7230  04BB  0751               	addwf	??_scale+2,w
  7231  04BC  0751               	addwf	??_scale+2,w
  7232  04BD  0008               	return
  7233  04BE                     PL15:	
  7234  04BE  083D               	movf	?___ftmul,w
  7235  04BF  00CC               	movwf	?_scale
  7236  04C0  083E               	movf	?___ftmul+1,w
  7237  04C1  00CD               	movwf	?_scale+1
  7238  04C2  083F               	movf	?___ftmul+2,w
  7239  04C3  00CE               	movwf	?_scale+2
  7240  04C4  0008               	return
  7241  04C5                     PL17:	
  7242  04C5  00A6               	movwf	?___awdiv
  7243  04C6  01A7               	clrf	?___awdiv+1
  7244  04C7  0856               	movf	scale@scl,w
  7245  04C8  00A2               	movwf	?___awmod+2
  7246  04C9  01A3               	clrf	?___awmod+3
  7247  04CA  1BA2               	btfsc	?___awmod+2,7
  7248  04CB  03A3               	decf	?___awmod+3,f
  7249  04CC  3064               	movlw	100
  7250  04CD  00A0               	movwf	?___awmod
  7251  04CE  01A1               	clrf	?___awmod+1
  7252  04CF  0008               	return
  7253  04D0                     PL22:	
  7254  04D0  07C7               	addwf	___ftmul@f3_as_product,f
  7255  04D1  0841               	movf	___ftmul@f2+1,w
  7256  04D2  1103               	clrz
  7257  04D3  1803               	skipnc
  7258  04D4  0A41               	incf	___ftmul@f2+1,w
  7259  04D5  1D03               	btfss	3,2
  7260  04D6  07C8               	addwf	___ftmul@f3_as_product+1,f
  7261  04D7  0842               	movf	___ftmul@f2+2,w
  7262  04D8  1103               	clrz
  7263  04D9  0008               	return
  7264  04DA                     PL27:	
  7265  04DA  00BF               	movwf	?___ftmul+2
  7266  04DB  300A               	movlw	10
  7267  04DC  00A6               	movwf	?___awdiv
  7268  04DD  01A7               	clrf	?___awdiv+1
  7269  04DE  0856               	movf	scale@scl,w
  7270  04DF  00A8               	movwf	?___awdiv+2
  7271  04E0  01A9               	clrf	?___awdiv+3
  7272  04E1  0008               	return
  7273  04E2                     PL28:	
  7274  04E2  00BF               	movwf	?___ftmul+2
  7275  04E3  0853               	movf	_scale$4211,w
  7276  04E4  00C0               	movwf	?___ftmul+3
  7277  04E5  0854               	movf	_scale$4211+1,w
  7278  04E6  00C1               	movwf	?___ftmul+4
  7279  04E7  0855               	movf	_scale$4211+2,w
  7280  04E8  00C2               	movwf	?___ftmul+5
  7281  04E9  0008               	return
  7282  04EA                     PL29:	
  7283  04EA  0826               	movf	?___awdiv,w
  7284  04EB  00CF               	movwf	??_scale
  7285  04EC  0827               	movf	?___awdiv+1,w
  7286  04ED  00D0               	movwf	??_scale+1
  7287  04EE  084F               	movf	??_scale,w
  7288  04EF  074F               	addwf	??_scale,w
  7289  04F0  074F               	addwf	??_scale,w
  7290  04F1  0008               	return
  7291  04F2                     PL31:	
  7292  04F2  00BF               	movwf	?___ftmul+2
  7293  04F3  3064               	movlw	100
  7294  04F4  00A6               	movwf	?___awdiv
  7295  04F5  01A7               	clrf	?___awdiv+1
  7296  04F6  0856               	movf	scale@scl,w
  7297  04F7  00A8               	movwf	?___awdiv+2
  7298  04F8  01A9               	clrf	?___awdiv+3
  7299  04F9  0008               	return
  7300                           
  7301                           	psect	text658
  7302  13F5                     __ptext658:	
  7303 ;; =============== function ___ftadd ends ============
  7304                           
  7305                           
  7306 ;; *************** function _send_string *****************
  7307 ;; Defined at:
  7308 ;;		line 90 in file "C:\Users\DELL\Desktop\vxl\mp\dulieubanphim.c"
  7309 ;; Parameters:    Size  Location     Type
  7310 ;;  s               1    wreg     PTR const unsigned char 
  7311 ;;		 -> STR_3(2), STR_1(15), 
  7312 ;; Auto vars:     Size  Location     Type
  7313 ;;  s               1    1[BANK0 ] PTR const unsigned char 
  7314 ;;		 -> STR_3(2), STR_1(15), 
  7315 ;; Return value:  Size  Location     Type
  7316 ;;		None               void
  7317 ;; Registers used:
  7318 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7319 ;; Tracked objects:
  7320 ;;		On entry : 40/0
  7321 ;;		On exit  : 60/0
  7322 ;;		Unchanged: FFF9F/0
  7323 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7324 ;;      Params:         0       0       0       0       0
  7325 ;;      Locals:         0       1       0       0       0
  7326 ;;      Temps:          0       0       0       0       0
  7327 ;;      Totals:         0       1       0       0       0
  7328 ;;Total ram usage:        1 bytes
  7329 ;; Hardware stack levels used:    1
  7330 ;; Hardware stack levels required when called:    3
  7331 ;; This function calls:
  7332 ;;		_send_char
  7333 ;; This function is called by:
  7334 ;;		_main
  7335 ;; This function uses a non-reentrant model
  7336 ;;
  7337  13F5                     _send_string:	
  7338                           
  7339                           ; Regs used in _send_string: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7340                           ;send_string@s stored from wreg
  7341  13F5  1283               	bcf	3,5	;RP0=0, select bank0
  7342  13F6  00A1               	movwf	send_string@s
  7343  13F7                     l7015:	
  7344                           ;dulieubanphim.c: 91: while(*s){send_char(*s++);}
  7345                           
  7346  13F7  0821               	movf	send_string@s,w
  7347  13F8  0084               	movwf	4
  7348  13F9  160A  118A  2000   	fcall	stringdir
      +       160A  118A         
  7349  13FE  3800               	iorlw	0
  7350  13FF  1903               	btfsc	3,2
  7351  1400  0008               	return
  7352  1401  0821               	movf	send_string@s,w
  7353  1402  0084               	movwf	4
  7354  1403  160A  118A  2000   	fcall	stringdir
      +       160A  118A         
  7355  1408  240D  160A  118A   	fcall	_send_char
  7356  140B  0AA1               	incf	send_string@s,f
  7357  140C  2BF7               	goto	l7015
  7358  140D                     __end_of_send_string:	
  7359  140D                     __ptext677:	
  7360 ;; =============== function _isdigit ends ============
  7361                           
  7362                           
  7363 ;; *************** function _send_char *****************
  7364 ;; Defined at:
  7365 ;;		line 85 in file "C:\Users\DELL\Desktop\vxl\mp\dulieubanphim.c"
  7366 ;; Parameters:    Size  Location     Type
  7367 ;;  data            1    wreg     unsigned char 
  7368 ;; Auto vars:     Size  Location     Type
  7369 ;;  data            1    0[BANK0 ] unsigned char 
  7370 ;; Return value:  Size  Location     Type
  7371 ;;		None               void
  7372 ;; Registers used:
  7373 ;;		wreg
  7374 ;; Tracked objects:
  7375 ;;		On entry : 60/0
  7376 ;;		On exit  : 60/0
  7377 ;;		Unchanged: FFF9F/0
  7378 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7379 ;;      Params:         0       0       0       0       0
  7380 ;;      Locals:         0       1       0       0       0
  7381 ;;      Temps:          0       0       0       0       0
  7382 ;;      Totals:         0       1       0       0       0
  7383 ;;Total ram usage:        1 bytes
  7384 ;; Hardware stack levels used:    1
  7385 ;; Hardware stack levels required when called:    2
  7386 ;; This function calls:
  7387 ;;		Nothing
  7388 ;; This function is called by:
  7389 ;;		_send_string
  7390 ;; This function uses a non-reentrant model
  7391 ;;
  7392  140D                     _send_char:	
  7393                           
  7394                           ; Regs used in _send_char: [wreg]
  7395                           ;send_char@data stored from wreg
  7396  140D  00A0               	movwf	send_char@data
  7397  140E                     l2179:	
  7398                           ;dulieubanphim.c: 86: while(TXIF ==0){}
  7399                           
  7400  140E  1E0C               	btfss	12,4
  7401  140F  2C0E               	goto	l2179
  7402                           
  7403                           ;dulieubanphim.c: 87: TXREG = data;
  7404  1410  0820               	movf	send_char@data,w
  7405  1411  0099               	movwf	25	;volatile
  7406  1412  0008               	return
  7407  1413                     __end_of_send_char:	
  7408                           
  7409                           	psect	text663
  7410  14C1                     __ptext663:	
  7411 ;; =============== function ___awmod ends ============
  7412                           
  7413                           
  7414 ;; *************** function ___lldiv *****************
  7415 ;; Defined at:
  7416 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\lldiv.c"
  7417 ;; Parameters:    Size  Location     Type
  7418 ;;  divisor         4    0[BANK0 ] unsigned long 
  7419 ;;  dividend        4    4[BANK0 ] unsigned long 
  7420 ;; Auto vars:     Size  Location     Type
  7421 ;;  quotient        4    8[BANK0 ] unsigned long 
  7422 ;;  counter         1   12[BANK0 ] unsigned char 
  7423 ;; Return value:  Size  Location     Type
  7424 ;;                  4    0[BANK0 ] unsigned long 
  7425 ;; Registers used:
  7426 ;;		wreg, status,2, status,0
  7427 ;; Tracked objects:
  7428 ;;		On entry : 60/0
  7429 ;;		On exit  : 60/0
  7430 ;;		Unchanged: FFF9F/0
  7431 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7432 ;;      Params:         0       8       0       0       0
  7433 ;;      Locals:         0       5       0       0       0
  7434 ;;      Temps:          0       0       0       0       0
  7435 ;;      Totals:         0      13       0       0       0
  7436 ;;Total ram usage:       13 bytes
  7437 ;; Hardware stack levels used:    1
  7438 ;; Hardware stack levels required when called:    2
  7439 ;; This function calls:
  7440 ;;		Nothing
  7441 ;; This function is called by:
  7442 ;;		__doprnt
  7443 ;; This function uses a non-reentrant model
  7444 ;;
  7445  14C1                     ___lldiv:	
  7446                           
  7447                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  7448  14C1  01A8               	clrf	___lldiv@quotient
  7449  14C2  01A9               	clrf	___lldiv@quotient+1
  7450  14C3  01AA               	clrf	___lldiv@quotient+2
  7451  14C4  01AB               	clrf	___lldiv@quotient+3
  7452  14C5  0823               	movf	___lldiv@divisor+3,w
  7453  14C6  0422               	iorwf	___lldiv@divisor+2,w
  7454  14C7  0421               	iorwf	___lldiv@divisor+1,w
  7455  14C8  0420               	iorwf	___lldiv@divisor,w
  7456  14C9  1903               	skipnz
  7457  14CA  2D00               	goto	l6909
  7458  14CB  01AC               	clrf	___lldiv@counter
  7459  14CC                     L13:	
  7460  14CC  0AAC               	incf	___lldiv@counter,f
  7461  14CD  1BA3               	btfsc	___lldiv@divisor+3,7
  7462  14CE  2CD5               	goto	l6897
  7463  14CF  1003               	clrc
  7464  14D0  0DA0               	rlf	___lldiv@divisor,f
  7465  14D1  0DA1               	rlf	___lldiv@divisor+1,f
  7466  14D2  0DA2               	rlf	___lldiv@divisor+2,f
  7467  14D3  0DA3               	rlf	___lldiv@divisor+3,f
  7468  14D4  2CCC               	goto	L13
  7469  14D5                     l6897:	
  7470  14D5  1003               	clrc
  7471  14D6  0DA8               	rlf	___lldiv@quotient,f
  7472  14D7  0DA9               	rlf	___lldiv@quotient+1,f
  7473  14D8  0DAA               	rlf	___lldiv@quotient+2,f
  7474  14D9  0DAB               	rlf	___lldiv@quotient+3,f
  7475  14DA  0823               	movf	___lldiv@divisor+3,w
  7476  14DB  0227               	subwf	___lldiv@dividend+3,w
  7477  14DC  1D03               	skipz
  7478  14DD  2CE8               	goto	u2915
  7479  14DE  0822               	movf	___lldiv@divisor+2,w
  7480  14DF  0226               	subwf	___lldiv@dividend+2,w
  7481  14E0  1D03               	skipz
  7482  14E1  2CE8               	goto	u2915
  7483  14E2  0821               	movf	___lldiv@divisor+1,w
  7484  14E3  0225               	subwf	___lldiv@dividend+1,w
  7485  14E4  1D03               	skipz
  7486  14E5  2CE8               	goto	u2915
  7487  14E6  0820               	movf	___lldiv@divisor,w
  7488  14E7  0224               	subwf	___lldiv@dividend,w
  7489  14E8                     u2915:	
  7490  14E8  1C03               	skipc
  7491  14E9  2CFA               	goto	L14
  7492  14EA  0820               	movf	___lldiv@divisor,w
  7493  14EB  02A4               	subwf	___lldiv@dividend,f
  7494  14EC  0821               	movf	___lldiv@divisor+1,w
  7495  14ED  1C03               	skipc
  7496  14EE  0F21               	incfsz	___lldiv@divisor+1,w
  7497  14EF  02A5               	subwf	___lldiv@dividend+1,f
  7498  14F0  0822               	movf	___lldiv@divisor+2,w
  7499  14F1  1C03               	skipc
  7500  14F2  0F22               	incfsz	___lldiv@divisor+2,w
  7501  14F3  02A6               	subwf	___lldiv@dividend+2,f
  7502  14F4  0823               	movf	___lldiv@divisor+3,w
  7503  14F5  1C03               	skipc
  7504  14F6  0F23               	incfsz	___lldiv@divisor+3,w
  7505  14F7  02A7               	subwf	___lldiv@dividend+3,f
  7506  14F8  1428               	bsf	___lldiv@quotient,0
  7507  14F9  1003               	clrc
  7508  14FA                     L14:	
  7509  14FA  0CA3               	rrf	___lldiv@divisor+3,f
  7510  14FB  0CA2               	rrf	___lldiv@divisor+2,f
  7511  14FC  0CA1               	rrf	___lldiv@divisor+1,f
  7512  14FD  0CA0               	rrf	___lldiv@divisor,f
  7513  14FE  0BAC               	decfsz	___lldiv@counter,f
  7514  14FF  2CD5               	goto	l6897
  7515  1500                     l6909:	
  7516  1500  082B               	movf	___lldiv@quotient+3,w
  7517  1501  00A3               	movwf	?___lldiv+3
  7518  1502  082A               	movf	___lldiv@quotient+2,w
  7519  1503  00A2               	movwf	?___lldiv+2
  7520  1504  0829               	movf	___lldiv@quotient+1,w
  7521  1505  00A1               	movwf	?___lldiv+1
  7522  1506  0828               	movf	___lldiv@quotient,w
  7523  1507  00A0               	movwf	?___lldiv
  7524  1508  0008               	return
  7525  1509                     __end_of___lldiv:	
  7526                           
  7527                           	psect	text664
  7528  1413                     __ptext664:	
  7529 ;; =============== function ___lldiv ends ============
  7530                           
  7531                           
  7532 ;; *************** function ___ftge *****************
  7533 ;; Defined at:
  7534 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\ftge.c"
  7535 ;; Parameters:    Size  Location     Type
  7536 ;;  ff1             3    0[BANK0 ] float 
  7537 ;;  ff2             3    3[BANK0 ] float 
  7538 ;; Auto vars:     Size  Location     Type
  7539 ;;		None
  7540 ;; Return value:  Size  Location     Type
  7541 ;;		None               void
  7542 ;; Registers used:
  7543 ;;		wreg, status,2, status,0
  7544 ;; Tracked objects:
  7545 ;;		On entry : 60/0
  7546 ;;		On exit  : 60/0
  7547 ;;		Unchanged: FFF9F/0
  7548 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7549 ;;      Params:         0       6       0       0       0
  7550 ;;      Locals:         0       0       0       0       0
  7551 ;;      Temps:          0       0       0       0       0
  7552 ;;      Totals:         0       6       0       0       0
  7553 ;;Total ram usage:        6 bytes
  7554 ;; Hardware stack levels used:    1
  7555 ;; Hardware stack levels required when called:    2
  7556 ;; This function calls:
  7557 ;;		Nothing
  7558 ;; This function is called by:
  7559 ;;		_main
  7560 ;;		__doprnt
  7561 ;; This function uses a non-reentrant model
  7562 ;;
  7563  1413                     ___ftge:	
  7564                           
  7565                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  7566  1413  1FA2               	btfss	___ftge@ff1+2,7
  7567  1414  2C22               	goto	l6871
  7568  1415  0820               	movf	___ftge@ff1,w
  7569  1416  3C00               	sublw	0
  7570  1417  00A0               	movwf	___ftge@ff1
  7571  1418  0821               	movf	___ftge@ff1+1,w
  7572  1419  1C03               	skipc
  7573  141A  0F21               	incfsz	___ftge@ff1+1,w
  7574  141B  3C00               	sublw	0
  7575  141C  00A1               	movwf	___ftge@ff1+1
  7576  141D  0822               	movf	___ftge@ff1+2,w
  7577  141E  1C03               	skipc
  7578  141F  0F22               	incfsz	___ftge@ff1+2,w
  7579  1420  3C80               	sublw	128
  7580  1421  00A2               	movwf	___ftge@ff1+2
  7581  1422                     l6871:	
  7582  1422  1FA5               	btfss	___ftge@ff2+2,7
  7583  1423  2C31               	goto	l6875
  7584  1424  0823               	movf	___ftge@ff2,w
  7585  1425  3C00               	sublw	0
  7586  1426  00A3               	movwf	___ftge@ff2
  7587  1427  0824               	movf	___ftge@ff2+1,w
  7588  1428  1C03               	skipc
  7589  1429  0F24               	incfsz	___ftge@ff2+1,w
  7590  142A  3C00               	sublw	0
  7591  142B  00A4               	movwf	___ftge@ff2+1
  7592  142C  0825               	movf	___ftge@ff2+2,w
  7593  142D  1C03               	skipc
  7594  142E  0F25               	incfsz	___ftge@ff2+2,w
  7595  142F  3C80               	sublw	128
  7596  1430  00A5               	movwf	___ftge@ff2+2
  7597  1431                     l6875:	
  7598  1431  3080               	movlw	128
  7599  1432  06A2               	xorwf	___ftge@ff1+2,f
  7600  1433  06A5               	xorwf	___ftge@ff2+2,f
  7601  1434  0825               	movf	___ftge@ff2+2,w
  7602  1435  0222               	subwf	___ftge@ff1+2,w
  7603  1436  1D03               	skipz
  7604  1437  0008               	return
  7605  1438  0824               	movf	___ftge@ff2+1,w
  7606  1439  0221               	subwf	___ftge@ff1+1,w
  7607  143A  1D03               	skipz
  7608  143B  0008               	return
  7609  143C  0823               	movf	___ftge@ff2,w
  7610  143D  0220               	subwf	___ftge@ff1,w
  7611  143E  0008               	return
  7612  143F                     __end_of___ftge:	
  7613                           
  7614                           	psect	text666
  7615  143F                     __ptext666:	
  7616 ;; =============== function ___ftneg ends ============
  7617                           
  7618                           
  7619 ;; *************** function ___llmod *****************
  7620 ;; Defined at:
  7621 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\llmod.c"
  7622 ;; Parameters:    Size  Location     Type
  7623 ;;  divisor         4   13[BANK0 ] unsigned long 
  7624 ;;  dividend        4   17[BANK0 ] unsigned long 
  7625 ;; Auto vars:     Size  Location     Type
  7626 ;;  counter         1   21[BANK0 ] unsigned char 
  7627 ;; Return value:  Size  Location     Type
  7628 ;;                  4   13[BANK0 ] unsigned long 
  7629 ;; Registers used:
  7630 ;;		wreg, status,2, status,0
  7631 ;; Tracked objects:
  7632 ;;		On entry : 60/0
  7633 ;;		On exit  : 60/0
  7634 ;;		Unchanged: FFF9F/0
  7635 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7636 ;;      Params:         0       8       0       0       0
  7637 ;;      Locals:         0       1       0       0       0
  7638 ;;      Temps:          0       0       0       0       0
  7639 ;;      Totals:         0       9       0       0       0
  7640 ;;Total ram usage:        9 bytes
  7641 ;; Hardware stack levels used:    1
  7642 ;; Hardware stack levels required when called:    2
  7643 ;; This function calls:
  7644 ;;		Nothing
  7645 ;; This function is called by:
  7646 ;;		__doprnt
  7647 ;; This function uses a non-reentrant model
  7648 ;;
  7649  143F                     ___llmod:	
  7650                           
  7651                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  7652  143F  0830               	movf	___llmod@divisor+3,w
  7653  1440  042F               	iorwf	___llmod@divisor+2,w
  7654  1441  042E               	iorwf	___llmod@divisor+1,w
  7655  1442  042D               	iorwf	___llmod@divisor,w
  7656  1443  1903               	skipnz
  7657  1444  2C74               	goto	l6855
  7658  1445  01B5               	clrf	___llmod@counter
  7659  1446                     L16:	
  7660  1446  0AB5               	incf	___llmod@counter,f
  7661  1447  1BB0               	btfsc	___llmod@divisor+3,7
  7662  1448  2C4F               	goto	l6847
  7663  1449  1003               	clrc
  7664  144A  0DAD               	rlf	___llmod@divisor,f
  7665  144B  0DAE               	rlf	___llmod@divisor+1,f
  7666  144C  0DAF               	rlf	___llmod@divisor+2,f
  7667  144D  0DB0               	rlf	___llmod@divisor+3,f
  7668  144E  2C46               	goto	L16
  7669  144F                     l6847:	
  7670  144F  0830               	movf	___llmod@divisor+3,w
  7671  1450  0234               	subwf	___llmod@dividend+3,w
  7672  1451  1D03               	skipz
  7673  1452  2C5D               	goto	u2835
  7674  1453  082F               	movf	___llmod@divisor+2,w
  7675  1454  0233               	subwf	___llmod@dividend+2,w
  7676  1455  1D03               	skipz
  7677  1456  2C5D               	goto	u2835
  7678  1457  082E               	movf	___llmod@divisor+1,w
  7679  1458  0232               	subwf	___llmod@dividend+1,w
  7680  1459  1D03               	skipz
  7681  145A  2C5D               	goto	u2835
  7682  145B  082D               	movf	___llmod@divisor,w
  7683  145C  0231               	subwf	___llmod@dividend,w
  7684  145D                     u2835:	
  7685  145D  1C03               	skipc
  7686  145E  2C6E               	goto	L17
  7687  145F  082D               	movf	___llmod@divisor,w
  7688  1460  02B1               	subwf	___llmod@dividend,f
  7689  1461  082E               	movf	___llmod@divisor+1,w
  7690  1462  1C03               	skipc
  7691  1463  0F2E               	incfsz	___llmod@divisor+1,w
  7692  1464  02B2               	subwf	___llmod@dividend+1,f
  7693  1465  082F               	movf	___llmod@divisor+2,w
  7694  1466  1C03               	skipc
  7695  1467  0F2F               	incfsz	___llmod@divisor+2,w
  7696  1468  02B3               	subwf	___llmod@dividend+2,f
  7697  1469  0830               	movf	___llmod@divisor+3,w
  7698  146A  1C03               	skipc
  7699  146B  0F30               	incfsz	___llmod@divisor+3,w
  7700  146C  02B4               	subwf	___llmod@dividend+3,f
  7701  146D  1003               	clrc
  7702  146E                     L17:	
  7703  146E  0CB0               	rrf	___llmod@divisor+3,f
  7704  146F  0CAF               	rrf	___llmod@divisor+2,f
  7705  1470  0CAE               	rrf	___llmod@divisor+1,f
  7706  1471  0CAD               	rrf	___llmod@divisor,f
  7707  1472  0BB5               	decfsz	___llmod@counter,f
  7708  1473  2C4F               	goto	l6847
  7709  1474                     l6855:	
  7710  1474  0834               	movf	___llmod@dividend+3,w
  7711  1475  00B0               	movwf	?___llmod+3
  7712  1476  0833               	movf	___llmod@dividend+2,w
  7713  1477  00AF               	movwf	?___llmod+2
  7714  1478  0832               	movf	___llmod@dividend+1,w
  7715  1479  00AE               	movwf	?___llmod+1
  7716  147A  0831               	movf	___llmod@dividend,w
  7717  147B  00AD               	movwf	?___llmod
  7718  147C  0008               	return
  7719  147D                     __end_of___llmod:	
  7720                           
  7721                           	psect	text668
  7722  1509                     __ptext668:	
  7723 ;; =============== function ___awdiv ends ============
  7724                           
  7725                           
  7726 ;; *************** function ___fttol *****************
  7727 ;; Defined at:
  7728 ;;		line 45 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\fttol.c"
  7729 ;; Parameters:    Size  Location     Type
  7730 ;;  f1              3   14[BANK0 ] float 
  7731 ;; Auto vars:     Size  Location     Type
  7732 ;;  lval            4   22[BANK0 ] unsigned long 
  7733 ;;  exp1            1   26[BANK0 ] unsigned char 
  7734 ;;  sign1           1   21[BANK0 ] unsigned char 
  7735 ;; Return value:  Size  Location     Type
  7736 ;;                  4   14[BANK0 ] long 
  7737 ;; Registers used:
  7738 ;;		wreg, status,2, status,0
  7739 ;; Tracked objects:
  7740 ;;		On entry : 60/0
  7741 ;;		On exit  : 60/0
  7742 ;;		Unchanged: FFF9F/0
  7743 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7744 ;;      Params:         0       4       0       0       0
  7745 ;;      Locals:         0       6       0       0       0
  7746 ;;      Temps:          0       3       0       0       0
  7747 ;;      Totals:         0      13       0       0       0
  7748 ;;Total ram usage:       13 bytes
  7749 ;; Hardware stack levels used:    1
  7750 ;; Hardware stack levels required when called:    2
  7751 ;; This function calls:
  7752 ;;		Nothing
  7753 ;; This function is called by:
  7754 ;;		__doprnt
  7755 ;; This function uses a non-reentrant model
  7756 ;;
  7757  1509                     ___fttol:	
  7758                           
  7759                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  7760  1509  2564  160A  118A   	fcall	PL35	;call to abstracted procedure
  7761  150C  1003               	clrc
  7762  150D  0D33               	rlf	??___fttol+1,w
  7763  150E  0D34               	rlf	??___fttol+2,w
  7764  150F  00BA               	movwf	___fttol@exp1
  7765  1510  08BA               	movf	___fttol@exp1,f
  7766  1511  1D03               	skipz
  7767  1512  2D18               	goto	l6761
  7768  1513                     l6759:	
  7769  1513  01AE               	clrf	?___fttol
  7770  1514  01AF               	clrf	?___fttol+1
  7771  1515  01B0               	clrf	?___fttol+2
  7772  1516  01B1               	clrf	?___fttol+3
  7773  1517  0008               	return
  7774  1518                     l6761:	
  7775  1518  2564  160A  118A   	fcall	PL35	;call to abstracted procedure
  7776  151B  3017               	movlw	23
  7777  151C                     u2675:	
  7778  151C  1003               	clrc
  7779  151D  0CB4               	rrf	??___fttol+2,f
  7780  151E  0CB3               	rrf	??___fttol+1,f
  7781  151F  0CB2               	rrf	??___fttol,f
  7782  1520  3EFF               	addlw	-1
  7783  1521  1D03               	skipz
  7784  1522  2D1C               	goto	u2675
  7785  1523  0832               	movf	??___fttol,w
  7786  1524  00B5               	movwf	___fttol@sign1
  7787  1525  17AF               	bsf	___fttol@f1+1,7
  7788  1526  01B0               	clrf	___fttol@f1+2
  7789  1527  082E               	movf	___fttol@f1,w
  7790  1528  00B6               	movwf	___fttol@lval
  7791  1529  082F               	movf	___fttol@f1+1,w
  7792  152A  00B7               	movwf	___fttol@lval+1
  7793  152B  0830               	movf	___fttol@f1+2,w
  7794  152C  00B8               	movwf	___fttol@lval+2
  7795  152D  308E               	movlw	142
  7796  152E  01B9               	clrf	___fttol@lval+3
  7797  152F  02BA               	subwf	___fttol@exp1,f
  7798  1530  1FBA               	btfss	___fttol@exp1,7
  7799  1531  2D3F               	goto	l6781
  7800  1532  083A               	movf	___fttol@exp1,w
  7801  1533  3A80               	xorlw	128
  7802  1534  3E8F               	addlw	143
  7803  1535  1C03               	btfss	3,0
  7804  1536  2D13               	goto	l6759
  7805  1537                     l6777:	
  7806  1537  1003               	clrc
  7807  1538  0CB9               	rrf	___fttol@lval+3,f
  7808  1539  0CB8               	rrf	___fttol@lval+2,f
  7809  153A  0CB7               	rrf	___fttol@lval+1,f
  7810  153B  0CB6               	rrf	___fttol@lval,f
  7811  153C  0FBA               	incfsz	___fttol@exp1,f
  7812  153D  2D37               	goto	l6777
  7813  153E  2D4D               	goto	l6787
  7814  153F                     l6781:	
  7815  153F  3018               	movlw	24
  7816  1540  023A               	subwf	___fttol@exp1,w
  7817  1541  1803               	btfsc	3,0
  7818  1542  2D13               	goto	l6759
  7819  1543                     l3496:	
  7820  1543  08BA               	movf	___fttol@exp1,f
  7821  1544  1903               	btfsc	3,2
  7822  1545  2D4D               	goto	l6787
  7823  1546  1003               	clrc
  7824  1547  0DB6               	rlf	___fttol@lval,f
  7825  1548  0DB7               	rlf	___fttol@lval+1,f
  7826  1549  0DB8               	rlf	___fttol@lval+2,f
  7827  154A  0DB9               	rlf	___fttol@lval+3,f
  7828  154B  03BA               	decf	___fttol@exp1,f
  7829  154C  2D43               	goto	l3496
  7830  154D                     l6787:	
  7831  154D  0835               	movf	___fttol@sign1,w
  7832  154E  1903               	btfsc	3,2
  7833  154F  2D5B               	goto	l6791
  7834  1550  09B6               	comf	___fttol@lval,f
  7835  1551  09B7               	comf	___fttol@lval+1,f
  7836  1552  09B8               	comf	___fttol@lval+2,f
  7837  1553  09B9               	comf	___fttol@lval+3,f
  7838  1554  0AB6               	incf	___fttol@lval,f
  7839  1555  1903               	skipnz
  7840  1556  0AB7               	incf	___fttol@lval+1,f
  7841  1557  1903               	skipnz
  7842  1558  0AB8               	incf	___fttol@lval+2,f
  7843  1559  1903               	skipnz
  7844  155A  0AB9               	incf	___fttol@lval+3,f
  7845  155B                     l6791:	
  7846  155B  0839               	movf	___fttol@lval+3,w
  7847  155C  00B1               	movwf	?___fttol+3
  7848  155D  0838               	movf	___fttol@lval+2,w
  7849  155E  00B0               	movwf	?___fttol+2
  7850  155F  0837               	movf	___fttol@lval+1,w
  7851  1560  00AF               	movwf	?___fttol+1
  7852  1561  0836               	movf	___fttol@lval,w
  7853  1562  00AE               	movwf	?___fttol
  7854  1563  0008               	return
  7855  1564                     __end_of___fttol:	
  7856  1564                     PL35:	
  7857  1564  082E               	movf	___fttol@f1,w
  7858  1565  00B2               	movwf	??___fttol
  7859  1566  082F               	movf	___fttol@f1+1,w
  7860  1567  00B3               	movwf	??___fttol+1
  7861  1568  0830               	movf	___fttol@f1+2,w
  7862  1569  00B4               	movwf	??___fttol+2
  7863  156A  0008               	return
  7864                           
  7865                           	psect	text674
  7866  15E2                     __ptext674:	
  7867 ;; =============== function ___bmul ends ============
  7868                           
  7869                           
  7870 ;; *************** function __div_to_l_ *****************
  7871 ;; Defined at:
  7872 ;;		line 61 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\fldivl.c"
  7873 ;; Parameters:    Size  Location     Type
  7874 ;;  f1              3    0[BANK0 ] unsigned char 
  7875 ;;  f2              3    3[BANK0 ] unsigned char 
  7876 ;; Auto vars:     Size  Location     Type
  7877 ;;  quot            4   14[BANK0 ] unsigned long 
  7878 ;;  exp1            1   19[BANK0 ] unsigned char 
  7879 ;;  cntr            1   18[BANK0 ] unsigned char 
  7880 ;; Return value:  Size  Location     Type
  7881 ;;                  4    0[BANK0 ] unsigned long 
  7882 ;; Registers used:
  7883 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  7884 ;; Tracked objects:
  7885 ;;		On entry : 0/0
  7886 ;;		On exit  : 60/0
  7887 ;;		Unchanged: FFE9F/0
  7888 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7889 ;;      Params:         0       6       0       0       0
  7890 ;;      Locals:         0       6       0       0       0
  7891 ;;      Temps:          0       8       0       0       0
  7892 ;;      Totals:         0      20       0       0       0
  7893 ;;Total ram usage:       20 bytes
  7894 ;; Hardware stack levels used:    1
  7895 ;; Hardware stack levels required when called:    2
  7896 ;; This function calls:
  7897 ;;		Nothing
  7898 ;; This function is called by:
  7899 ;;		__doprnt
  7900 ;; This function uses a non-reentrant model
  7901 ;;
  7902  15E2                     __div_to_l_:	
  7903                           
  7904                           ; Regs used in __div_to_l_: [wreg-fsr0h+status,2+status,0]
  7905  15E2  3020               	movlw	low __div_to_l_@f1
  7906  15E3  0084               	movwf	4
  7907  15E4  1383               	bcf	3,7	;select IRP bank0
  7908  15E5  0800               	movf	0,w
  7909  15E6  1283               	bcf	3,5	;RP0=0, select bank0
  7910  15E7  1303               	bcf	3,6	;RP1=0, select bank0
  7911  15E8  00A6               	movwf	??__div_to_l_
  7912  15E9  0A84               	incf	4,f
  7913  15EA  0800               	movf	0,w
  7914  15EB  00A7               	movwf	??__div_to_l_+1
  7915  15EC  0A84               	incf	4,f
  7916  15ED  0800               	movf	0,w
  7917  15EE  00A8               	movwf	??__div_to_l_+2
  7918  15EF  0A84               	incf	4,f
  7919  15F0  0800               	movf	0,w
  7920  15F1  00A9               	movwf	??__div_to_l_+3
  7921  15F2  1003               	clrc
  7922  15F3  0D28               	rlf	??__div_to_l_+2,w
  7923  15F4  0D29               	rlf	??__div_to_l_+3,w
  7924  15F5  00B3               	movwf	__div_to_l_@exp1
  7925  15F6  08B3               	movf	__div_to_l_@exp1,f
  7926  15F7  1D03               	skipz
  7927  15F8  2DFE               	goto	l6613
  7928  15F9                     l6611:	
  7929  15F9  01A0               	clrf	?__div_to_l_
  7930  15FA  01A1               	clrf	?__div_to_l_+1
  7931  15FB  01A2               	clrf	?__div_to_l_+2
  7932  15FC  01A3               	clrf	?__div_to_l_+3
  7933  15FD  0008               	return
  7934  15FE                     l6613:	
  7935  15FE  3023               	movlw	low __div_to_l_@f2
  7936  15FF  26A1  160A  118A   	fcall	PL7	;call to abstracted procedure
  7937  1602  1003               	clrc
  7938  1603  0D28               	rlf	??__div_to_l_+2,w
  7939  1604  0D29               	rlf	??__div_to_l_+3,w
  7940  1605  00B2               	movwf	__div_to_l_@cntr
  7941  1606  08B2               	movf	__div_to_l_@cntr,f
  7942  1607  1903               	btfsc	3,2
  7943  1608  2DF9               	goto	l6611
  7944  1609  3020               	movlw	low __div_to_l_@f1
  7945  160A  0084               	movwf	4
  7946  160B  3080               	movlw	128
  7947  160C  0A84               	incf	4,f
  7948  160D  0A84               	incf	4,f
  7949  160E  0480               	iorwf	0,f
  7950  160F  3020               	movlw	low __div_to_l_@f1
  7951  1610  0A84               	incf	4,f
  7952  1611  0084               	movwf	4
  7953  1612  3023               	movlw	low __div_to_l_@f2
  7954  1613  0A84               	incf	4,f
  7955  1614  0A84               	incf	4,f
  7956  1615  0A84               	incf	4,f
  7957  1616  0180               	clrf	0
  7958  1617  0084               	movwf	4
  7959  1618  3080               	movlw	128
  7960  1619  0A84               	incf	4,f
  7961  161A  0A84               	incf	4,f
  7962  161B  0480               	iorwf	0,f
  7963  161C  3023               	movlw	low __div_to_l_@f2
  7964  161D  0A84               	incf	4,f
  7965  161E  0084               	movwf	4
  7966  161F  307F               	movlw	127
  7967  1620  0A84               	incf	4,f
  7968  1621  0A84               	incf	4,f
  7969  1622  0A84               	incf	4,f
  7970  1623  0180               	clrf	0
  7971  1624  01AE               	clrf	__div_to_l_@quot
  7972  1625  01AF               	clrf	__div_to_l_@quot+1
  7973  1626  01B0               	clrf	__div_to_l_@quot+2
  7974  1627  01B1               	clrf	__div_to_l_@quot+3
  7975  1628  02B3               	subwf	__div_to_l_@exp1,f
  7976  1629  30A0               	movlw	160
  7977  162A  0732               	addwf	__div_to_l_@cntr,w
  7978  162B  00A6               	movwf	??__div_to_l_
  7979  162C  02B3               	subwf	__div_to_l_@exp1,f
  7980  162D  3020               	movlw	32
  7981  162E  00B2               	movwf	__div_to_l_@cntr
  7982  162F                     l6627:	
  7983  162F  3023               	movlw	low __div_to_l_@f2
  7984  1630  1003               	clrc
  7985  1631  0DAE               	rlf	__div_to_l_@quot,f
  7986  1632  0DAF               	rlf	__div_to_l_@quot+1,f
  7987  1633  0DB0               	rlf	__div_to_l_@quot+2,f
  7988  1634  0DB1               	rlf	__div_to_l_@quot+3,f
  7989  1635  26A1  160A  118A   	fcall	PL7	;call to abstracted procedure
  7990  1638  3020               	movlw	low __div_to_l_@f1
  7991  1639  0084               	movwf	4
  7992  163A  0800               	movf	0,w
  7993  163B  00AA               	movwf	??__div_to_l_+4
  7994  163C  0A84               	incf	4,f
  7995  163D  0800               	movf	0,w
  7996  163E  00AB               	movwf	??__div_to_l_+5
  7997  163F  0A84               	incf	4,f
  7998  1640  0800               	movf	0,w
  7999  1641  00AC               	movwf	??__div_to_l_+6
  8000  1642  0A84               	incf	4,f
  8001  1643  0800               	movf	0,w
  8002  1644  00AD               	movwf	??__div_to_l_+7
  8003  1645  0829               	movf	??__div_to_l_+3,w
  8004  1646  022D               	subwf	??__div_to_l_+7,w
  8005  1647  1D03               	skipz
  8006  1648  2E53               	goto	u2415
  8007  1649  0828               	movf	??__div_to_l_+2,w
  8008  164A  022C               	subwf	??__div_to_l_+6,w
  8009  164B  1D03               	skipz
  8010  164C  2E53               	goto	u2415
  8011  164D  0827               	movf	??__div_to_l_+1,w
  8012  164E  022B               	subwf	??__div_to_l_+5,w
  8013  164F  1D03               	skipz
  8014  1650  2E53               	goto	u2415
  8015  1651  0826               	movf	??__div_to_l_,w
  8016  1652  022A               	subwf	??__div_to_l_+4,w
  8017  1653                     u2415:	
  8018  1653  1C03               	skipc
  8019  1654  2E6F               	goto	l3669
  8020  1655  3023               	movlw	low __div_to_l_@f2
  8021  1656  26A1  160A  118A   	fcall	PL7	;call to abstracted procedure
  8022  1659  3020               	movlw	low __div_to_l_@f1
  8023  165A  0084               	movwf	4
  8024  165B  0826               	movf	??__div_to_l_,w
  8025  165C  0280               	subwf	0,f
  8026  165D  0A84               	incf	4,f
  8027  165E  0827               	movf	??__div_to_l_+1,w
  8028  165F  1C03               	skipc
  8029  1660  0F27               	incfsz	??__div_to_l_+1,w
  8030  1661  0280               	subwf	0,f
  8031  1662  0A84               	incf	4,f
  8032  1663  0828               	movf	??__div_to_l_+2,w
  8033  1664  1C03               	skipc
  8034  1665  0F28               	incfsz	??__div_to_l_+2,w
  8035  1666  0280               	subwf	0,f
  8036  1667  0A84               	incf	4,f
  8037  1668  0829               	movf	??__div_to_l_+3,w
  8038  1669  1C03               	skipc
  8039  166A  0A29               	incf	??__div_to_l_+3,w
  8040  166B  0280               	subwf	0,f
  8041  166C  3003               	movlw	3
  8042  166D  0284               	subwf	4,f
  8043  166E  142E               	bsf	__div_to_l_@quot,0
  8044  166F                     l3669:	
  8045  166F  3020               	movlw	low __div_to_l_@f1
  8046  1670  0084               	movwf	4
  8047  1671  1003               	clrc
  8048  1672  0D80               	rlf	0,f
  8049  1673  0A84               	incf	4,f
  8050  1674  0D80               	rlf	0,f
  8051  1675  0A84               	incf	4,f
  8052  1676  0D80               	rlf	0,f
  8053  1677  0A84               	incf	4,f
  8054  1678  0D80               	rlf	0,f
  8055  1679  0BB2               	decfsz	__div_to_l_@cntr,f
  8056  167A  2E2F               	goto	l6627
  8057  167B  1FB3               	btfss	__div_to_l_@exp1,7
  8058  167C  2E8A               	goto	l6645
  8059  167D  0833               	movf	__div_to_l_@exp1,w
  8060  167E  3A80               	xorlw	128
  8061  167F  3E9F               	addlw	159
  8062  1680  1C03               	btfss	3,0
  8063  1681  2DF9               	goto	l6611
  8064  1682                     l6641:	
  8065  1682  1003               	clrc
  8066  1683  0CB1               	rrf	__div_to_l_@quot+3,f
  8067  1684  0CB0               	rrf	__div_to_l_@quot+2,f
  8068  1685  0CAF               	rrf	__div_to_l_@quot+1,f
  8069  1686  0CAE               	rrf	__div_to_l_@quot,f
  8070  1687  0FB3               	incfsz	__div_to_l_@exp1,f
  8071  1688  2E82               	goto	l6641
  8072  1689  2E98               	goto	l6651
  8073  168A                     l6645:	
  8074  168A  3020               	movlw	32
  8075  168B  0233               	subwf	__div_to_l_@exp1,w
  8076  168C  1803               	btfsc	3,0
  8077  168D  2DF9               	goto	l6611
  8078  168E                     l3677:	
  8079  168E  08B3               	movf	__div_to_l_@exp1,f
  8080  168F  1903               	btfsc	3,2
  8081  1690  2E98               	goto	l6651
  8082  1691  1003               	clrc
  8083  1692  0DAE               	rlf	__div_to_l_@quot,f
  8084  1693  0DAF               	rlf	__div_to_l_@quot+1,f
  8085  1694  0DB0               	rlf	__div_to_l_@quot+2,f
  8086  1695  0DB1               	rlf	__div_to_l_@quot+3,f
  8087  1696  03B3               	decf	__div_to_l_@exp1,f
  8088  1697  2E8E               	goto	l3677
  8089  1698                     l6651:	
  8090  1698  0831               	movf	__div_to_l_@quot+3,w
  8091  1699  00A3               	movwf	?__div_to_l_+3
  8092  169A  0830               	movf	__div_to_l_@quot+2,w
  8093  169B  00A2               	movwf	?__div_to_l_+2
  8094  169C  082F               	movf	__div_to_l_@quot+1,w
  8095  169D  00A1               	movwf	?__div_to_l_+1
  8096  169E  082E               	movf	__div_to_l_@quot,w
  8097  169F  00A0               	movwf	?__div_to_l_
  8098  16A0  0008               	return
  8099  16A1                     __end_of__div_to_l_:	
  8100  16A1                     PL7:	
  8101  16A1  0084               	movwf	4
  8102  16A2  0800               	movf	0,w
  8103  16A3  00A6               	movwf	??__div_to_l_
  8104  16A4  0A84               	incf	4,f
  8105  16A5  0800               	movf	0,w
  8106  16A6  00A7               	movwf	??__div_to_l_+1
  8107  16A7  0A84               	incf	4,f
  8108  16A8  0800               	movf	0,w
  8109  16A9  00A8               	movwf	??__div_to_l_+2
  8110  16AA  0A84               	incf	4,f
  8111  16AB  0800               	movf	0,w
  8112  16AC  00A9               	movwf	??__div_to_l_+3
  8113  16AD  0008               	return
  8114                           
  8115                           	psect	text675
  8116  156B                     __ptext675:	
  8117 ;; =============== function __div_to_l_ ends ============
  8118                           
  8119                           
  8120 ;; *************** function __tdiv_to_l_ *****************
  8121 ;; Defined at:
  8122 ;;		line 61 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\ftdivl.c"
  8123 ;; Parameters:    Size  Location     Type
  8124 ;;  f1              3    0[BANK0 ] float 
  8125 ;;  f2              3    3[BANK0 ] float 
  8126 ;; Auto vars:     Size  Location     Type
  8127 ;;  quot            4    9[BANK0 ] unsigned long 
  8128 ;;  exp1            1   14[BANK0 ] unsigned char 
  8129 ;;  cntr            1   13[BANK0 ] unsigned char 
  8130 ;; Return value:  Size  Location     Type
  8131 ;;                  4    0[BANK0 ] unsigned long 
  8132 ;; Registers used:
  8133 ;;		wreg, status,2, status,0
  8134 ;; Tracked objects:
  8135 ;;		On entry : 60/0
  8136 ;;		On exit  : 60/0
  8137 ;;		Unchanged: FFF9F/0
  8138 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8139 ;;      Params:         0       6       0       0       0
  8140 ;;      Locals:         0       6       0       0       0
  8141 ;;      Temps:          0       3       0       0       0
  8142 ;;      Totals:         0      15       0       0       0
  8143 ;;Total ram usage:       15 bytes
  8144 ;; Hardware stack levels used:    1
  8145 ;; Hardware stack levels required when called:    2
  8146 ;; This function calls:
  8147 ;;		Nothing
  8148 ;; This function is called by:
  8149 ;;		__doprnt
  8150 ;; This function uses a non-reentrant model
  8151 ;;
  8152  156B                     __tdiv_to_l_:	
  8153                           
  8154                           ; Regs used in __tdiv_to_l_: [wreg+status,2+status,0]
  8155  156B  0820               	movf	__tdiv_to_l_@f1,w
  8156  156C  00A6               	movwf	??__tdiv_to_l_
  8157  156D  0821               	movf	__tdiv_to_l_@f1+1,w
  8158  156E  00A7               	movwf	??__tdiv_to_l_+1
  8159  156F  0822               	movf	__tdiv_to_l_@f1+2,w
  8160  1570  00A8               	movwf	??__tdiv_to_l_+2
  8161  1571  1003               	clrc
  8162  1572  0D27               	rlf	??__tdiv_to_l_+1,w
  8163  1573  0D28               	rlf	??__tdiv_to_l_+2,w
  8164  1574  00AE               	movwf	__tdiv_to_l_@exp1
  8165  1575  08AE               	movf	__tdiv_to_l_@exp1,f
  8166  1576  1D03               	skipz
  8167  1577  2D7D               	goto	l6565
  8168  1578                     l6563:	
  8169  1578  01A0               	clrf	?__tdiv_to_l_
  8170  1579  01A1               	clrf	?__tdiv_to_l_+1
  8171  157A  01A2               	clrf	?__tdiv_to_l_+2
  8172  157B  01A3               	clrf	?__tdiv_to_l_+3
  8173  157C  0008               	return
  8174  157D                     l6565:	
  8175  157D  0823               	movf	__tdiv_to_l_@f2,w
  8176  157E  00A6               	movwf	??__tdiv_to_l_
  8177  157F  0824               	movf	__tdiv_to_l_@f2+1,w
  8178  1580  00A7               	movwf	??__tdiv_to_l_+1
  8179  1581  0825               	movf	__tdiv_to_l_@f2+2,w
  8180  1582  00A8               	movwf	??__tdiv_to_l_+2
  8181  1583  1003               	clrc
  8182  1584  0D27               	rlf	??__tdiv_to_l_+1,w
  8183  1585  0D28               	rlf	??__tdiv_to_l_+2,w
  8184  1586  00AD               	movwf	__tdiv_to_l_@cntr
  8185  1587  08AD               	movf	__tdiv_to_l_@cntr,f
  8186  1588  1903               	btfsc	3,2
  8187  1589  2D78               	goto	l6563
  8188  158A  307F               	movlw	127
  8189  158B  17A1               	bsf	__tdiv_to_l_@f1+1,7
  8190  158C  01A2               	clrf	__tdiv_to_l_@f1+2
  8191  158D  17A4               	bsf	__tdiv_to_l_@f2+1,7
  8192  158E  01A5               	clrf	__tdiv_to_l_@f2+2
  8193  158F  01A9               	clrf	__tdiv_to_l_@quot
  8194  1590  01AA               	clrf	__tdiv_to_l_@quot+1
  8195  1591  01AB               	clrf	__tdiv_to_l_@quot+2
  8196  1592  01AC               	clrf	__tdiv_to_l_@quot+3
  8197  1593  02AE               	subwf	__tdiv_to_l_@exp1,f
  8198  1594  3098               	movlw	152
  8199  1595  072D               	addwf	__tdiv_to_l_@cntr,w
  8200  1596  00A6               	movwf	??__tdiv_to_l_
  8201  1597  02AE               	subwf	__tdiv_to_l_@exp1,f
  8202  1598  3018               	movlw	24
  8203  1599  00AD               	movwf	__tdiv_to_l_@cntr
  8204  159A                     l6579:	
  8205  159A  1003               	clrc
  8206  159B  0DA9               	rlf	__tdiv_to_l_@quot,f
  8207  159C  0DAA               	rlf	__tdiv_to_l_@quot+1,f
  8208  159D  0DAB               	rlf	__tdiv_to_l_@quot+2,f
  8209  159E  0DAC               	rlf	__tdiv_to_l_@quot+3,f
  8210  159F  0825               	movf	__tdiv_to_l_@f2+2,w
  8211  15A0  0222               	subwf	__tdiv_to_l_@f1+2,w
  8212  15A1  1D03               	skipz
  8213  15A2  2DA9               	goto	u2325
  8214  15A3  0824               	movf	__tdiv_to_l_@f2+1,w
  8215  15A4  0221               	subwf	__tdiv_to_l_@f1+1,w
  8216  15A5  1D03               	skipz
  8217  15A6  2DA9               	goto	u2325
  8218  15A7  0823               	movf	__tdiv_to_l_@f2,w
  8219  15A8  0220               	subwf	__tdiv_to_l_@f1,w
  8220  15A9                     u2325:	
  8221  15A9  1C03               	skipc
  8222  15AA  2DB7               	goto	L22
  8223  15AB  0823               	movf	__tdiv_to_l_@f2,w
  8224  15AC  02A0               	subwf	__tdiv_to_l_@f1,f
  8225  15AD  0824               	movf	__tdiv_to_l_@f2+1,w
  8226  15AE  1C03               	skipc
  8227  15AF  0F24               	incfsz	__tdiv_to_l_@f2+1,w
  8228  15B0  02A1               	subwf	__tdiv_to_l_@f1+1,f
  8229  15B1  0825               	movf	__tdiv_to_l_@f2+2,w
  8230  15B2  1C03               	skipc
  8231  15B3  0A25               	incf	__tdiv_to_l_@f2+2,w
  8232  15B4  02A2               	subwf	__tdiv_to_l_@f1+2,f
  8233  15B5  1429               	bsf	__tdiv_to_l_@quot,0
  8234  15B6  1003               	clrc
  8235  15B7                     L22:	
  8236  15B7  0DA0               	rlf	__tdiv_to_l_@f1,f
  8237  15B8  0DA1               	rlf	__tdiv_to_l_@f1+1,f
  8238  15B9  0DA2               	rlf	__tdiv_to_l_@f1+2,f
  8239  15BA  0BAD               	decfsz	__tdiv_to_l_@cntr,f
  8240  15BB  2D9A               	goto	l6579
  8241  15BC  1FAE               	btfss	__tdiv_to_l_@exp1,7
  8242  15BD  2DCB               	goto	l6599
  8243  15BE  082E               	movf	__tdiv_to_l_@exp1,w
  8244  15BF  3A80               	xorlw	128
  8245  15C0  3E97               	addlw	151
  8246  15C1  1C03               	btfss	3,0
  8247  15C2  2D78               	goto	l6563
  8248  15C3                     l6595:	
  8249  15C3  1003               	clrc
  8250  15C4  0CAC               	rrf	__tdiv_to_l_@quot+3,f
  8251  15C5  0CAB               	rrf	__tdiv_to_l_@quot+2,f
  8252  15C6  0CAA               	rrf	__tdiv_to_l_@quot+1,f
  8253  15C7  0CA9               	rrf	__tdiv_to_l_@quot,f
  8254  15C8  0FAE               	incfsz	__tdiv_to_l_@exp1,f
  8255  15C9  2DC3               	goto	l6595
  8256  15CA  2DD9               	goto	l6605
  8257  15CB                     l6599:	
  8258  15CB  3018               	movlw	24
  8259  15CC  022E               	subwf	__tdiv_to_l_@exp1,w
  8260  15CD  1803               	btfsc	3,0
  8261  15CE  2D78               	goto	l6563
  8262  15CF                     l3634:	
  8263  15CF  08AE               	movf	__tdiv_to_l_@exp1,f
  8264  15D0  1903               	btfsc	3,2
  8265  15D1  2DD9               	goto	l6605
  8266  15D2  1003               	clrc
  8267  15D3  0DA9               	rlf	__tdiv_to_l_@quot,f
  8268  15D4  0DAA               	rlf	__tdiv_to_l_@quot+1,f
  8269  15D5  0DAB               	rlf	__tdiv_to_l_@quot+2,f
  8270  15D6  0DAC               	rlf	__tdiv_to_l_@quot+3,f
  8271  15D7  03AE               	decf	__tdiv_to_l_@exp1,f
  8272  15D8  2DCF               	goto	l3634
  8273  15D9                     l6605:	
  8274  15D9  082C               	movf	__tdiv_to_l_@quot+3,w
  8275  15DA  00A3               	movwf	?__tdiv_to_l_+3
  8276  15DB  082B               	movf	__tdiv_to_l_@quot+2,w
  8277  15DC  00A2               	movwf	?__tdiv_to_l_+2
  8278  15DD  082A               	movf	__tdiv_to_l_@quot+1,w
  8279  15DE  00A1               	movwf	?__tdiv_to_l_+1
  8280  15DF  0829               	movf	__tdiv_to_l_@quot,w
  8281  15E0  00A0               	movwf	?__tdiv_to_l_
  8282  15E1  0008               	return
  8283  15E2                     __end_of__tdiv_to_l_:	
  8284                           
  8285                           	psect	text678
  8286  13C1                     __ptext678:	
  8287 ;; =============== function _send_char ends ============
  8288                           
  8289                           
  8290 ;; *************** function _tx_init *****************
  8291 ;; Defined at:
  8292 ;;		line 96 in file "C:\Users\DELL\Desktop\vxl\mp\dulieubanphim.c"
  8293 ;; Parameters:    Size  Location     Type
  8294 ;;		None
  8295 ;; Auto vars:     Size  Location     Type
  8296 ;;		None
  8297 ;; Return value:  Size  Location     Type
  8298 ;;		None               void
  8299 ;; Registers used:
  8300 ;;		wreg
  8301 ;; Tracked objects:
  8302 ;;		On entry : 60/0
  8303 ;;		On exit  : 60/0
  8304 ;;		Unchanged: FFF9F/0
  8305 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8306 ;;      Params:         0       0       0       0       0
  8307 ;;      Locals:         0       0       0       0       0
  8308 ;;      Temps:          0       0       0       0       0
  8309 ;;      Totals:         0       0       0       0       0
  8310 ;;Total ram usage:        0 bytes
  8311 ;; Hardware stack levels used:    1
  8312 ;; Hardware stack levels required when called:    2
  8313 ;; This function calls:
  8314 ;;		Nothing
  8315 ;; This function is called by:
  8316 ;;		_main
  8317 ;; This function uses a non-reentrant model
  8318 ;;
  8319  13C1                     _tx_init:	
  8320                           
  8321                           ;dulieubanphim.c: 97: SPBRGH = 0x02 ;
  8322                           
  8323                           ; Regs used in _tx_init: [wreg]
  8324  13C1  3002               	movlw	2
  8325  13C2  1683               	bsf	3,5	;RP0=1, select bank1
  8326  13C3  009A               	movwf	26	;volatile
  8327                           
  8328                           ;dulieubanphim.c: 98: SPBRG = 0x08 ;
  8329  13C4  3008               	movlw	8
  8330  13C5  0099               	movwf	25	;volatile
  8331                           
  8332                           ;dulieubanphim.c: 99: SYNC = 0; BRGH =1; BRG16 = 1;
  8333  13C6  1218               	bcf	24,4
  8334  13C7  1518               	bsf	24,2
  8335  13C8  1703               	bsf	3,6	;RP1=1, select bank3
  8336  13C9  1587               	bsf	7,3
  8337                           
  8338                           ;dulieubanphim.c: 100: TX9 =0;
  8339  13CA  1303               	bcf	3,6	;RP1=0, select bank1
  8340  13CB  1318               	bcf	24,6
  8341                           
  8342                           ;dulieubanphim.c: 101: TXEN = 1;
  8343  13CC  1698               	bsf	24,5
  8344                           
  8345                           ;dulieubanphim.c: 102: SPEN =1;
  8346  13CD  1283               	bcf	3,5	;RP0=0, select bank0
  8347  13CE  1798               	bsf	24,7
  8348  13CF  0008               	return
  8349  13D0                     __end_of_tx_init:	
  8350                           
  8351                           	psect	text680
  8352  147D                     __ptext680:	
  8353 ;; =============== function _isprint ends ============
  8354                           
  8355                           
  8356 ;; *************** function _ngat *****************
  8357 ;; Defined at:
  8358 ;;		line 64 in file "C:\Users\DELL\Desktop\vxl\mp\dulieubanphim.c"
  8359 ;; Parameters:    Size  Location     Type
  8360 ;;		None
  8361 ;; Auto vars:     Size  Location     Type
  8362 ;;		None
  8363 ;; Return value:  Size  Location     Type
  8364 ;;		None               void
  8365 ;; Registers used:
  8366 ;;		wreg, status,2, status,0, pclath, cstack
  8367 ;; Tracked objects:
  8368 ;;		On entry : 0/0
  8369 ;;		On exit  : 60/0
  8370 ;;		Unchanged: FFF9F/0
  8371 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8372 ;;      Params:         0       0       0       0       0
  8373 ;;      Locals:         0       0       0       0       0
  8374 ;;      Temps:          2       0       0       0       0
  8375 ;;      Totals:         2       0       0       0       0
  8376 ;;Total ram usage:        2 bytes
  8377 ;; Hardware stack levels used:    1
  8378 ;; Hardware stack levels required when called:    1
  8379 ;; This function calls:
  8380 ;;		_abs
  8381 ;; This function is called by:
  8382 ;;		Interrupt level 1
  8383 ;; This function uses a non-reentrant model
  8384 ;;
  8385  147D                     _ngat:	
  8386                           
  8387                           ;dulieubanphim.c: 65: if(T0IF)
  8388  147D  1D0B               	btfss	11,2
  8389  147E  2CA7               	goto	i1l6535
  8390                           
  8391                           ;dulieubanphim.c: 66: {
  8392                           ;dulieubanphim.c: 67: dem++;
  8393  147F  0AF4               	incf	_dem,f
  8394  1480  1903               	skipnz
  8395  1481  0AF5               	incf	_dem+1,f
  8396                           
  8397                           ;dulieubanphim.c: 68: if(dem == 250)
  8398  1482  0874               	movf	_dem,w
  8399  1483  3AFA               	xorlw	250
  8400  1484  0475               	iorwf	_dem+1,w
  8401  1485  1D03               	skipz
  8402  1486  2CA7               	goto	i1l6535
  8403                           
  8404                           ;dulieubanphim.c: 69: {dem= 0;
  8405  1487  01F4               	clrf	_dem
  8406  1488  01F5               	clrf	_dem+1
  8407                           
  8408                           ;dulieubanphim.c: 70: xung=abs(TMR1-xung_old);
  8409  1489  1283               	bcf	3,5	;RP0=0, select bank0
  8410  148A  1303               	bcf	3,6	;RP1=0, select bank0
  8411  148B  080F               	movf	15,w	;volatile
  8412  148C  00F7               	movwf	?_abs+1
  8413  148D  080E               	movf	14,w	;volatile
  8414  148E  00F6               	movwf	?_abs
  8415  148F  0870               	movf	_xung_old,w
  8416  1490  02F6               	subwf	?_abs,f
  8417  1491  0871               	movf	_xung_old+1,w
  8418  1492  1C03               	skipc
  8419  1493  03F7               	decf	?_abs+1,f
  8420  1494  02F7               	subwf	?_abs+1,f
  8421  1495  24B3               	fcall	_abs
  8422  1496  0876               	movf	?_abs,w
  8423  1497  1683               	bsf	3,5	;RP0=1, select bank1
  8424  1498  00CD               	movwf	_xung^(0+128)
  8425  1499  0877               	movf	?_abs+1,w
  8426  149A  00CE               	movwf	(_xung+1)^(0+128)
  8427  149B  3000               	movlw	0
  8428  149C  1BCE               	btfsc	(_xung+1)^(0+128),7
  8429  149D  30FF               	movlw	255
  8430  149E  00CF               	movwf	(_xung+2)^(0+128)
  8431  149F  00D0               	movwf	(_xung+3)^(0+128)
  8432                           
  8433                           ;dulieubanphim.c: 71: xung_old=TMR1;}
  8434  14A0  1283               	bcf	3,5	;RP0=0, select bank0
  8435  14A1  080E               	movf	14,w	;volatile
  8436  14A2  00F0               	movwf	_xung_old
  8437  14A3  080F               	movf	15,w	;volatile
  8438  14A4  00F1               	movwf	_xung_old+1
  8439  14A5  01F2               	clrf	_xung_old+2
  8440  14A6  01F3               	clrf	_xung_old+3
  8441  14A7                     i1l6535:	
  8442                           
  8443                           ;dulieubanphim.c: 72: }
  8444                           ;dulieubanphim.c: 73: TMR0 = 6;
  8445  14A7  3006               	movlw	6
  8446  14A8  1283               	bcf	3,5	;RP0=0, select bank0
  8447  14A9  1303               	bcf	3,6	;RP1=0, select bank0
  8448  14AA  0081               	movwf	1	;volatile
  8449                           
  8450                           ;dulieubanphim.c: 74: T0IF = 0;
  8451  14AB  110B               	bcf	11,2
  8452  14AC  087B               	movf	??_ngat+1,w
  8453  14AD  008A               	movwf	10
  8454  14AE  0E7A               	swapf	??_ngat^(0+-128),w
  8455  14AF  0083               	movwf	3
  8456  14B0  0EFE               	swapf	126,f
  8457  14B1  0E7E               	swapf	126,w
  8458  14B2  0009               	retfie
  8459  14B3                     __end_of_ngat:	
  8460  14B3                     __ptext681:	
  8461 ;; =============== function _ngat ends ============
  8462                           
  8463                           
  8464 ;; *************** function _abs *****************
  8465 ;; Defined at:
  8466 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\abs.c"
  8467 ;; Parameters:    Size  Location     Type
  8468 ;;  a               2    0[COMMON] int 
  8469 ;; Auto vars:     Size  Location     Type
  8470 ;;		None
  8471 ;; Return value:  Size  Location     Type
  8472 ;;                  2    0[COMMON] int 
  8473 ;; Registers used:
  8474 ;;		wreg, status,2, status,0
  8475 ;; Tracked objects:
  8476 ;;		On entry : 60/0
  8477 ;;		On exit  : 60/0
  8478 ;;		Unchanged: FFF9F/0
  8479 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8480 ;;      Params:         2       0       0       0       0
  8481 ;;      Locals:         0       0       0       0       0
  8482 ;;      Temps:          2       0       0       0       0
  8483 ;;      Totals:         4       0       0       0       0
  8484 ;;Total ram usage:        4 bytes
  8485 ;; Hardware stack levels used:    1
  8486 ;; This function calls:
  8487 ;;		Nothing
  8488 ;; This function is called by:
  8489 ;;		_ngat
  8490 ;; This function uses a non-reentrant model
  8491 ;;
  8492  14B3                     _abs:	
  8493                           
  8494                           ; Regs used in _abs: [wreg+status,2+status,0]
  8495  14B3  1FF7               	btfss	abs@a+1,7
  8496  14B4  0008               	return
  8497  14B5  0976               	comf	abs@a,w
  8498  14B6  00F8               	movwf	??_abs
  8499  14B7  0977               	comf	abs@a+1,w
  8500  14B8  00F9               	movwf	??_abs+1
  8501  14B9  0AF8               	incf	??_abs,f
  8502  14BA  1903               	skipnz
  8503  14BB  0AF9               	incf	??_abs+1,f
  8504  14BC  0878               	movf	??_abs,w
  8505  14BD  00F6               	movwf	?_abs
  8506  14BE  0879               	movf	??_abs+1,w
  8507  14BF  00F7               	movwf	?_abs+1
  8508  14C0  0008               	return
  8509  14C1                     __end_of_abs:	
  8510                           
  8511 ;; =============== function _abs ends ============
  8512  0002                     
  8513                           	psect	intentry
  8514  0004                     __pintentry:	
  8515                           ; Regs used in _ngat: [wreg+status,2+status,0+pclath+cstack]
  8516                           
  8517  0004                     interrupt_function:	
  8518  007E                     saved_w	set	btemp
  8519  0004  00FE               	movwf	btemp
  8520  0005  0E03               	swapf	3,w
  8521  0006  00FA               	movwf	??_ngat
  8522  0007  080A               	movf	10,w
  8523  0008  00FB               	movwf	??_ngat+1
  8524  0009  160A  118A  2C7D   	ljmp	_ngat
  8525                           
  8526                           	psect	functab
  8527  0100                     __pfunctab:	
  8528  0100                     fptable:	
  8529  0100  00FF               	movwf	(btemp+1)& (0+127)
  8530  0101  3001               	movlw	high fptable
  8531  0102  008A               	movwf	10
  8532  0103  087F               	movf	(btemp+1)& (0+127),w
  8533  0104  0782               	addwf	2,f
  8534  0105                     fpbase:	
  8535  0105  2905               	goto	fpbase	; Call via a null pointer and you will get stuck here.
  8536  0106                     fp__putch:	
  8537  0106  120A  118A  2CFA   	ljmp	_putch
  8538  007E                     btemp	set	126	;btemp
  8539  007E                     wtemp0	set	126


HI-TECH Software PICC Macro Assembler V9.83 build 10920 
Symbol Table                                                                                   Tue Dec 06 11:41:01 2022

         ___altoft@exp 002C                      _v 00CA                      pc 0002         ___bmul@product 002A  
        ___altoft@sign 002D           ___awdiv@sign 002B                     fsr 0004    ___wmul@multiplicand 0022  
         ___ftadd@exp1 0057           ___ftadd@exp2 0056          ?_lcd_put_byte 0020           ___ftadd@sign 0055  
                  _GIE 005F                    _RD1 0041                    _RD2 0042                    _RD3 0043  
                  _RD4 0044                    _RD5 0045                    _RD6 0046                    _RD7 0047  
                  _PS0 0408                    _PR2 0092                    _PS1 0409                    _PS2 040A  
                  _PSA 040B                    _TX9 04C6                    _abs 14B3                    _dem 0074  
                  fsr0 0004                    indf 0000           ___awmod@sign 0025      pwm_10bit@data_pwm 002E  
         ___ftdiv@cntr 0037           ___ftdiv@sign 003C                   ?_abs 0076                   l1056 0000  
                 l1090 0000                   l1067 0000                   l1059 0000                   l2234 083B  
                 l2182 0000                   l2191 0000                   l2249 08BE                   l2194 0000  
                 l2179 140E                   l3412 0000                   l2188 0000                   l2356 0000  
                 l3350 0000                   l3440 00A1                   l3345 0000                   l3409 17BF  
                 l3418 0000                   l3370 0000                   l3611 0000                   l3363 0000  
                 l3382 0000                   l3462 0000                   l3543 0000                   l3376 0000  
                 l3529 0000                   l7001 0000                   l3634 15CF                   l3627 0000  
                 l3539 0000                   l7003 0000                   l3619 0000                   l7013 0000  
                 l7021 0000                   l3469 018C                   l7101 017B                   l3670 0000  
                 l3558 0000                   l7015 13F7                   l7031 0000                   l7111 0000  
                 l3496 1543                   l7009 0000                   l7025 0048                   l7017 0000  
                 l7121 0000                   l7113 0000                   l7043 0000                   l7035 005E  
                 l7019 0000                   l7123 0000                   l7115 0000                   l7107 0000  
                 l7211 0000                   l3677 168E                   l3669 166F                   l3597 0000  
                 l7061 0000                   l7053 007B                   l7045 0000                   l7037 0000  
                 l7029 004F                   l7133 0000                   l7125 019F                   l7117 0000  
                 l7109 0000                   l7205 014D                   l7221 0000                   l6511 0000  
                 l7071 0000                   l7055 0080                   l7047 006C                   l7135 0000  
                 l7119 0000                   l7151 0408                   l7207 0158                   l7215 010B  
                 l7231 0000                   l7223 0000                   l7311 0287                   l6505 06E7  
                 l6521 0000                   l6513 0000                   l7081 0000                   l7073 00AC  
                 l7065 0098                   l7049 0000                   l7057 0085                   l7129 0000  
                 l7161 0000                   l7153 0000                   l7145 03F7                   l7217 0116  
                 l7241 05CE                   l7233 05B6                   l7225 0000                   l7305 0242  
                 l7401 0890                   l6515 0000                   l6611 15F9                   l7091 00D3  
                 l7083 0000                   l7067 009D                   l7059 0089                   l7163 0000  
                 l7155 0000                   l7139 0000                   l7227 0000                   l7323 0308  
                 l7315 029E                   l7411 08D8                   l7403 08B9                   l6517 0000  
                 l6509 0000                   l6605 15D9                   l6621 0000                   l6613 15FE  
                 l6701 0000                   l7077 0000                   l7181 042F                   l7173 0423  
                 l7165 0000                   l7157 0000                   l7253 05F2                   l7245 05DA  
                 l7237 05C2                   l7229 0000                   l7261 0000                   l7333 0000  
                 l7341 0517                   l7501 0000                   l7405 0000                   l6519 0000  
                 l6551 0000                   l6623 0000                   l6711 0000                   l7087 0000  
                 l7079 00B7                   l7095 0000                   l7191 0000                   l7175 0000  
                 l7167 0000                   l7159 0000                   l7263 0504                   l7271 0000  
                 l7335 0000                   l7351 0534                   l7343 051D                   l7503 0B04  
                 l7431 0000                   l7423 0000                   l6545 0000                   l6561 0000  
                 l6641 1682                   l6633 0000                   l6625 0000                   l6609 0000  
                 l6705 0000                   l6713 0000                   l6801 0000                   l7089 0000  
                 l7185 0439                   l7177 0000                   l7169 0419                   l7257 05FE  
                 l7249 05E6                   l7265 0505                   l7281 1739                   l7329 034D  
                 l7345 0524                   l7521 0B46                   l7513 0B35                   l7505 0000  
                 l7441 0000                   l7433 0000                   l7425 092C                   l7417 08E8  
                 l7409 08C0                   l6571 0000                   l6563 1578                   l6651 1698  
                 l6643 0000                   l6635 0000                   l6627 162F                   l6619 0000  
                 l6707 17CC                   l6723 17E6                   l6715 17D2                   l6731 0000  
                 l6811 0000                   l6803 036E                   l7187 0000                   l7179 0000  
                 l7195 0000                   l7267 0000                   l7259 0000                   l7275 0000  
                 l7347 0528                   l7355 053B                   l7339 0000                   l7611 0D1E  
                 l7523 0000                   l7435 0000                   l7427 0000                   l7419 0000  
                 l7371 0836                   l6557 0FDA                   l6549 0000                   l6581 0000  
                 l6573 0000                   l6565 157D                   l6645 168A                   l6629 0000  
                 l6725 0000                   l6717 0000                   l6741 0479                   l6733 046B  
                 l6821 0000                   l7189 0000                   l7197 0000                   l7269 050E  
                 l7285 0000                   l7293 0000                   l7357 0000                   l7701 0000  
                 l7621 0D66                   l7605 0D31                   l7533 0B6B                   l7525 0B4C  
                 l7517 0B38                   l7509 0B2D                   l7461 0A0E                   l7453 09C7  
                 l7445 098D                   l7437 0000                   l7613 0D3D                   l7373 0000  
                 l6575 0000                   l6663 0000                   l6655 0000                   l6671 0000  
                 l6719 0000                   l6751 0000                   l6743 0483                   l6831 039C  
                 l6807 0000                   l6903 0000                   l7199 0000                   l7711 0E90  
                 l7703 0E74                   l7615 0000                   l7607 0000                   l7551 0B99  
                 l7535 0000                   l7527 0B51                   l7447 0000                   l7439 0000  
                 l7383 085A                   l7367 082C                   l7359 0000                   l6497 0000  
                 l6585 0000                   l6577 0000                   l6569 0000                   l6665 0000  
                 l6657 0457                   l6681 0000                   l6673 0FE1                   l6753 0000  
                 l6745 0488                   l6737 046F                   l6729 0000                   l6761 1518  
                 l6833 0000                   l6825 0000                   l6809 0377                   l6921 03B3  
                 l6913 0000                   l7289 178D                   l7297 0000                   l7721 0EE7  
                 l7705 0E7D                   l7641 0DA8                   l7633 0D74                   l7609 0D37  
                 l7537 0B71                   l7529 0B5D                   l7481 0000                   l7473 0A4A  
                 l7449 0000                   l7457 09D9                   l7393 0000                   l7385 0000  
                 l7377 083F                   l7369 0000                   l7801 0000                   l6499 0000  
                 l6595 15C3                   l6579 159A                   l6691 0000                   l6755 0000  
                 l6747 048D                   l6739 0474                   l6771 0000                   l6763 0000  
                 l6835 03A4                   l6819 0385                   l6907 0000                   l6915 0000  
                 l7627 0D72                   l7619 0000                   l7571 0BFB                   l7547 0B95  
                 l7539 0B76                   l7483 0000                   l7395 0000                   l7387 0000  
                 l7379 084B                   l7811 0000                   l7803 0000                   l6597 0000  
                 l6589 0000                   l6677 0FE9                   l6693 17B9                   l6781 153F  
                 l6765 0000                   l6757 0000                   l6829 0000                   l6853 0000  
                 l6909 1500                   l6933 03C6                   l6941 03D9                   l6925 03BA  
                 l7717 0000                   l7725 0E97                   l7661 0DFB                   l7645 0DBC  
                 l7573 0C20                   l7565 0C14                   l7485 0A8B                   l7469 0A39  
                 l7389 087F                   l7741 0000                   l7733 0000                   l7821 0000  
                 l7813 072E                   l7805 0000                   l6599 15CB                   l6679 0000  
                 l6687 0000                   l6791 155B                   l6767 0000                   l6759 1513  
                 l6847 144F                   l6855 1474                   l6839 0000                   l6871 1422  
                 l6943 0000                   l6919 0000                   l6951 0000                   l7663 0DFE  
                 l7655 0DE1                   l7639 0000                   l7583 0C51                   l7567 0000  
                 l7559 0BF7                   l7495 0AD0                   l7487 0000                   l7479 0000  
                 l7399 0000                   l7727 080A                   l7735 0000                   l7751 0000  
                 l7815 0000                   l7807 0000                   l6697 0000                   l6689 0000  
                 l6777 1537                   l6769 0000                   l6945 03E1                   l6961 0000  
                 l6953 0000                   l7681 0E3B                   l7649 0DD4                   l7585 0000  
                 l7577 0C2F                   l7569 0C1A                   l7489 0ACE                   l7729 0EED  
                 l7737 0000                   l7745 0000                   l7833 0000                   l7825 07B9  
                 l7817 0000                   l7809 0000                   l7761 0000                   l6787 154D  
                 l6779 0000                   l6795 0000                   l6859 0000                   l6875 1431  
                 l6867 0000                   l6939 0000                   l6971 0000                   l6963 062D  
                 l7691 0E55                   l7667 0E1A                   l7595 0000                   l7579 0000  
                 l7587 0C5A                   l7739 0000                   l7747 0000                   l7835 0000  
                 l7827 07B0                   l7819 0000                   l7771 0000                   l7763 0000  
                 l7755 0000                   l6789 0000                   l6797 0000                   l6877 0000  
                 l6981 0000                   l6973 0000                   l6965 063C                   l6957 0000  
                 l6949 0000                   l7677 0E32                   l7693 0E5B                   l7669 0E1D  
                 l7597 0CDD                   l7589 0C7F                   l7749 0000                   l7837 0000  
                 l7781 0000                   l7773 0000                   l7765 0000                   l7757 0000  
                 l6879 0000                   l6887 0000                   l6983 0000                   l6975 0675  
                 l6967 064C                   l6959 0000                   l6991 0000                   l7695 0E5F  
                 l7687 0E4F                   l7679 0000                   l7791 0000                   l7783 0000  
                 l7775 0000                   l7767 0000                   l7759 0000                   l6897 14D5  
                 l6889 0000                   l6977 0682                   l6969 0000                   l6993 0000  
                 l6985 0000                   l7689 0000                   l7793 0000                   l7785 0000  
                 l7777 0000                   l7769 0000                   l6899 0000                   l6979 0691  
                 l6995 0000                   l6987 0000                   l7699 0E6E                   l7795 0000  
                 l7787 0000                   l7779 0000                   l6989 0000                   l7797 0000  
                 l7789 0000                   l6999 0000                   l7799 0000                   STR_1 107C  
                 STR_2 1099                   STR_3 109F                   STR_4 1096                   STR_5 108B  
                 _BRGH 04C2                   _T0IE 005D                   _T0IF 005A                   _T0CS 040D  
                 u3010 062A                   u3110 067F                   u3030 0639                   u3130 068E  
                 u3050 0649                   u2325 15A9                   u4005 0B5A                   u3150 069E  
                 u3070 0657                   u2415 1653                   u4025 0B7F                   u3090 0672  
                 u3164 06A1                   u3084 065A                   u4215 0DB6                   u3425 01AD  
                 u4225 0DCC                   u4085 0C04                   u2670 0000                   u4095 0C2A  
                 u4265 0DF1                   u2675 151C                   u2835 145D                   u2915 14E8  
                 u4507 06C2                   u4275 0E0C                   u4195 0DA1                   u4517 06CD  
                 u4437 0556                   u4527 06D4                   u4447 0569                   u3840 0000  
                 u2785 038E                   u4537 0612                   u4457 057C                   u4547 0619  
                 u4467 0591                   u4557 065C                   u4477 05A0                   u3925 0A37  
                 u3845 0943                   u2975 03CC                   u4567 0663                   u4487 05AF  
                 u4577 06A3                   u4497 06BB                   u3945 0AFD                   u4587 06AA  
                 u3885 09E3                   u3895 0A18                   _TMR0 0001                   _TMR1 000E  
                 _TMR2 0011                   _SPEN 00C7                   _TXEN 04C5                   _TXIF 0064  
                 _SYNC 04C4                   abs@a 0076                   _main 06EE                   _ngat 147D  
         ___ftpack@arg 0020           ___ftpack@exp 0023           lcd_busy@busy 0021                   btemp 007E  
                 _xung 00CD                   start 000C      ___bmul@multiplier 002B           ___ftmul@cntr 004A  
         ___ftmul@sign 004B           ___fttol@exp1 003A                  ??_abs 0078           ___fttol@lval 0036  
       ??_lcd_put_byte 0021                  _DC1B0 00BC                  _DC1B1 00BD                  ?_main 0076  
                ?_ngat 0076        __end_of___awdiv 03A9        __end_of___lbdiv 17CE        __end_of___ftadd 00E7  
                _BRG16 0C3B        __end_of___awmod 03E6        __end_of___lbmod 17EA        __end_of___ftdiv 01D2  
      __end_of___ftneg 1000                  _ANSEL 0188        __end_of___lldiv 1509        __end_of___ftmul 0455  
      ___awdiv@divisor 0026        __end_of___llmod 147D        __end_of___ftsub 0025        __end_of___fttol 1564  
      ___awdiv@counter 002A                  _SPBRG 0099        __end_of__doprnt 0EF1                  _TXREG 0019  
         ___lltoft@exp 002C                  _scale 01D2        __end_of_isdigit 0FDC          ___ftpack@sign 0024  
                _putch 04FA                  fpbase 0105        __end_of_isprint 06E9                  pclath 000A  
                status 0003                  wtemp0 007E        __end_of_sprintf 13F5        __end_of_tx_init 13D0  
      ___lbdiv@divisor 0025        ___lbdiv@counter 0027           __end_of_main 07FD           __end_of_ngat 14B3  
        lcd_gotoxy@col 0026          lcd_gotoxy@row 0025                 ??_main 006D          ___fttol@sign1 0035  
               ??_ngat 007A   __size_of__tdiv_to_l_ 0077       __end_of___altoft 016A       ___llmod@dividend 0031  
               ?_scale 004C                 _CCPR1L 0015       ___awdiv@dividend 0028                 ?_putch 0036  
     __end_of___ftpack 04A1                 _ANSELH 0189       __end_of___lltoft 0127                 i1l2171 0000  
               _T1SYNC 0082                 i1l6531 0000                 i1l6523 0000                 i1l6533 0000  
               i1l6527 0000                 i1l6535 14A7                 i1l6537 0000                 i1l6539 0000  
         ?_send_string 0076                 _TMR1GE 0086                 _TMR1CS 0081                 _SPBRGH 009A  
               _TMR1ON 0080                 _TMR2ON 0092                 _TRISC0 0438                 _TRISC2 043A  
               _TRISD1 0441                 _TRISD2 0442                 _TRISD3 0443                 _TRISD4 0444  
               _TRISD5 0445                 _TRISD6 0446                 _TRISD7 0447           __doprnt$3206 00A0  
     __end_of_lcd_busy 06DB       __end_of_lcd_init 0605       __end_of_lcd_putc 0544                 ___bmul 0455  
               ___ftge 1413                 ___wmul 0FDF              ??___awdiv 002A              ??___lbdiv 0026  
            ??___ftadd 0052              ??___awmod 0024              ??___lbmod 0021              ??___ftdiv 0034  
            ??___ftneg 0023              ??___lldiv 0028              ??___ftmul 0043              ??___llmod 0035  
            ??___ftsub 005E              ??___fttol 0032              ??__doprnt 0064                 _fround 16AE  
     ___awdiv@quotient 002C        ___awmod@divisor 0020           __doprnt@_val 00AD           __doprnt@flag 00A7  
      ___awmod@counter 0024                 _printf 13D0           __doprnt@fval 00B1           __doprnt@prec 00B4  
        lcd_put_byte@b 0020  ___ftmul@f3_as_product 0047                 fptable 0100                 fptotal 0002  
            ??_isdigit 0020                 saved_w 007E              ??_isprint 0020                 putch@c 0036  
            ??_sprintf 006D              ??_tx_init 0020       ___lbdiv@dividend 0026        ___lbmod@divisor 0020  
           ___altoft@c 0028        ___lbmod@counter 0023   __end_of_lcd_put_byte 06B0             ___ftadd@f1 004C  
           ___ftadd@f2 004F             ___ftge@ff1 0020             ___ftge@ff2 0023             ___ftdiv@f1 0031  
           ___ftdiv@f2 002E             ___ftdiv@f3 0038             ___ftneg@f1 0020    ___bmul@multiplicand 0029  
           ___ftmul@f1 003D             ___ftmul@f2 0040             ___ftsub@f1 005B             ___ftsub@f2 0058  
           ___fttol@f1 002E         __pcstackCOMMON 0076             ___lltoft@c 0028          __end_of_scale 0364  
        __end_of_putch 04FD       ___lbdiv@quotient 0028             __div_to_l_ 15E2      lcd_gotoxy@address 0027  
           __doprnt@ap 0063             __doprnt@pb 00B7        __div_to_l_@exp1 0033        __div_to_l_@cntr 0032  
              ??_scale 004F        __div_to_l_@quot 002E                ??_putch 0037             __pbssBANK1 00C6  
        __div_to_l_@f1 0020          __div_to_l_@f2 0023             __pmaintext 06EE                ?___bmul 0029  
              ?___ftge 0020                ?___wmul 0020             __pintentry 0004     __size_of_send_char 0006  
              _CCP1CON 0017              ?___altoft 0028     __size_of_pwm_10bit 0014                ?_fround 0058  
            ?___ftpack 0020                ?_printf 0069              ?___lltoft 0028                _T1CKPS0 0084  
              _T1CKPS1 0085                _T2CKPS0 0090                _T2CKPS1 0091             _lcd_gotoxy 04FD  
            ?_lcd_busy 0076              ?_lcd_init 0076              ?_lcd_putc 0076   __size_of_send_string 0018  
           _scale$4211 0053        __size_of___bmul 000E        __size_of___ftge 002C                ___awdiv 0364  
              ___lbdiv 17B3                ___ftadd 0025                ___awmod 03A9                ___lbmod 17CE  
              ___ftdiv 016A                ___ftneg 0FF8                ___lldiv 14C1        __size_of___wmul 0019  
              ___ftmul 03E6                ___llmod 143F                ___ftsub 000F                ___fttol 1509  
           ??___altoft 002C                __doprnt 0808             ??___ftpack 0025        __size_of_fround 0105  
           ??___lltoft 002C        __size_of_printf 0010            ?__div_to_l_ 0020                _dpowers 1054  
         __size_of_abs 000E                _isdigit 0FCE       ___awmod@dividend 0022                _isprint 06DB  
              _pwm_dem 00C6          __doprnt@integ 00A4  __size_of_lcd_put_byte 00AB                _sprintf 13E0  
              _tx_init 13C1          __doprnt@width 00AB             ??_lcd_busy 0020             ??_lcd_init 0025  
           ??_lcd_putc 0028   end_of_initialization 00F9         lcd_put_byte@rs 0023      __end_of_send_char 1413  
    __end_of_pwm_10bit 013B        ___lldiv@divisor 0020        ___lldiv@counter 002C                printf@f 00B8  
       __tdiv_to_l_@f1 0020         __tdiv_to_l_@f2 0023          send_char@data 0020          ??__tdiv_to_l_ 0026  
         _lcd_put_byte 0605       ___lbmod@dividend 0022            ?_lcd_gotoxy 0025            ___lbmod@rem 0024  
          ___ftdiv@exp 003B    __size_of__div_to_l_ 00BF            ___ftmul@exp 0046         __end_of___bmul 0463  
       __end_of___ftge 143F         __end_of___wmul 0FF8         __end_of_fround 17B3         __end_of_printf 13E0  
  start_initialization 00E7    __end_of__tdiv_to_l_ 15E2            __end_of_abs 14C1        ___llmod@divisor 002D  
      ___llmod@counter 0035               ??___bmul 002A               ??___ftge 0026    __size_of_lcd_gotoxy 0018  
             ??___wmul 0024            __doprnt@exp 00A9               ??_fround 005B               ??_printf 006D  
    __size_of___altoft 002F             fround@prec 0061      __size_of___ftpack 003E      __size_of___lltoft 001E  
          __pbssCOMMON 0070          __pcstackBANK0 0020          __pcstackBANK1 00A0           _isdigit$3716 0020  
    __size_of_lcd_busy 002B      __size_of_lcd_init 00C1              __doprnt@c 00B6              __doprnt@f 0062  
    __size_of_lcd_putc 002F              __pfunctab 0100               ?___awdiv 0026               ?___lbdiv 0025  
             ?___ftadd 004C               ?___awmod 0020              __ptext650 16AE              __ptext651 04FD  
            __ptext643 13D0               ?___lbmod 0020              __ptext660 06B0              __ptext652 0544  
            __ptext644 13E0              __ptext661 0605              __ptext653 0109              __ptext645 0808  
            __ptext670 17CE              __ptext662 03A9              __ptext654 013B              __ptext646 04FA  
            __ptext671 17B3              __ptext663 14C1              __ptext655 03E6              __ptext647 0515  
            __ptext680 147D              __ptext672 0FDF              __ptext664 1413              __ptext656 016A  
            __ptext648 000F              __ptext681 14B3              __ptext673 0455              __ptext665 0FF8  
            __ptext657 0025              __ptext649 01D2              __ptext674 15E2              __ptext666 143F  
            __ptext658 13F5              __ptext675 156B              __ptext667 0364              __ptext659 0127  
            __ptext676 0FCE              __ptext668 1509              __ptext677 140D              __ptext669 0463  
            __ptext678 13C1              __ptext679 06DB               ?___ftdiv 002E               ?___ftneg 0020  
             ?___lldiv 0020               ?___ftmul 003D               ?___llmod 002D               ?___ftsub 0058  
            __npowers_ 1006               ?___fttol 002E               ?__doprnt 0062              __pstrings 1000  
          __tdiv_to_l_ 156B           ??__div_to_l_ 0026               ?_isdigit 0076               ?_isprint 0076  
             ?_sprintf 0069               ?_tx_init 0076         __size_of_scale 0192         __size_of_putch 0003  
        ??_send_string 0021      interrupt_function 0004         ___wmul@product 0024              _send_char 140D  
            _pwm_10bit 0127     __end_of__div_to_l_ 16A1            __stringbase 1005      ___wmul@multiplier 0020  
            lcd_putc@c 0028           ??_lcd_gotoxy 0026       lcd_put_byte@temp 0024           _isprint$3719 0020  
           ?_send_char 0076             ?_pwm_10bit 002E           send_string@s 0021    __end_of_send_string 140D  
   __end_of_lcd_gotoxy 0515       __size_of___awdiv 0045       __size_of___lbdiv 001B       __size_of___ftadd 00C2  
     __size_of___awmod 003D       __size_of___lbmod 001C       __size_of___ftdiv 0068       __size_of___ftneg 0008  
     __size_of___lldiv 0048               ___altoft 013B       __size_of___ftmul 006F       __size_of___llmod 003E  
     __size_of___ftsub 0016       __size_of___fttol 005B               ___ftpack 0463       __size_of__doprnt 06E9  
          _fround$4210 005B            _fround$4209 005E               ___lltoft 0109       __size_of_isdigit 000E  
     __size_of_isprint 000E               __powers_ 102D               _lcd_busy 06B0               _lcd_init 0544  
             _lcd_putc 0515       __size_of_sprintf 0015       __size_of_tx_init 000F          __size_of_main 010F  
        __size_of_ngat 0036               fp__putch 0106               main@data 00BC               _xung_old 0070  
             isdigit@c 0021               scale@scl 0056               intlevel1 0100              sprintf@ap 00B9  
            sprintf@pb 00BA       __tdiv_to_l_@exp1 002E       __tdiv_to_l_@cntr 002D              sprintf@wh 00B8  
     __tdiv_to_l_@quot 0029            _send_string 13F5       ___lldiv@dividend 0024               isprint@c 0021  
          ??_send_char 0020            ??_pwm_10bit 0030              stringcode 1000               printf@ap 00B9  
             printf@pb 00BA           ?__tdiv_to_l_ 0020               sprintf@f 0069       ___lldiv@quotient 0028  
             stringdir 1000               stringtab 1000  
