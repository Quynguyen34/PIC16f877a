

HI-TECH Software PIC PRO Macro Assembler V9.83 build 10920 
                                                                                               Tue Dec 06 11:04:58 2022

HI-TECH Software Omniscient Code Generator (PRO mode) build 10920
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	config,global,class=CONFIG,delta=2
     5                           	psect	strings,global,class=STRING,delta=2
     6                           	psect	cinit,global,class=CODE,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	maintext,global,class=CODE,delta=2
    12                           	psect	text517,local,class=CODE,delta=2
    13                           	psect	text520,local,class=CODE,delta=2
    14                           	psect	text522,local,class=CODE,delta=2
    15                           	psect	text523,local,class=CODE,delta=2
    16                           	psect	text525,local,class=CODE,delta=2
    17                           	psect	text543,local,class=CODE,delta=2
    18                           	psect	text547,local,class=CODE,delta=2
    19                           	psect	intentry,global,class=CODE,delta=2
    20                           	psect	text548,local,class=CODE,delta=2
    21                           	psect	pa_nodes,global,class=CODE,delta=2
    22                           	dabs	1,0x7E,2
    23  000A                     	;#
    24                           
    25                           	psect	config
    26  2007  E3C2               	dw	58306	;#
    27                           
    28                           	psect	strings
    29  1000                     __pstrings:	
    30  1000                     stringtab:	
    31                           ;	global	stringdir,stringtab,__stringbase
    32                           
    33  1000                     stringcode:	
    34                           ;	String table - string pointers are 1 byte each
    35                           
    36  1000                     stringdir:	
    37  1000  3010               	movlw	high stringdir
    38  1001  008A               	movwf	10
    39  1002  0804               	movf	4,w
    40  1003  0A84               	incf	4,f
    41  1004  0782               	addwf	2,f
    42  1005                     __stringbase:	
    43  1005  3400               	retlw	0
    44  1006                     __npowers_:	
    45  1006  3400               	retlw	0
    46  1007  3480               	retlw	128
    47  1008  343F               	retlw	63
    48  1009  34CD               	retlw	205
    49  100A  34CC               	retlw	204
    50  100B  343D               	retlw	61
    51  100C  34D7               	retlw	215
    52  100D  3423               	retlw	35
    53  100E  343C               	retlw	60
    54  100F  3412               	retlw	18
    55  1010  3483               	retlw	131
    56  1011  343A               	retlw	58
    57  1012  34B7               	retlw	183
    58  1013  34D1               	retlw	209
    59  1014  3438               	retlw	56
    60  1015  34C6               	retlw	198
    61  1016  3427               	retlw	39
    62  1017  3437               	retlw	55
    63  1018  3438               	retlw	56
    64  1019  3486               	retlw	134
    65  101A  3435               	retlw	53
    66  101B  34C0               	retlw	192
    67  101C  34D6               	retlw	214
    68  101D  3433               	retlw	51
    69  101E  34CC               	retlw	204
    70  101F  342B               	retlw	43
    71  1020  3432               	retlw	50
    72  1021  3470               	retlw	112
    73  1022  3489               	retlw	137
    74  1023  3430               	retlw	48
    75  1024  34E7               	retlw	231
    76  1025  34DB               	retlw	219
    77  1026  342E               	retlw	46
    78  1027  34E5               	retlw	229
    79  1028  343C               	retlw	60
    80  1029  341E               	retlw	30
    81  102A  3442               	retlw	66
    82  102B  34A2               	retlw	162
    83  102C  340D               	retlw	13
    84  102D                     __powers_:	
    85  102D  3400               	retlw	0
    86  102E  3480               	retlw	128
    87  102F  343F               	retlw	63
    88  1030  3400               	retlw	0
    89  1031  3420               	retlw	32
    90  1032  3441               	retlw	65
    91  1033  3400               	retlw	0
    92  1034  34C8               	retlw	200
    93  1035  3442               	retlw	66
    94  1036  3400               	retlw	0
    95  1037  347A               	retlw	122
    96  1038  3444               	retlw	68
    97  1039  3440               	retlw	64
    98  103A  341C               	retlw	28
    99  103B  3446               	retlw	70
   100  103C  3450               	retlw	80
   101  103D  34C3               	retlw	195
   102  103E  3447               	retlw	71
   103  103F  3424               	retlw	36
   104  1040  3474               	retlw	116
   105  1041  3449               	retlw	73
   106  1042  3497               	retlw	151
   107  1043  3418               	retlw	24
   108  1044  344B               	retlw	75
   109  1045  34BC               	retlw	188
   110  1046  34BE               	retlw	190
   111  1047  344C               	retlw	76
   112  1048  346B               	retlw	107
   113  1049  346E               	retlw	110
   114  104A  344E               	retlw	78
   115  104B  3403               	retlw	3
   116  104C  3415               	retlw	21
   117  104D  3450               	retlw	80
   118  104E  3479               	retlw	121
   119  104F  34AD               	retlw	173
   120  1050  3460               	retlw	96
   121  1051  34F3               	retlw	243
   122  1052  3449               	retlw	73
   123  1053  3471               	retlw	113
   124  1054                     _dpowers:	
   125  1054  3401               	retlw	1
   126  1055  3400               	retlw	0
   127  1056  3400               	retlw	0
   128  1057  3400               	retlw	0
   129  1058  340A               	retlw	10
   130  1059  3400               	retlw	0
   131  105A  3400               	retlw	0
   132  105B  3400               	retlw	0
   133  105C  3464               	retlw	100
   134  105D  3400               	retlw	0
   135  105E  3400               	retlw	0
   136  105F  3400               	retlw	0
   137  1060  34E8               	retlw	232
   138  1061  3403               	retlw	3
   139  1062  3400               	retlw	0
   140  1063  3400               	retlw	0
   141  1064  3410               	retlw	16
   142  1065  3427               	retlw	39
   143  1066  3400               	retlw	0
   144  1067  3400               	retlw	0
   145  1068  34A0               	retlw	160
   146  1069  3486               	retlw	134
   147  106A  3401               	retlw	1
   148  106B  3400               	retlw	0
   149  106C  3440               	retlw	64
   150  106D  3442               	retlw	66
   151  106E  340F               	retlw	15
   152  106F  3400               	retlw	0
   153  1070  3480               	retlw	128
   154  1071  3496               	retlw	150
   155  1072  3498               	retlw	152
   156  1073  3400               	retlw	0
   157  1074  3400               	retlw	0
   158  1075  34E1               	retlw	225
   159  1076  34F5               	retlw	245
   160  1077  3405               	retlw	5
   161  1078  3400               	retlw	0
   162  1079  34CA               	retlw	202
   163  107A  349A               	retlw	154
   164  107B  343B               	retlw	59
   165  000E                     _TMR1	set	14
   166  000F                     _TMR1H	set	15
   167  000E                     _TMR1L	set	14
   168  005F                     _GIE	set	95
   169  005E                     _PEIE	set	94
   170  0031                     _RB1	set	49
   171  005B                     _RBIE	set	91
   172  0058                     _RBIF	set	88
   173  0041                     _RD1	set	65
   174  0042                     _RD2	set	66
   175  0043                     _RD3	set	67
   176  0044                     _RD4	set	68
   177  0045                     _RD5	set	69
   178  0046                     _RD6	set	70
   179  0047                     _RD7	set	71
   180  0049                     _RE1	set	73
   181  0084                     _T1CKPS0	set	132
   182  0085                     _T1CKPS1	set	133
   183  0082                     _T1SYNC	set	130
   184  0081                     _TMR1CS	set	129
   185  0086                     _TMR1GE	set	134
   186  0080                     _TMR1ON	set	128
   187  0096                     _IOCB	set	150
   188  0431                     _TRISB1	set	1073
   189  0438                     _TRISC0	set	1080
   190  0441                     _TRISD1	set	1089
   191  0442                     _TRISD2	set	1090
   192  0443                     _TRISD3	set	1091
   193  0444                     _TRISD4	set	1092
   194  0445                     _TRISD5	set	1093
   195  0446                     _TRISD6	set	1094
   196  0447                     _TRISD7	set	1095
   197  0448                     _TRISE0	set	1096
   198  0449                     _TRISE1	set	1097
   199  0188                     _ANSEL	set	392
   200  0189                     _ANSELH	set	393
   201  107C                     STR_1:	
   202  107C  3478               	retlw	120	;'x'
   203  107D  3475               	retlw	117	;'u'
   204  107E  346E               	retlw	110	;'n'
   205  107F  3467               	retlw	103	;'g'
   206  1080  343A               	retlw	58	;':'
   207  1081  3420               	retlw	32	;' '
   208  1082  3425               	retlw	37	;'%'
   209  1083  3430               	retlw	48	;'0'
   210  1084  3438               	retlw	56	;'8'
   211  1085  3475               	retlw	117	;'u'
   212  1086  3400               	retlw	0
   213  1087                     STR_2:	
   214  1087  3466               	retlw	102	;'f'
   215  1088  343A               	retlw	58	;':'
   216  1089  3420               	retlw	32	;' '
   217  108A  3425               	retlw	37	;'%'
   218  108B  3435               	retlw	53	;'5'
   219  108C  342E               	retlw	46	;'.'
   220  108D  3432               	retlw	50	;'2'
   221  108E  3466               	retlw	102	;'f'
   222  108F  3400               	retlw	0
   223                           
   224                           	psect	cinit
   225  079B                     start_initialization:	
   226                           
   227                           ; Clear objects allocated to BANK0
   228  079B  01E2               	clrf	__pbssBANK0& (0+127)
   229  079C  01E3               	clrf	(__pbssBANK0+1)& (0+127)
   230  079D  01E4               	clrf	(__pbssBANK0+2)& (0+127)
   231  079E  01E5               	clrf	(__pbssBANK0+3)& (0+127)
   232  079F  01E6               	clrf	(__pbssBANK0+4)& (0+127)
   233  07A0  01E7               	clrf	(__pbssBANK0+5)& (0+127)
   234  07A1  01E8               	clrf	(__pbssBANK0+6)& (0+127)
   235  07A2  01E9               	clrf	(__pbssBANK0+7)& (0+127)
   236  07A3  01EA               	clrf	(__pbssBANK0+8)& (0+127)
   237  07A4  01EB               	clrf	(__pbssBANK0+9)& (0+127)
   238  07A5                     end_of_initialization:	
   239                           ;End of C runtime variable initialization code
   240                           
   241  07A5  0183               	clrf	3
   242  07A6  160A  118A  2E8B   	ljmp	_main	;jump to C main() function
   243                           
   244                           	psect	bssBANK0
   245  0062                     __pbssBANK0:	
   246  0062                     _xung:	
   247  0062                     	ds	4
   248  0066                     _d:	
   249  0066                     	ds	3
   250  0069                     _t:	
   251  0069                     	ds	3
   252                           
   253                           	psect	cstackBANK1
   254  00A0                     __pcstackBANK1:	
   255  00A0                     _printf$3160:	
   256                           
   257                           ; 4 bytes @ 0x0
   258  00A0                     	ds	4
   259  00A4                     printf@ap:	
   260                           
   261                           ; 1 bytes @ 0x4
   262  00A4                     	ds	1
   263  00A5                     printf@integ:	
   264                           
   265                           ; 3 bytes @ 0x5
   266  00A5                     	ds	3
   267  00A8                     printf@_val:	
   268                           
   269                           ; 4 bytes @ 0x8
   270  00A8                     	ds	4
   271  00AC                     printf@f:	
   272                           
   273                           ; 1 bytes @ 0xC
   274  00AC                     	ds	1
   275  00AD                     printf@flag:	
   276                           
   277                           ; 2 bytes @ 0xD
   278  00AD                     	ds	2
   279  00AF                     printf@exp:	
   280                           
   281                           ; 2 bytes @ 0xF
   282  00AF                     	ds	2
   283  00B1                     printf@width:	
   284                           
   285                           ; 2 bytes @ 0x11
   286  00B1                     	ds	2
   287  00B3                     printf@fval:	
   288                           
   289                           ; 3 bytes @ 0x13
   290  00B3                     	ds	3
   291  00B6                     printf@prec:	
   292                           
   293                           ; 2 bytes @ 0x16
   294  00B6                     	ds	2
   295  00B8                     printf@c:	
   296                           
   297                           ; 1 bytes @ 0x18
   298  00B8                     	ds	1
   299                           
   300                           	psect	cstackCOMMON
   301  0070                     __pcstackCOMMON:	
   302  0070                     ?_isprint:	
   303  0070                     ?_isdigit:	
   304                           ; 1 bit 
   305                           
   306  0070                     ?_lcd_init:	
   307                           ; 1 bit 
   308                           
   309  0070                     ?_lcd_putc:	
   310                           ; 0 bytes @ 0x0
   311                           
   312  0070                     ?_main:	
   313                           ; 0 bytes @ 0x0
   314                           
   315  0070                     ?_ngat:	
   316                           ; 0 bytes @ 0x0
   317                           
   318  0070                     ??_ngat:	
   319                           ; 0 bytes @ 0x0
   320                           
   321  0070                     ?_putch:	
   322                           ; 0 bytes @ 0x0
   323                           
   324  0070                     ?_lcd_busy:	
   325                           ; 0 bytes @ 0x0
   326                           
   327                           
   328                           ; 1 bytes @ 0x0
   329  0070                     	ds	2
   330  0072                     ?_lcd_put_byte:	
   331  0072                     ??_lcd_busy:	
   332                           ; 0 bytes @ 0x2
   333                           
   334  0072                     ??_isprint:	
   335                           ; 0 bytes @ 0x2
   336                           
   337  0072                     ??_isdigit:	
   338                           ; 0 bytes @ 0x2
   339                           
   340  0072                     ?___ftge:	
   341                           ; 0 bytes @ 0x2
   342                           
   343  0072                     ?___lbmod:	
   344                           ; 1 bit 
   345                           
   346  0072                     ?___wmul:	
   347                           ; 1 bytes @ 0x2
   348                           
   349  0072                     ?___awmod:	
   350                           ; 2 bytes @ 0x2
   351                           
   352  0072                     ?___ftpack:	
   353                           ; 2 bytes @ 0x2
   354                           
   355  0072                     ?___ftneg:	
   356                           ; 3 bytes @ 0x2
   357                           
   358  0072                     ?__tdiv_to_l_:	
   359                           ; 3 bytes @ 0x2
   360                           
   361  0072                     ?__div_to_l_:	
   362                           ; 4 bytes @ 0x2
   363                           
   364  0072                     ?___lldiv:	
   365                           ; 4 bytes @ 0x2
   366                           
   367  0072                     lcd_put_byte@b:	
   368                           ; 4 bytes @ 0x2
   369                           
   370  0072                     _isdigit$3668:	
   371                           ; 1 bytes @ 0x2
   372                           
   373  0072                     _isprint$3671:	
   374                           ; 1 bytes @ 0x2
   375                           
   376  0072                     ___lbmod@divisor:	
   377                           ; 1 bytes @ 0x2
   378                           
   379  0072                     ___wmul@multiplier:	
   380                           ; 1 bytes @ 0x2
   381                           
   382  0072                     ___awmod@divisor:	
   383                           ; 2 bytes @ 0x2
   384                           
   385  0072                     ___ftneg@f1:	
   386                           ; 2 bytes @ 0x2
   387                           
   388  0072                     ___ftge@ff1:	
   389                           ; 3 bytes @ 0x2
   390                           
   391  0072                     __tdiv_to_l_@f1:	
   392                           ; 3 bytes @ 0x2
   393                           
   394  0072                     __div_to_l_@f1:	
   395                           ; 3 bytes @ 0x2
   396                           
   397  0072                     ___ftpack@arg:	
   398                           ; 3 bytes @ 0x2
   399                           
   400  0072                     ___lldiv@divisor:	
   401                           ; 3 bytes @ 0x2
   402                           
   403                           
   404                           ; 4 bytes @ 0x2
   405  0072                     	ds	1
   406  0073                     ??_lcd_put_byte:	
   407  0073                     ??___lbmod:	
   408                           ; 0 bytes @ 0x3
   409                           
   410  0073                     lcd_busy@busy:	
   411                           ; 0 bytes @ 0x3
   412                           
   413  0073                     isdigit@c:	
   414                           ; 1 bytes @ 0x3
   415                           
   416  0073                     isprint@c:	
   417                           ; 1 bytes @ 0x3
   418                           
   419                           
   420                           ; 1 bytes @ 0x3
   421  0073                     	ds	1
   422  0074                     ___lbmod@dividend:	
   423  0074                     ___wmul@multiplicand:	
   424                           ; 1 bytes @ 0x4
   425                           
   426  0074                     ___awmod@dividend:	
   427                           ; 2 bytes @ 0x4
   428                           
   429                           
   430                           ; 2 bytes @ 0x4
   431  0074                     	ds	1
   432  0075                     ??___ftneg:	
   433  0075                     lcd_put_byte@rs:	
   434                           ; 0 bytes @ 0x5
   435                           
   436  0075                     ___lbmod@counter:	
   437                           ; 1 bytes @ 0x5
   438                           
   439  0075                     ___ftpack@exp:	
   440                           ; 1 bytes @ 0x5
   441                           
   442  0075                     ___ftge@ff2:	
   443                           ; 1 bytes @ 0x5
   444                           
   445  0075                     __tdiv_to_l_@f2:	
   446                           ; 3 bytes @ 0x5
   447                           
   448  0075                     __div_to_l_@f2:	
   449                           ; 3 bytes @ 0x5
   450                           
   451                           
   452                           ; 3 bytes @ 0x5
   453  0075                     	ds	1
   454  0076                     ??___wmul:	
   455  0076                     ??___awmod:	
   456                           ; 0 bytes @ 0x6
   457                           
   458  0076                     lcd_put_byte@temp:	
   459                           ; 0 bytes @ 0x6
   460                           
   461  0076                     ___lbmod@rem:	
   462                           ; 1 bytes @ 0x6
   463                           
   464  0076                     ___awmod@counter:	
   465                           ; 1 bytes @ 0x6
   466                           
   467  0076                     ___ftpack@sign:	
   468                           ; 1 bytes @ 0x6
   469                           
   470  0076                     ___wmul@product:	
   471                           ; 1 bytes @ 0x6
   472                           
   473  0076                     ___lldiv@dividend:	
   474                           ; 2 bytes @ 0x6
   475                           
   476                           
   477                           ; 4 bytes @ 0x6
   478  0076                     	ds	1
   479  0077                     ?_lcd_gotoxy:	
   480  0077                     ??___ftpack:	
   481                           ; 0 bytes @ 0x7
   482                           
   483  0077                     ??_lcd_init:	
   484                           ; 0 bytes @ 0x7
   485                           
   486  0077                     ?___lbdiv:	
   487                           ; 0 bytes @ 0x7
   488                           
   489  0077                     lcd_gotoxy@row:	
   490                           ; 1 bytes @ 0x7
   491                           
   492  0077                     ___lbdiv@divisor:	
   493                           ; 1 bytes @ 0x7
   494                           
   495  0077                     ___awmod@sign:	
   496                           ; 1 bytes @ 0x7
   497                           
   498                           
   499                           ; 1 bytes @ 0x7
   500  0077                     	ds	1
   501  0078                     ??_lcd_gotoxy:	
   502  0078                     ??__tdiv_to_l_:	
   503                           ; 0 bytes @ 0x8
   504                           
   505  0078                     ??___lbdiv:	
   506                           ; 0 bytes @ 0x8
   507                           
   508  0078                     ??___ftge:	
   509                           ; 0 bytes @ 0x8
   510                           
   511  0078                     ?___awdiv:	
   512                           ; 0 bytes @ 0x8
   513                           
   514  0078                     lcd_gotoxy@col:	
   515                           ; 2 bytes @ 0x8
   516                           
   517  0078                     ___lbdiv@dividend:	
   518                           ; 1 bytes @ 0x8
   519                           
   520  0078                     ___awdiv@divisor:	
   521                           ; 1 bytes @ 0x8
   522                           
   523                           
   524                           ; 2 bytes @ 0x8
   525  0078                     	ds	1
   526  0079                     lcd_gotoxy@address:	
   527  0079                     ___lbdiv@counter:	
   528                           ; 1 bytes @ 0x9
   529                           
   530                           
   531                           ; 1 bytes @ 0x9
   532  0079                     	ds	1
   533  007A                     ??_lcd_putc:	
   534  007A                     ??___llmod:	
   535                           ; 0 bytes @ 0xA
   536                           
   537  007A                     ??___lldiv:	
   538                           ; 0 bytes @ 0xA
   539                           
   540  007A                     ??___altoft:	
   541                           ; 0 bytes @ 0xA
   542                           
   543  007A                     ??___lltoft:	
   544                           ; 0 bytes @ 0xA
   545                           
   546  007A                     lcd_putc@c:	
   547                           ; 0 bytes @ 0xA
   548                           
   549  007A                     ___lbdiv@quotient:	
   550                           ; 1 bytes @ 0xA
   551                           
   552  007A                     ___llmod@counter:	
   553                           ; 1 bytes @ 0xA
   554                           
   555  007A                     ___altoft@exp:	
   556                           ; 1 bytes @ 0xA
   557                           
   558  007A                     ___lltoft@exp:	
   559                           ; 1 bytes @ 0xA
   560                           
   561  007A                     ___awdiv@dividend:	
   562                           ; 1 bytes @ 0xA
   563                           
   564                           
   565                           ; 2 bytes @ 0xA
   566  007A                     	ds	1
   567  007B                     ??_putch:	
   568  007B                     ?___bmul:	
   569                           ; 0 bytes @ 0xB
   570                           
   571  007B                     putch@c:	
   572                           ; 1 bytes @ 0xB
   573                           
   574  007B                     ___bmul@multiplicand:	
   575                           ; 1 bytes @ 0xB
   576                           
   577  007B                     ___altoft@sign:	
   578                           ; 1 bytes @ 0xB
   579                           
   580                           
   581                           ; 1 bytes @ 0xB
   582  007B                     	ds	1
   583  007C                     ??_fround:	
   584  007C                     ??___bmul:	
   585                           ; 0 bytes @ 0xC
   586                           
   587  007C                     ??___ftsub:	
   588                           ; 0 bytes @ 0xC
   589                           
   590  007C                     ??___awdiv:	
   591                           ; 0 bytes @ 0xC
   592                           
   593                           
   594                           	psect	cstackBANK0
   595  0020                     __pcstackBANK0:	
   596                           ; 0 bytes @ 0xC
   597                           
   598  0020                     ??__div_to_l_:	
   599  0020                     ?___altoft:	
   600                           ; 0 bytes @ 0x0
   601                           
   602  0020                     ?___lltoft:	
   603                           ; 3 bytes @ 0x0
   604                           
   605  0020                     ___bmul@product:	
   606                           ; 3 bytes @ 0x0
   607                           
   608  0020                     ___awdiv@counter:	
   609                           ; 1 bytes @ 0x0
   610                           
   611  0020                     ___lldiv@quotient:	
   612                           ; 1 bytes @ 0x0
   613                           
   614  0020                     ___altoft@c:	
   615                           ; 4 bytes @ 0x0
   616                           
   617  0020                     ___lltoft@c:	
   618                           ; 4 bytes @ 0x0
   619                           
   620  0020                     __tdiv_to_l_@quot:	
   621                           ; 4 bytes @ 0x0
   622                           
   623                           
   624                           ; 4 bytes @ 0x0
   625  0020                     	ds	1
   626  0021                     ___bmul@multiplier:	
   627  0021                     ___awdiv@sign:	
   628                           ; 1 bytes @ 0x1
   629                           
   630                           
   631                           ; 1 bytes @ 0x1
   632  0021                     	ds	1
   633  0022                     ___awdiv@quotient:	
   634                           
   635                           ; 2 bytes @ 0x2
   636  0022                     	ds	2
   637  0024                     ?___fttol:	
   638  0024                     ___lldiv@counter:	
   639                           ; 4 bytes @ 0x4
   640                           
   641  0024                     __tdiv_to_l_@cntr:	
   642                           ; 1 bytes @ 0x4
   643                           
   644  0024                     ___fttol@f1:	
   645                           ; 1 bytes @ 0x4
   646                           
   647                           
   648                           ; 3 bytes @ 0x4
   649  0024                     	ds	1
   650  0025                     ?___llmod:	
   651  0025                     __tdiv_to_l_@exp1:	
   652                           ; 4 bytes @ 0x5
   653                           
   654  0025                     ___llmod@divisor:	
   655                           ; 1 bytes @ 0x5
   656                           
   657                           
   658                           ; 4 bytes @ 0x5
   659  0025                     	ds	3
   660  0028                     ??___fttol:	
   661  0028                     __div_to_l_@quot:	
   662                           ; 0 bytes @ 0x8
   663                           
   664                           
   665                           ; 4 bytes @ 0x8
   666  0028                     	ds	1
   667  0029                     ___llmod@dividend:	
   668                           
   669                           ; 4 bytes @ 0x9
   670  0029                     	ds	2
   671  002B                     ___fttol@sign1:	
   672                           
   673                           ; 1 bytes @ 0xB
   674  002B                     	ds	1
   675  002C                     __div_to_l_@cntr:	
   676  002C                     ___fttol@lval:	
   677                           ; 1 bytes @ 0xC
   678                           
   679                           
   680                           ; 4 bytes @ 0xC
   681  002C                     	ds	1
   682  002D                     __div_to_l_@exp1:	
   683                           
   684                           ; 1 bytes @ 0xD
   685  002D                     	ds	3
   686  0030                     ___fttol@exp1:	
   687                           
   688                           ; 1 bytes @ 0x10
   689  0030                     	ds	1
   690  0031                     ?___ftmul:	
   691  0031                     ___ftmul@f1:	
   692                           ; 3 bytes @ 0x11
   693                           
   694                           
   695                           ; 3 bytes @ 0x11
   696  0031                     	ds	3
   697  0034                     ___ftmul@f2:	
   698                           
   699                           ; 3 bytes @ 0x14
   700  0034                     	ds	3
   701  0037                     ??___ftmul:	
   702                           
   703                           ; 0 bytes @ 0x17
   704  0037                     	ds	3
   705  003A                     ___ftmul@exp:	
   706                           
   707                           ; 1 bytes @ 0x1A
   708  003A                     	ds	1
   709  003B                     ___ftmul@f3_as_product:	
   710                           
   711                           ; 3 bytes @ 0x1B
   712  003B                     	ds	3
   713  003E                     ___ftmul@cntr:	
   714                           
   715                           ; 1 bytes @ 0x1E
   716  003E                     	ds	1
   717  003F                     ___ftmul@sign:	
   718                           
   719                           ; 1 bytes @ 0x1F
   720  003F                     	ds	1
   721  0040                     ?_scale:	
   722  0040                     ?___ftadd:	
   723                           ; 3 bytes @ 0x20
   724                           
   725  0040                     ___ftadd@f1:	
   726                           ; 3 bytes @ 0x20
   727                           
   728                           
   729                           ; 3 bytes @ 0x20
   730  0040                     	ds	3
   731  0043                     ??_scale:	
   732  0043                     ___ftadd@f2:	
   733                           ; 0 bytes @ 0x23
   734                           
   735                           
   736                           ; 3 bytes @ 0x23
   737  0043                     	ds	3
   738  0046                     ??___ftadd:	
   739                           
   740                           ; 0 bytes @ 0x26
   741  0046                     	ds	1
   742  0047                     _scale$4112:	
   743                           
   744                           ; 3 bytes @ 0x27
   745  0047                     	ds	2
   746  0049                     ___ftadd@sign:	
   747                           
   748                           ; 1 bytes @ 0x29
   749  0049                     	ds	1
   750  004A                     scale@scl:	
   751  004A                     ___ftadd@exp2:	
   752                           ; 1 bytes @ 0x2A
   753                           
   754                           
   755                           ; 1 bytes @ 0x2A
   756  004A                     	ds	1
   757  004B                     ___ftadd@exp1:	
   758                           
   759                           ; 1 bytes @ 0x2B
   760  004B                     	ds	1
   761  004C                     ?_fround:	
   762  004C                     ?___ftsub:	
   763                           ; 3 bytes @ 0x2C
   764                           
   765  004C                     ___ftsub@f2:	
   766                           ; 3 bytes @ 0x2C
   767                           
   768                           
   769                           ; 3 bytes @ 0x2C
   770  004C                     	ds	3
   771  004F                     ___ftsub@f1:	
   772  004F                     _fround$4111:	
   773                           ; 3 bytes @ 0x2F
   774                           
   775                           
   776                           ; 3 bytes @ 0x2F
   777  004F                     	ds	3
   778  0052                     _fround$4110:	
   779                           
   780                           ; 3 bytes @ 0x32
   781  0052                     	ds	3
   782  0055                     fround@prec:	
   783                           
   784                           ; 1 bytes @ 0x35
   785  0055                     	ds	1
   786  0056                     ?_printf:	
   787                           
   788                           ; 2 bytes @ 0x36
   789  0056                     	ds	4
   790  005A                     ??_printf:	
   791                           
   792                           ; 0 bytes @ 0x3A
   793  005A                     	ds	5
   794  005F                     ??_main:	
   795                           
   796                           ; 0 bytes @ 0x3F
   797  005F                     	ds	3
   798                           
   799                           	psect	maintext
   800  168B                     __pmaintext:	
   801 ;;Data sizes: Strings 20, constant 118, data 0, bss 10, persistent 0 stack 0
   802 ;;Auto spaces:   Size  Autos    Used
   803 ;; COMMON          14     12      12
   804 ;; BANK0           80     66      76
   805 ;; BANK1           80     25      25
   806 ;; BANK3           96      0       0
   807 ;; BANK2           96      0       0
   808 ;;
   809 ;; Pointer list with targets:
   810 ;; ?___ftpack	float  size(1) Largest target is 3
   811 ;;		 -> t(BANK0[3]), 
   812 ;;
   813 ;; ?___lldiv	unsigned long  size(1) Largest target is 0
   814 ;;
   815 ;; ?___llmod	unsigned long  size(1) Largest target is 3
   816 ;;		 -> t(BANK0[3]), 
   817 ;;
   818 ;; ?___ftsub	float  size(1) Largest target is 0
   819 ;;
   820 ;; ?___lltoft	float  size(1) Largest target is 0
   821 ;;
   822 ;; ?__tdiv_to_l_	unsigned long  size(1) Largest target is 0
   823 ;;
   824 ;; ?__div_to_l_	unsigned long  size(1) Largest target is 0
   825 ;;
   826 ;; ?___fttol	long  size(1) Largest target is 3
   827 ;;		 -> t(BANK0[3]), 
   828 ;;
   829 ;; ?___ftadd	float  size(1) Largest target is 3
   830 ;;		 -> t(BANK0[3]), 
   831 ;;
   832 ;; ?___ftneg	float  size(1) Largest target is 3
   833 ;;		 -> t(BANK0[3]), 
   834 ;;
   835 ;; ?___awmod	int  size(2) Largest target is 40
   836 ;;		 -> dpowers(CODE[40]), t(BANK0[3]), 
   837 ;;
   838 ;; ?___awdiv	int  size(1) Largest target is 0
   839 ;;
   840 ;; ?_scale	int  size(1) Largest target is 0
   841 ;;
   842 ;; ?___wmul	unsigned int  size(1) Largest target is 0
   843 ;;
   844 ;; ?_fround	unsigned int  size(1) Largest target is 0
   845 ;;
   846 ;; ?___ftmul	float  size(1) Largest target is 0
   847 ;;
   848 ;; ?___altoft	float  size(1) Largest target is 0
   849 ;;
   850 ;; printf@f	PTR const unsigned char  size(1) Largest target is 11
   851 ;;		 -> STR_2(CODE[9]), STR_1(CODE[11]), 
   852 ;;
   853 ;; ?_printf	int  size(1) Largest target is 3
   854 ;;		 -> t(BANK0[3]), 
   855 ;;
   856 ;; printf@ap	PTR void [1] size(1) Largest target is 2
   857 ;;		 -> ?_printf(BANK0[2]), 
   858 ;;
   859 ;; S3149$_cp	PTR const unsigned char  size(1) Largest target is 0
   860 ;;
   861 ;; _val._str._cp	PTR const unsigned char  size(1) Largest target is 0
   862 ;;
   863 ;;
   864 ;; Critical Paths under _main in COMMON
   865 ;;
   866 ;;   _main->___altoft
   867 ;;   _printf->_putch
   868 ;;   _printf->___awdiv
   869 ;;   _putch->_lcd_putc
   870 ;;   _lcd_putc->_lcd_gotoxy
   871 ;;   _scale->___awdiv
   872 ;;   _scale->___bmul
   873 ;;   _fround->___bmul
   874 ;;   _lcd_gotoxy->_lcd_put_byte
   875 ;;   _lcd_init->_lcd_put_byte
   876 ;;   ___lltoft->___ftpack
   877 ;;   ___altoft->___ftpack
   878 ;;   ___ftmul->___altoft
   879 ;;   ___ftmul->___awdiv
   880 ;;   ___ftmul->___bmul
   881 ;;   ___ftadd->___bmul
   882 ;;   ___llmod->___lldiv
   883 ;;   ___awdiv->___awmod
   884 ;;   ___fttol->___awdiv
   885 ;;   ___fttol->___bmul
   886 ;;   ___lbdiv->___lbmod
   887 ;;   ___bmul->___lbdiv
   888 ;;
   889 ;; Critical Paths under _ngat in COMMON
   890 ;;
   891 ;;   None.
   892 ;;
   893 ;; Critical Paths under _main in BANK0
   894 ;;
   895 ;;   _main->_printf
   896 ;;   _printf->_fround
   897 ;;   ___ftsub->___ftadd
   898 ;;   _scale->___ftmul
   899 ;;   _fround->___ftadd
   900 ;;   ___ftmul->___fttol
   901 ;;   ___ftadd->___ftmul
   902 ;;   ___llmod->___lldiv
   903 ;;   ___fttol->___awdiv
   904 ;;
   905 ;; Critical Paths under _ngat in BANK0
   906 ;;
   907 ;;   None.
   908 ;;
   909 ;; Critical Paths under _main in BANK1
   910 ;;
   911 ;;   _main->_printf
   912 ;;
   913 ;; Critical Paths under _ngat in BANK1
   914 ;;
   915 ;;   None.
   916 ;;
   917 ;; Critical Paths under _main in BANK3
   918 ;;
   919 ;;   None.
   920 ;;
   921 ;; Critical Paths under _ngat in BANK3
   922 ;;
   923 ;;   None.
   924 ;;
   925 ;; Critical Paths under _main in BANK2
   926 ;;
   927 ;;   None.
   928 ;;
   929 ;; Critical Paths under _ngat in BANK2
   930 ;;
   931 ;;   None.
   932 ;;
   933 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   934 ;;
   935 ;;
   936 ;;Call Graph Tables:
   937 ;;
   938 ;; ---------------------------------------------------------------------------------
   939 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   940 ;; ---------------------------------------------------------------------------------
   941 ;; (0) _main                                                 3     3      0   12403
   942 ;;                                             63 BANK0      3     3      0
   943 ;;                           _lcd_init
   944 ;;                           ___altoft
   945 ;;                            ___ftmul
   946 ;;                         _lcd_gotoxy
   947 ;;                             _printf
   948 ;; ---------------------------------------------------------------------------------
   949 ;; (1) _printf                                              38    34      4   10964
   950 ;;                                             54 BANK0      9     5      4
   951 ;;                                              0 BANK1     25    25      0
   952 ;;                              _putch
   953 ;;                            _isdigit
   954 ;;                             ___wmul
   955 ;;                             ___ftge
   956 ;;                            ___ftneg
   957 ;;                            ___awdiv
   958 ;;                              _scale
   959 ;;                            ___ftmul
   960 ;;                             _fround
   961 ;;                            ___ftadd
   962 ;;                            ___fttol
   963 ;;                         __div_to_l_
   964 ;;                        __tdiv_to_l_
   965 ;;                           ___lltoft
   966 ;;                            ___ftsub
   967 ;;                            ___lldiv
   968 ;;                            ___llmod
   969 ;; ---------------------------------------------------------------------------------
   970 ;; (2) _putch                                                1     1      0     713
   971 ;;                                             11 COMMON     1     1      0
   972 ;;                           _lcd_putc
   973 ;; ---------------------------------------------------------------------------------
   974 ;; (3) _lcd_putc                                             1     1      0     691
   975 ;;                                             10 COMMON     1     1      0
   976 ;;                       _lcd_put_byte
   977 ;;                           _lcd_busy
   978 ;;                         _lcd_gotoxy
   979 ;;                            _isprint
   980 ;; ---------------------------------------------------------------------------------
   981 ;; (2) ___ftsub                                              6     0      6    1094
   982 ;;                                             44 BANK0      6     0      6
   983 ;;                            ___ftadd
   984 ;;                           ___lltoft (ARG)
   985 ;; ---------------------------------------------------------------------------------
   986 ;; (2) _scale                                               14    11      3    1688
   987 ;;                                             32 BANK0     11     8      3
   988 ;;                            ___awmod
   989 ;;                            ___awdiv
   990 ;;                            ___ftmul
   991 ;;                             ___bmul
   992 ;;                            ___fttol (ARG)
   993 ;; ---------------------------------------------------------------------------------
   994 ;; (2) _fround                                              13    10      3    1215
   995 ;;                                             44 BANK0     10     7      3
   996 ;;                            ___lbmod
   997 ;;                             ___bmul
   998 ;;                            ___lbdiv
   999 ;;                            ___ftmul
  1000 ;;                            ___ftadd (ARG)
  1001 ;; ---------------------------------------------------------------------------------
  1002 ;; (4) _lcd_gotoxy                                           3     2      1     313
  1003 ;;                                              7 COMMON     3     2      1
  1004 ;;                       _lcd_put_byte
  1005 ;;                           _lcd_busy
  1006 ;; ---------------------------------------------------------------------------------
  1007 ;; (1) _lcd_init                                             4     4      0     244
  1008 ;;                                              7 COMMON     3     3      0
  1009 ;;                       _lcd_put_byte
  1010 ;;                           _lcd_busy
  1011 ;; ---------------------------------------------------------------------------------
  1012 ;; (2) ___lltoft                                             5     1      4     278
  1013 ;;                                             10 COMMON     1     1      0
  1014 ;;                                              0 BANK0      4     0      4
  1015 ;;                           ___ftpack
  1016 ;; ---------------------------------------------------------------------------------
  1017 ;; (1) ___altoft                                             6     2      4     347
  1018 ;;                                             10 COMMON     2     2      0
  1019 ;;                                              0 BANK0      4     0      4
  1020 ;;                           ___ftpack
  1021 ;; ---------------------------------------------------------------------------------
  1022 ;; (3) ___ftmul                                             15     9      6     535
  1023 ;;                                             17 BANK0     15     9      6
  1024 ;;                           ___ftpack
  1025 ;;                           ___altoft (ARG)
  1026 ;;                            ___fttol (ARG)
  1027 ;;                            ___awdiv (ARG)
  1028 ;;                            ___awmod (ARG)
  1029 ;;                             ___bmul (ARG)
  1030 ;;                            ___lbdiv (ARG)
  1031 ;;                            ___lbmod (ARG)
  1032 ;; ---------------------------------------------------------------------------------
  1033 ;; (3) ___ftadd                                             12     6      6    1049
  1034 ;;                                             32 BANK0     12     6      6
  1035 ;;                           ___ftpack
  1036 ;;                            ___lbmod (ARG)
  1037 ;;                             ___bmul (ARG)
  1038 ;;                            ___lbdiv (ARG)
  1039 ;;                            ___ftmul (ARG)
  1040 ;; ---------------------------------------------------------------------------------
  1041 ;; (5) _lcd_busy                                             2     2      0      23
  1042 ;;                                              2 COMMON     2     2      0
  1043 ;; ---------------------------------------------------------------------------------
  1044 ;; (5) _lcd_put_byte                                         5     4      1     221
  1045 ;;                                              2 COMMON     5     4      1
  1046 ;; ---------------------------------------------------------------------------------
  1047 ;; (3) ___awmod                                              6     2      4     296
  1048 ;;                                              2 COMMON     6     2      4
  1049 ;; ---------------------------------------------------------------------------------
  1050 ;; (2) ___lldiv                                             13     5      8     162
  1051 ;;                                              2 COMMON     8     0      8
  1052 ;;                                              0 BANK0      5     5      0
  1053 ;; ---------------------------------------------------------------------------------
  1054 ;; (2) ___ftge                                               6     0      6     136
  1055 ;;                                              2 COMMON     6     0      6
  1056 ;; ---------------------------------------------------------------------------------
  1057 ;; (2) ___ftneg                                              3     0      3      45
  1058 ;;                                              2 COMMON     3     0      3
  1059 ;; ---------------------------------------------------------------------------------
  1060 ;; (2) ___llmod                                              9     1      8     159
  1061 ;;                                             10 COMMON     1     1      0
  1062 ;;                                              5 BANK0      8     0      8
  1063 ;;                            ___lldiv (ARG)
  1064 ;; ---------------------------------------------------------------------------------
  1065 ;; (3) ___awdiv                                              8     4      4     300
  1066 ;;                                              8 COMMON     4     0      4
  1067 ;;                                              0 BANK0      4     4      0
  1068 ;;                            ___awmod (ARG)
  1069 ;; ---------------------------------------------------------------------------------
  1070 ;; (2) ___fttol                                             13     9      4     252
  1071 ;;                                              4 BANK0     13     9      4
  1072 ;;                           ___ftpack (ARG)
  1073 ;;                            ___awmod (ARG)
  1074 ;;                            ___awdiv (ARG)
  1075 ;;                             ___bmul (ARG)
  1076 ;; ---------------------------------------------------------------------------------
  1077 ;; (4) ___ftpack                                             8     3      5     209
  1078 ;;                                              2 COMMON     8     3      5
  1079 ;; ---------------------------------------------------------------------------------
  1080 ;; (3) ___lbmod                                              5     4      1     159
  1081 ;;                                              2 COMMON     5     4      1
  1082 ;; ---------------------------------------------------------------------------------
  1083 ;; (3) ___lbdiv                                              4     3      1     162
  1084 ;;                                              7 COMMON     4     3      1
  1085 ;;                            ___lbmod (ARG)
  1086 ;; ---------------------------------------------------------------------------------
  1087 ;; (2) ___wmul                                               6     2      4      92
  1088 ;;                                              2 COMMON     6     2      4
  1089 ;; ---------------------------------------------------------------------------------
  1090 ;; (3) ___bmul                                               3     2      1      68
  1091 ;;                                             11 COMMON     1     0      1
  1092 ;;                                              0 BANK0      2     2      0
  1093 ;;                            ___lbmod (ARG)
  1094 ;;                            ___lbdiv (ARG)
  1095 ;; ---------------------------------------------------------------------------------
  1096 ;; (2) __div_to_l_                                          20    14      6     446
  1097 ;;                                              2 COMMON     6     0      6
  1098 ;;                                              0 BANK0     14    14      0
  1099 ;; ---------------------------------------------------------------------------------
  1100 ;; (2) __tdiv_to_l_                                         15     9      6     303
  1101 ;;                                              2 COMMON     9     3      6
  1102 ;;                                              0 BANK0      6     6      0
  1103 ;; ---------------------------------------------------------------------------------
  1104 ;; (2) _isdigit                                              2     2      0      68
  1105 ;;                                              2 COMMON     2     2      0
  1106 ;; ---------------------------------------------------------------------------------
  1107 ;; (4) _isprint                                              2     2      0      68
  1108 ;;                                              2 COMMON     2     2      0
  1109 ;; ---------------------------------------------------------------------------------
  1110 ;; Estimated maximum stack depth 5
  1111 ;; ---------------------------------------------------------------------------------
  1112 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1113 ;; ---------------------------------------------------------------------------------
  1114 ;; (6) _ngat                                                 2     2      0       0
  1115 ;;                                              0 COMMON     2     2      0
  1116 ;; ---------------------------------------------------------------------------------
  1117 ;; Estimated maximum stack depth 6
  1118 ;; ---------------------------------------------------------------------------------
  1119 ;; Call Graph Graphs:
  1120 ;; _main (ROOT)
  1121 ;;   _lcd_init
  1122 ;;     _lcd_put_byte
  1123 ;;     _lcd_busy
  1124 ;;   ___altoft
  1125 ;;     ___ftpack
  1126 ;;   ___ftmul
  1127 ;;     ___ftpack
  1128 ;;     ___altoft (ARG)
  1129 ;;       ___ftpack
  1130 ;;     ___fttol (ARG)
  1131 ;;       ___ftpack (ARG)
  1132 ;;       ___awmod (ARG)
  1133 ;;       ___awdiv (ARG)
  1134 ;;         ___awmod (ARG)
  1135 ;;       ___bmul (ARG)
  1136 ;;         ___lbmod (ARG)
  1137 ;;         ___lbdiv (ARG)
  1138 ;;           ___lbmod (ARG)
  1139 ;;     ___awdiv (ARG)
  1140 ;;       ___awmod (ARG)
  1141 ;;     ___awmod (ARG)
  1142 ;;     ___bmul (ARG)
  1143 ;;       ___lbmod (ARG)
  1144 ;;       ___lbdiv (ARG)
  1145 ;;         ___lbmod (ARG)
  1146 ;;     ___lbdiv (ARG)
  1147 ;;       ___lbmod (ARG)
  1148 ;;     ___lbmod (ARG)
  1149 ;;   _lcd_gotoxy
  1150 ;;     _lcd_put_byte
  1151 ;;     _lcd_busy
  1152 ;;   _printf
  1153 ;;     _putch
  1154 ;;       _lcd_putc
  1155 ;;         _lcd_put_byte
  1156 ;;         _lcd_busy
  1157 ;;         _lcd_gotoxy
  1158 ;;           _lcd_put_byte
  1159 ;;           _lcd_busy
  1160 ;;         _isprint
  1161 ;;     _isdigit
  1162 ;;     ___wmul
  1163 ;;     ___ftge
  1164 ;;     ___ftneg
  1165 ;;     ___awdiv
  1166 ;;       ___awmod (ARG)
  1167 ;;     _scale
  1168 ;;       ___awmod
  1169 ;;       ___awdiv
  1170 ;;         ___awmod (ARG)
  1171 ;;       ___ftmul
  1172 ;;         ___ftpack
  1173 ;;         ___altoft (ARG)
  1174 ;;           ___ftpack
  1175 ;;         ___fttol (ARG)
  1176 ;;           ___ftpack (ARG)
  1177 ;;           ___awmod (ARG)
  1178 ;;           ___awdiv (ARG)
  1179 ;;             ___awmod (ARG)
  1180 ;;           ___bmul (ARG)
  1181 ;;             ___lbmod (ARG)
  1182 ;;             ___lbdiv (ARG)
  1183 ;;               ___lbmod (ARG)
  1184 ;;         ___awdiv (ARG)
  1185 ;;           ___awmod (ARG)
  1186 ;;         ___awmod (ARG)
  1187 ;;         ___bmul (ARG)
  1188 ;;           ___lbmod (ARG)
  1189 ;;           ___lbdiv (ARG)
  1190 ;;             ___lbmod (ARG)
  1191 ;;         ___lbdiv (ARG)
  1192 ;;           ___lbmod (ARG)
  1193 ;;         ___lbmod (ARG)
  1194 ;;       ___bmul
  1195 ;;         ___lbmod (ARG)
  1196 ;;         ___lbdiv (ARG)
  1197 ;;           ___lbmod (ARG)
  1198 ;;       ___fttol (ARG)
  1199 ;;         ___ftpack (ARG)
  1200 ;;         ___awmod (ARG)
  1201 ;;         ___awdiv (ARG)
  1202 ;;           ___awmod (ARG)
  1203 ;;         ___bmul (ARG)
  1204 ;;           ___lbmod (ARG)
  1205 ;;           ___lbdiv (ARG)
  1206 ;;             ___lbmod (ARG)
  1207 ;;     ___ftmul
  1208 ;;       ___ftpack
  1209 ;;       ___altoft (ARG)
  1210 ;;         ___ftpack
  1211 ;;       ___fttol (ARG)
  1212 ;;         ___ftpack (ARG)
  1213 ;;         ___awmod (ARG)
  1214 ;;         ___awdiv (ARG)
  1215 ;;           ___awmod (ARG)
  1216 ;;         ___bmul (ARG)
  1217 ;;           ___lbmod (ARG)
  1218 ;;           ___lbdiv (ARG)
  1219 ;;             ___lbmod (ARG)
  1220 ;;       ___awdiv (ARG)
  1221 ;;         ___awmod (ARG)
  1222 ;;       ___awmod (ARG)
  1223 ;;       ___bmul (ARG)
  1224 ;;         ___lbmod (ARG)
  1225 ;;         ___lbdiv (ARG)
  1226 ;;           ___lbmod (ARG)
  1227 ;;       ___lbdiv (ARG)
  1228 ;;         ___lbmod (ARG)
  1229 ;;       ___lbmod (ARG)
  1230 ;;     _fround
  1231 ;;       ___lbmod
  1232 ;;       ___bmul
  1233 ;;         ___lbmod (ARG)
  1234 ;;         ___lbdiv (ARG)
  1235 ;;           ___lbmod (ARG)
  1236 ;;       ___lbdiv
  1237 ;;         ___lbmod (ARG)
  1238 ;;       ___ftmul
  1239 ;;         ___ftpack
  1240 ;;         ___altoft (ARG)
  1241 ;;           ___ftpack
  1242 ;;         ___fttol (ARG)
  1243 ;;           ___ftpack (ARG)
  1244 ;;           ___awmod (ARG)
  1245 ;;           ___awdiv (ARG)
  1246 ;;             ___awmod (ARG)
  1247 ;;           ___bmul (ARG)
  1248 ;;             ___lbmod (ARG)
  1249 ;;             ___lbdiv (ARG)
  1250 ;;               ___lbmod (ARG)
  1251 ;;         ___awdiv (ARG)
  1252 ;;           ___awmod (ARG)
  1253 ;;         ___awmod (ARG)
  1254 ;;         ___bmul (ARG)
  1255 ;;           ___lbmod (ARG)
  1256 ;;           ___lbdiv (ARG)
  1257 ;;             ___lbmod (ARG)
  1258 ;;         ___lbdiv (ARG)
  1259 ;;           ___lbmod (ARG)
  1260 ;;         ___lbmod (ARG)
  1261 ;;       ___ftadd (ARG)
  1262 ;;         ___ftpack
  1263 ;;         ___lbmod (ARG)
  1264 ;;         ___bmul (ARG)
  1265 ;;           ___lbmod (ARG)
  1266 ;;           ___lbdiv (ARG)
  1267 ;;             ___lbmod (ARG)
  1268 ;;         ___lbdiv (ARG)
  1269 ;;           ___lbmod (ARG)
  1270 ;;         ___ftmul (ARG)
  1271 ;;           ___ftpack
  1272 ;;           ___altoft (ARG)
  1273 ;;             ___ftpack
  1274 ;;           ___fttol (ARG)
  1275 ;;             ___ftpack (ARG)
  1276 ;;             ___awmod (ARG)
  1277 ;;             ___awdiv (ARG)
  1278 ;;               ___awmod (ARG)
  1279 ;;             ___bmul (ARG)
  1280 ;;               ___lbmod (ARG)
  1281 ;;               ___lbdiv (ARG)
  1282 ;;                 ___lbmod (ARG)
  1283 ;;           ___awdiv (ARG)
  1284 ;;             ___awmod (ARG)
  1285 ;;           ___awmod (ARG)
  1286 ;;           ___bmul (ARG)
  1287 ;;             ___lbmod (ARG)
  1288 ;;             ___lbdiv (ARG)
  1289 ;;               ___lbmod (ARG)
  1290 ;;           ___lbdiv (ARG)
  1291 ;;             ___lbmod (ARG)
  1292 ;;           ___lbmod (ARG)
  1293 ;;     ___ftadd
  1294 ;;       ___ftpack
  1295 ;;       ___lbmod (ARG)
  1296 ;;       ___bmul (ARG)
  1297 ;;         ___lbmod (ARG)
  1298 ;;         ___lbdiv (ARG)
  1299 ;;           ___lbmod (ARG)
  1300 ;;       ___lbdiv (ARG)
  1301 ;;         ___lbmod (ARG)
  1302 ;;       ___ftmul (ARG)
  1303 ;;         ___ftpack
  1304 ;;         ___altoft (ARG)
  1305 ;;           ___ftpack
  1306 ;;         ___fttol (ARG)
  1307 ;;           ___ftpack (ARG)
  1308 ;;           ___awmod (ARG)
  1309 ;;           ___awdiv (ARG)
  1310 ;;             ___awmod (ARG)
  1311 ;;           ___bmul (ARG)
  1312 ;;             ___lbmod (ARG)
  1313 ;;             ___lbdiv (ARG)
  1314 ;;               ___lbmod (ARG)
  1315 ;;         ___awdiv (ARG)
  1316 ;;           ___awmod (ARG)
  1317 ;;         ___awmod (ARG)
  1318 ;;         ___bmul (ARG)
  1319 ;;           ___lbmod (ARG)
  1320 ;;           ___lbdiv (ARG)
  1321 ;;             ___lbmod (ARG)
  1322 ;;         ___lbdiv (ARG)
  1323 ;;           ___lbmod (ARG)
  1324 ;;         ___lbmod (ARG)
  1325 ;;     ___fttol
  1326 ;;       ___ftpack (ARG)
  1327 ;;       ___awmod (ARG)
  1328 ;;       ___awdiv (ARG)
  1329 ;;         ___awmod (ARG)
  1330 ;;       ___bmul (ARG)
  1331 ;;         ___lbmod (ARG)
  1332 ;;         ___lbdiv (ARG)
  1333 ;;           ___lbmod (ARG)
  1334 ;;     __div_to_l_
  1335 ;;     __tdiv_to_l_
  1336 ;;     ___lltoft
  1337 ;;       ___ftpack
  1338 ;;     ___ftsub
  1339 ;;       ___ftadd
  1340 ;;         ___ftpack
  1341 ;;         ___lbmod (ARG)
  1342 ;;         ___bmul (ARG)
  1343 ;;           ___lbmod (ARG)
  1344 ;;           ___lbdiv (ARG)
  1345 ;;             ___lbmod (ARG)
  1346 ;;         ___lbdiv (ARG)
  1347 ;;           ___lbmod (ARG)
  1348 ;;         ___ftmul (ARG)
  1349 ;;           ___ftpack
  1350 ;;           ___altoft (ARG)
  1351 ;;             ___ftpack
  1352 ;;           ___fttol (ARG)
  1353 ;;             ___ftpack (ARG)
  1354 ;;             ___awmod (ARG)
  1355 ;;             ___awdiv (ARG)
  1356 ;;               ___awmod (ARG)
  1357 ;;             ___bmul (ARG)
  1358 ;;               ___lbmod (ARG)
  1359 ;;               ___lbdiv (ARG)
  1360 ;;                 ___lbmod (ARG)
  1361 ;;           ___awdiv (ARG)
  1362 ;;             ___awmod (ARG)
  1363 ;;           ___awmod (ARG)
  1364 ;;           ___bmul (ARG)
  1365 ;;             ___lbmod (ARG)
  1366 ;;             ___lbdiv (ARG)
  1367 ;;               ___lbmod (ARG)
  1368 ;;           ___lbdiv (ARG)
  1369 ;;             ___lbmod (ARG)
  1370 ;;           ___lbmod (ARG)
  1371 ;;       ___lltoft (ARG)
  1372 ;;         ___ftpack
  1373 ;;     ___lldiv
  1374 ;;     ___llmod
  1375 ;;       ___lldiv (ARG)
  1376 ;;
  1377 ;; _ngat (ROOT)
  1378 ;;
  1379 ;; Address spaces:
  1380 ;;Name               Size   Autos  Total    Cost      Usage
  1381 ;;BITCOMMON            E      0       0       0        0.0%
  1382 ;;EEDATA             100      0       0       0        0.0%
  1383 ;;NULL                 0      0       0       0        0.0%
  1384 ;;CODE                 0      0       0       0        0.0%
  1385 ;;COMMON               E      C       C       1       85.7%
  1386 ;;BITSFR0              0      0       0       1        0.0%
  1387 ;;SFR0                 0      0       0       1        0.0%
  1388 ;;BITSFR1              0      0       0       2        0.0%
  1389 ;;SFR1                 0      0       0       2        0.0%
  1390 ;;STACK                0      0       5       2        0.0%
  1391 ;;ABS                  0      0      71       3        0.0%
  1392 ;;BITBANK0            50      0       0       4        0.0%
  1393 ;;BITSFR3              0      0       0       4        0.0%
  1394 ;;SFR3                 0      0       0       4        0.0%
  1395 ;;BANK0               50     42      4C       5       95.0%
  1396 ;;BITSFR2              0      0       0       5        0.0%
  1397 ;;SFR2                 0      0       0       5        0.0%
  1398 ;;BITBANK1            50      0       0       6        0.0%
  1399 ;;BANK1               50     19      19       7       31.3%
  1400 ;;BITBANK3            60      0       0       8        0.0%
  1401 ;;BANK3               60      0       0       9        0.0%
  1402 ;;BITBANK2            60      0       0      10        0.0%
  1403 ;;BANK2               60      0       0      11        0.0%
  1404 ;;DATA                 0      0      76      12        0.0%
  1405                           
  1406                           
  1407 ;; *************** function _main *****************
  1408 ;; Defined at:
  1409 ;;		line 20 in file "C:\Users\DELL\Desktop\baitap_ttvxl\dotanso_khongdungCCP\dotansodungkoCCP(2).c"
  1410 ;; Parameters:    Size  Location     Type
  1411 ;;		None
  1412 ;; Auto vars:     Size  Location     Type
  1413 ;;		None
  1414 ;; Return value:  Size  Location     Type
  1415 ;;		None               void
  1416 ;; Registers used:
  1417 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1418 ;; Tracked objects:
  1419 ;;		On entry : 17F/0
  1420 ;;		On exit  : 60/20
  1421 ;;		Unchanged: 0/0
  1422 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1423 ;;      Params:         0       0       0       0       0
  1424 ;;      Locals:         0       0       0       0       0
  1425 ;;      Temps:          0       3       0       0       0
  1426 ;;      Totals:         0       3       0       0       0
  1427 ;;Total ram usage:        3 bytes
  1428 ;; Hardware stack levels required when called:    6
  1429 ;; This function calls:
  1430 ;;		_lcd_init
  1431 ;;		___altoft
  1432 ;;		___ftmul
  1433 ;;		_lcd_gotoxy
  1434 ;;		_printf
  1435 ;; This function is called by:
  1436 ;;		Startup code after reset
  1437 ;; This function uses a non-reentrant model
  1438 ;;
  1439  168B                     _main:	
  1440                           
  1441                           ;dotansodungkoCCP(2).c: 21: ANSEL = ANSELH = 0;
  1442                           
  1443                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1444  168B  1683               	bsf	3,5	;RP0=1, select bank3
  1445  168C  1703               	bsf	3,6	;RP1=1, select bank3
  1446  168D  0189               	clrf	9	;volatile
  1447  168E  0188               	clrf	8	;volatile
  1448                           
  1449                           ;dotansodungkoCCP(2).c: 22: lcd_init();
  1450  168F  120A  158A  2300   	fcall	_lcd_init
      +       160A  118A         
  1451                           
  1452                           ;dotansodungkoCCP(2).c: 23: TRISE0 = 0;TRISE1 = 0; RE1 =0;
  1453  1694  1683               	bsf	3,5	;RP0=1, select bank1
  1454  1695  1009               	bcf	9,0
  1455  1696  1089               	bcf	9,1
  1456  1697  1283               	bcf	3,5	;RP0=0, select bank0
  1457  1698  1089               	bcf	9,1
  1458                           
  1459                           ;dotansodungkoCCP(2).c: 24: TRISC0 =1;
  1460  1699  1683               	bsf	3,5	;RP0=1, select bank1
  1461  169A  1407               	bsf	7,0
  1462                           
  1463                           ;dotansodungkoCCP(2).c: 26: TMR1CS = 0;
  1464  169B  1283               	bcf	3,5	;RP0=0, select bank0
  1465  169C  1090               	bcf	16,1
  1466                           
  1467                           ;dotansodungkoCCP(2).c: 27: T1CKPS1 = 0;T1CKPS0 = 0;
  1468  169D  1290               	bcf	16,5
  1469  169E  1210               	bcf	16,4
  1470                           
  1471                           ;dotansodungkoCCP(2).c: 28: T1SYNC = 1;
  1472  169F  1510               	bsf	16,2
  1473                           
  1474                           ;dotansodungkoCCP(2).c: 29: TMR1GE = 0;
  1475  16A0  1310               	bcf	16,6
  1476                           
  1477                           ;dotansodungkoCCP(2).c: 30: TMR1H = 0; TMR1L = 0;
  1478  16A1  018F               	clrf	15	;volatile
  1479  16A2  018E               	clrf	14	;volatile
  1480                           
  1481                           ;dotansodungkoCCP(2).c: 31: TMR1ON = 0;
  1482  16A3  1010               	bcf	16,0
  1483                           
  1484                           ;dotansodungkoCCP(2).c: 38: TRISB1 = 1;
  1485  16A4  1683               	bsf	3,5	;RP0=1, select bank1
  1486  16A5  3002               	movlw	2
  1487  16A6  1486               	bsf	6,1
  1488                           
  1489                           ;dotansodungkoCCP(2).c: 39: IOCB = 0b00000010;
  1490  16A7  0096               	movwf	22	;volatile
  1491                           
  1492                           ;dotansodungkoCCP(2).c: 40: RBIE = 1;
  1493  16A8  158B               	bsf	11,3
  1494                           
  1495                           ;dotansodungkoCCP(2).c: 41: RBIF = 0;
  1496  16A9  100B               	bcf	11,0
  1497                           
  1498                           ;dotansodungkoCCP(2).c: 49: PEIE = 1;
  1499  16AA  170B               	bsf	11,6
  1500                           
  1501                           ;dotansodungkoCCP(2).c: 50: GIE = 1;
  1502  16AB  178B               	bsf	11,7
  1503  16AC                     l7157:	
  1504                           
  1505                           ;dotansodungkoCCP(2).c: 52: {
  1506                           ;dotansodungkoCCP(2).c: 53: _delay((unsigned long)((100)*(20000000/4000.0)));
  1507  16AC  3003               	movlw	3
  1508  16AD  1283               	bcf	3,5	;RP0=0, select bank0
  1509  16AE  00E1               	movwf	??_main+2
  1510  16AF  308A               	movlw	138
  1511  16B0  00E0               	movwf	??_main+1
  1512  16B1  3056               	movlw	86
  1513  16B2  00DF               	movwf	??_main
  1514  16B3                     u3917:	
  1515  16B3  0BDF               	decfsz	??_main,f
  1516  16B4  2EB3               	goto	u3917
  1517  16B5  0BE0               	decfsz	??_main+1,f
  1518  16B6  2EB3               	goto	u3917
  1519  16B7  0BE1               	decfsz	??_main+2,f
  1520  16B8  2EB3               	goto	u3917
  1521  16B9  2EBA               	nop2
  1522                           
  1523                           ;dotansodungkoCCP(2).c: 54: RE1 = 1;
  1524  16BA  1283               	bcf	3,5	;RP0=0, select bank0
  1525  16BB  1303               	bcf	3,6	;RP1=0, select bank0
  1526  16BC  3007               	movlw	7
  1527  16BD  1489               	bsf	9,1
  1528                           
  1529                           ;dotansodungkoCCP(2).c: 55: _delay((unsigned long)((1)*(20000000/4000.0)));
  1530  16BE  00E0               	movwf	??_main+1
  1531  16BF  307D               	movlw	125
  1532  16C0  00DF               	movwf	??_main
  1533  16C1                     u3927:	
  1534  16C1  0BDF               	decfsz	??_main,f
  1535  16C2  2EC1               	goto	u3927
  1536  16C3  0BE0               	decfsz	??_main+1,f
  1537  16C4  2EC1               	goto	u3927
  1538                           
  1539                           ;dotansodungkoCCP(2).c: 56: RE1 = 0;
  1540  16C5  1283               	bcf	3,5	;RP0=0, select bank0
  1541  16C6  1303               	bcf	3,6	;RP1=0, select bank0
  1542  16C7  1089               	bcf	9,1
  1543                           
  1544                           ;dotansodungkoCCP(2).c: 58: xung = TMR1;
  1545  16C8  080E               	movf	14,w	;volatile
  1546  16C9  00E2               	movwf	_xung
  1547  16CA  080F               	movf	15,w	;volatile
  1548  16CB  00E3               	movwf	_xung+1
  1549  16CC  30C0               	movlw	192
  1550  16CD  01E4               	clrf	_xung+2
  1551  16CE  01E5               	clrf	_xung+3
  1552                           
  1553                           ;dotansodungkoCCP(2).c: 59: t = xung*(1.0/5000000.0);
  1554  16CF  00B1               	movwf	?___ftmul
  1555  16D0  3056               	movlw	86
  1556  16D1  00B2               	movwf	?___ftmul+1
  1557  16D2  3034               	movlw	52
  1558  16D3  00B3               	movwf	?___ftmul+2
  1559  16D4  0865               	movf	_xung+3,w
  1560  16D5  00A3               	movwf	?___altoft+3
  1561  16D6  0864               	movf	_xung+2,w
  1562  16D7  00A2               	movwf	?___altoft+2
  1563  16D8  0863               	movf	_xung+1,w
  1564  16D9  00A1               	movwf	?___altoft+1
  1565  16DA  0862               	movf	_xung,w
  1566  16DB  00A0               	movwf	?___altoft
  1567  16DC  120A  158A  24A8   	fcall	___altoft
      +       160A  118A         
  1568  16E1  0820               	movf	?___altoft,w
  1569  16E2  00B4               	movwf	?___ftmul+3
  1570  16E3  0821               	movf	?___altoft+1,w
  1571  16E4  00B5               	movwf	?___ftmul+4
  1572  16E5  0822               	movf	?___altoft+2,w
  1573  16E6  00B6               	movwf	?___ftmul+5
  1574  16E7  120A  158A  26EC   	fcall	___ftmul
      +       160A  118A         
  1575  16EC  0831               	movf	?___ftmul,w
  1576  16ED  00E9               	movwf	_t
  1577  16EE  0832               	movf	?___ftmul+1,w
  1578  16EF  00EA               	movwf	_t+1
  1579  16F0  0833               	movf	?___ftmul+2,w
  1580  16F1  00EB               	movwf	_t+2
  1581                           
  1582                           ;dotansodungkoCCP(2).c: 60: d = (17000.0*t);
  1583  16F2  30D0               	movlw	208
  1584  16F3  00B1               	movwf	?___ftmul
  1585  16F4  3084               	movlw	132
  1586  16F5  00B2               	movwf	?___ftmul+1
  1587  16F6  3046               	movlw	70
  1588  16F7  00B3               	movwf	?___ftmul+2
  1589  16F8  0869               	movf	_t,w
  1590  16F9  00B4               	movwf	?___ftmul+3
  1591  16FA  086A               	movf	_t+1,w
  1592  16FB  00B5               	movwf	?___ftmul+4
  1593  16FC  086B               	movf	_t+2,w
  1594  16FD  00B6               	movwf	?___ftmul+5
  1595  16FE  120A  158A  26EC   	fcall	___ftmul
      +       160A  118A         
  1596  1703  0831               	movf	?___ftmul,w
  1597  1704  00E6               	movwf	_d
  1598  1705  0832               	movf	?___ftmul+1,w
  1599  1706  00E7               	movwf	_d+1
  1600  1707  0833               	movf	?___ftmul+2,w
  1601  1708  00E8               	movwf	_d+2
  1602                           
  1603                           ;dotansodungkoCCP(2).c: 61: TMR1 = 0;
  1604  1709  018E               	clrf	14	;volatile
  1605  170A  018F               	clrf	15	;volatile
  1606  170B  3000               	movlw	0
  1607                           
  1608                           ;dotansodungkoCCP(2).c: 62: lcd_gotoxy(0,0);
  1609  170C  01F7               	clrf	?_lcd_gotoxy
  1610  170D  120A  158A  22B9   	fcall	_lcd_gotoxy
      +       160A  118A         
  1611                           
  1612                           ;dotansodungkoCCP(2).c: 63: printf("xung: %08u",xung);
  1613  1712  0865               	movf	_xung+3,w
  1614  1713  00D9               	movwf	?_printf+3
  1615  1714  0864               	movf	_xung+2,w
  1616  1715  00D8               	movwf	?_printf+2
  1617  1716  0863               	movf	_xung+1,w
  1618  1717  00D7               	movwf	?_printf+1
  1619  1718  0862               	movf	_xung,w
  1620  1719  00D6               	movwf	?_printf
  1621  171A  3077               	movlw	(STR_1-__stringbase)& (0+255)
  1622  171B  120A  118A  200F   	fcall	_printf
      +       160A  118A         
  1623  1720  3000               	movlw	0
  1624                           
  1625                           ;dotansodungkoCCP(2).c: 64: lcd_gotoxy(0,1);
  1626  1721  01F7               	clrf	?_lcd_gotoxy
  1627  1722  0AF7               	incf	?_lcd_gotoxy,f
  1628  1723  120A  158A  22B9   	fcall	_lcd_gotoxy
      +       160A  118A         
  1629                           
  1630                           ;dotansodungkoCCP(2).c: 65: printf("f: %5.2f",d);
  1631  1728  0866               	movf	_d,w
  1632  1729  00D6               	movwf	?_printf
  1633  172A  0867               	movf	_d+1,w
  1634  172B  00D7               	movwf	?_printf+1
  1635  172C  0868               	movf	_d+2,w
  1636  172D  00D8               	movwf	?_printf+2
  1637  172E  3082               	movlw	(STR_2-__stringbase)& (0+255)
  1638  172F  120A  118A  200F   	fcall	_printf
      +       160A  118A         
  1639  1734  2EAC               	goto	l7157
  1640  1735                     __end_of_main:	
  1641                           
  1642                           	psect	text517
  1643  000F                     __ptext517:	
  1644 ;; =============== function _main ends ============
  1645                           
  1646                           
  1647 ;; *************** function _printf *****************
  1648 ;; Defined at:
  1649 ;;		line 461 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\lib\doprnt.c"
  1650 ;; Parameters:    Size  Location     Type
  1651 ;;  f               1    wreg     PTR const unsigned char 
  1652 ;;		 -> STR_2(9), STR_1(11), 
  1653 ;; Auto vars:     Size  Location     Type
  1654 ;;  f               1   12[BANK1 ] PTR const unsigned char 
  1655 ;;		 -> STR_2(9), STR_1(11), 
  1656 ;;  _val            4    8[BANK1 ] struct .
  1657 ;;  fval            3   19[BANK1 ] struct .
  1658 ;;  integ           3    5[BANK1 ] struct .
  1659 ;;  ival            3    0        struct .
  1660 ;;  prec            2   22[BANK1 ] int 
  1661 ;;  width           2   17[BANK1 ] int 
  1662 ;;  exp             2   15[BANK1 ] int 
  1663 ;;  flag            2   13[BANK1 ] unsigned short 
  1664 ;;  c               1   24[BANK1 ] char 
  1665 ;;  ap              1    4[BANK1 ] PTR void [1]
  1666 ;;		 -> ?_printf(2), 
  1667 ;;  d               1    0        unsigned char 
  1668 ;; Return value:  Size  Location     Type
  1669 ;;                  2   54[BANK0 ] int 
  1670 ;; Registers used:
  1671 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1672 ;; Tracked objects:
  1673 ;;		On entry : 60/0
  1674 ;;		On exit  : 60/20
  1675 ;;		Unchanged: 0/0
  1676 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1677 ;;      Params:         0       4       0       0       0
  1678 ;;      Locals:         0       0      25       0       0
  1679 ;;      Temps:          0       5       0       0       0
  1680 ;;      Totals:         0       9      25       0       0
  1681 ;;Total ram usage:       34 bytes
  1682 ;; Hardware stack levels used:    1
  1683 ;; Hardware stack levels required when called:    5
  1684 ;; This function calls:
  1685 ;;		_putch
  1686 ;;		_isdigit
  1687 ;;		___wmul
  1688 ;;		___ftge
  1689 ;;		___ftneg
  1690 ;;		___awdiv
  1691 ;;		_scale
  1692 ;;		___ftmul
  1693 ;;		_fround
  1694 ;;		___ftadd
  1695 ;;		___fttol
  1696 ;;		__div_to_l_
  1697 ;;		__tdiv_to_l_
  1698 ;;		___lltoft
  1699 ;;		___ftsub
  1700 ;;		___lldiv
  1701 ;;		___llmod
  1702 ;; This function is called by:
  1703 ;;		_main
  1704 ;; This function uses a non-reentrant model
  1705 ;;
  1706  000F                     _printf:	
  1707                           
  1708                           ; Regs used in _printf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1709                           ;printf@f stored from wreg
  1710  000F  1683               	bsf	3,5	;RP0=1, select bank1
  1711  0010  00AC               	movwf	printf@f^(0+128)
  1712  0011  3056               	movlw	?_printf& (0+255)
  1713  0012  00A4               	movwf	printf@ap^(0+128)
  1714  0013                     l7115:	
  1715  0013  2798               	call	PL32	;select bank 1
  1716  0014  082C               	movf	printf@f^(0+128),w
  1717  0015  0AAC               	incf	printf@f^(0+128),f
  1718  0016  0084               	movwf	4
  1719  0017  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  1720  001C  00B8               	movwf	printf@c^(0+128)
  1721  001D  08B8               	movf	printf@c^(0+128),f
  1722  001E  1903               	btfsc	3,2
  1723  001F  0008               	return
  1724  0020  3A25               	xorlw	37
  1725  0021  1903               	skipnz
  1726  0022  2828               	goto	l6843
  1727  0023  0838               	movf	printf@c^(0+128),w
  1728  0024  254D  120A  118A   	fcall	_putch
  1729  0027  2813               	goto	l7115
  1730  0028                     l6843:	
  1731  0028  01B1               	clrf	printf@width^(0+128)
  1732  0029  01B2               	clrf	(printf@width+1)^(0+128)
  1733  002A  01AD               	clrf	printf@flag^(0+128)
  1734  002B  01AE               	clrf	(printf@flag+1)^(0+128)
  1735  002C  282F               	goto	l6849
  1736  002D                     l2206:	
  1737  002D  152D               	bsf	printf@flag^(0+128),2
  1738  002E  0AAC               	incf	printf@f^(0+128),f
  1739  002F                     l6849:	
  1740  002F  082C               	movf	printf@f^(0+128),w
  1741  0030  0084               	movwf	4
  1742  0031  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  1743                           
  1744                           ; Switch size 1, requested type "space"
  1745                           ; Number of cases is 1, Range of values is 48 to 48
  1746                           ; switch strategies available:
  1747                           ; Name         Instructions Cycles
  1748                           ; simple_byte            4     3 (average)
  1749                           ; direct_byte           14    11 (fixed)
  1750                           ; jumptable            263     9 (fixed)
  1751                           ;	Chosen strategy is simple_byte
  1752  0036  3A30               	xorlw	48	; case 48
  1753  0037  1903               	skipnz
  1754  0038  282D               	goto	l2206
  1755  0039  283A               	goto	l6851
  1756  003A                     l6851:	
  1757  003A  082C               	movf	printf@f^(0+128),w
  1758  003B  0084               	movwf	4
  1759  003C  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  1760  0041  25BB  120A  118A   	fcall	_isdigit
  1761  0044  1C03               	btfss	3,0
  1762  0045  286A               	goto	l6861
  1763  0046  01B1               	clrf	printf@width^(0+128)
  1764  0047  01B2               	clrf	(printf@width+1)^(0+128)
  1765  0048                     l6855:	
  1766  0048  0832               	movf	(printf@width+1)^(0+128),w
  1767  0049  00F3               	movwf	?___wmul+1
  1768  004A  0831               	movf	printf@width^(0+128),w
  1769  004B  00F2               	movwf	?___wmul
  1770  004C  300A               	movlw	10
  1771  004D  00F4               	movwf	?___wmul+2
  1772  004E  01F5               	clrf	?___wmul+3
  1773  004F  25C9               	fcall	___wmul
  1774  0050  082C               	movf	printf@f^(0+128),w
  1775  0051  0084               	movwf	4
  1776  0052  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  1777  0057  2747  120A  118A   	fcall	PL13	;call to abstracted procedure
  1778  005A  00B1               	movwf	printf@width^(0+128)
  1779  005B  2783               	fcall	PL28	;call to abstracted procedure
  1780  005C  00B2               	movwf	(printf@width+1)^(0+128)
  1781  005D  0AAC               	incf	printf@f^(0+128),f
  1782  005E  082C               	movf	printf@f^(0+128),w
  1783  005F  0084               	movwf	4
  1784  0060  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  1785  0065  25BB  120A  118A   	fcall	_isdigit
  1786  0068  1803               	btfsc	3,0
  1787  0069  2848               	goto	l6855
  1788  006A                     l6861:	
  1789  006A  082C               	movf	printf@f^(0+128),w
  1790  006B  0084               	movwf	4
  1791  006C  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  1792  0071  3A2E               	xorlw	46
  1793  0072  1D03               	skipz
  1794  0073  289D               	goto	l6875
  1795  0074  172E               	bsf	(printf@flag^(0+128)+1),6
  1796  0075  0AAC               	incf	printf@f^(0+128),f
  1797  0076  01B6               	clrf	printf@prec^(0+128)
  1798  0077  01B7               	clrf	(printf@prec+1)^(0+128)
  1799  0078                     l6873:	
  1800  0078  082C               	movf	printf@f^(0+128),w
  1801  0079  0084               	movwf	4
  1802  007A  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  1803  007F  25BB  120A  118A   	fcall	_isdigit
  1804  0082  1C03               	btfss	3,0
  1805  0083  28A6               	goto	l6883
  1806  0084  0837               	movf	(printf@prec+1)^(0+128),w
  1807  0085  00F3               	movwf	?___wmul+1
  1808  0086  0836               	movf	printf@prec^(0+128),w
  1809  0087  00F2               	movwf	?___wmul
  1810  0088  300A               	movlw	10
  1811  0089  00F4               	movwf	?___wmul+2
  1812  008A  01F5               	clrf	?___wmul+3
  1813  008B  25C9               	fcall	___wmul
  1814  008C  082C               	movf	printf@f^(0+128),w
  1815  008D  0084               	movwf	4
  1816  008E  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  1817  0093  2747  120A  118A   	fcall	PL13	;call to abstracted procedure
  1818  0096  00B6               	movwf	printf@prec^(0+128)
  1819  0097  2783  120A  118A   	fcall	PL28	;call to abstracted procedure
  1820  009A  00B7               	movwf	(printf@prec+1)^(0+128)
  1821  009B  0AAC               	incf	printf@f^(0+128),f
  1822  009C  2878               	goto	l6873
  1823  009D                     l6875:	
  1824  009D  01B6               	clrf	printf@prec^(0+128)
  1825  009E  01B7               	clrf	(printf@prec+1)^(0+128)
  1826  009F  162E               	bsf	(printf@flag^(0+128)+1),4
  1827  00A0  28A6               	goto	l6883
  1828  00A1                     l2221:	
  1829  00A1  152E               	bsf	(printf@flag^(0+128)+1),2
  1830  00A2  28B9               	goto	l6885
  1831  00A3                     l6879:	
  1832  00A3  30C0               	movlw	192
  1833  00A4  04AD               	iorwf	printf@flag^(0+128),f
  1834  00A5  28B9               	goto	l6885
  1835  00A6                     l6883:	
  1836  00A6  082C               	movf	printf@f^(0+128),w
  1837  00A7  0AAC               	incf	printf@f^(0+128),f
  1838  00A8  0084               	movwf	4
  1839  00A9  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  1840  00AE  00B8               	movwf	printf@c^(0+128)
  1841                           
  1842                           ; Switch size 1, requested type "space"
  1843                           ; Number of cases is 3, Range of values is 0 to 117
  1844                           ; switch strategies available:
  1845                           ; Name         Instructions Cycles
  1846                           ; simple_byte           10     6 (average)
  1847                           ; jumptable            260     6 (fixed)
  1848                           ; rangetable           122     6 (fixed)
  1849                           ; spacedrange          242     9 (fixed)
  1850                           ; locatedrange         118     3 (fixed)
  1851                           ;	Chosen strategy is simple_byte
  1852  00AF  3A00               	xorlw	0	; case 0
  1853  00B0  1903               	skipnz
  1854  00B1  2D4C               	goto	l2300
  1855  00B2  3A66               	xorlw	102	; case 102
  1856  00B3  1903               	skipnz
  1857  00B4  28A1               	goto	l2221
  1858  00B5  3A13               	xorlw	19	; case 117
  1859  00B6  1903               	skipnz
  1860  00B7  28A3               	goto	l6879
  1861  00B8  2813               	goto	l7115
  1862  00B9                     l6885:	
  1863  00B9  1283               	bcf	3,5	;RP0=0, select bank0
  1864  00BA  3007               	movlw	7
  1865  00BB  01DA               	clrf	??_printf
  1866  00BC  1683               	bsf	3,5	;RP0=1, select bank1
  1867  00BD  052E               	andwf	(printf@flag+1)^(0+128),w
  1868  00BE  1283               	bcf	3,5	;RP0=0, select bank0
  1869  00BF  00DB               	movwf	??_printf+1
  1870  00C0  045A               	iorwf	??_printf,w
  1871  00C1  1903               	skipnz
  1872  00C2  2C0F               	goto	l7037
  1873  00C3  1683               	bsf	3,5	;RP0=1, select bank1
  1874  00C4  1E2E               	btfss	(printf@flag+1)^(0+128),4
  1875  00C5  28C9               	goto	l6891
  1876  00C6  3006               	movlw	6
  1877  00C7  00B6               	movwf	printf@prec^(0+128)
  1878  00C8  01B7               	clrf	(printf@prec+1)^(0+128)
  1879  00C9                     l6891:	
  1880  00C9  0824               	movf	printf@ap^(0+128),w
  1881  00CA  0084               	movwf	4
  1882  00CB  1383               	bcf	3,7	;select IRP bank0
  1883  00CC  0800               	movf	0,w
  1884  00CD  00B3               	movwf	printf@fval^(0+128)
  1885  00CE  0A84               	incf	4,f
  1886  00CF  0800               	movf	0,w
  1887  00D0  00B4               	movwf	(printf@fval+1)^(0+128)
  1888  00D1  0A84               	incf	4,f
  1889  00D2  0800               	movf	0,w
  1890  00D3  00B5               	movwf	(printf@fval+2)^(0+128)
  1891  00D4  3003               	movlw	3
  1892  00D5  07A4               	addwf	printf@ap^(0+128),f
  1893  00D6  0833               	movf	printf@fval^(0+128),w
  1894  00D7  00F2               	movwf	?___ftge
  1895  00D8  0834               	movf	(printf@fval+1)^(0+128),w
  1896  00D9  00F3               	movwf	?___ftge+1
  1897  00DA  0835               	movf	(printf@fval+2)^(0+128),w
  1898  00DB  00F4               	movwf	?___ftge+2
  1899  00DC  01F5               	clrf	?___ftge+3
  1900  00DD  01F6               	clrf	?___ftge+4
  1901  00DE  01F7               	clrf	?___ftge+5
  1902  00DF  258F  120A  118A   	fcall	___ftge
  1903  00E2  1803               	btfsc	3,0
  1904  00E3  28F5               	goto	l6901
  1905  00E4  0833               	movf	printf@fval^(0+128),w
  1906  00E5  00F2               	movwf	?___ftneg
  1907  00E6  0834               	movf	(printf@fval+1)^(0+128),w
  1908  00E7  00F3               	movwf	?___ftneg+1
  1909  00E8  0835               	movf	(printf@fval+2)^(0+128),w
  1910  00E9  00F4               	movwf	?___ftneg+2
  1911  00EA  26FE  120A  118A   	fcall	___ftneg
  1912  00ED  0872               	movf	?___ftneg,w
  1913  00EE  00B3               	movwf	printf@fval^(0+128)
  1914  00EF  0873               	movf	?___ftneg+1,w
  1915  00F0  00B4               	movwf	(printf@fval+1)^(0+128)
  1916  00F1  0874               	movf	?___ftneg+2,w
  1917  00F2  00B5               	movwf	(printf@fval+2)^(0+128)
  1918  00F3  3003               	movlw	3
  1919  00F4  04AD               	iorwf	printf@flag^(0+128),f
  1920  00F5                     l6901:	
  1921  00F5  01AF               	clrf	printf@exp^(0+128)
  1922  00F6  01B0               	clrf	(printf@exp+1)^(0+128)
  1923  00F7  0835               	movf	(printf@fval+2)^(0+128),w
  1924  00F8  0434               	iorwf	(printf@fval+1)^(0+128),w
  1925  00F9  0433               	iorwf	printf@fval^(0+128),w
  1926  00FA  1903               	skipnz
  1927  00FB  298C               	goto	l6933
  1928  00FC  30B3               	movlw	low printf@fval
  1929  00FD  0084               	movwf	4
  1930  00FE  2791  120A  118A   	fcall	PL31	;call to abstracted procedure
  1931  0101  0A84               	incf	4,f
  1932  0102  0800               	movf	0,w
  1933  0103  00DC               	movwf	??_printf+2
  1934  0104  0A84               	incf	4,f
  1935  0105  0800               	movf	0,w
  1936  0106  00DD               	movwf	??_printf+3
  1937  0107  300F               	movlw	15
  1938  0108                     u3475:	
  1939  0108  1003               	clrc
  1940  0109  0CDD               	rrf	??_printf+3,f
  1941  010A  0CDC               	rrf	??_printf+2,f
  1942  010B  0CDB               	rrf	??_printf+1,f
  1943  010C  0CDA               	rrf	??_printf,f
  1944  010D  3EFF               	addlw	-1
  1945  010E  1D03               	skipz
  1946  010F  2908               	goto	u3475
  1947  0110  085B               	movf	??_printf+1,w
  1948  0111  1683               	bsf	3,5	;RP0=1, select bank1
  1949  0112  00B0               	movwf	(printf@exp+1)^(0+128)
  1950  0113  1283               	bcf	3,5	;RP0=0, select bank0
  1951  0114  085A               	movf	??_printf,w
  1952  0115  1683               	bsf	3,5	;RP0=1, select bank1
  1953  0116  00AF               	movwf	printf@exp^(0+128)
  1954  0117  3082               	movlw	-126
  1955  0118  01B0               	clrf	(printf@exp+1)^(0+128)
  1956  0119  07AF               	addwf	printf@exp^(0+128),f
  1957  011A  1C03               	skipc
  1958  011B  03B0               	decf	(printf@exp+1)^(0+128),f
  1959  011C  30FF               	movlw	-1
  1960  011D  07AF               	addwf	printf@exp^(0+128),f
  1961  011E  1C03               	skipc
  1962  011F  03B0               	decf	(printf@exp+1)^(0+128),f
  1963  0120  3003               	movlw	3
  1964  0121  00F2               	movwf	?___wmul
  1965  0122  01F3               	clrf	?___wmul+1
  1966  0123  0830               	movf	(printf@exp+1)^(0+128),w
  1967  0124  00F5               	movwf	?___wmul+3
  1968  0125  082F               	movf	printf@exp^(0+128),w
  1969  0126  00F4               	movwf	?___wmul+2
  1970  0127  25C9               	fcall	___wmul
  1971  0128  0873               	movf	?___wmul+1,w
  1972  0129  00B0               	movwf	(printf@exp+1)^(0+128)
  1973  012A  0872               	movf	?___wmul,w
  1974  012B  00AF               	movwf	printf@exp^(0+128)
  1975  012C  300A               	movlw	10
  1976  012D  00F8               	movwf	?___awdiv
  1977  012E  01F9               	clrf	?___awdiv+1
  1978  012F  0830               	movf	(printf@exp+1)^(0+128),w
  1979  0130  00FB               	movwf	?___awdiv+3
  1980  0131  082F               	movf	printf@exp^(0+128),w
  1981  0132  00FA               	movwf	?___awdiv+2
  1982  0133  120A  158A  2669   	fcall	___awdiv
      +       120A  118A         
  1983  0138  0879               	movf	?___awdiv+1,w
  1984  0139  1683               	bsf	3,5	;RP0=1, select bank1
  1985  013A  00B0               	movwf	(printf@exp+1)^(0+128)
  1986  013B  0878               	movf	?___awdiv,w
  1987  013C  00AF               	movwf	printf@exp^(0+128)
  1988  013D  1FB0               	btfss	(printf@exp+1)^(0+128),7
  1989  013E  2943               	goto	l6921
  1990  013F  30FF               	movlw	-1
  1991  0140  07AF               	addwf	printf@exp^(0+128),f
  1992  0141  1C03               	skipc
  1993  0142  03B0               	decf	(printf@exp+1)^(0+128),f
  1994  0143                     l6921:	
  1995  0143  032F               	decf	printf@exp^(0+128),w
  1996  0144  3AFF               	xorlw	255
  1997  0145  120A  158A  24D7   	fcall	_scale
      +       120A  118A         
  1998  014A  2731  120A  118A   	fcall	PL7	;call to abstracted procedure
  1999  014D  275E               	fcall	PL16	;call to abstracted procedure
  2000  014E  1683               	bsf	3,5	;RP0=1, select bank1
  2001  014F  0825               	movf	printf@integ^(0+128),w
  2002  0150  1283               	bcf	3,5	;RP0=0, select bank0
  2003  0151  00B4               	movwf	?___ftmul+3
  2004  0152  1683               	bsf	3,5	;RP0=1, select bank1
  2005  0153  0826               	movf	(printf@integ+1)^(0+128),w
  2006  0154  1283               	bcf	3,5	;RP0=0, select bank0
  2007  0155  00B5               	movwf	?___ftmul+4
  2008  0156  1683               	bsf	3,5	;RP0=1, select bank1
  2009  0157  0827               	movf	(printf@integ+2)^(0+128),w
  2010  0158  1283               	bcf	3,5	;RP0=0, select bank0
  2011  0159  00B6               	movwf	?___ftmul+5
  2012  015A  120A  158A  26EC   	fcall	___ftmul
      +       120A  118A         
  2013  015F  0831               	movf	?___ftmul,w
  2014  0160  1683               	bsf	3,5	;RP0=1, select bank1
  2015  0161  00A5               	movwf	printf@integ^(0+128)
  2016  0162  1283               	bcf	3,5	;RP0=0, select bank0
  2017  0163  0832               	movf	?___ftmul+1,w
  2018  0164  1683               	bsf	3,5	;RP0=1, select bank1
  2019  0165  00A6               	movwf	(printf@integ+1)^(0+128)
  2020  0166  1283               	bcf	3,5	;RP0=0, select bank0
  2021  0167  0833               	movf	?___ftmul+2,w
  2022  0168  1683               	bsf	3,5	;RP0=1, select bank1
  2023  0169  00A7               	movwf	(printf@integ+2)^(0+128)
  2024  016A  277C  120A  118A   	fcall	PL21	;call to abstracted procedure
  2025  016D  3080               	movlw	128
  2026  016E  01F5               	clrf	?___ftge+3
  2027  016F  00F6               	movwf	?___ftge+4
  2028  0170  303F               	movlw	63
  2029  0171  00F7               	movwf	?___ftge+5
  2030  0172  258F  120A  118A   	fcall	___ftge
  2031  0175  1803               	btfsc	3,0
  2032  0176  297C               	goto	l6929
  2033  0177  30FF               	movlw	-1
  2034  0178  07AF               	addwf	printf@exp^(0+128),f
  2035  0179  1C03               	skipc
  2036  017A  03B0               	decf	(printf@exp+1)^(0+128),f
  2037  017B  298C               	goto	l6933
  2038  017C                     l6929:	
  2039  017C  277C  120A  118A   	fcall	PL21	;call to abstracted procedure
  2040  017F  3020               	movlw	32
  2041  0180  01F5               	clrf	?___ftge+3
  2042  0181  00F6               	movwf	?___ftge+4
  2043  0182  3041               	movlw	65
  2044  0183  00F7               	movwf	?___ftge+5
  2045  0184  258F  120A  118A   	fcall	___ftge
  2046  0187  1C03               	btfss	3,0
  2047  0188  298C               	goto	l6933
  2048  0189  0AAF               	incf	printf@exp^(0+128),f
  2049  018A  1903               	skipnz
  2050  018B  0AB0               	incf	(printf@exp+1)^(0+128),f
  2051  018C                     l6933:	
  2052  018C  0837               	movf	(printf@prec+1)^(0+128),w
  2053  018D  3A80               	xorlw	128
  2054  018E  00FF               	movwf	127
  2055  018F  3080               	movlw	128
  2056  0190  027F               	subwf	127,w
  2057  0191  1D03               	skipz
  2058  0192  2995               	goto	u3515
  2059  0193  300D               	movlw	13
  2060  0194  0236               	subwf	printf@prec^(0+128),w
  2061  0195                     u3515:	
  2062  0195  1803               	skipnc
  2063  0196  29C0               	goto	l6937
  2064  0197  2798               	call	PL32	;select bank 1
  2065  0198  0836               	movf	printf@prec^(0+128),w
  2066  0199  120A  158A  2167   	fcall	_fround
      +       120A  118A         
  2067  019E  084C               	movf	?_fround,w
  2068  019F  00C0               	movwf	?___ftadd
  2069  01A0  084D               	movf	?_fround+1,w
  2070  01A1  00C1               	movwf	?___ftadd+1
  2071  01A2  084E               	movf	?_fround+2,w
  2072  01A3  00C2               	movwf	?___ftadd+2
  2073  01A4  1683               	bsf	3,5	;RP0=1, select bank1
  2074  01A5  0833               	movf	printf@fval^(0+128),w
  2075  01A6  1283               	bcf	3,5	;RP0=0, select bank0
  2076  01A7  00C3               	movwf	?___ftadd+3
  2077  01A8  1683               	bsf	3,5	;RP0=1, select bank1
  2078  01A9  0834               	movf	(printf@fval+1)^(0+128),w
  2079  01AA  1283               	bcf	3,5	;RP0=0, select bank0
  2080  01AB  00C4               	movwf	?___ftadd+4
  2081  01AC  1683               	bsf	3,5	;RP0=1, select bank1
  2082  01AD  0835               	movf	(printf@fval+2)^(0+128),w
  2083  01AE  1283               	bcf	3,5	;RP0=0, select bank0
  2084  01AF  00C5               	movwf	?___ftadd+5
  2085  01B0  120A  158A  20A5   	fcall	___ftadd
      +       120A  118A         
  2086  01B5  0840               	movf	?___ftadd,w
  2087  01B6  1683               	bsf	3,5	;RP0=1, select bank1
  2088  01B7  00B3               	movwf	printf@fval^(0+128)
  2089  01B8  1283               	bcf	3,5	;RP0=0, select bank0
  2090  01B9  0841               	movf	?___ftadd+1,w
  2091  01BA  1683               	bsf	3,5	;RP0=1, select bank1
  2092  01BB  00B4               	movwf	(printf@fval+1)^(0+128)
  2093  01BC  1283               	bcf	3,5	;RP0=0, select bank0
  2094  01BD  0842               	movf	?___ftadd+2,w
  2095  01BE  1683               	bsf	3,5	;RP0=1, select bank1
  2096  01BF  00B5               	movwf	(printf@fval+2)^(0+128)
  2097  01C0                     l6937:	
  2098  01C0  2798               	call	PL32	;select bank 1
  2099  01C1  0830               	movf	(printf@exp+1)^(0+128),w
  2100  01C2  3A80               	xorlw	128
  2101  01C3  00FF               	movwf	127
  2102  01C4  3080               	movlw	128
  2103  01C5  027F               	subwf	127,w
  2104  01C6  1D03               	skipz
  2105  01C7  29CA               	goto	u3525
  2106  01C8  300A               	movlw	10
  2107  01C9  022F               	subwf	printf@exp^(0+128),w
  2108  01CA                     u3525:	
  2109  01CA  1803               	skipnc
  2110  01CB  29EB               	goto	l6945
  2111  01CC  2798               	call	PL32	;select bank 1
  2112  01CD  0835               	movf	(printf@fval+2)^(0+128),w
  2113  01CE  0434               	iorwf	(printf@fval+1)^(0+128),w
  2114  01CF  0433               	iorwf	printf@fval^(0+128),w
  2115  01D0  1903               	skipnz
  2116  01D1  2A2C               	goto	l6961
  2117  01D2  0833               	movf	printf@fval^(0+128),w
  2118  01D3  2753  120A  118A   	fcall	PL14	;call to abstracted procedure
  2119  01D6  25E2  120A  118A   	fcall	___fttol
  2120  01D9  0827               	movf	?___fttol+3,w
  2121  01DA  0426               	iorwf	?___fttol+2,w
  2122  01DB  0425               	iorwf	?___fttol+1,w
  2123  01DC  0424               	iorwf	?___fttol,w
  2124  01DD  1D03               	skipz
  2125  01DE  2A2C               	goto	l6961
  2126  01DF  1683               	bsf	3,5	;RP0=1, select bank1
  2127  01E0  0830               	movf	(printf@exp+1)^(0+128),w
  2128  01E1  3A80               	xorlw	128
  2129  01E2  00FF               	movwf	127
  2130  01E3  3080               	movlw	128
  2131  01E4  027F               	subwf	127,w
  2132  01E5  1D03               	skipz
  2133  01E6  29E9               	goto	u3555
  2134  01E7  3002               	movlw	2
  2135  01E8  022F               	subwf	printf@exp^(0+128),w
  2136  01E9                     u3555:	
  2137  01E9  1C03               	skipc
  2138  01EA  2A2C               	goto	l6961
  2139  01EB                     l6945:	
  2140  01EB  2798               	call	PL32	;select bank 1
  2141  01EC  277C  120A  118A   	fcall	PL21	;call to abstracted procedure
  2142  01EF  3070               	movlw	112
  2143  01F0  00F5               	movwf	?___ftge+3
  2144  01F1  3089               	movlw	137
  2145  01F2  00F6               	movwf	?___ftge+4
  2146  01F3  3040               	movlw	64
  2147  01F4  00F7               	movwf	?___ftge+5
  2148  01F5  258F  120A  118A   	fcall	___ftge
  2149  01F8  1803               	btfsc	3,0
  2150  01F9  29FC               	goto	l6949
  2151  01FA  30F7               	movlw	-9
  2152  01FB  29FD               	goto	L1
  2153  01FC                     l6949:	
  2154  01FC  30F8               	movlw	-8
  2155  01FD                     L1:	
  2156  01FD  07AF               	addwf	printf@exp^(0+128),f
  2157  01FE  1C03               	skipc
  2158  01FF  03B0               	decf	(printf@exp+1)^(0+128),f
  2159  0200  082F               	movf	printf@exp^(0+128),w
  2160  0201  120A  158A  24D7   	fcall	_scale
      +       120A  118A         
  2161  0206  2731  120A  118A   	fcall	PL7	;call to abstracted procedure
  2162  0209  00F2               	movwf	?__tdiv_to_l_
  2163  020A  0834               	movf	(printf@fval+1)^(0+128),w
  2164  020B  00F3               	movwf	?__tdiv_to_l_+1
  2165  020C  0835               	movf	(printf@fval+2)^(0+128),w
  2166  020D  00F4               	movwf	?__tdiv_to_l_+2
  2167  020E  0825               	movf	printf@integ^(0+128),w
  2168  020F  00F5               	movwf	?__tdiv_to_l_+3
  2169  0210  0826               	movf	(printf@integ+1)^(0+128),w
  2170  0211  00F6               	movwf	?__tdiv_to_l_+4
  2171  0212  0827               	movf	(printf@integ+2)^(0+128),w
  2172  0213  00F7               	movwf	?__tdiv_to_l_+5
  2173  0214  2686  120A  118A   	fcall	__tdiv_to_l_
  2174  0217  0875               	movf	?__tdiv_to_l_+3,w
  2175  0218  1683               	bsf	3,5	;RP0=1, select bank1
  2176  0219  00A3               	movwf	(_printf$3160+3)^(0+128)
  2177  021A  0874               	movf	?__tdiv_to_l_+2,w
  2178  021B  00A2               	movwf	(_printf$3160+2)^(0+128)
  2179  021C  0873               	movf	?__tdiv_to_l_+1,w
  2180  021D  00A1               	movwf	(_printf$3160+1)^(0+128)
  2181  021E  0872               	movf	?__tdiv_to_l_,w
  2182  021F  00A0               	movwf	_printf$3160^(0+128)
  2183  0220  0823               	movf	(_printf$3160+3)^(0+128),w
  2184  0221  00AB               	movwf	(printf@_val+3)^(0+128)
  2185  0222  0822               	movf	(_printf$3160+2)^(0+128),w
  2186  0223  00AA               	movwf	(printf@_val+2)^(0+128)
  2187  0224  0821               	movf	(_printf$3160+1)^(0+128),w
  2188  0225  00A9               	movwf	(printf@_val+1)^(0+128)
  2189  0226  0820               	movf	_printf$3160^(0+128),w
  2190  0227  00A8               	movwf	printf@_val^(0+128)
  2191  0228  01B3               	clrf	printf@fval^(0+128)
  2192  0229  01B4               	clrf	(printf@fval+1)^(0+128)
  2193  022A  01B5               	clrf	(printf@fval+2)^(0+128)
  2194  022B  2A6F               	goto	l6965
  2195  022C                     l6961:	
  2196  022C  2798               	call	PL32	;select bank 1
  2197  022D  0833               	movf	printf@fval^(0+128),w
  2198  022E  2753  120A  118A   	fcall	PL14	;call to abstracted procedure
  2199  0231  25E2  120A  118A   	fcall	___fttol
  2200  0234  2723               	fcall	PL6	;call to abstracted procedure
  2201  0235  1683               	bsf	3,5	;RP0=1, select bank1
  2202  0236  00A8               	movwf	printf@_val^(0+128)
  2203  0237  082B               	movf	(printf@_val+3)^(0+128),w
  2204  0238  1283               	bcf	3,5	;RP0=0, select bank0
  2205  0239  00A3               	movwf	?___lltoft+3
  2206  023A  1683               	bsf	3,5	;RP0=1, select bank1
  2207  023B  082A               	movf	(printf@_val+2)^(0+128),w
  2208  023C  1283               	bcf	3,5	;RP0=0, select bank0
  2209  023D  00A2               	movwf	?___lltoft+2
  2210  023E  1683               	bsf	3,5	;RP0=1, select bank1
  2211  023F  0829               	movf	(printf@_val+1)^(0+128),w
  2212  0240  1283               	bcf	3,5	;RP0=0, select bank0
  2213  0241  00A1               	movwf	?___lltoft+1
  2214  0242  1683               	bsf	3,5	;RP0=1, select bank1
  2215  0243  0828               	movf	printf@_val^(0+128),w
  2216  0244  1283               	bcf	3,5	;RP0=0, select bank0
  2217  0245  00A0               	movwf	?___lltoft
  2218  0246  120A  158A  248A   	fcall	___lltoft
      +       120A  118A         
  2219  024B  0820               	movf	?___lltoft,w
  2220  024C  00CC               	movwf	?___ftsub
  2221  024D  0821               	movf	?___lltoft+1,w
  2222  024E  00CD               	movwf	?___ftsub+1
  2223  024F  0822               	movf	?___lltoft+2,w
  2224  0250  00CE               	movwf	?___ftsub+2
  2225  0251  1683               	bsf	3,5	;RP0=1, select bank1
  2226  0252  0833               	movf	printf@fval^(0+128),w
  2227  0253  1283               	bcf	3,5	;RP0=0, select bank0
  2228  0254  00CF               	movwf	?___ftsub+3
  2229  0255  1683               	bsf	3,5	;RP0=1, select bank1
  2230  0256  0834               	movf	(printf@fval+1)^(0+128),w
  2231  0257  1283               	bcf	3,5	;RP0=0, select bank0
  2232  0258  00D0               	movwf	?___ftsub+4
  2233  0259  1683               	bsf	3,5	;RP0=1, select bank1
  2234  025A  0835               	movf	(printf@fval+2)^(0+128),w
  2235  025B  1283               	bcf	3,5	;RP0=0, select bank0
  2236  025C  00D1               	movwf	?___ftsub+5
  2237  025D  120A  158A  208F   	fcall	___ftsub
      +       120A  118A         
  2238  0262  084C               	movf	?___ftsub,w
  2239  0263  1683               	bsf	3,5	;RP0=1, select bank1
  2240  0264  00B3               	movwf	printf@fval^(0+128)
  2241  0265  1283               	bcf	3,5	;RP0=0, select bank0
  2242  0266  084D               	movf	?___ftsub+1,w
  2243  0267  1683               	bsf	3,5	;RP0=1, select bank1
  2244  0268  00B4               	movwf	(printf@fval+1)^(0+128)
  2245  0269  1283               	bcf	3,5	;RP0=0, select bank0
  2246  026A  084E               	movf	?___ftsub+2,w
  2247  026B  1683               	bsf	3,5	;RP0=1, select bank1
  2248  026C  00B5               	movwf	(printf@fval+2)^(0+128)
  2249  026D  01AF               	clrf	printf@exp^(0+128)
  2250  026E  01B0               	clrf	(printf@exp+1)^(0+128)
  2251  026F                     l6965:	
  2252  026F  01B8               	clrf	printf@c^(0+128)
  2253  0270  0AB8               	incf	printf@c^(0+128),f
  2254  0271                     l6971:	
  2255  0271  2706               	fcall	PL2	;call to abstracted procedure
  2256  0272  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2257  0277  00DB               	movwf	??_printf+1
  2258  0278  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2259  027D  00DC               	movwf	??_printf+2
  2260  027E  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2261  0283  00DD               	movwf	??_printf+3
  2262  0284  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2263  0289  00DE               	movwf	??_printf+4
  2264  028A  1683               	bsf	3,5	;RP0=1, select bank1
  2265  028B  022B               	subwf	(printf@_val+3)^(0+128),w
  2266  028C  1D03               	skipz
  2267  028D  2A9E               	goto	u3575
  2268  028E  1283               	bcf	3,5	;RP0=0, select bank0
  2269  028F  085D               	movf	??_printf+3,w
  2270  0290  1683               	bsf	3,5	;RP0=1, select bank1
  2271  0291  022A               	subwf	(printf@_val+2)^(0+128),w
  2272  0292  1D03               	skipz
  2273  0293  2A9E               	goto	u3575
  2274  0294  1283               	bcf	3,5	;RP0=0, select bank0
  2275  0295  085C               	movf	??_printf+2,w
  2276  0296  1683               	bsf	3,5	;RP0=1, select bank1
  2277  0297  0229               	subwf	(printf@_val+1)^(0+128),w
  2278  0298  1D03               	skipz
  2279  0299  2A9E               	goto	u3575
  2280  029A  1283               	bcf	3,5	;RP0=0, select bank0
  2281  029B  085B               	movf	??_printf+1,w
  2282  029C  1683               	bsf	3,5	;RP0=1, select bank1
  2283  029D  0228               	subwf	printf@_val^(0+128),w
  2284  029E                     u3575:	
  2285  029E  1C03               	btfss	3,0
  2286  029F  2AA5               	goto	l6979
  2287  02A0  0AB8               	incf	printf@c^(0+128),f
  2288  02A1  0838               	movf	printf@c^(0+128),w
  2289  02A2  3A0A               	xorlw	10
  2290  02A3  1D03               	skipz
  2291  02A4  2A71               	goto	l6971
  2292  02A5                     l6979:	
  2293  02A5  0836               	movf	printf@prec^(0+128),w
  2294  02A6  0738               	addwf	printf@c^(0+128),w
  2295  02A7  1283               	bcf	3,5	;RP0=0, select bank0
  2296  02A8  00DA               	movwf	??_printf
  2297  02A9  1683               	bsf	3,5	;RP0=1, select bank1
  2298  02AA  0837               	movf	(printf@prec+1)^(0+128),w
  2299  02AB  1803               	skipnc
  2300  02AC  0A37               	incf	(printf@prec+1)^(0+128),w
  2301  02AD  1BB8               	btfsc	printf@c^(0+128),7
  2302  02AE  3EFF               	addlw	255
  2303  02AF  1283               	bcf	3,5	;RP0=0, select bank0
  2304  02B0  00DB               	movwf	??_printf+1
  2305  02B1  1683               	bsf	3,5	;RP0=1, select bank1
  2306  02B2  082F               	movf	printf@exp^(0+128),w
  2307  02B3  1283               	bcf	3,5	;RP0=0, select bank0
  2308  02B4  075A               	addwf	??_printf,w
  2309  02B5  00DC               	movwf	??_printf+2
  2310  02B6  1683               	bsf	3,5	;RP0=1, select bank1
  2311  02B7  0830               	movf	(printf@exp+1)^(0+128),w
  2312  02B8  1803               	skipnc
  2313  02B9  0A30               	incf	(printf@exp+1)^(0+128),w
  2314  02BA  1283               	bcf	3,5	;RP0=0, select bank0
  2315  02BB  075B               	addwf	??_printf+1,w
  2316  02BC  00DD               	movwf	??_printf+3
  2317  02BD  085C               	movf	??_printf+2,w
  2318  02BE  1683               	bsf	3,5	;RP0=1, select bank1
  2319  02BF  02B1               	subwf	printf@width^(0+128),f
  2320  02C0  1283               	bcf	3,5	;RP0=0, select bank0
  2321  02C1  085D               	movf	??_printf+3,w
  2322  02C2  1683               	bsf	3,5	;RP0=1, select bank1
  2323  02C3  1C03               	skipc
  2324  02C4  03B2               	decf	(printf@width+1)^(0+128),f
  2325  02C5  02B2               	subwf	(printf@width+1)^(0+128),f
  2326  02C6  0837               	movf	(printf@prec+1)^(0+128),w
  2327  02C7  0436               	iorwf	printf@prec^(0+128),w
  2328  02C8  1903               	skipnz
  2329  02C9  2ACE               	goto	l6985
  2330  02CA  30FF               	movlw	-1
  2331  02CB  07B1               	addwf	printf@width^(0+128),f
  2332  02CC  1C03               	skipc
  2333  02CD  03B2               	decf	(printf@width+1)^(0+128),f
  2334  02CE                     l6985:	
  2335  02CE  082D               	movf	printf@flag^(0+128),w
  2336  02CF  3903               	andlw	3
  2337  02D0  1903               	btfsc	3,2
  2338  02D1  2AD6               	goto	l6989
  2339  02D2  30FF               	movlw	-1
  2340  02D3  07B1               	addwf	printf@width^(0+128),f
  2341  02D4  1C03               	skipc
  2342  02D5  03B2               	decf	(printf@width+1)^(0+128),f
  2343  02D6                     l6989:	
  2344  02D6  192D               	btfsc	printf@flag^(0+128),2
  2345  02D7  2AE2               	goto	l6997
  2346  02D8  2AF7               	goto	l7003
  2347  02D9                     l6993:	
  2348  02D9  3030               	movlw	48
  2349  02DA  254D  120A  118A   	fcall	_putch
  2350  02DD  30FF               	movlw	-1
  2351  02DE  2798               	call	PL32	;select bank 1
  2352  02DF  07B1               	addwf	printf@width^(0+128),f
  2353  02E0  1C03               	skipc
  2354  02E1  03B2               	decf	(printf@width+1)^(0+128),f
  2355  02E2                     l6997:	
  2356  02E2  0832               	movf	(printf@width+1)^(0+128),w
  2357  02E3  3A80               	xorlw	128
  2358  02E4  00FF               	movwf	127
  2359  02E5  3080               	movlw	128
  2360  02E6  027F               	subwf	127,w
  2361  02E7  1D03               	skipz
  2362  02E8  2AEB               	goto	u3625
  2363  02E9  3001               	movlw	1
  2364  02EA  0231               	subwf	printf@width^(0+128),w
  2365  02EB                     u3625:	
  2366  02EB  1C03               	btfss	3,0
  2367  02EC  2B35               	goto	l7011
  2368  02ED  2AD9               	goto	l6993
  2369  02EE                     l6999:	
  2370  02EE  3020               	movlw	32
  2371  02EF  254D  120A  118A   	fcall	_putch
  2372  02F2  30FF               	movlw	-1
  2373  02F3  2798               	call	PL32	;select bank 1
  2374  02F4  07B1               	addwf	printf@width^(0+128),f
  2375  02F5  1C03               	skipc
  2376  02F6  03B2               	decf	(printf@width+1)^(0+128),f
  2377  02F7                     l7003:	
  2378  02F7  0832               	movf	(printf@width+1)^(0+128),w
  2379  02F8  3A80               	xorlw	128
  2380  02F9  00FF               	movwf	127
  2381  02FA  3080               	movlw	128
  2382  02FB  027F               	subwf	127,w
  2383  02FC  1D03               	skipz
  2384  02FD  2B00               	goto	u3635
  2385  02FE  3001               	movlw	1
  2386  02FF  0231               	subwf	printf@width^(0+128),w
  2387  0300                     u3635:	
  2388  0300  1803               	skipnc
  2389  0301  2AEE               	goto	l6999
  2390  0302  2798               	call	PL32	;select bank 1
  2391  0303  082D               	movf	printf@flag^(0+128),w
  2392  0304  3903               	andlw	3
  2393  0305  1903               	btfsc	3,2
  2394  0306  2B35               	goto	l7011
  2395  0307  302D               	movlw	45
  2396  0308  2B32               	goto	L2
  2397  0309                     l7009:	
  2398  0309  2710  120A  118A   	fcall	PL4	;call to abstracted procedure
  2399  030C  2706               	fcall	PL2	;call to abstracted procedure
  2400  030D  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2401  0312  00F2               	movwf	?___lldiv
  2402  0313  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2403  0318  00F3               	movwf	?___lldiv+1
  2404  0319  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2405  031E  00F4               	movwf	?___lldiv+2
  2406  031F  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2407  0324  2718  120A  118A   	fcall	PL5	;call to abstracted procedure
  2408  0327  263D  120A  118A   	fcall	___lldiv
  2409  032A  273E  120A  118A   	fcall	PL12	;call to abstracted procedure
  2410  032D  2551  120A  118A   	fcall	___llmod
  2411  0330  0825               	movf	?___llmod,w
  2412  0331  3E30               	addlw	48
  2413  0332                     L2:	
  2414  0332  254D  120A  118A   	fcall	_putch
  2415  0335                     l7011:	
  2416  0335  2798               	call	PL32	;select bank 1
  2417  0336  03B8               	decf	printf@c^(0+128),f
  2418  0337  0F38               	incfsz	printf@c^(0+128),w
  2419  0338  2B09               	goto	l7009
  2420  0339                     l7017:	
  2421  0339  0830               	movf	(printf@exp+1)^(0+128),w
  2422  033A  3A80               	xorlw	128
  2423  033B  00FF               	movwf	127
  2424  033C  3080               	movlw	128
  2425  033D  027F               	subwf	127,w
  2426  033E  1D03               	skipz
  2427  033F  2B42               	goto	u3665
  2428  0340  3001               	movlw	1
  2429  0341  022F               	subwf	printf@exp^(0+128),w
  2430  0342                     u3665:	
  2431  0342  1C03               	btfss	3,0
  2432  0343  2B4E               	goto	l7019
  2433  0344  3030               	movlw	48
  2434  0345  254D  120A  118A   	fcall	_putch
  2435  0348  30FF               	movlw	-1
  2436  0349  2798               	call	PL32	;select bank 1
  2437  034A  07AF               	addwf	printf@exp^(0+128),f
  2438  034B  1C03               	skipc
  2439  034C  03B0               	decf	(printf@exp+1)^(0+128),f
  2440  034D  2B39               	goto	l7017
  2441  034E                     l7019:	
  2442  034E  2798               	call	PL32	;select bank 1
  2443  034F  0837               	movf	(printf@prec+1)^(0+128),w
  2444  0350  3A80               	xorlw	128
  2445  0351  00FF               	movwf	127
  2446  0352  3080               	movlw	128
  2447  0353  027F               	subwf	127,w
  2448  0354  1D03               	skipz
  2449  0355  2B58               	goto	u3675
  2450  0356  3009               	movlw	9
  2451  0357  0236               	subwf	printf@prec^(0+128),w
  2452  0358                     u3675:	
  2453  0358  1C03               	skipc
  2454  0359  2B5D               	goto	l7023
  2455  035A  3008               	movlw	8
  2456  035B  2798               	call	PL32	;select bank 1
  2457  035C  2B5F               	goto	L3
  2458  035D                     l7023:	
  2459  035D  2798               	call	PL32	;select bank 1
  2460  035E  0836               	movf	printf@prec^(0+128),w
  2461  035F                     L3:	
  2462  035F  00B8               	movwf	printf@c^(0+128)
  2463  0360  1283               	bcf	3,5	;RP0=0, select bank0
  2464  0361  00DA               	movwf	??_printf
  2465  0362  01DB               	clrf	??_printf+1
  2466  0363  1BDA               	btfsc	??_printf,7
  2467  0364  03DB               	decf	??_printf+1,f
  2468  0365  1683               	bsf	3,5	;RP0=1, select bank1
  2469  0366  02B6               	subwf	printf@prec^(0+128),f
  2470  0367  1283               	bcf	3,5	;RP0=0, select bank0
  2471  0368  085B               	movf	??_printf+1,w
  2472  0369  1683               	bsf	3,5	;RP0=1, select bank1
  2473  036A  1C03               	skipc
  2474  036B  03B7               	decf	(printf@prec+1)^(0+128),f
  2475  036C  02B7               	subwf	(printf@prec+1)^(0+128),f
  2476  036D  0838               	movf	printf@c^(0+128),w
  2477  036E  1903               	btfsc	3,2
  2478  036F  2B74               	goto	l2266
  2479  0370  302E               	movlw	46
  2480  0371  254D  120A  118A   	fcall	_putch
  2481  0374                     l2266:	
  2482  0374  2798               	call	PL32	;select bank 1
  2483  0375  0838               	movf	printf@c^(0+128),w
  2484  0376  120A  158A  24D7   	fcall	_scale
      +       120A  118A         
  2485  037B  0840               	movf	?_scale,w
  2486  037C  00B4               	movwf	?___ftmul+3
  2487  037D  0841               	movf	?_scale+1,w
  2488  037E  00B5               	movwf	?___ftmul+4
  2489  037F  0842               	movf	?_scale+2,w
  2490  0380  00B6               	movwf	?___ftmul+5
  2491  0381  1683               	bsf	3,5	;RP0=1, select bank1
  2492  0382  0833               	movf	printf@fval^(0+128),w
  2493  0383  275E               	fcall	PL16	;call to abstracted procedure
  2494  0384  120A  158A  26EC   	fcall	___ftmul
      +       120A  118A         
  2495  0389  0831               	movf	?___ftmul,w
  2496  038A  00A4               	movwf	?___fttol
  2497  038B  0832               	movf	?___ftmul+1,w
  2498  038C  00A5               	movwf	?___fttol+1
  2499  038D  0833               	movf	?___ftmul+2,w
  2500  038E  00A6               	movwf	?___fttol+2
  2501  038F  25E2  120A  118A   	fcall	___fttol
  2502  0392  2723  120A  118A   	fcall	PL6	;call to abstracted procedure
  2503  0395  2BFC               	goto	L4
  2504  0396                     l7027:	
  2505  0396  2710  120A  118A   	fcall	PL4	;call to abstracted procedure
  2506  0399  2706               	fcall	PL2	;call to abstracted procedure
  2507  039A  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2508  039F  00F2               	movwf	?___lldiv
  2509  03A0  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2510  03A5  00F3               	movwf	?___lldiv+1
  2511  03A6  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2512  03AB  00F4               	movwf	?___lldiv+2
  2513  03AC  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2514  03B1  2718  120A  118A   	fcall	PL5	;call to abstracted procedure
  2515  03B4  263D  120A  118A   	fcall	___lldiv
  2516  03B7  273E  120A  118A   	fcall	PL12	;call to abstracted procedure
  2517  03BA  2551  120A  118A   	fcall	___llmod
  2518  03BD  0825               	movf	?___llmod,w
  2519  03BE  3E30               	addlw	48
  2520  03BF  254D  120A  118A   	fcall	_putch
  2521  03C2  2798               	call	PL32	;select bank 1
  2522  03C3  2706               	fcall	PL2	;call to abstracted procedure
  2523  03C4  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2524  03C9  00A5               	movwf	?___llmod
  2525  03CA  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2526  03CF  00A6               	movwf	?___llmod+1
  2527  03D0  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2528  03D5  00A7               	movwf	?___llmod+2
  2529  03D6  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2530  03DB  00A8               	movwf	?___llmod+3
  2531  03DC  1683               	bsf	3,5	;RP0=1, select bank1
  2532  03DD  082B               	movf	(printf@_val+3)^(0+128),w
  2533  03DE  1283               	bcf	3,5	;RP0=0, select bank0
  2534  03DF  00AC               	movwf	?___llmod+7
  2535  03E0  1683               	bsf	3,5	;RP0=1, select bank1
  2536  03E1  082A               	movf	(printf@_val+2)^(0+128),w
  2537  03E2  1283               	bcf	3,5	;RP0=0, select bank0
  2538  03E3  00AB               	movwf	?___llmod+6
  2539  03E4  1683               	bsf	3,5	;RP0=1, select bank1
  2540  03E5  0829               	movf	(printf@_val+1)^(0+128),w
  2541  03E6  1283               	bcf	3,5	;RP0=0, select bank0
  2542  03E7  00AA               	movwf	?___llmod+5
  2543  03E8  1683               	bsf	3,5	;RP0=1, select bank1
  2544  03E9  0828               	movf	printf@_val^(0+128),w
  2545  03EA  1283               	bcf	3,5	;RP0=0, select bank0
  2546  03EB  00A9               	movwf	?___llmod+4
  2547  03EC  2551  120A  118A   	fcall	___llmod
  2548  03EF  0828               	movf	?___llmod+3,w
  2549  03F0  1683               	bsf	3,5	;RP0=1, select bank1
  2550  03F1  00AB               	movwf	(printf@_val+3)^(0+128)
  2551  03F2  1283               	bcf	3,5	;RP0=0, select bank0
  2552  03F3  0827               	movf	?___llmod+2,w
  2553  03F4  1683               	bsf	3,5	;RP0=1, select bank1
  2554  03F5  00AA               	movwf	(printf@_val+2)^(0+128)
  2555  03F6  1283               	bcf	3,5	;RP0=0, select bank0
  2556  03F7  0826               	movf	?___llmod+1,w
  2557  03F8  1683               	bsf	3,5	;RP0=1, select bank1
  2558  03F9  00A9               	movwf	(printf@_val+1)^(0+128)
  2559  03FA  1283               	bcf	3,5	;RP0=0, select bank0
  2560  03FB  0825               	movf	?___llmod,w
  2561  03FC                     L4:	
  2562  03FC  1683               	bsf	3,5	;RP0=1, select bank1
  2563  03FD  00A8               	movwf	printf@_val^(0+128)
  2564  03FE  03B8               	decf	printf@c^(0+128),f
  2565  03FF  0F38               	incfsz	printf@c^(0+128),w
  2566  0400  2B96               	goto	l7027
  2567  0401                     l7035:	
  2568  0401  0837               	movf	(printf@prec+1)^(0+128),w
  2569  0402  0436               	iorwf	printf@prec^(0+128),w
  2570  0403  1903               	btfsc	3,2
  2571  0404  2813               	goto	l7115
  2572  0405  3030               	movlw	48
  2573  0406  254D  120A  118A   	fcall	_putch
  2574  0409  30FF               	movlw	-1
  2575  040A  2798               	call	PL32	;select bank 1
  2576  040B  07B6               	addwf	printf@prec^(0+128),f
  2577  040C  1C03               	skipc
  2578  040D  03B7               	decf	(printf@prec+1)^(0+128),f
  2579  040E  2C01               	goto	l7035
  2580  040F                     l7037:	
  2581  040F  1683               	bsf	3,5	;RP0=1, select bank1
  2582  0410  0824               	movf	printf@ap^(0+128),w
  2583  0411  0084               	movwf	4
  2584  0412  1383               	bcf	3,7	;select IRP bank0
  2585  0413  2791  120A  118A   	fcall	PL31	;call to abstracted procedure
  2586  0416  085A               	movf	??_printf,w
  2587  0417  1683               	bsf	3,5	;RP0=1, select bank1
  2588  0418  00A8               	movwf	printf@_val^(0+128)
  2589  0419  1283               	bcf	3,5	;RP0=0, select bank0
  2590  041A  085B               	movf	??_printf+1,w
  2591  041B  1683               	bsf	3,5	;RP0=1, select bank1
  2592  041C  00A9               	movwf	(printf@_val^(0+128)+1)
  2593  041D  01AA               	clrf	(printf@_val^(0+128)+2)
  2594  041E  01AB               	clrf	(printf@_val^(0+128)+3)
  2595  041F  0AA4               	incf	printf@ap^(0+128),f
  2596  0420  0AA4               	incf	printf@ap^(0+128),f
  2597  0421  0837               	movf	(printf@prec+1)^(0+128),w
  2598  0422  0436               	iorwf	printf@prec^(0+128),w
  2599  0423  1D03               	skipz
  2600  0424  2C2D               	goto	l7047
  2601  0425  082B               	movf	(printf@_val+3)^(0+128),w
  2602  0426  042A               	iorwf	(printf@_val+2)^(0+128),w
  2603  0427  0429               	iorwf	(printf@_val+1)^(0+128),w
  2604  0428  0428               	iorwf	printf@_val^(0+128),w
  2605  0429  1903               	btfsc	3,2
  2606  042A  0AB6               	incf	printf@prec^(0+128),f
  2607  042B  1903               	skipnz
  2608  042C  0AB7               	incf	(printf@prec+1)^(0+128),f
  2609  042D                     l7047:	
  2610  042D  01B8               	clrf	printf@c^(0+128)
  2611  042E  0AB8               	incf	printf@c^(0+128),f
  2612  042F                     l7053:	
  2613  042F  2706               	fcall	PL2	;call to abstracted procedure
  2614  0430  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2615  0435  00DB               	movwf	??_printf+1
  2616  0436  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2617  043B  00DC               	movwf	??_printf+2
  2618  043C  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2619  0441  00DD               	movwf	??_printf+3
  2620  0442  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2621  0447  00DE               	movwf	??_printf+4
  2622  0448  1683               	bsf	3,5	;RP0=1, select bank1
  2623  0449  022B               	subwf	(printf@_val+3)^(0+128),w
  2624  044A  1D03               	skipz
  2625  044B  2C5C               	goto	u3735
  2626  044C  1283               	bcf	3,5	;RP0=0, select bank0
  2627  044D  085D               	movf	??_printf+3,w
  2628  044E  1683               	bsf	3,5	;RP0=1, select bank1
  2629  044F  022A               	subwf	(printf@_val+2)^(0+128),w
  2630  0450  1D03               	skipz
  2631  0451  2C5C               	goto	u3735
  2632  0452  1283               	bcf	3,5	;RP0=0, select bank0
  2633  0453  085C               	movf	??_printf+2,w
  2634  0454  1683               	bsf	3,5	;RP0=1, select bank1
  2635  0455  0229               	subwf	(printf@_val+1)^(0+128),w
  2636  0456  1D03               	skipz
  2637  0457  2C5C               	goto	u3735
  2638  0458  1283               	bcf	3,5	;RP0=0, select bank0
  2639  0459  085B               	movf	??_printf+1,w
  2640  045A  1683               	bsf	3,5	;RP0=1, select bank1
  2641  045B  0228               	subwf	printf@_val^(0+128),w
  2642  045C                     u3735:	
  2643  045C  1C03               	btfss	3,0
  2644  045D  2C63               	goto	l7061
  2645  045E  0AB8               	incf	printf@c^(0+128),f
  2646  045F  0838               	movf	printf@c^(0+128),w
  2647  0460  3A0A               	xorlw	10
  2648  0461  1D03               	skipz
  2649  0462  2C2F               	goto	l7053
  2650  0463                     l7061:	
  2651  0463  0838               	movf	printf@c^(0+128),w
  2652  0464  2769  120A  118A   	fcall	PL18	;call to abstracted procedure
  2653  0467  0837               	movf	(printf@prec+1)^(0+128),w
  2654  0468  3A80               	xorlw	128
  2655  0469  1283               	bcf	3,5	;RP0=0, select bank0
  2656  046A  025C               	subwf	??_printf+2,w
  2657  046B  1D03               	skipz
  2658  046C  2C71               	goto	u3755
  2659  046D  1683               	bsf	3,5	;RP0=1, select bank1
  2660  046E  0836               	movf	printf@prec^(0+128),w
  2661  046F  1283               	bcf	3,5	;RP0=0, select bank0
  2662  0470  025A               	subwf	??_printf,w
  2663  0471                     u3755:	
  2664  0471  1803               	skipnc
  2665  0472  2C77               	goto	l7065
  2666  0473  2798               	call	PL32	;select bank 1
  2667  0474  0836               	movf	printf@prec^(0+128),w
  2668  0475  00B8               	movwf	printf@c^(0+128)
  2669  0476  2C8F               	goto	l7069
  2670  0477                     l7065:	
  2671  0477  1683               	bsf	3,5	;RP0=1, select bank1
  2672  0478  2773  120A  118A   	fcall	PL20	;call to abstracted procedure
  2673  047B  0837               	movf	(printf@prec+1)^(0+128),w
  2674  047C  3A80               	xorlw	128
  2675  047D  1283               	bcf	3,5	;RP0=0, select bank0
  2676  047E  00DC               	movwf	??_printf+2
  2677  047F  085B               	movf	??_printf+1,w
  2678  0480  3A80               	xorlw	128
  2679  0481  025C               	subwf	??_printf+2,w
  2680  0482  1D03               	skipz
  2681  0483  2C87               	goto	u3765
  2682  0484  085A               	movf	??_printf,w
  2683  0485  1683               	bsf	3,5	;RP0=1, select bank1
  2684  0486  0236               	subwf	printf@prec^(0+128),w
  2685  0487                     u3765:	
  2686  0487  1803               	skipnc
  2687  0488  2C8F               	goto	l7069
  2688  0489  2798               	call	PL32	;select bank 1
  2689  048A  0838               	movf	printf@c^(0+128),w
  2690  048B  00B6               	movwf	printf@prec^(0+128)
  2691  048C  01B7               	clrf	(printf@prec+1)^(0+128)
  2692  048D  1BB6               	btfsc	printf@prec^(0+128),7
  2693  048E  03B7               	decf	(printf@prec+1)^(0+128),f
  2694  048F                     l7069:	
  2695  048F  2798               	call	PL32	;select bank 1
  2696  0490  0832               	movf	(printf@width+1)^(0+128),w
  2697  0491  0431               	iorwf	printf@width^(0+128),w
  2698  0492  1903               	skipnz
  2699  0493  2C9C               	goto	l7075
  2700  0494  082D               	movf	printf@flag^(0+128),w
  2701  0495  3903               	andlw	3
  2702  0496  1903               	btfsc	3,2
  2703  0497  2C9C               	goto	l7075
  2704  0498  30FF               	movlw	-1
  2705  0499  07B1               	addwf	printf@width^(0+128),f
  2706  049A  1C03               	skipc
  2707  049B  03B2               	decf	(printf@width+1)^(0+128),f
  2708  049C                     l7075:	
  2709  049C  1F2E               	btfss	(printf@flag+1)^(0+128),6
  2710  049D  2CB9               	goto	l7083
  2711  049E  0837               	movf	(printf@prec+1)^(0+128),w
  2712  049F  3A80               	xorlw	128
  2713  04A0  1283               	bcf	3,5	;RP0=0, select bank0
  2714  04A1  00DA               	movwf	??_printf
  2715  04A2  1683               	bsf	3,5	;RP0=1, select bank1
  2716  04A3  0832               	movf	(printf@width+1)^(0+128),w
  2717  04A4  3A80               	xorlw	128
  2718  04A5  1283               	bcf	3,5	;RP0=0, select bank0
  2719  04A6  025A               	subwf	??_printf,w
  2720  04A7  1D03               	skipz
  2721  04A8  2CAC               	goto	u3805
  2722  04A9  1683               	bsf	3,5	;RP0=1, select bank1
  2723  04AA  0831               	movf	printf@width^(0+128),w
  2724  04AB  0236               	subwf	printf@prec^(0+128),w
  2725  04AC                     u3805:	
  2726  04AC  1803               	skipnc
  2727  04AD  2CB6               	goto	l7081
  2728  04AE  2798               	call	PL32	;select bank 1
  2729  04AF  0836               	movf	printf@prec^(0+128),w
  2730  04B0  02B1               	subwf	printf@width^(0+128),f
  2731  04B1  0837               	movf	(printf@prec+1)^(0+128),w
  2732  04B2  1C03               	skipc
  2733  04B3  03B2               	decf	(printf@width+1)^(0+128),f
  2734  04B4  02B2               	subwf	(printf@width+1)^(0+128),f
  2735  04B5  2CB9               	goto	l7083
  2736  04B6                     l7081:	
  2737  04B6  2798               	call	PL32	;select bank 1
  2738  04B7  01B1               	clrf	printf@width^(0+128)
  2739  04B8  01B2               	clrf	(printf@width+1)^(0+128)
  2740  04B9                     l7083:	
  2741  04B9  0838               	movf	printf@c^(0+128),w
  2742  04BA  2769  120A  118A   	fcall	PL18	;call to abstracted procedure
  2743  04BD  0832               	movf	(printf@width+1)^(0+128),w
  2744  04BE  3A80               	xorlw	128
  2745  04BF  1283               	bcf	3,5	;RP0=0, select bank0
  2746  04C0  025C               	subwf	??_printf+2,w
  2747  04C1  1D03               	skipz
  2748  04C2  2CC7               	goto	u3815
  2749  04C3  1683               	bsf	3,5	;RP0=1, select bank1
  2750  04C4  0831               	movf	printf@width^(0+128),w
  2751  04C5  1283               	bcf	3,5	;RP0=0, select bank0
  2752  04C6  025A               	subwf	??_printf,w
  2753  04C7                     u3815:	
  2754  04C7  1803               	skipnc
  2755  04C8  2CD5               	goto	l7087
  2756  04C9  1683               	bsf	3,5	;RP0=1, select bank1
  2757  04CA  2773  120A  118A   	fcall	PL20	;call to abstracted procedure
  2758  04CD  02B1               	subwf	printf@width^(0+128),f
  2759  04CE  1283               	bcf	3,5	;RP0=0, select bank0
  2760  04CF  085B               	movf	??_printf+1,w
  2761  04D0  1683               	bsf	3,5	;RP0=1, select bank1
  2762  04D1  1C03               	skipc
  2763  04D2  03B2               	decf	(printf@width+1)^(0+128),f
  2764  04D3  02B2               	subwf	(printf@width+1)^(0+128),f
  2765  04D4  2CD8               	goto	l7089
  2766  04D5                     l7087:	
  2767  04D5  2798               	call	PL32	;select bank 1
  2768  04D6  01B1               	clrf	printf@width^(0+128)
  2769  04D7  01B2               	clrf	(printf@width+1)^(0+128)
  2770  04D8                     l7089:	
  2771  04D8  1D2D               	btfss	printf@flag^(0+128),2
  2772  04D9  2CF1               	goto	l7101
  2773  04DA  082D               	movf	printf@flag^(0+128),w
  2774  04DB  3903               	andlw	3
  2775  04DC  1903               	btfsc	3,2
  2776  04DD  2CE2               	goto	l7095
  2777  04DE  302D               	movlw	45
  2778  04DF  254D  120A  118A   	fcall	_putch
  2779  04E2                     l7095:	
  2780  04E2  2798               	call	PL32	;select bank 1
  2781  04E3                     L6:	
  2782  04E3  0832               	movf	(printf@width+1)^(0+128),w
  2783  04E4  0431               	iorwf	printf@width^(0+128),w
  2784  04E5  1903               	skipnz
  2785  04E6  2D0A               	goto	l7113
  2786  04E7  3030               	movlw	48
  2787  04E8  254D  120A  118A   	fcall	_putch
  2788  04EB  30FF               	movlw	-1
  2789  04EC  2798               	call	PL32	;select bank 1
  2790  04ED  07B1               	addwf	printf@width^(0+128),f
  2791  04EE  1C03               	skipc
  2792  04EF  03B2               	decf	(printf@width+1)^(0+128),f
  2793  04F0  2CE3               	goto	L6
  2794  04F1                     l7101:	
  2795  04F1  0832               	movf	(printf@width+1)^(0+128),w
  2796  04F2  0431               	iorwf	printf@width^(0+128),w
  2797  04F3  1903               	skipnz
  2798  04F4  2D02               	goto	l7107
  2799  04F5                     l7103:	
  2800  04F5  3020               	movlw	32
  2801  04F6  254D  120A  118A   	fcall	_putch
  2802  04F9  30FF               	movlw	-1
  2803  04FA  2798               	call	PL32	;select bank 1
  2804  04FB  07B1               	addwf	printf@width^(0+128),f
  2805  04FC  1C03               	skipc
  2806  04FD  03B2               	decf	(printf@width+1)^(0+128),f
  2807  04FE  0832               	movf	(printf@width+1)^(0+128),w
  2808  04FF  0431               	iorwf	printf@width^(0+128),w
  2809  0500  1D03               	skipz
  2810  0501  2CF5               	goto	l7103
  2811  0502                     l7107:	
  2812  0502  082D               	movf	printf@flag^(0+128),w
  2813  0503  3903               	andlw	3
  2814  0504  1903               	btfsc	3,2
  2815  0505  2D0A               	goto	l7113
  2816  0506  302D               	movlw	45
  2817  0507                     L5:	
  2818  0507  254D  120A  118A   	fcall	_putch
  2819  050A                     l7113:	
  2820  050A  30FF               	movlw	-1
  2821  050B  2798               	call	PL32	;select bank 1
  2822  050C  07B6               	addwf	printf@prec^(0+128),f
  2823  050D  1C03               	skipc
  2824  050E  03B7               	decf	(printf@prec+1)^(0+128),f
  2825  050F  0A36               	incf	printf@prec^(0+128),w
  2826  0510  1903               	skipnz
  2827  0511  0A37               	incf	(printf@prec+1)^(0+128),w
  2828  0512  1903               	btfsc	3,2
  2829  0513  2813               	goto	l7115
  2830  0514  300A               	movlw	10
  2831  0515  1283               	bcf	3,5	;RP0=0, select bank0
  2832  0516  00A5               	movwf	?___llmod
  2833  0517  01A6               	clrf	?___llmod+1
  2834  0518  01A7               	clrf	?___llmod+2
  2835  0519  01A8               	clrf	?___llmod+3
  2836  051A  1683               	bsf	3,5	;RP0=1, select bank1
  2837  051B  0836               	movf	printf@prec^(0+128),w
  2838  051C  1283               	bcf	3,5	;RP0=0, select bank0
  2839  051D  00DA               	movwf	??_printf
  2840  051E  1003               	clrc
  2841  051F  0DDA               	rlf	??_printf,f
  2842  0520  1003               	clrc
  2843  0521  0D5A               	rlf	??_printf,w
  2844  0522  3E4F               	addlw	low (_dpowers-__stringbase)
  2845  0523  0084               	movwf	4
  2846  0524  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2847  0529  00F2               	movwf	?___lldiv
  2848  052A  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2849  052F  00F3               	movwf	?___lldiv+1
  2850  0530  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2851  0535  00F4               	movwf	?___lldiv+2
  2852  0536  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2853  053B  2718  120A  118A   	fcall	PL5	;call to abstracted procedure
  2854  053E  263D  120A  118A   	fcall	___lldiv
  2855  0541  273E  120A  118A   	fcall	PL12	;call to abstracted procedure
  2856  0544  2551  120A  118A   	fcall	___llmod
  2857  0547  0825               	movf	?___llmod,w
  2858  0548  3E30               	addlw	48
  2859  0549  1683               	bsf	3,5	;RP0=1, select bank1
  2860  054A  00B8               	movwf	printf@c^(0+128)
  2861  054B  2D07               	goto	L5
  2862  054C                     l2300:	
  2863  054C  0008               	return
  2864  054D                     __end_of_printf:	
  2865  054D                     __ptext518:	
  2866 ;; =============== function _printf ends ============
  2867                           
  2868                           
  2869 ;; *************** function _putch *****************
  2870 ;; Defined at:
  2871 ;;		line 76 in file "C:\Users\DELL\Desktop\baitap_ttvxl\dotanso_khongdungCCP\dotansodungkoCCP(2).c"
  2872 ;; Parameters:    Size  Location     Type
  2873 ;;  c               1    wreg     unsigned char 
  2874 ;; Auto vars:     Size  Location     Type
  2875 ;;  c               1   11[COMMON] unsigned char 
  2876 ;; Return value:  Size  Location     Type
  2877 ;;		None               void
  2878 ;; Registers used:
  2879 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2880 ;; Tracked objects:
  2881 ;;		On entry : 0/20
  2882 ;;		On exit  : 0/0
  2883 ;;		Unchanged: 0/0
  2884 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2885 ;;      Params:         0       0       0       0       0
  2886 ;;      Locals:         1       0       0       0       0
  2887 ;;      Temps:          0       0       0       0       0
  2888 ;;      Totals:         1       0       0       0       0
  2889 ;;Total ram usage:        1 bytes
  2890 ;; Hardware stack levels used:    1
  2891 ;; Hardware stack levels required when called:    4
  2892 ;; This function calls:
  2893 ;;		_lcd_putc
  2894 ;; This function is called by:
  2895 ;;		_printf
  2896 ;; This function uses a non-reentrant model
  2897 ;;
  2898  054D                     _putch:	
  2899                           
  2900                           ; Regs used in _putch: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2901                           ;putch@c stored from wreg
  2902  054D  00FB               	movwf	putch@c
  2903                           
  2904                           ;dotansodungkoCCP(2).c: 77: lcd_putc(c);
  2905  054E  120A  158A  2AD1   	ljmp	_lcd_putc
  2906  0551                     __end_of_putch:	
  2907  0551                     __ptext535:	
  2908 ;; =============== function ___ftneg ends ============
  2909                           
  2910                           
  2911 ;; *************** function ___llmod *****************
  2912 ;; Defined at:
  2913 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\llmod.c"
  2914 ;; Parameters:    Size  Location     Type
  2915 ;;  divisor         4    5[BANK0 ] unsigned long 
  2916 ;;  dividend        4    9[BANK0 ] unsigned long 
  2917 ;; Auto vars:     Size  Location     Type
  2918 ;;  counter         1   10[COMMON] unsigned char 
  2919 ;; Return value:  Size  Location     Type
  2920 ;;                  4    5[BANK0 ] unsigned long 
  2921 ;; Registers used:
  2922 ;;		wreg, status,2, status,0
  2923 ;; Tracked objects:
  2924 ;;		On entry : 60/0
  2925 ;;		On exit  : 60/0
  2926 ;;		Unchanged: FFF9F/0
  2927 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2928 ;;      Params:         0       8       0       0       0
  2929 ;;      Locals:         1       0       0       0       0
  2930 ;;      Temps:          0       0       0       0       0
  2931 ;;      Totals:         1       8       0       0       0
  2932 ;;Total ram usage:        9 bytes
  2933 ;; Hardware stack levels used:    1
  2934 ;; Hardware stack levels required when called:    1
  2935 ;; This function calls:
  2936 ;;		Nothing
  2937 ;; This function is called by:
  2938 ;;		_printf
  2939 ;; This function uses a non-reentrant model
  2940 ;;
  2941  0551                     ___llmod:	
  2942                           
  2943                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  2944  0551  0828               	movf	___llmod@divisor+3,w
  2945  0552  0427               	iorwf	___llmod@divisor+2,w
  2946  0553  0426               	iorwf	___llmod@divisor+1,w
  2947  0554  0425               	iorwf	___llmod@divisor,w
  2948  0555  1903               	skipnz
  2949  0556  2D86               	goto	l6395
  2950  0557  01FA               	clrf	___llmod@counter
  2951  0558                     L13:	
  2952  0558  0AFA               	incf	___llmod@counter,f
  2953  0559  1BA8               	btfsc	___llmod@divisor+3,7
  2954  055A  2D61               	goto	l6387
  2955  055B  1003               	clrc
  2956  055C  0DA5               	rlf	___llmod@divisor,f
  2957  055D  0DA6               	rlf	___llmod@divisor+1,f
  2958  055E  0DA7               	rlf	___llmod@divisor+2,f
  2959  055F  0DA8               	rlf	___llmod@divisor+3,f
  2960  0560  2D58               	goto	L13
  2961  0561                     l6387:	
  2962  0561  0828               	movf	___llmod@divisor+3,w
  2963  0562  022C               	subwf	___llmod@dividend+3,w
  2964  0563  1D03               	skipz
  2965  0564  2D6F               	goto	u2545
  2966  0565  0827               	movf	___llmod@divisor+2,w
  2967  0566  022B               	subwf	___llmod@dividend+2,w
  2968  0567  1D03               	skipz
  2969  0568  2D6F               	goto	u2545
  2970  0569  0826               	movf	___llmod@divisor+1,w
  2971  056A  022A               	subwf	___llmod@dividend+1,w
  2972  056B  1D03               	skipz
  2973  056C  2D6F               	goto	u2545
  2974  056D  0825               	movf	___llmod@divisor,w
  2975  056E  0229               	subwf	___llmod@dividend,w
  2976  056F                     u2545:	
  2977  056F  1C03               	skipc
  2978  0570  2D80               	goto	L14
  2979  0571  0825               	movf	___llmod@divisor,w
  2980  0572  02A9               	subwf	___llmod@dividend,f
  2981  0573  0826               	movf	___llmod@divisor+1,w
  2982  0574  1C03               	skipc
  2983  0575  0F26               	incfsz	___llmod@divisor+1,w
  2984  0576  02AA               	subwf	___llmod@dividend+1,f
  2985  0577  0827               	movf	___llmod@divisor+2,w
  2986  0578  1C03               	skipc
  2987  0579  0F27               	incfsz	___llmod@divisor+2,w
  2988  057A  02AB               	subwf	___llmod@dividend+2,f
  2989  057B  0828               	movf	___llmod@divisor+3,w
  2990  057C  1C03               	skipc
  2991  057D  0F28               	incfsz	___llmod@divisor+3,w
  2992  057E  02AC               	subwf	___llmod@dividend+3,f
  2993  057F  1003               	clrc
  2994  0580                     L14:	
  2995  0580  0CA8               	rrf	___llmod@divisor+3,f
  2996  0581  0CA7               	rrf	___llmod@divisor+2,f
  2997  0582  0CA6               	rrf	___llmod@divisor+1,f
  2998  0583  0CA5               	rrf	___llmod@divisor,f
  2999  0584  0BFA               	decfsz	___llmod@counter,f
  3000  0585  2D61               	goto	l6387
  3001  0586                     l6395:	
  3002  0586  082C               	movf	___llmod@dividend+3,w
  3003  0587  00A8               	movwf	?___llmod+3
  3004  0588  082B               	movf	___llmod@dividend+2,w
  3005  0589  00A7               	movwf	?___llmod+2
  3006  058A  082A               	movf	___llmod@dividend+1,w
  3007  058B  00A6               	movwf	?___llmod+1
  3008  058C  0829               	movf	___llmod@dividend,w
  3009  058D  00A5               	movwf	?___llmod
  3010  058E  0008               	return
  3011  058F                     __end_of___llmod:	
  3012  058F                     __ptext533:	
  3013 ;; =============== function ___lldiv ends ============
  3014                           
  3015                           
  3016 ;; *************** function ___ftge *****************
  3017 ;; Defined at:
  3018 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\ftge.c"
  3019 ;; Parameters:    Size  Location     Type
  3020 ;;  ff1             3    2[COMMON] float 
  3021 ;;  ff2             3    5[COMMON] float 
  3022 ;; Auto vars:     Size  Location     Type
  3023 ;;		None
  3024 ;; Return value:  Size  Location     Type
  3025 ;;		None               void
  3026 ;; Registers used:
  3027 ;;		wreg, status,2, status,0
  3028 ;; Tracked objects:
  3029 ;;		On entry : 60/20
  3030 ;;		On exit  : 60/20
  3031 ;;		Unchanged: FFF9F/0
  3032 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3033 ;;      Params:         6       0       0       0       0
  3034 ;;      Locals:         0       0       0       0       0
  3035 ;;      Temps:          0       0       0       0       0
  3036 ;;      Totals:         6       0       0       0       0
  3037 ;;Total ram usage:        6 bytes
  3038 ;; Hardware stack levels used:    1
  3039 ;; Hardware stack levels required when called:    1
  3040 ;; This function calls:
  3041 ;;		Nothing
  3042 ;; This function is called by:
  3043 ;;		_printf
  3044 ;; This function uses a non-reentrant model
  3045 ;;
  3046  058F                     ___ftge:	
  3047                           
  3048                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  3049  058F  1FF4               	btfss	___ftge@ff1+2,7
  3050  0590  2D9E               	goto	l6411
  3051  0591  0872               	movf	___ftge@ff1,w
  3052  0592  3C00               	sublw	0
  3053  0593  00F2               	movwf	___ftge@ff1
  3054  0594  0873               	movf	___ftge@ff1+1,w
  3055  0595  1C03               	skipc
  3056  0596  0F73               	incfsz	___ftge@ff1+1,w
  3057  0597  3C00               	sublw	0
  3058  0598  00F3               	movwf	___ftge@ff1+1
  3059  0599  0874               	movf	___ftge@ff1+2,w
  3060  059A  1C03               	skipc
  3061  059B  0F74               	incfsz	___ftge@ff1+2,w
  3062  059C  3C80               	sublw	128
  3063  059D  00F4               	movwf	___ftge@ff1+2
  3064  059E                     l6411:	
  3065  059E  1FF7               	btfss	___ftge@ff2+2,7
  3066  059F  2DAD               	goto	l6415
  3067  05A0  0875               	movf	___ftge@ff2,w
  3068  05A1  3C00               	sublw	0
  3069  05A2  00F5               	movwf	___ftge@ff2
  3070  05A3  0876               	movf	___ftge@ff2+1,w
  3071  05A4  1C03               	skipc
  3072  05A5  0F76               	incfsz	___ftge@ff2+1,w
  3073  05A6  3C00               	sublw	0
  3074  05A7  00F6               	movwf	___ftge@ff2+1
  3075  05A8  0877               	movf	___ftge@ff2+2,w
  3076  05A9  1C03               	skipc
  3077  05AA  0F77               	incfsz	___ftge@ff2+2,w
  3078  05AB  3C80               	sublw	128
  3079  05AC  00F7               	movwf	___ftge@ff2+2
  3080  05AD                     l6415:	
  3081  05AD  3080               	movlw	128
  3082  05AE  06F4               	xorwf	___ftge@ff1+2,f
  3083  05AF  06F7               	xorwf	___ftge@ff2+2,f
  3084  05B0  0877               	movf	___ftge@ff2+2,w
  3085  05B1  0274               	subwf	___ftge@ff1+2,w
  3086  05B2  1D03               	skipz
  3087  05B3  0008               	return
  3088  05B4  0876               	movf	___ftge@ff2+1,w
  3089  05B5  0273               	subwf	___ftge@ff1+1,w
  3090  05B6  1D03               	skipz
  3091  05B7  0008               	return
  3092  05B8  0875               	movf	___ftge@ff2,w
  3093  05B9  0272               	subwf	___ftge@ff1,w
  3094  05BA  0008               	return
  3095  05BB                     __end_of___ftge:	
  3096  05BB                     __ptext545:	
  3097 ;; =============== function __tdiv_to_l_ ends ============
  3098                           
  3099                           
  3100 ;; *************** function _isdigit *****************
  3101 ;; Defined at:
  3102 ;;		line 13 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\isdigit.c"
  3103 ;; Parameters:    Size  Location     Type
  3104 ;;  c               1    wreg     unsigned char 
  3105 ;; Auto vars:     Size  Location     Type
  3106 ;;  c               1    3[COMMON] unsigned char 
  3107 ;; Return value:  Size  Location     Type
  3108 ;;		None               void
  3109 ;; Registers used:
  3110 ;;		wreg, status,2, status,0
  3111 ;; Tracked objects:
  3112 ;;		On entry : 60/20
  3113 ;;		On exit  : 60/20
  3114 ;;		Unchanged: FFF9F/0
  3115 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3116 ;;      Params:         0       0       0       0       0
  3117 ;;      Locals:         2       0       0       0       0
  3118 ;;      Temps:          0       0       0       0       0
  3119 ;;      Totals:         2       0       0       0       0
  3120 ;;Total ram usage:        2 bytes
  3121 ;; Hardware stack levels used:    1
  3122 ;; Hardware stack levels required when called:    1
  3123 ;; This function calls:
  3124 ;;		Nothing
  3125 ;; This function is called by:
  3126 ;;		_printf
  3127 ;; This function uses a non-reentrant model
  3128 ;;
  3129  05BB                     _isdigit:	
  3130                           
  3131                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  3132                           ;isdigit@c stored from wreg
  3133  05BB  00F3               	movwf	isdigit@c
  3134  05BC  303A               	movlw	58
  3135  05BD  01F2               	clrf	_isdigit$3668
  3136  05BE  0273               	subwf	isdigit@c,w
  3137  05BF  1803               	skipnc
  3138  05C0  2DC7               	goto	l6097
  3139  05C1  3030               	movlw	48
  3140  05C2  0273               	subwf	isdigit@c,w
  3141  05C3  1C03               	skipc
  3142  05C4  2DC7               	goto	l6097
  3143  05C5  01F2               	clrf	_isdigit$3668
  3144  05C6  0AF2               	incf	_isdigit$3668,f
  3145  05C7                     l6097:	
  3146  05C7  0C72               	rrf	_isdigit$3668,w
  3147  05C8  0008               	return
  3148  05C9                     __end_of_isdigit:	
  3149  05C9                     __ptext541:	
  3150 ;; =============== function ___lbdiv ends ============
  3151                           
  3152                           
  3153 ;; *************** function ___wmul *****************
  3154 ;; Defined at:
  3155 ;;		line 3 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\wmul.c"
  3156 ;; Parameters:    Size  Location     Type
  3157 ;;  multiplier      2    2[COMMON] unsigned int 
  3158 ;;  multiplicand    2    4[COMMON] unsigned int 
  3159 ;; Auto vars:     Size  Location     Type
  3160 ;;  product         2    6[COMMON] unsigned int 
  3161 ;; Return value:  Size  Location     Type
  3162 ;;                  2    2[COMMON] unsigned int 
  3163 ;; Registers used:
  3164 ;;		wreg, status,2, status,0
  3165 ;; Tracked objects:
  3166 ;;		On entry : 60/20
  3167 ;;		On exit  : 60/20
  3168 ;;		Unchanged: FFF9F/0
  3169 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3170 ;;      Params:         4       0       0       0       0
  3171 ;;      Locals:         2       0       0       0       0
  3172 ;;      Temps:          0       0       0       0       0
  3173 ;;      Totals:         6       0       0       0       0
  3174 ;;Total ram usage:        6 bytes
  3175 ;; Hardware stack levels used:    1
  3176 ;; Hardware stack levels required when called:    1
  3177 ;; This function calls:
  3178 ;;		Nothing
  3179 ;; This function is called by:
  3180 ;;		_fround
  3181 ;;		_scale
  3182 ;;		_printf
  3183 ;; This function uses a non-reentrant model
  3184 ;;
  3185  05C9                     ___wmul:	
  3186                           
  3187                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  3188  05C9  01F6               	clrf	___wmul@product
  3189  05CA  01F7               	clrf	___wmul@product+1
  3190  05CB                     l6213:	
  3191  05CB  1C72               	btfss	___wmul@multiplier,0
  3192  05CC  2DD3               	goto	l6217
  3193  05CD  0874               	movf	___wmul@multiplicand,w
  3194  05CE  07F6               	addwf	___wmul@product,f
  3195  05CF  1803               	skipnc
  3196  05D0  0AF7               	incf	___wmul@product+1,f
  3197  05D1  0875               	movf	___wmul@multiplicand+1,w
  3198  05D2  07F7               	addwf	___wmul@product+1,f
  3199  05D3                     l6217:	
  3200  05D3  1003               	clrc
  3201  05D4  0DF4               	rlf	___wmul@multiplicand,f
  3202  05D5  0DF5               	rlf	___wmul@multiplicand+1,f
  3203  05D6  1003               	clrc
  3204  05D7  0CF3               	rrf	___wmul@multiplier+1,f
  3205  05D8  0CF2               	rrf	___wmul@multiplier,f
  3206  05D9  0873               	movf	___wmul@multiplier+1,w
  3207  05DA  0472               	iorwf	___wmul@multiplier,w
  3208  05DB  1D03               	skipz
  3209  05DC  2DCB               	goto	l6213
  3210  05DD  0877               	movf	___wmul@product+1,w
  3211  05DE  00F3               	movwf	?___wmul+1
  3212  05DF  0876               	movf	___wmul@product,w
  3213  05E0  00F2               	movwf	?___wmul
  3214  05E1  0008               	return
  3215  05E2                     __end_of___wmul:	
  3216  05E2                     __ptext537:	
  3217 ;; =============== function ___awdiv ends ============
  3218                           
  3219                           
  3220 ;; *************** function ___fttol *****************
  3221 ;; Defined at:
  3222 ;;		line 45 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\fttol.c"
  3223 ;; Parameters:    Size  Location     Type
  3224 ;;  f1              3    4[BANK0 ] float 
  3225 ;; Auto vars:     Size  Location     Type
  3226 ;;  lval            4   12[BANK0 ] unsigned long 
  3227 ;;  exp1            1   16[BANK0 ] unsigned char 
  3228 ;;  sign1           1   11[BANK0 ] unsigned char 
  3229 ;; Return value:  Size  Location     Type
  3230 ;;                  4    4[BANK0 ] long 
  3231 ;; Registers used:
  3232 ;;		wreg, status,2, status,0
  3233 ;; Tracked objects:
  3234 ;;		On entry : 60/0
  3235 ;;		On exit  : 60/0
  3236 ;;		Unchanged: FFF9F/0
  3237 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3238 ;;      Params:         0       4       0       0       0
  3239 ;;      Locals:         0       6       0       0       0
  3240 ;;      Temps:          0       3       0       0       0
  3241 ;;      Totals:         0      13       0       0       0
  3242 ;;Total ram usage:       13 bytes
  3243 ;; Hardware stack levels used:    1
  3244 ;; Hardware stack levels required when called:    1
  3245 ;; This function calls:
  3246 ;;		Nothing
  3247 ;; This function is called by:
  3248 ;;		_printf
  3249 ;; This function uses a non-reentrant model
  3250 ;;
  3251  05E2                     ___fttol:	
  3252                           
  3253                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  3254  05E2  278A  120A  118A   	fcall	PL29	;call to abstracted procedure
  3255  05E5  1003               	clrc
  3256  05E6  0D29               	rlf	??___fttol+1,w
  3257  05E7  0D2A               	rlf	??___fttol+2,w
  3258  05E8  00B0               	movwf	___fttol@exp1
  3259  05E9  08B0               	movf	___fttol@exp1,f
  3260  05EA  1D03               	skipz
  3261  05EB  2DF1               	goto	l6301
  3262  05EC                     l6299:	
  3263  05EC  01A4               	clrf	?___fttol
  3264  05ED  01A5               	clrf	?___fttol+1
  3265  05EE  01A6               	clrf	?___fttol+2
  3266  05EF  01A7               	clrf	?___fttol+3
  3267  05F0  0008               	return
  3268  05F1                     l6301:	
  3269  05F1  278A  120A  118A   	fcall	PL29	;call to abstracted procedure
  3270  05F4  3017               	movlw	23
  3271  05F5                     u2385:	
  3272  05F5  1003               	clrc
  3273  05F6  0CAA               	rrf	??___fttol+2,f
  3274  05F7  0CA9               	rrf	??___fttol+1,f
  3275  05F8  0CA8               	rrf	??___fttol,f
  3276  05F9  3EFF               	addlw	-1
  3277  05FA  1D03               	skipz
  3278  05FB  2DF5               	goto	u2385
  3279  05FC  0828               	movf	??___fttol,w
  3280  05FD  00AB               	movwf	___fttol@sign1
  3281  05FE  17A5               	bsf	___fttol@f1+1,7
  3282  05FF  01A6               	clrf	___fttol@f1+2
  3283  0600  0824               	movf	___fttol@f1,w
  3284  0601  00AC               	movwf	___fttol@lval
  3285  0602  0825               	movf	___fttol@f1+1,w
  3286  0603  00AD               	movwf	___fttol@lval+1
  3287  0604  0826               	movf	___fttol@f1+2,w
  3288  0605  00AE               	movwf	___fttol@lval+2
  3289  0606  308E               	movlw	142
  3290  0607  01AF               	clrf	___fttol@lval+3
  3291  0608  02B0               	subwf	___fttol@exp1,f
  3292  0609  1FB0               	btfss	___fttol@exp1,7
  3293  060A  2E18               	goto	l6321
  3294  060B  0830               	movf	___fttol@exp1,w
  3295  060C  3A80               	xorlw	128
  3296  060D  3E8F               	addlw	143
  3297  060E  1C03               	btfss	3,0
  3298  060F  2DEC               	goto	l6299
  3299  0610                     l6317:	
  3300  0610  1003               	clrc
  3301  0611  0CAF               	rrf	___fttol@lval+3,f
  3302  0612  0CAE               	rrf	___fttol@lval+2,f
  3303  0613  0CAD               	rrf	___fttol@lval+1,f
  3304  0614  0CAC               	rrf	___fttol@lval,f
  3305  0615  0FB0               	incfsz	___fttol@exp1,f
  3306  0616  2E10               	goto	l6317
  3307  0617  2E26               	goto	l6327
  3308  0618                     l6321:	
  3309  0618  3018               	movlw	24
  3310  0619  0230               	subwf	___fttol@exp1,w
  3311  061A  1803               	btfsc	3,0
  3312  061B  2DEC               	goto	l6299
  3313  061C                     l3420:	
  3314  061C  08B0               	movf	___fttol@exp1,f
  3315  061D  1903               	btfsc	3,2
  3316  061E  2E26               	goto	l6327
  3317  061F  1003               	clrc
  3318  0620  0DAC               	rlf	___fttol@lval,f
  3319  0621  0DAD               	rlf	___fttol@lval+1,f
  3320  0622  0DAE               	rlf	___fttol@lval+2,f
  3321  0623  0DAF               	rlf	___fttol@lval+3,f
  3322  0624  03B0               	decf	___fttol@exp1,f
  3323  0625  2E1C               	goto	l3420
  3324  0626                     l6327:	
  3325  0626  082B               	movf	___fttol@sign1,w
  3326  0627  1903               	btfsc	3,2
  3327  0628  2E34               	goto	l6331
  3328  0629  09AC               	comf	___fttol@lval,f
  3329  062A  09AD               	comf	___fttol@lval+1,f
  3330  062B  09AE               	comf	___fttol@lval+2,f
  3331  062C  09AF               	comf	___fttol@lval+3,f
  3332  062D  0AAC               	incf	___fttol@lval,f
  3333  062E  1903               	skipnz
  3334  062F  0AAD               	incf	___fttol@lval+1,f
  3335  0630  1903               	skipnz
  3336  0631  0AAE               	incf	___fttol@lval+2,f
  3337  0632  1903               	skipnz
  3338  0633  0AAF               	incf	___fttol@lval+3,f
  3339  0634                     l6331:	
  3340  0634  082F               	movf	___fttol@lval+3,w
  3341  0635  00A7               	movwf	?___fttol+3
  3342  0636  082E               	movf	___fttol@lval+2,w
  3343  0637  00A6               	movwf	?___fttol+2
  3344  0638  082D               	movf	___fttol@lval+1,w
  3345  0639  00A5               	movwf	?___fttol+1
  3346  063A  082C               	movf	___fttol@lval,w
  3347  063B  00A4               	movwf	?___fttol
  3348  063C  0008               	return
  3349  063D                     __end_of___fttol:	
  3350  063D                     __ptext532:	
  3351 ;; =============== function ___awmod ends ============
  3352                           
  3353                           
  3354 ;; *************** function ___lldiv *****************
  3355 ;; Defined at:
  3356 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\lldiv.c"
  3357 ;; Parameters:    Size  Location     Type
  3358 ;;  divisor         4    2[COMMON] unsigned long 
  3359 ;;  dividend        4    6[COMMON] unsigned long 
  3360 ;; Auto vars:     Size  Location     Type
  3361 ;;  quotient        4    0[BANK0 ] unsigned long 
  3362 ;;  counter         1    4[BANK0 ] unsigned char 
  3363 ;; Return value:  Size  Location     Type
  3364 ;;                  4    2[COMMON] unsigned long 
  3365 ;; Registers used:
  3366 ;;		wreg, status,2, status,0
  3367 ;; Tracked objects:
  3368 ;;		On entry : 60/20
  3369 ;;		On exit  : 60/0
  3370 ;;		Unchanged: FFF9F/0
  3371 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3372 ;;      Params:         8       0       0       0       0
  3373 ;;      Locals:         0       5       0       0       0
  3374 ;;      Temps:          0       0       0       0       0
  3375 ;;      Totals:         8       5       0       0       0
  3376 ;;Total ram usage:       13 bytes
  3377 ;; Hardware stack levels used:    1
  3378 ;; Hardware stack levels required when called:    1
  3379 ;; This function calls:
  3380 ;;		Nothing
  3381 ;; This function is called by:
  3382 ;;		_printf
  3383 ;; This function uses a non-reentrant model
  3384 ;;
  3385  063D                     ___lldiv:	
  3386                           
  3387                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  3388  063D  1283               	bcf	3,5	;RP0=0, select bank0
  3389  063E  01A0               	clrf	___lldiv@quotient
  3390  063F  01A1               	clrf	___lldiv@quotient+1
  3391  0640  01A2               	clrf	___lldiv@quotient+2
  3392  0641  01A3               	clrf	___lldiv@quotient+3
  3393  0642  0875               	movf	___lldiv@divisor+3,w
  3394  0643  0474               	iorwf	___lldiv@divisor+2,w
  3395  0644  0473               	iorwf	___lldiv@divisor+1,w
  3396  0645  0472               	iorwf	___lldiv@divisor,w
  3397  0646  1903               	skipnz
  3398  0647  2E7D               	goto	l6449
  3399  0648  01A4               	clrf	___lldiv@counter
  3400  0649                     L10:	
  3401  0649  0AA4               	incf	___lldiv@counter,f
  3402  064A  1BF5               	btfsc	___lldiv@divisor+3,7
  3403  064B  2E52               	goto	l6437
  3404  064C  1003               	clrc
  3405  064D  0DF2               	rlf	___lldiv@divisor,f
  3406  064E  0DF3               	rlf	___lldiv@divisor+1,f
  3407  064F  0DF4               	rlf	___lldiv@divisor+2,f
  3408  0650  0DF5               	rlf	___lldiv@divisor+3,f
  3409  0651  2E49               	goto	L10
  3410  0652                     l6437:	
  3411  0652  1003               	clrc
  3412  0653  0DA0               	rlf	___lldiv@quotient,f
  3413  0654  0DA1               	rlf	___lldiv@quotient+1,f
  3414  0655  0DA2               	rlf	___lldiv@quotient+2,f
  3415  0656  0DA3               	rlf	___lldiv@quotient+3,f
  3416  0657  0875               	movf	___lldiv@divisor+3,w
  3417  0658  0279               	subwf	___lldiv@dividend+3,w
  3418  0659  1D03               	skipz
  3419  065A  2E65               	goto	u2625
  3420  065B  0874               	movf	___lldiv@divisor+2,w
  3421  065C  0278               	subwf	___lldiv@dividend+2,w
  3422  065D  1D03               	skipz
  3423  065E  2E65               	goto	u2625
  3424  065F  0873               	movf	___lldiv@divisor+1,w
  3425  0660  0277               	subwf	___lldiv@dividend+1,w
  3426  0661  1D03               	skipz
  3427  0662  2E65               	goto	u2625
  3428  0663  0872               	movf	___lldiv@divisor,w
  3429  0664  0276               	subwf	___lldiv@dividend,w
  3430  0665                     u2625:	
  3431  0665  1C03               	skipc
  3432  0666  2E77               	goto	L11
  3433  0667  0872               	movf	___lldiv@divisor,w
  3434  0668  02F6               	subwf	___lldiv@dividend,f
  3435  0669  0873               	movf	___lldiv@divisor+1,w
  3436  066A  1C03               	skipc
  3437  066B  0F73               	incfsz	___lldiv@divisor+1,w
  3438  066C  02F7               	subwf	___lldiv@dividend+1,f
  3439  066D  0874               	movf	___lldiv@divisor+2,w
  3440  066E  1C03               	skipc
  3441  066F  0F74               	incfsz	___lldiv@divisor+2,w
  3442  0670  02F8               	subwf	___lldiv@dividend+2,f
  3443  0671  0875               	movf	___lldiv@divisor+3,w
  3444  0672  1C03               	skipc
  3445  0673  0F75               	incfsz	___lldiv@divisor+3,w
  3446  0674  02F9               	subwf	___lldiv@dividend+3,f
  3447  0675  1420               	bsf	___lldiv@quotient,0
  3448  0676  1003               	clrc
  3449  0677                     L11:	
  3450  0677  0CF5               	rrf	___lldiv@divisor+3,f
  3451  0678  0CF4               	rrf	___lldiv@divisor+2,f
  3452  0679  0CF3               	rrf	___lldiv@divisor+1,f
  3453  067A  0CF2               	rrf	___lldiv@divisor,f
  3454  067B  0BA4               	decfsz	___lldiv@counter,f
  3455  067C  2E52               	goto	l6437
  3456  067D                     l6449:	
  3457  067D  0823               	movf	___lldiv@quotient+3,w
  3458  067E  00F5               	movwf	?___lldiv+3
  3459  067F  0822               	movf	___lldiv@quotient+2,w
  3460  0680  00F4               	movwf	?___lldiv+2
  3461  0681  0821               	movf	___lldiv@quotient+1,w
  3462  0682  00F3               	movwf	?___lldiv+1
  3463  0683  0820               	movf	___lldiv@quotient,w
  3464  0684  00F2               	movwf	?___lldiv
  3465  0685  0008               	return
  3466  0686                     __end_of___lldiv:	
  3467  0686                     __ptext544:	
  3468 ;; =============== function __div_to_l_ ends ============
  3469                           
  3470                           
  3471 ;; *************** function __tdiv_to_l_ *****************
  3472 ;; Defined at:
  3473 ;;		line 61 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\ftdivl.c"
  3474 ;; Parameters:    Size  Location     Type
  3475 ;;  f1              3    2[COMMON] float 
  3476 ;;  f2              3    5[COMMON] float 
  3477 ;; Auto vars:     Size  Location     Type
  3478 ;;  quot            4    0[BANK0 ] unsigned long 
  3479 ;;  exp1            1    5[BANK0 ] unsigned char 
  3480 ;;  cntr            1    4[BANK0 ] unsigned char 
  3481 ;; Return value:  Size  Location     Type
  3482 ;;                  4    2[COMMON] unsigned long 
  3483 ;; Registers used:
  3484 ;;		wreg, status,2, status,0
  3485 ;; Tracked objects:
  3486 ;;		On entry : 60/20
  3487 ;;		On exit  : 60/0
  3488 ;;		Unchanged: FFF9F/0
  3489 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3490 ;;      Params:         6       0       0       0       0
  3491 ;;      Locals:         0       6       0       0       0
  3492 ;;      Temps:          3       0       0       0       0
  3493 ;;      Totals:         9       6       0       0       0
  3494 ;;Total ram usage:       15 bytes
  3495 ;; Hardware stack levels used:    1
  3496 ;; Hardware stack levels required when called:    1
  3497 ;; This function calls:
  3498 ;;		Nothing
  3499 ;; This function is called by:
  3500 ;;		_printf
  3501 ;; This function uses a non-reentrant model
  3502 ;;
  3503  0686                     __tdiv_to_l_:	
  3504                           
  3505                           ; Regs used in __tdiv_to_l_: [wreg+status,2+status,0]
  3506  0686  0872               	movf	__tdiv_to_l_@f1,w
  3507  0687  00F8               	movwf	??__tdiv_to_l_
  3508  0688  0873               	movf	__tdiv_to_l_@f1+1,w
  3509  0689  00F9               	movwf	??__tdiv_to_l_+1
  3510  068A  0874               	movf	__tdiv_to_l_@f1+2,w
  3511  068B  00FA               	movwf	??__tdiv_to_l_+2
  3512  068C  1003               	clrc
  3513  068D  0D79               	rlf	??__tdiv_to_l_+1,w
  3514  068E  0D7A               	rlf	??__tdiv_to_l_+2,w
  3515  068F  1283               	bcf	3,5	;RP0=0, select bank0
  3516  0690  00A5               	movwf	__tdiv_to_l_@exp1
  3517  0691  08A5               	movf	__tdiv_to_l_@exp1,f
  3518  0692  1D03               	skipz
  3519  0693  2E99               	goto	l6105
  3520  0694                     l6103:	
  3521  0694  01F2               	clrf	?__tdiv_to_l_
  3522  0695  01F3               	clrf	?__tdiv_to_l_+1
  3523  0696  01F4               	clrf	?__tdiv_to_l_+2
  3524  0697  01F5               	clrf	?__tdiv_to_l_+3
  3525  0698  0008               	return
  3526  0699                     l6105:	
  3527  0699  0875               	movf	__tdiv_to_l_@f2,w
  3528  069A  00F8               	movwf	??__tdiv_to_l_
  3529  069B  0876               	movf	__tdiv_to_l_@f2+1,w
  3530  069C  00F9               	movwf	??__tdiv_to_l_+1
  3531  069D  0877               	movf	__tdiv_to_l_@f2+2,w
  3532  069E  00FA               	movwf	??__tdiv_to_l_+2
  3533  069F  1003               	clrc
  3534  06A0  0D79               	rlf	??__tdiv_to_l_+1,w
  3535  06A1  0D7A               	rlf	??__tdiv_to_l_+2,w
  3536  06A2  00A4               	movwf	__tdiv_to_l_@cntr
  3537  06A3  08A4               	movf	__tdiv_to_l_@cntr,f
  3538  06A4  1903               	btfsc	3,2
  3539  06A5  2E94               	goto	l6103
  3540  06A6  307F               	movlw	127
  3541  06A7  17F3               	bsf	__tdiv_to_l_@f1+1,7
  3542  06A8  01F4               	clrf	__tdiv_to_l_@f1+2
  3543  06A9  17F6               	bsf	__tdiv_to_l_@f2+1,7
  3544  06AA  01F7               	clrf	__tdiv_to_l_@f2+2
  3545  06AB  01A0               	clrf	__tdiv_to_l_@quot
  3546  06AC  01A1               	clrf	__tdiv_to_l_@quot+1
  3547  06AD  01A2               	clrf	__tdiv_to_l_@quot+2
  3548  06AE  01A3               	clrf	__tdiv_to_l_@quot+3
  3549  06AF  02A5               	subwf	__tdiv_to_l_@exp1,f
  3550  06B0  3098               	movlw	152
  3551  06B1  0724               	addwf	__tdiv_to_l_@cntr,w
  3552  06B2  00F8               	movwf	??__tdiv_to_l_
  3553  06B3  02A5               	subwf	__tdiv_to_l_@exp1,f
  3554  06B4  3018               	movlw	24
  3555  06B5  00A4               	movwf	__tdiv_to_l_@cntr
  3556  06B6                     l6119:	
  3557  06B6  1003               	clrc
  3558  06B7  0DA0               	rlf	__tdiv_to_l_@quot,f
  3559  06B8  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  3560  06B9  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  3561  06BA  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  3562  06BB  0877               	movf	__tdiv_to_l_@f2+2,w
  3563  06BC  0274               	subwf	__tdiv_to_l_@f1+2,w
  3564  06BD  1D03               	skipz
  3565  06BE  2EC5               	goto	u2035
  3566  06BF  0876               	movf	__tdiv_to_l_@f2+1,w
  3567  06C0  0273               	subwf	__tdiv_to_l_@f1+1,w
  3568  06C1  1D03               	skipz
  3569  06C2  2EC5               	goto	u2035
  3570  06C3  0875               	movf	__tdiv_to_l_@f2,w
  3571  06C4  0272               	subwf	__tdiv_to_l_@f1,w
  3572  06C5                     u2035:	
  3573  06C5  1C03               	skipc
  3574  06C6  2ED3               	goto	L19
  3575  06C7  0875               	movf	__tdiv_to_l_@f2,w
  3576  06C8  02F2               	subwf	__tdiv_to_l_@f1,f
  3577  06C9  0876               	movf	__tdiv_to_l_@f2+1,w
  3578  06CA  1C03               	skipc
  3579  06CB  0F76               	incfsz	__tdiv_to_l_@f2+1,w
  3580  06CC  02F3               	subwf	__tdiv_to_l_@f1+1,f
  3581  06CD  0877               	movf	__tdiv_to_l_@f2+2,w
  3582  06CE  1C03               	skipc
  3583  06CF  0A77               	incf	__tdiv_to_l_@f2+2,w
  3584  06D0  02F4               	subwf	__tdiv_to_l_@f1+2,f
  3585  06D1  1420               	bsf	__tdiv_to_l_@quot,0
  3586  06D2  1003               	clrc
  3587  06D3                     L19:	
  3588  06D3  0DF2               	rlf	__tdiv_to_l_@f1,f
  3589  06D4  0DF3               	rlf	__tdiv_to_l_@f1+1,f
  3590  06D5  0DF4               	rlf	__tdiv_to_l_@f1+2,f
  3591  06D6  0BA4               	decfsz	__tdiv_to_l_@cntr,f
  3592  06D7  2EB6               	goto	l6119
  3593  06D8  1FA5               	btfss	__tdiv_to_l_@exp1,7
  3594  06D9  2EE7               	goto	l6139
  3595  06DA  0825               	movf	__tdiv_to_l_@exp1,w
  3596  06DB  3A80               	xorlw	128
  3597  06DC  3E97               	addlw	151
  3598  06DD  1C03               	btfss	3,0
  3599  06DE  2E94               	goto	l6103
  3600  06DF                     l6135:	
  3601  06DF  1003               	clrc
  3602  06E0  0CA3               	rrf	__tdiv_to_l_@quot+3,f
  3603  06E1  0CA2               	rrf	__tdiv_to_l_@quot+2,f
  3604  06E2  0CA1               	rrf	__tdiv_to_l_@quot+1,f
  3605  06E3  0CA0               	rrf	__tdiv_to_l_@quot,f
  3606  06E4  0FA5               	incfsz	__tdiv_to_l_@exp1,f
  3607  06E5  2EDF               	goto	l6135
  3608  06E6  2EF5               	goto	l6145
  3609  06E7                     l6139:	
  3610  06E7  3018               	movlw	24
  3611  06E8  0225               	subwf	__tdiv_to_l_@exp1,w
  3612  06E9  1803               	btfsc	3,0
  3613  06EA  2E94               	goto	l6103
  3614  06EB                     l3558:	
  3615  06EB  08A5               	movf	__tdiv_to_l_@exp1,f
  3616  06EC  1903               	btfsc	3,2
  3617  06ED  2EF5               	goto	l6145
  3618  06EE  1003               	clrc
  3619  06EF  0DA0               	rlf	__tdiv_to_l_@quot,f
  3620  06F0  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  3621  06F1  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  3622  06F2  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  3623  06F3  03A5               	decf	__tdiv_to_l_@exp1,f
  3624  06F4  2EEB               	goto	l3558
  3625  06F5                     l6145:	
  3626  06F5  0823               	movf	__tdiv_to_l_@quot+3,w
  3627  06F6  00F5               	movwf	?__tdiv_to_l_+3
  3628  06F7  0822               	movf	__tdiv_to_l_@quot+2,w
  3629  06F8  00F4               	movwf	?__tdiv_to_l_+2
  3630  06F9  0821               	movf	__tdiv_to_l_@quot+1,w
  3631  06FA  00F3               	movwf	?__tdiv_to_l_+1
  3632  06FB  0820               	movf	__tdiv_to_l_@quot,w
  3633  06FC  00F2               	movwf	?__tdiv_to_l_
  3634  06FD  0008               	return
  3635  06FE                     __end_of__tdiv_to_l_:	
  3636  06FE                     __ptext534:	
  3637 ;; =============== function ___ftge ends ============
  3638                           
  3639                           
  3640 ;; *************** function ___ftneg *****************
  3641 ;; Defined at:
  3642 ;;		line 16 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\ftneg.c"
  3643 ;; Parameters:    Size  Location     Type
  3644 ;;  f1              3    2[COMMON] float 
  3645 ;; Auto vars:     Size  Location     Type
  3646 ;;		None
  3647 ;; Return value:  Size  Location     Type
  3648 ;;                  3    2[COMMON] float 
  3649 ;; Registers used:
  3650 ;;		wreg
  3651 ;; Tracked objects:
  3652 ;;		On entry : 160/20
  3653 ;;		On exit  : 160/20
  3654 ;;		Unchanged: FFE9F/0
  3655 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3656 ;;      Params:         3       0       0       0       0
  3657 ;;      Locals:         0       0       0       0       0
  3658 ;;      Temps:          0       0       0       0       0
  3659 ;;      Totals:         3       0       0       0       0
  3660 ;;Total ram usage:        3 bytes
  3661 ;; Hardware stack levels used:    1
  3662 ;; Hardware stack levels required when called:    1
  3663 ;; This function calls:
  3664 ;;		Nothing
  3665 ;; This function is called by:
  3666 ;;		_printf
  3667 ;; This function uses a non-reentrant model
  3668 ;;
  3669  06FE                     ___ftneg:	
  3670                           
  3671                           ; Regs used in ___ftneg: [wreg]
  3672  06FE  0874               	movf	___ftneg@f1+2,w
  3673  06FF  0473               	iorwf	___ftneg@f1+1,w
  3674  0700  0472               	iorwf	___ftneg@f1,w
  3675  0701  1903               	skipnz
  3676  0702  0008               	return
  3677  0703  3080               	movlw	128
  3678  0704  06F4               	xorwf	___ftneg@f1+2,f
  3679  0705  0008               	return
  3680  0706                     __end_of___ftneg:	
  3681  0706                     PL2:	
  3682  0706  0838               	movf	printf@c^(0+128),w
  3683  0707  1283               	bcf	3,5	;RP0=0, select bank0
  3684  0708  00DA               	movwf	??_printf
  3685  0709  1003               	clrc
  3686  070A  0DDA               	rlf	??_printf,f
  3687  070B  1003               	clrc
  3688  070C  0D5A               	rlf	??_printf,w
  3689  070D  3E4F               	addlw	low (_dpowers-__stringbase)
  3690  070E  0084               	movwf	4
  3691  070F  0008               	return
  3692  0710                     PL4:	
  3693  0710  300A               	movlw	10
  3694  0711  1283               	bcf	3,5	;RP0=0, select bank0
  3695  0712  00A5               	movwf	?___llmod
  3696  0713  01A6               	clrf	?___llmod+1
  3697  0714  01A7               	clrf	?___llmod+2
  3698  0715  01A8               	clrf	?___llmod+3
  3699  0716  1683               	bsf	3,5	;RP0=1, select bank1
  3700  0717  0008               	return
  3701  0718                     PL5:	
  3702  0718  00F5               	movwf	?___lldiv+3
  3703  0719  1683               	bsf	3,5	;RP0=1, select bank1
  3704  071A  082B               	movf	(printf@_val+3)^(0+128),w
  3705  071B  00F9               	movwf	?___lldiv+7
  3706  071C  082A               	movf	(printf@_val+2)^(0+128),w
  3707  071D  00F8               	movwf	?___lldiv+6
  3708  071E  0829               	movf	(printf@_val+1)^(0+128),w
  3709  071F  00F7               	movwf	?___lldiv+5
  3710  0720  0828               	movf	printf@_val^(0+128),w
  3711  0721  00F6               	movwf	?___lldiv+4
  3712  0722  0008               	return
  3713  0723                     PL6:	
  3714  0723  0827               	movf	?___fttol+3,w
  3715  0724  1683               	bsf	3,5	;RP0=1, select bank1
  3716  0725  00AB               	movwf	(printf@_val+3)^(0+128)
  3717  0726  1283               	bcf	3,5	;RP0=0, select bank0
  3718  0727  0826               	movf	?___fttol+2,w
  3719  0728  1683               	bsf	3,5	;RP0=1, select bank1
  3720  0729  00AA               	movwf	(printf@_val+2)^(0+128)
  3721  072A  1283               	bcf	3,5	;RP0=0, select bank0
  3722  072B  0825               	movf	?___fttol+1,w
  3723  072C  1683               	bsf	3,5	;RP0=1, select bank1
  3724  072D  00A9               	movwf	(printf@_val+1)^(0+128)
  3725  072E  1283               	bcf	3,5	;RP0=0, select bank0
  3726  072F  0824               	movf	?___fttol,w
  3727  0730  0008               	return
  3728  0731                     PL7:	
  3729  0731  0840               	movf	?_scale,w
  3730  0732  1683               	bsf	3,5	;RP0=1, select bank1
  3731  0733  00A5               	movwf	printf@integ^(0+128)
  3732  0734  1283               	bcf	3,5	;RP0=0, select bank0
  3733  0735  0841               	movf	?_scale+1,w
  3734  0736  1683               	bsf	3,5	;RP0=1, select bank1
  3735  0737  00A6               	movwf	(printf@integ+1)^(0+128)
  3736  0738  1283               	bcf	3,5	;RP0=0, select bank0
  3737  0739  0842               	movf	?_scale+2,w
  3738  073A  1683               	bsf	3,5	;RP0=1, select bank1
  3739  073B  00A7               	movwf	(printf@integ+2)^(0+128)
  3740  073C  0833               	movf	printf@fval^(0+128),w
  3741  073D  0008               	return
  3742  073E                     PL12:	
  3743  073E  0875               	movf	?___lldiv+3,w
  3744  073F  00AC               	movwf	?___llmod+7
  3745  0740  0874               	movf	?___lldiv+2,w
  3746  0741  00AB               	movwf	?___llmod+6
  3747  0742  0873               	movf	?___lldiv+1,w
  3748  0743  00AA               	movwf	?___llmod+5
  3749  0744  0872               	movf	?___lldiv,w
  3750  0745  00A9               	movwf	?___llmod+4
  3751  0746  0008               	return
  3752  0747                     PL13:	
  3753  0747  0772               	addwf	?___wmul,w
  3754  0748  1283               	bcf	3,5	;RP0=0, select bank0
  3755  0749  00DA               	movwf	??_printf
  3756  074A  3000               	movlw	0
  3757  074B  1803               	skipnc
  3758  074C  3001               	movlw	1
  3759  074D  0773               	addwf	?___wmul+1,w
  3760  074E  00DB               	movwf	??_printf+1
  3761  074F  085A               	movf	??_printf,w
  3762  0750  3ED0               	addlw	208
  3763  0751  1683               	bsf	3,5	;RP0=1, select bank1
  3764  0752  0008               	return
  3765  0753                     PL14:	
  3766  0753  1283               	bcf	3,5	;RP0=0, select bank0
  3767  0754  00A4               	movwf	?___fttol
  3768  0755  1683               	bsf	3,5	;RP0=1, select bank1
  3769  0756  0834               	movf	(printf@fval+1)^(0+128),w
  3770  0757  1283               	bcf	3,5	;RP0=0, select bank0
  3771  0758  00A5               	movwf	?___fttol+1
  3772  0759  1683               	bsf	3,5	;RP0=1, select bank1
  3773  075A  0835               	movf	(printf@fval+2)^(0+128),w
  3774  075B  1283               	bcf	3,5	;RP0=0, select bank0
  3775  075C  00A6               	movwf	?___fttol+2
  3776  075D  0008               	return
  3777  075E                     PL16:	
  3778  075E  1283               	bcf	3,5	;RP0=0, select bank0
  3779  075F  00B1               	movwf	?___ftmul
  3780  0760  1683               	bsf	3,5	;RP0=1, select bank1
  3781  0761  0834               	movf	(printf@fval+1)^(0+128),w
  3782  0762  1283               	bcf	3,5	;RP0=0, select bank0
  3783  0763  00B2               	movwf	?___ftmul+1
  3784  0764  1683               	bsf	3,5	;RP0=1, select bank1
  3785  0765  0835               	movf	(printf@fval+2)^(0+128),w
  3786  0766  1283               	bcf	3,5	;RP0=0, select bank0
  3787  0767  00B3               	movwf	?___ftmul+2
  3788  0768  0008               	return
  3789  0769                     PL18:	
  3790  0769  1283               	bcf	3,5	;RP0=0, select bank0
  3791  076A  00DA               	movwf	??_printf
  3792  076B  01DB               	clrf	??_printf+1
  3793  076C  1BDA               	btfsc	??_printf,7
  3794  076D  03DB               	decf	??_printf+1,f
  3795  076E  085B               	movf	??_printf+1,w
  3796  076F  3A80               	xorlw	128
  3797  0770  00DC               	movwf	??_printf+2
  3798  0771  1683               	bsf	3,5	;RP0=1, select bank1
  3799  0772  0008               	return
  3800  0773                     PL20:	
  3801  0773  1303               	bcf	3,6	;RP1=0, select bank1
  3802  0774  0838               	movf	printf@c^(0+128),w
  3803  0775  1283               	bcf	3,5	;RP0=0, select bank0
  3804  0776  00DA               	movwf	??_printf
  3805  0777  01DB               	clrf	??_printf+1
  3806  0778  1BDA               	btfsc	??_printf,7
  3807  0779  03DB               	decf	??_printf+1,f
  3808  077A  1683               	bsf	3,5	;RP0=1, select bank1
  3809  077B  0008               	return
  3810  077C                     PL21:	
  3811  077C  0825               	movf	printf@integ^(0+128),w
  3812  077D  00F2               	movwf	?___ftge
  3813  077E  0826               	movf	(printf@integ+1)^(0+128),w
  3814  077F  00F3               	movwf	?___ftge+1
  3815  0780  0827               	movf	(printf@integ+2)^(0+128),w
  3816  0781  00F4               	movwf	?___ftge+2
  3817  0782  0008               	return
  3818  0783                     PL28:	
  3819  0783  1283               	bcf	3,5	;RP0=0, select bank0
  3820  0784  085B               	movf	??_printf+1,w
  3821  0785  1803               	skipnc
  3822  0786  3E01               	addlw	1
  3823  0787  3EFF               	addlw	255
  3824  0788  1683               	bsf	3,5	;RP0=1, select bank1
  3825  0789  0008               	return
  3826  078A                     PL29:	
  3827  078A  0824               	movf	___fttol@f1,w
  3828  078B  00A8               	movwf	??___fttol
  3829  078C  0825               	movf	___fttol@f1+1,w
  3830  078D  00A9               	movwf	??___fttol+1
  3831  078E  0826               	movf	___fttol@f1+2,w
  3832  078F  00AA               	movwf	??___fttol+2
  3833  0790  0008               	return
  3834  0791                     PL31:	
  3835  0791  0800               	movf	0,w
  3836  0792  1283               	bcf	3,5	;RP0=0, select bank0
  3837  0793  00DA               	movwf	??_printf
  3838  0794  0A84               	incf	4,f
  3839  0795  0800               	movf	0,w
  3840  0796  00DB               	movwf	??_printf+1
  3841  0797  0008               	return
  3842  0798                     PL32:	
  3843  0798  1683               	bsf	3,5	;RP0=1, select bank1
  3844  0799  1303               	bcf	3,6	;RP1=0, select bank1
  3845  079A  0008               	return
  3846                           
  3847                           	psect	text520
  3848  088F                     __ptext520:	
  3849 ;; =============== function _lcd_putc ends ============
  3850                           
  3851                           
  3852 ;; *************** function ___ftsub *****************
  3853 ;; Defined at:
  3854 ;;		line 17 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\ftsub.c"
  3855 ;; Parameters:    Size  Location     Type
  3856 ;;  f2              3   44[BANK0 ] float 
  3857 ;;  f1              3   47[BANK0 ] float 
  3858 ;; Auto vars:     Size  Location     Type
  3859 ;;		None
  3860 ;; Return value:  Size  Location     Type
  3861 ;;                  3   44[BANK0 ] float 
  3862 ;; Registers used:
  3863 ;;		wreg, status,2, status,0, pclath, cstack
  3864 ;; Tracked objects:
  3865 ;;		On entry : 60/0
  3866 ;;		On exit  : 60/0
  3867 ;;		Unchanged: FFF9F/0
  3868 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3869 ;;      Params:         0       6       0       0       0
  3870 ;;      Locals:         0       0       0       0       0
  3871 ;;      Temps:          0       0       0       0       0
  3872 ;;      Totals:         0       6       0       0       0
  3873 ;;Total ram usage:        6 bytes
  3874 ;; Hardware stack levels used:    1
  3875 ;; Hardware stack levels required when called:    3
  3876 ;; This function calls:
  3877 ;;		___ftadd
  3878 ;; This function is called by:
  3879 ;;		_printf
  3880 ;; This function uses a non-reentrant model
  3881 ;;
  3882  088F                     ___ftsub:	
  3883                           
  3884                           ; Regs used in ___ftsub: [wreg+status,2+status,0+pclath+cstack]
  3885  088F  3080               	movlw	128
  3886  0890  06CE               	xorwf	___ftsub@f2+2,f
  3887  0891  084F               	movf	___ftsub@f1,w
  3888  0892  00C0               	movwf	?___ftadd
  3889  0893  0850               	movf	___ftsub@f1+1,w
  3890  0894  00C1               	movwf	?___ftadd+1
  3891  0895  0851               	movf	___ftsub@f1+2,w
  3892  0896  00C2               	movwf	?___ftadd+2
  3893  0897  084C               	movf	___ftsub@f2,w
  3894  0898  00C3               	movwf	?___ftadd+3
  3895  0899  084D               	movf	___ftsub@f2+1,w
  3896  089A  00C4               	movwf	?___ftadd+4
  3897  089B  084E               	movf	___ftsub@f2+2,w
  3898  089C  00C5               	movwf	?___ftadd+5
  3899  089D  20A5               	fcall	___ftadd
  3900  089E  0840               	movf	?___ftadd,w
  3901  089F  00CC               	movwf	?___ftsub
  3902  08A0  0841               	movf	?___ftadd+1,w
  3903  08A1  00CD               	movwf	?___ftsub+1
  3904  08A2  0842               	movf	?___ftadd+2,w
  3905  08A3  00CE               	movwf	?___ftsub+2
  3906  08A4  0008               	return
  3907  08A5                     __end_of___ftsub:	
  3908  08A5                     __ptext528:	
  3909 ;; =============== function ___ftmul ends ============
  3910                           
  3911                           
  3912 ;; *************** function ___ftadd *****************
  3913 ;; Defined at:
  3914 ;;		line 87 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\ftadd.c"
  3915 ;; Parameters:    Size  Location     Type
  3916 ;;  f1              3   32[BANK0 ] float 
  3917 ;;  f2              3   35[BANK0 ] float 
  3918 ;; Auto vars:     Size  Location     Type
  3919 ;;  exp1            1   43[BANK0 ] unsigned char 
  3920 ;;  exp2            1   42[BANK0 ] unsigned char 
  3921 ;;  sign            1   41[BANK0 ] unsigned char 
  3922 ;; Return value:  Size  Location     Type
  3923 ;;                  3   32[BANK0 ] float 
  3924 ;; Registers used:
  3925 ;;		wreg, status,2, status,0, pclath, cstack
  3926 ;; Tracked objects:
  3927 ;;		On entry : 60/0
  3928 ;;		On exit  : 60/0
  3929 ;;		Unchanged: FFF9F/0
  3930 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3931 ;;      Params:         0       6       0       0       0
  3932 ;;      Locals:         0       3       0       0       0
  3933 ;;      Temps:          0       3       0       0       0
  3934 ;;      Totals:         0      12       0       0       0
  3935 ;;Total ram usage:       12 bytes
  3936 ;; Hardware stack levels used:    1
  3937 ;; Hardware stack levels required when called:    2
  3938 ;; This function calls:
  3939 ;;		___ftpack
  3940 ;; This function is called by:
  3941 ;;		_printf
  3942 ;;		___ftsub
  3943 ;; This function uses a non-reentrant model
  3944 ;;
  3945  08A5                     ___ftadd:	
  3946                           
  3947                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  3948  08A5  0840               	movf	___ftadd@f1,w
  3949  08A6  00C6               	movwf	??___ftadd
  3950  08A7  0841               	movf	___ftadd@f1+1,w
  3951  08A8  00C7               	movwf	??___ftadd+1
  3952  08A9  0842               	movf	___ftadd@f1+2,w
  3953  08AA  00C8               	movwf	??___ftadd+2
  3954  08AB  1003               	clrc
  3955  08AC  0D47               	rlf	??___ftadd+1,w
  3956  08AD  0D48               	rlf	??___ftadd+2,w
  3957  08AE  00CB               	movwf	___ftadd@exp1
  3958  08AF  0843               	movf	___ftadd@f2,w
  3959  08B0  00C6               	movwf	??___ftadd
  3960  08B1  0844               	movf	___ftadd@f2+1,w
  3961  08B2  00C7               	movwf	??___ftadd+1
  3962  08B3  0845               	movf	___ftadd@f2+2,w
  3963  08B4  00C8               	movwf	??___ftadd+2
  3964  08B5  1003               	clrc
  3965  08B6  0D47               	rlf	??___ftadd+1,w
  3966  08B7  0D48               	rlf	??___ftadd+2,w
  3967  08B8  00CA               	movwf	___ftadd@exp2
  3968  08B9  084B               	movf	___ftadd@exp1,w
  3969  08BA  1903               	btfsc	3,2
  3970  08BB  28C8               	goto	l6547
  3971  08BC  084A               	movf	___ftadd@exp2,w
  3972  08BD  024B               	subwf	___ftadd@exp1,w
  3973  08BE  084A               	movf	___ftadd@exp2,w
  3974  08BF  1803               	skipnc
  3975  08C0  28D0               	goto	L7
  3976  08C1  00C6               	movwf	??___ftadd
  3977  08C2  084B               	movf	___ftadd@exp1,w
  3978  08C3  02C6               	subwf	??___ftadd,f
  3979  08C4  3019               	movlw	25
  3980  08C5  0246               	subwf	??___ftadd,w
  3981  08C6  1C03               	skipc
  3982  08C7  28CF               	goto	l6551
  3983  08C8                     l6547:	
  3984  08C8  0843               	movf	___ftadd@f2,w
  3985  08C9  00C0               	movwf	?___ftadd
  3986  08CA  0844               	movf	___ftadd@f2+1,w
  3987  08CB  00C1               	movwf	?___ftadd+1
  3988  08CC  0845               	movf	___ftadd@f2+2,w
  3989  08CD  00C2               	movwf	?___ftadd+2
  3990  08CE  0008               	return
  3991  08CF                     l6551:	
  3992  08CF  084A               	movf	___ftadd@exp2,w
  3993  08D0                     L7:	
  3994  08D0  1903               	btfsc	3,2
  3995  08D1  0008               	return
  3996  08D2  084B               	movf	___ftadd@exp1,w
  3997  08D3  024A               	subwf	___ftadd@exp2,w
  3998  08D4  1803               	skipnc
  3999  08D5  28DE               	goto	l6557
  4000  08D6  084B               	movf	___ftadd@exp1,w
  4001  08D7  00C6               	movwf	??___ftadd
  4002  08D8  084A               	movf	___ftadd@exp2,w
  4003  08D9  02C6               	subwf	??___ftadd,f
  4004  08DA  3019               	movlw	25
  4005  08DB  0246               	subwf	??___ftadd,w
  4006  08DC  1803               	btfsc	3,0
  4007  08DD  0008               	return
  4008  08DE                     l6557:	
  4009  08DE  3006               	movlw	6
  4010  08DF  00C9               	movwf	___ftadd@sign
  4011  08E0  1BC2               	btfsc	___ftadd@f1+2,7
  4012  08E1  17C9               	bsf	___ftadd@sign,7
  4013  08E2  1BC5               	btfsc	___ftadd@f2+2,7
  4014  08E3  1749               	bsf	___ftadd@sign,6
  4015  08E4  17C1               	bsf	___ftadd@f1+1,7
  4016  08E5  01C2               	clrf	___ftadd@f1+2
  4017  08E6  17C4               	bsf	___ftadd@f2+1,7
  4018  08E7  01C5               	clrf	___ftadd@f2+2
  4019  08E8  084A               	movf	___ftadd@exp2,w
  4020  08E9  024B               	subwf	___ftadd@exp1,w
  4021  08EA  1803               	skipnc
  4022  08EB  2905               	goto	l6579
  4023  08EC                     l6569:	
  4024  08EC  1003               	clrc
  4025  08ED  0DC3               	rlf	___ftadd@f2,f
  4026  08EE  0DC4               	rlf	___ftadd@f2+1,f
  4027  08EF  0DC5               	rlf	___ftadd@f2+2,f
  4028  08F0  03CA               	decf	___ftadd@exp2,f
  4029  08F1  084A               	movf	___ftadd@exp2,w
  4030  08F2  064B               	xorwf	___ftadd@exp1,w
  4031  08F3  1903               	skipnz
  4032  08F4  2900               	goto	l6577
  4033  08F5  03C9               	decf	___ftadd@sign,f
  4034  08F6  0849               	movf	___ftadd@sign,w
  4035  08F7  3907               	andlw	7
  4036  08F8  1903               	btfsc	3,2
  4037  08F9  2900               	goto	l6577
  4038  08FA  28EC               	goto	l6569
  4039  08FB                     l6575:	
  4040  08FB  1003               	clrc
  4041  08FC  0CC2               	rrf	___ftadd@f1+2,f
  4042  08FD  0CC1               	rrf	___ftadd@f1+1,f
  4043  08FE  0CC0               	rrf	___ftadd@f1,f
  4044  08FF  0ACB               	incf	___ftadd@exp1,f
  4045  0900                     l6577:	
  4046  0900  084B               	movf	___ftadd@exp1,w
  4047  0901  064A               	xorwf	___ftadd@exp2,w
  4048  0902  1903               	btfsc	3,2
  4049  0903  2921               	goto	l3364
  4050  0904  28FB               	goto	l6575
  4051  0905                     l6579:	
  4052  0905  084B               	movf	___ftadd@exp1,w
  4053  0906  024A               	subwf	___ftadd@exp2,w
  4054  0907  1803               	skipnc
  4055  0908  2921               	goto	l3364
  4056  0909                     l6581:	
  4057  0909  1003               	clrc
  4058  090A  0DC0               	rlf	___ftadd@f1,f
  4059  090B  0DC1               	rlf	___ftadd@f1+1,f
  4060  090C  0DC2               	rlf	___ftadd@f1+2,f
  4061  090D  03CB               	decf	___ftadd@exp1,f
  4062  090E  084A               	movf	___ftadd@exp2,w
  4063  090F  064B               	xorwf	___ftadd@exp1,w
  4064  0910  1903               	skipnz
  4065  0911  291D               	goto	l6589
  4066  0912  03C9               	decf	___ftadd@sign,f
  4067  0913  0849               	movf	___ftadd@sign,w
  4068  0914  3907               	andlw	7
  4069  0915  1903               	btfsc	3,2
  4070  0916  291D               	goto	l6589
  4071  0917  2909               	goto	l6581
  4072  0918                     l6587:	
  4073  0918  1003               	clrc
  4074  0919  0CC5               	rrf	___ftadd@f2+2,f
  4075  091A  0CC4               	rrf	___ftadd@f2+1,f
  4076  091B  0CC3               	rrf	___ftadd@f2,f
  4077  091C  0ACA               	incf	___ftadd@exp2,f
  4078  091D                     l6589:	
  4079  091D  084B               	movf	___ftadd@exp1,w
  4080  091E  064A               	xorwf	___ftadd@exp2,w
  4081  091F  1D03               	skipz
  4082  0920  2918               	goto	l6587
  4083  0921                     l3364:	
  4084  0921  1FC9               	btfss	___ftadd@sign,7
  4085  0922  292C               	goto	l6595
  4086  0923  30FF               	movlw	255
  4087  0924  06C0               	xorwf	___ftadd@f1,f
  4088  0925  06C1               	xorwf	___ftadd@f1+1,f
  4089  0926  06C2               	xorwf	___ftadd@f1+2,f
  4090  0927  0AC0               	incf	___ftadd@f1,f
  4091  0928  1903               	skipnz
  4092  0929  0AC1               	incf	___ftadd@f1+1,f
  4093  092A  1903               	skipnz
  4094  092B  0AC2               	incf	___ftadd@f1+2,f
  4095  092C                     l6595:	
  4096  092C  1F49               	btfss	___ftadd@sign,6
  4097  092D  2937               	goto	l6601
  4098  092E  30FF               	movlw	255
  4099  092F  06C3               	xorwf	___ftadd@f2,f
  4100  0930  06C4               	xorwf	___ftadd@f2+1,f
  4101  0931  06C5               	xorwf	___ftadd@f2+2,f
  4102  0932  0AC3               	incf	___ftadd@f2,f
  4103  0933  1903               	skipnz
  4104  0934  0AC4               	incf	___ftadd@f2+1,f
  4105  0935  1903               	skipnz
  4106  0936  0AC5               	incf	___ftadd@f2+2,f
  4107  0937                     l6601:	
  4108  0937  01C9               	clrf	___ftadd@sign
  4109  0938  0840               	movf	___ftadd@f1,w
  4110  0939  07C3               	addwf	___ftadd@f2,f
  4111  093A  0841               	movf	___ftadd@f1+1,w
  4112  093B  1103               	clrz
  4113  093C  1803               	skipnc
  4114  093D  0A41               	incf	___ftadd@f1+1,w
  4115  093E  1D03               	btfss	3,2
  4116  093F  07C4               	addwf	___ftadd@f2+1,f
  4117  0940  0842               	movf	___ftadd@f1+2,w
  4118  0941  1103               	clrz
  4119  0942  1803               	skipnc
  4120  0943  0A42               	incf	___ftadd@f1+2,w
  4121  0944  1D03               	btfss	3,2
  4122  0945  07C5               	addwf	___ftadd@f2+2,f
  4123  0946  1FC5               	btfss	___ftadd@f2+2,7
  4124  0947  2953               	goto	l6613
  4125  0948  30FF               	movlw	255
  4126  0949  06C3               	xorwf	___ftadd@f2,f
  4127  094A  06C4               	xorwf	___ftadd@f2+1,f
  4128  094B  06C5               	xorwf	___ftadd@f2+2,f
  4129  094C  0AC3               	incf	___ftadd@f2,f
  4130  094D  1903               	skipnz
  4131  094E  0AC4               	incf	___ftadd@f2+1,f
  4132  094F  1903               	skipnz
  4133  0950  0AC5               	incf	___ftadd@f2+2,f
  4134  0951  01C9               	clrf	___ftadd@sign
  4135  0952  0AC9               	incf	___ftadd@sign,f
  4136  0953                     l6613:	
  4137  0953  0843               	movf	___ftadd@f2,w
  4138  0954  00F2               	movwf	?___ftpack
  4139  0955  0844               	movf	___ftadd@f2+1,w
  4140  0956  00F3               	movwf	?___ftpack+1
  4141  0957  0845               	movf	___ftadd@f2+2,w
  4142  0958  00F4               	movwf	?___ftpack+2
  4143  0959  084B               	movf	___ftadd@exp1,w
  4144  095A  00F5               	movwf	?___ftpack+3
  4145  095B  0849               	movf	___ftadd@sign,w
  4146  095C  00F6               	movwf	?___ftpack+4
  4147  095D  120A  158A  2769   	fcall	___ftpack
  4148  0960  0872               	movf	?___ftpack,w
  4149  0961  00C0               	movwf	?___ftadd
  4150  0962  0873               	movf	?___ftpack+1,w
  4151  0963  00C1               	movwf	?___ftadd+1
  4152  0964  0874               	movf	?___ftpack+2,w
  4153  0965  00C2               	movwf	?___ftadd+2
  4154  0966  0008               	return
  4155  0967                     __end_of___ftadd:	
  4156                           
  4157                           	psect	text522
  4158  0967                     __ptext522:	
  4159 ;; =============== function _scale ends ============
  4160                           
  4161                           
  4162 ;; *************** function _fround *****************
  4163 ;; Defined at:
  4164 ;;		line 406 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\lib\doprnt.c"
  4165 ;; Parameters:    Size  Location     Type
  4166 ;;  prec            1    wreg     unsigned char 
  4167 ;; Auto vars:     Size  Location     Type
  4168 ;;  prec            1   53[BANK0 ] unsigned char 
  4169 ;; Return value:  Size  Location     Type
  4170 ;;                  3   44[BANK0 ] unsigned char 
  4171 ;; Registers used:
  4172 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4173 ;; Tracked objects:
  4174 ;;		On entry : 60/20
  4175 ;;		On exit  : 60/0
  4176 ;;		Unchanged: FFF9F/0
  4177 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4178 ;;      Params:         0       3       0       0       0
  4179 ;;      Locals:         0       7       0       0       0
  4180 ;;      Temps:          0       0       0       0       0
  4181 ;;      Totals:         0      10       0       0       0
  4182 ;;Total ram usage:       10 bytes
  4183 ;; Hardware stack levels used:    1
  4184 ;; Hardware stack levels required when called:    3
  4185 ;; This function calls:
  4186 ;;		___lbmod
  4187 ;;		___bmul
  4188 ;;		___lbdiv
  4189 ;;		___ftmul
  4190 ;; This function is called by:
  4191 ;;		_printf
  4192 ;; This function uses a non-reentrant model
  4193 ;;
  4194  0967                     _fround:	
  4195                           
  4196                           ; Regs used in _fround: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4197                           ;fround@prec stored from wreg
  4198  0967  1283               	bcf	3,5	;RP0=0, select bank0
  4199  0968  00D5               	movwf	fround@prec
  4200  0969  306E               	movlw	110
  4201  096A  0255               	subwf	fround@prec,w
  4202  096B  1C03               	skipc
  4203  096C  29F2               	goto	l6759
  4204  096D  3003               	movlw	3
  4205  096E  00FB               	movwf	?___bmul
  4206  096F  300A               	movlw	10
  4207  0970  00F7               	movwf	?___lbdiv
  4208  0971  3064               	movlw	100
  4209  0972  00F2               	movwf	?___lbmod
  4210  0973  0855               	movf	fround@prec,w
  4211  0974  2287  120A  158A   	fcall	___lbmod
  4212  0977  226C               	fcall	___lbdiv
  4213  0978  120A  158A  275B   	fcall	___bmul
      +       120A  158A         
  4214  097D  3E1C               	addlw	low ((__npowers_-__stringbase+27))
  4215  097E  0084               	movwf	4
  4216  097F  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  4217  0984  00B1               	movwf	?___ftmul
  4218  0985  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  4219  098A  00B2               	movwf	?___ftmul+1
  4220  098B  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  4221  0990  00B3               	movwf	?___ftmul+2
  4222  0991  3003               	movlw	3
  4223  0992  00FB               	movwf	?___bmul
  4224  0993  3064               	movlw	100
  4225  0994  00F7               	movwf	?___lbdiv
  4226  0995  0855               	movf	fround@prec,w
  4227  0996  226C               	fcall	___lbdiv
  4228  0997  120A  158A  275B   	fcall	___bmul
      +       120A  158A         
  4229  099C  3E37               	addlw	low ((__npowers_-__stringbase+54))
  4230  099D  0084               	movwf	4
  4231  099E  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  4232  09A3  00B4               	movwf	?___ftmul+3
  4233  09A4  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  4234  09A9  00B5               	movwf	?___ftmul+4
  4235  09AA  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  4236  09AF  00B6               	movwf	?___ftmul+5
  4237  09B0  120A  158A  26EC   	fcall	___ftmul
      +       120A  158A         
  4238  09B5  22B2  120A  158A   	fcall	PL27	;call to abstracted procedure
  4239  09B8  3003               	movlw	3
  4240  09B9  00FB               	movwf	?___bmul
  4241  09BA  300A               	movlw	10
  4242  09BB  00F2               	movwf	?___lbmod
  4243  09BC  0855               	movf	fround@prec,w
  4244  09BD  2287               	fcall	___lbmod
  4245  09BE  120A  158A  275B   	fcall	___bmul
      +       120A  158A         
  4246  09C3  3E01               	addlw	low (__npowers_-__stringbase)
  4247  09C4  0084               	movwf	4
  4248  09C5  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  4249  09CA  00B1               	movwf	?___ftmul
  4250  09CB  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  4251  09D0  00B2               	movwf	?___ftmul+1
  4252  09D1  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  4253  09D6  22AA               	fcall	PL23	;call to abstracted procedure
  4254  09D7  120A  158A  26EC   	fcall	___ftmul
      +       120A  158A         
  4255  09DC  0831               	movf	?___ftmul,w
  4256  09DD  00CF               	movwf	_fround$4111
  4257  09DE  0832               	movf	?___ftmul+1,w
  4258  09DF  00D0               	movwf	_fround$4111+1
  4259  09E0  0833               	movf	?___ftmul+2,w
  4260  09E1  00D1               	movwf	_fround$4111+2
  4261  09E2  303F               	movlw	63
  4262  09E3  01B1               	clrf	?___ftmul
  4263  09E4  01B2               	clrf	?___ftmul+1
  4264  09E5  00B3               	movwf	?___ftmul+2
  4265  09E6  084F               	movf	_fround$4111,w
  4266  09E7  00B4               	movwf	?___ftmul+3
  4267  09E8  0850               	movf	_fround$4111+1,w
  4268  09E9  00B5               	movwf	?___ftmul+4
  4269  09EA  0851               	movf	_fround$4111+2,w
  4270  09EB  00B6               	movwf	?___ftmul+5
  4271  09EC  120A  158A  26EC   	fcall	___ftmul
      +       120A  158A         
  4272  09F1  2AA3               	ljmp	PL17	;call to abstracted procedure
  4273  09F2                     l6759:	
  4274  09F2  300B               	movlw	11
  4275  09F3  0255               	subwf	fround@prec,w
  4276  09F4  1C03               	skipc
  4277  09F5  2A46               	goto	l6767
  4278  09F6  3003               	movlw	3
  4279  09F7  00FB               	movwf	?___bmul
  4280  09F8  300A               	movlw	10
  4281  09F9  00F2               	movwf	?___lbmod
  4282  09FA  0855               	movf	fround@prec,w
  4283  09FB  2287               	fcall	___lbmod
  4284  09FC  120A  158A  275B   	fcall	___bmul
      +       120A  158A         
  4285  0A01  3E01               	addlw	low (__npowers_-__stringbase)
  4286  0A02  0084               	movwf	4
  4287  0A03  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  4288  0A08  00B1               	movwf	?___ftmul
  4289  0A09  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  4290  0A0E  00B2               	movwf	?___ftmul+1
  4291  0A0F  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  4292  0A14  00B3               	movwf	?___ftmul+2
  4293  0A15  3003               	movlw	3
  4294  0A16  00FB               	movwf	?___bmul
  4295  0A17  300A               	movlw	10
  4296  0A18  00F7               	movwf	?___lbdiv
  4297  0A19  0855               	movf	fround@prec,w
  4298  0A1A  226C               	fcall	___lbdiv
  4299  0A1B  120A  158A  275B   	fcall	___bmul
      +       120A  158A         
  4300  0A20  3E1C               	addlw	low ((__npowers_-__stringbase+27))
  4301  0A21  0084               	movwf	4
  4302  0A22  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  4303  0A27  00B4               	movwf	?___ftmul+3
  4304  0A28  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  4305  0A2D  00B5               	movwf	?___ftmul+4
  4306  0A2E  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  4307  0A33  00B6               	movwf	?___ftmul+5
  4308  0A34  120A  158A  26EC   	fcall	___ftmul
      +       120A  158A         
  4309  0A39  22B2  120A  158A   	fcall	PL27	;call to abstracted procedure
  4310  0A3C  303F               	movlw	63
  4311  0A3D  01B1               	clrf	?___ftmul
  4312  0A3E  01B2               	clrf	?___ftmul+1
  4313  0A3F  22AA               	fcall	PL23	;call to abstracted procedure
  4314  0A40  120A  158A  26EC   	fcall	___ftmul
      +       120A  158A         
  4315  0A45  2AA3               	ljmp	PL17	;call to abstracted procedure
  4316  0A46                     l6767:	
  4317  0A46  303F               	movlw	63
  4318  0A47  01B1               	clrf	?___ftmul
  4319  0A48  01B2               	clrf	?___ftmul+1
  4320  0A49  00B3               	movwf	?___ftmul+2
  4321  0A4A  3003               	movlw	3
  4322  0A4B  00FB               	movwf	?___bmul
  4323  0A4C  0855               	movf	fround@prec,w
  4324  0A4D  120A  158A  275B   	fcall	___bmul
      +       120A  158A         
  4325  0A52  3E01               	addlw	low (__npowers_-__stringbase)
  4326  0A53  0084               	movwf	4
  4327  0A54  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  4328  0A59  00B4               	movwf	?___ftmul+3
  4329  0A5A  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  4330  0A5F  00B5               	movwf	?___ftmul+4
  4331  0A60  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  4332  0A65  00B6               	movwf	?___ftmul+5
  4333  0A66  120A  158A  26EC   	fcall	___ftmul
      +       120A  158A         
  4334  0A6B  2AA3               	ljmp	PL17	;call to abstracted procedure
  4335  0A6C                     __end_of_fround:	
  4336  0A6C                     __ptext540:	
  4337 ;; =============== function ___lbmod ends ============
  4338                           
  4339                           
  4340 ;; *************** function ___lbdiv *****************
  4341 ;; Defined at:
  4342 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\lbdiv.c"
  4343 ;; Parameters:    Size  Location     Type
  4344 ;;  dividend        1    wreg     unsigned char 
  4345 ;;  divisor         1    7[COMMON] unsigned char 
  4346 ;; Auto vars:     Size  Location     Type
  4347 ;;  dividend        1    8[COMMON] unsigned char 
  4348 ;;  quotient        1   10[COMMON] unsigned char 
  4349 ;;  counter         1    9[COMMON] unsigned char 
  4350 ;; Return value:  Size  Location     Type
  4351 ;;                  1    wreg      unsigned char 
  4352 ;; Registers used:
  4353 ;;		wreg, status,2, status,0
  4354 ;; Tracked objects:
  4355 ;;		On entry : 60/0
  4356 ;;		On exit  : 60/0
  4357 ;;		Unchanged: FFF9F/0
  4358 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4359 ;;      Params:         1       0       0       0       0
  4360 ;;      Locals:         3       0       0       0       0
  4361 ;;      Temps:          0       0       0       0       0
  4362 ;;      Totals:         4       0       0       0       0
  4363 ;;Total ram usage:        4 bytes
  4364 ;; Hardware stack levels used:    1
  4365 ;; Hardware stack levels required when called:    1
  4366 ;; This function calls:
  4367 ;;		Nothing
  4368 ;; This function is called by:
  4369 ;;		_fround
  4370 ;; This function uses a non-reentrant model
  4371 ;;
  4372  0A6C                     ___lbdiv:	
  4373                           
  4374                           ; Regs used in ___lbdiv: [wreg+status,2+status,0]
  4375                           ;___lbdiv@dividend stored from wreg
  4376  0A6C  00F8               	movwf	___lbdiv@dividend
  4377  0A6D  01FA               	clrf	___lbdiv@quotient
  4378  0A6E  0877               	movf	___lbdiv@divisor,w
  4379  0A6F  1903               	btfsc	3,2
  4380  0A70  2A85               	goto	l6247
  4381  0A71  01F9               	clrf	___lbdiv@counter
  4382  0A72                     l6233:	
  4383  0A72  0AF9               	incf	___lbdiv@counter,f
  4384  0A73  1BF7               	btfsc	___lbdiv@divisor,7
  4385  0A74  2A78               	goto	l3333
  4386  0A75  1003               	clrc
  4387  0A76  0DF7               	rlf	___lbdiv@divisor,f
  4388  0A77  2A72               	goto	l6233
  4389  0A78                     l3333:	
  4390  0A78  1003               	clrc
  4391  0A79  0DFA               	rlf	___lbdiv@quotient,f
  4392  0A7A  0877               	movf	___lbdiv@divisor,w
  4393  0A7B  0278               	subwf	___lbdiv@dividend,w
  4394  0A7C  1C03               	skipc
  4395  0A7D  2A82               	goto	L18
  4396  0A7E  0877               	movf	___lbdiv@divisor,w
  4397  0A7F  02F8               	subwf	___lbdiv@dividend,f
  4398  0A80  147A               	bsf	___lbdiv@quotient,0
  4399  0A81  1003               	clrc
  4400  0A82                     L18:	
  4401  0A82  0CF7               	rrf	___lbdiv@divisor,f
  4402  0A83  0BF9               	decfsz	___lbdiv@counter,f
  4403  0A84  2A78               	goto	l3333
  4404  0A85                     l6247:	
  4405  0A85  087A               	movf	___lbdiv@quotient,w
  4406  0A86  0008               	return
  4407  0A87                     __end_of___lbdiv:	
  4408  0A87                     __ptext539:	
  4409 ;; =============== function ___ftpack ends ============
  4410                           
  4411                           
  4412 ;; *************** function ___lbmod *****************
  4413 ;; Defined at:
  4414 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\lbmod.c"
  4415 ;; Parameters:    Size  Location     Type
  4416 ;;  dividend        1    wreg     unsigned char 
  4417 ;;  divisor         1    2[COMMON] unsigned char 
  4418 ;; Auto vars:     Size  Location     Type
  4419 ;;  dividend        1    4[COMMON] unsigned char 
  4420 ;;  rem             1    6[COMMON] unsigned char 
  4421 ;;  counter         1    5[COMMON] unsigned char 
  4422 ;; Return value:  Size  Location     Type
  4423 ;;                  1    wreg      unsigned char 
  4424 ;; Registers used:
  4425 ;;		wreg, status,2, status,0
  4426 ;; Tracked objects:
  4427 ;;		On entry : 60/0
  4428 ;;		On exit  : 60/0
  4429 ;;		Unchanged: FFF9F/0
  4430 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4431 ;;      Params:         1       0       0       0       0
  4432 ;;      Locals:         3       0       0       0       0
  4433 ;;      Temps:          1       0       0       0       0
  4434 ;;      Totals:         5       0       0       0       0
  4435 ;;Total ram usage:        5 bytes
  4436 ;; Hardware stack levels used:    1
  4437 ;; Hardware stack levels required when called:    1
  4438 ;; This function calls:
  4439 ;;		Nothing
  4440 ;; This function is called by:
  4441 ;;		_fround
  4442 ;; This function uses a non-reentrant model
  4443 ;;
  4444  0A87                     ___lbmod:	
  4445                           
  4446                           ; Regs used in ___lbmod: [wreg+status,2+status,0]
  4447                           ;___lbmod@dividend stored from wreg
  4448  0A87  00F4               	movwf	___lbmod@dividend
  4449  0A88  3008               	movlw	8
  4450  0A89  00F5               	movwf	___lbmod@counter
  4451  0A8A  01F6               	clrf	___lbmod@rem
  4452  0A8B                     l6255:	
  4453  0A8B  0874               	movf	___lbmod@dividend,w
  4454  0A8C  00F3               	movwf	??___lbmod
  4455  0A8D  3007               	movlw	7
  4456  0A8E  1003               	clrc
  4457  0A8F                     L17:	
  4458  0A8F  0CF3               	rrf	??___lbmod,f
  4459  0A90  3EFF               	addlw	-1
  4460  0A91  1003               	clrc
  4461  0A92  1D03               	skipz
  4462  0A93  2A8F               	goto	L17
  4463  0A94  0D76               	rlf	___lbmod@rem,w
  4464  0A95  0473               	iorwf	??___lbmod,w
  4465  0A96  00F6               	movwf	___lbmod@rem
  4466  0A97  1003               	clrc
  4467  0A98  0DF4               	rlf	___lbmod@dividend,f
  4468  0A99  0872               	movf	___lbmod@divisor,w
  4469  0A9A  0276               	subwf	___lbmod@rem,w
  4470  0A9B  1C03               	skipc
  4471  0A9C  2A9F               	goto	l6263
  4472  0A9D  0872               	movf	___lbmod@divisor,w
  4473  0A9E  02F6               	subwf	___lbmod@rem,f
  4474  0A9F                     l6263:	
  4475  0A9F  0BF5               	decfsz	___lbmod@counter,f
  4476  0AA0  2A8B               	goto	l6255
  4477  0AA1  0876               	movf	___lbmod@rem,w
  4478  0AA2  0008               	return
  4479  0AA3                     __end_of___lbmod:	
  4480  0AA3                     PL17:	
  4481  0AA3  0831               	movf	?___ftmul,w
  4482  0AA4  00CC               	movwf	?_fround
  4483  0AA5  0832               	movf	?___ftmul+1,w
  4484  0AA6  00CD               	movwf	?_fround+1
  4485  0AA7  0833               	movf	?___ftmul+2,w
  4486  0AA8  00CE               	movwf	?_fround+2
  4487  0AA9  0008               	return
  4488  0AAA                     PL23:	
  4489  0AAA  00B3               	movwf	?___ftmul+2
  4490  0AAB  0852               	movf	_fround$4110,w
  4491  0AAC  00B4               	movwf	?___ftmul+3
  4492  0AAD  0853               	movf	_fround$4110+1,w
  4493  0AAE  00B5               	movwf	?___ftmul+4
  4494  0AAF  0854               	movf	_fround$4110+2,w
  4495  0AB0  00B6               	movwf	?___ftmul+5
  4496  0AB1  0008               	return
  4497  0AB2                     PL27:	
  4498  0AB2  0831               	movf	?___ftmul,w
  4499  0AB3  00D2               	movwf	_fround$4110
  4500  0AB4  0832               	movf	?___ftmul+1,w
  4501  0AB5  00D3               	movwf	_fround$4110+1
  4502  0AB6  0833               	movf	?___ftmul+2,w
  4503  0AB7  00D4               	movwf	_fround$4110+2
  4504  0AB8  0008               	return
  4505                           
  4506                           	psect	text523
  4507  0AB9                     __ptext523:	
  4508 ;; =============== function _fround ends ============
  4509                           
  4510                           
  4511 ;; *************** function _lcd_gotoxy *****************
  4512 ;; Defined at:
  4513 ;;		line 162 in file "C:\Users\DELL\Desktop\baitap_ttvxl\dotanso_khongdungCCP\lcd(16).c"
  4514 ;; Parameters:    Size  Location     Type
  4515 ;;  col             1    wreg     unsigned char 
  4516 ;;  row             1    7[COMMON] unsigned char 
  4517 ;; Auto vars:     Size  Location     Type
  4518 ;;  col             1    8[COMMON] unsigned char 
  4519 ;;  address         1    9[COMMON] unsigned char 
  4520 ;; Return value:  Size  Location     Type
  4521 ;;		None               void
  4522 ;; Registers used:
  4523 ;;		wreg, status,2, status,0, pclath, cstack
  4524 ;; Tracked objects:
  4525 ;;		On entry : 0/0
  4526 ;;		On exit  : 60/0
  4527 ;;		Unchanged: 0/0
  4528 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4529 ;;      Params:         1       0       0       0       0
  4530 ;;      Locals:         2       0       0       0       0
  4531 ;;      Temps:          0       0       0       0       0
  4532 ;;      Totals:         3       0       0       0       0
  4533 ;;Total ram usage:        3 bytes
  4534 ;; Hardware stack levels used:    1
  4535 ;; Hardware stack levels required when called:    2
  4536 ;; This function calls:
  4537 ;;		_lcd_put_byte
  4538 ;;		_lcd_busy
  4539 ;; This function is called by:
  4540 ;;		_lcd_putc
  4541 ;;		_main
  4542 ;; This function uses a non-reentrant model
  4543 ;;
  4544  0AB9                     _lcd_gotoxy:	
  4545                           
  4546                           ; Regs used in _lcd_gotoxy: [wreg+status,2+status,0+pclath+cstack]
  4547                           ;lcd_gotoxy@col stored from wreg
  4548  0AB9  00F8               	movwf	lcd_gotoxy@col
  4549                           
  4550                           ;lcd(16).c: 163: unsigned char address;
  4551                           ;lcd(16).c: 165: if(row!=0)
  4552  0ABA  0877               	movf	lcd_gotoxy@row,w
  4553  0ABB  1903               	btfsc	3,2
  4554  0ABC  2AC0               	goto	l6741
  4555                           
  4556                           ;lcd(16).c: 166: address=0x40;
  4557  0ABD  3040               	movlw	64
  4558  0ABE  00F9               	movwf	lcd_gotoxy@address
  4559  0ABF  2AC1               	goto	l6743
  4560  0AC0                     l6741:	
  4561                           
  4562                           ;lcd(16).c: 167: else
  4563                           ;lcd(16).c: 168: address=0;
  4564  0AC0  01F9               	clrf	lcd_gotoxy@address
  4565  0AC1                     l6743:	
  4566                           
  4567                           ;lcd(16).c: 170: address += col;
  4568  0AC1  0878               	movf	lcd_gotoxy@col,w
  4569  0AC2  07F9               	addwf	lcd_gotoxy@address,f
  4570                           
  4571                           ;lcd(16).c: 171: lcd_put_byte(0,0x80|address);
  4572  0AC3  0879               	movf	lcd_gotoxy@address,w
  4573  0AC4  3880               	iorlw	128
  4574  0AC5  00F2               	movwf	?_lcd_put_byte
  4575  0AC6  3000               	movlw	0
  4576  0AC7  23BB  120A  158A   	fcall	_lcd_put_byte
  4577  0ACA                     l6747:	
  4578                           ;lcd(16).c: 172: while(lcd_busy());
  4579                           
  4580  0ACA  244B  120A  158A   	fcall	_lcd_busy
  4581  0ACD  3800               	iorlw	0
  4582  0ACE  1903               	btfsc	3,2
  4583  0ACF  0008               	return
  4584  0AD0  2ACA               	goto	l6747
  4585  0AD1                     __end_of_lcd_gotoxy:	
  4586  0AD1                     __ptext519:	
  4587 ;; =============== function _putch ends ============
  4588                           
  4589                           
  4590 ;; *************** function _lcd_putc *****************
  4591 ;; Defined at:
  4592 ;;		line 143 in file "C:\Users\DELL\Desktop\baitap_ttvxl\dotanso_khongdungCCP\lcd(16).c"
  4593 ;; Parameters:    Size  Location     Type
  4594 ;;  c               1    wreg     unsigned char 
  4595 ;; Auto vars:     Size  Location     Type
  4596 ;;  c               1   10[COMMON] unsigned char 
  4597 ;; Return value:  Size  Location     Type
  4598 ;;		None               void
  4599 ;; Registers used:
  4600 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4601 ;; Tracked objects:
  4602 ;;		On entry : 0/20
  4603 ;;		On exit  : 0/0
  4604 ;;		Unchanged: 0/0
  4605 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4606 ;;      Params:         0       0       0       0       0
  4607 ;;      Locals:         1       0       0       0       0
  4608 ;;      Temps:          0       0       0       0       0
  4609 ;;      Totals:         1       0       0       0       0
  4610 ;;Total ram usage:        1 bytes
  4611 ;; Hardware stack levels used:    1
  4612 ;; Hardware stack levels required when called:    3
  4613 ;; This function calls:
  4614 ;;		_lcd_put_byte
  4615 ;;		_lcd_busy
  4616 ;;		_lcd_gotoxy
  4617 ;;		_isprint
  4618 ;; This function is called by:
  4619 ;;		_putch
  4620 ;; This function uses a non-reentrant model
  4621 ;;
  4622  0AD1                     _lcd_putc:	
  4623                           
  4624                           ; Regs used in _lcd_putc: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4625                           ;lcd_putc@c stored from wreg
  4626  0AD1  00FA               	movwf	lcd_putc@c
  4627                           
  4628                           ;lcd(16).c: 144: switch(c){
  4629  0AD2  2AF7               	goto	l6833
  4630  0AD3                     l6819:	
  4631  0AD3  3000               	movlw	0
  4632                           
  4633                           ;lcd(16).c: 146: lcd_put_byte(0, 1);
  4634  0AD4  01F2               	clrf	?_lcd_put_byte
  4635  0AD5  0AF2               	incf	?_lcd_put_byte,f
  4636  0AD6  23BB  120A  158A   	fcall	_lcd_put_byte
  4637  0AD9                     l6821:	
  4638                           ;lcd(16).c: 147: while(lcd_busy());
  4639                           
  4640  0AD9  244B  120A  158A   	fcall	_lcd_busy
  4641  0ADC  3800               	iorlw	0
  4642  0ADD  1903               	btfsc	3,2
  4643  0ADE  0008               	return
  4644  0ADF  2AD9               	goto	l6821
  4645  0AE0                     l6823:	
  4646  0AE0  3000               	movlw	0
  4647                           
  4648                           ;lcd(16).c: 150: lcd_gotoxy(0, 1);
  4649  0AE1  01F7               	clrf	?_lcd_gotoxy
  4650  0AE2  0AF7               	incf	?_lcd_gotoxy,f
  4651  0AE3  2AB9               	ljmp	_lcd_gotoxy
  4652  0AE4                     l6825:	
  4653                           ;lcd(16).c: 151: break;
  4654                           
  4655                           
  4656                           ;lcd(16).c: 153: if(isprint(c)){
  4657  0AE4  087A               	movf	lcd_putc@c,w
  4658  0AE5  2472  120A  158A   	fcall	_isprint
  4659  0AE8  1C03               	btfss	3,0
  4660  0AE9  0008               	return
  4661                           
  4662                           ;lcd(16).c: 154: lcd_put_byte(1, c);
  4663  0AEA  087A               	movf	lcd_putc@c,w
  4664  0AEB  00F2               	movwf	?_lcd_put_byte
  4665  0AEC  3001               	movlw	1
  4666  0AED  23BB  120A  158A   	fcall	_lcd_put_byte
  4667  0AF0                     l6829:	
  4668                           ;lcd(16).c: 155: while(lcd_busy());
  4669                           
  4670  0AF0  244B  120A  158A   	fcall	_lcd_busy
  4671  0AF3  3800               	iorlw	0
  4672  0AF4  1903               	btfsc	3,2
  4673  0AF5  0008               	return
  4674  0AF6  2AF0               	goto	l6829
  4675  0AF7                     l6833:	
  4676  0AF7  087A               	movf	lcd_putc@c,w
  4677                           
  4678                           ; Switch size 1, requested type "space"
  4679                           ; Number of cases is 2, Range of values is 10 to 12
  4680                           ; switch strategies available:
  4681                           ; Name         Instructions Cycles
  4682                           ; simple_byte            7     4 (average)
  4683                           ; direct_byte           20    11 (fixed)
  4684                           ; jumptable            263     9 (fixed)
  4685                           ;	Chosen strategy is simple_byte
  4686  0AF8  3A0A               	xorlw	10	; case 10
  4687  0AF9  1903               	skipnz
  4688  0AFA  2AE0               	goto	l6823
  4689  0AFB  3A06               	xorlw	6	; case 12
  4690  0AFC  1903               	skipnz
  4691  0AFD  2AD3               	goto	l6819
  4692  0AFE  2AE4               	goto	l6825
  4693  0AFF  0008               	return
  4694  0B00                     __end_of_lcd_putc:	
  4695  0B00                     __ptext524:	
  4696 ;; =============== function _lcd_gotoxy ends ============
  4697                           
  4698                           
  4699 ;; *************** function _lcd_init *****************
  4700 ;; Defined at:
  4701 ;;		line 5 in file "C:\Users\DELL\Desktop\baitap_ttvxl\dotanso_khongdungCCP\lcd(16).c"
  4702 ;; Parameters:    Size  Location     Type
  4703 ;;		None
  4704 ;; Auto vars:     Size  Location     Type
  4705 ;;  i               1    0        unsigned char 
  4706 ;; Return value:  Size  Location     Type
  4707 ;;		None               void
  4708 ;; Registers used:
  4709 ;;		wreg, status,2, status,0, pclath, cstack
  4710 ;; Tracked objects:
  4711 ;;		On entry : 17F/60
  4712 ;;		On exit  : 60/0
  4713 ;;		Unchanged: 0/0
  4714 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4715 ;;      Params:         0       0       0       0       0
  4716 ;;      Locals:         0       0       0       0       0
  4717 ;;      Temps:          3       0       0       0       0
  4718 ;;      Totals:         3       0       0       0       0
  4719 ;;Total ram usage:        3 bytes
  4720 ;; Hardware stack levels used:    1
  4721 ;; Hardware stack levels required when called:    2
  4722 ;; This function calls:
  4723 ;;		_lcd_put_byte
  4724 ;;		_lcd_busy
  4725 ;; This function is called by:
  4726 ;;		_main
  4727 ;; This function uses a non-reentrant model
  4728 ;;
  4729  0B00                     _lcd_init:	
  4730                           
  4731                           ;lcd(16).c: 6: unsigned char i;
  4732                           ;lcd(16).c: 7: TRISD3 = 0;
  4733                           
  4734                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
  4735  0B00  1303               	bcf	3,6	;RP1=0, select bank1
  4736  0B01  1188               	bcf	8,3
  4737                           
  4738                           ;lcd(16).c: 8: TRISD1 = 0;
  4739  0B02  1088               	bcf	8,1
  4740                           
  4741                           ;lcd(16).c: 9: TRISD2 = 0;
  4742  0B03  1108               	bcf	8,2
  4743                           
  4744                           ;lcd(16).c: 10: TRISD4 = 0;
  4745  0B04  1208               	bcf	8,4
  4746                           
  4747                           ;lcd(16).c: 11: TRISD5 = 0;
  4748  0B05  1288               	bcf	8,5
  4749                           
  4750                           ;lcd(16).c: 12: TRISD6 = 0;
  4751  0B06  1308               	bcf	8,6
  4752                           
  4753                           ;lcd(16).c: 13: TRISD7 = 0;
  4754  0B07  1388               	bcf	8,7
  4755                           
  4756                           ;lcd(16).c: 14: RD3 = 0;
  4757  0B08  1283               	bcf	3,5	;RP0=0, select bank0
  4758  0B09  3003               	movlw	3
  4759  0B0A  1188               	bcf	8,3
  4760                           
  4761                           ;lcd(16).c: 15: RD1 = 0;
  4762  0B0B  1088               	bcf	8,1
  4763                           
  4764                           ;lcd(16).c: 16: RD2 = 0;
  4765  0B0C  1108               	bcf	8,2
  4766                           
  4767                           ;lcd(16).c: 18: _delay((unsigned long)((100)*(20000000/4000.0)));
  4768  0B0D  00F9               	movwf	??_lcd_init+2
  4769  0B0E  308A               	movlw	138
  4770  0B0F  00F8               	movwf	??_lcd_init+1
  4771  0B10  3056               	movlw	86
  4772  0B11  00F7               	movwf	??_lcd_init
  4773  0B12                     u3937:	
  4774  0B12  0BF7               	decfsz	??_lcd_init,f
  4775  0B13  2B12               	goto	u3937
  4776  0B14  0BF8               	decfsz	??_lcd_init+1,f
  4777  0B15  2B12               	goto	u3937
  4778  0B16  0BF9               	decfsz	??_lcd_init+2,f
  4779  0B17  2B12               	goto	u3937
  4780  0B18  2B19               	nop2
  4781                           
  4782                           ;lcd(16).c: 21: lcd_put_byte(0,0x30);
  4783  0B19  3030               	movlw	48
  4784  0B1A  00F2               	movwf	?_lcd_put_byte
  4785  0B1B  3000               	movlw	0
  4786  0B1C  23BB  120A  158A   	fcall	_lcd_put_byte
  4787                           
  4788                           ;lcd(16).c: 22: _delay((unsigned long)((50)*(20000000/4000.0)));
  4789  0B1F  3002               	movlw	2
  4790  0B20  00F9               	movwf	??_lcd_init+2
  4791  0B21  3045               	movlw	69
  4792  0B22  00F8               	movwf	??_lcd_init+1
  4793  0B23  30A9               	movlw	169
  4794  0B24  00F7               	movwf	??_lcd_init
  4795  0B25                     u3947:	
  4796  0B25  0BF7               	decfsz	??_lcd_init,f
  4797  0B26  2B25               	goto	u3947
  4798  0B27  0BF8               	decfsz	??_lcd_init+1,f
  4799  0B28  2B25               	goto	u3947
  4800  0B29  0BF9               	decfsz	??_lcd_init+2,f
  4801  0B2A  2B25               	goto	u3947
  4802  0B2B  2B2C               	nop2
  4803                           
  4804                           ;lcd(16).c: 23: lcd_put_byte(0,0x30);
  4805  0B2C  3030               	movlw	48
  4806  0B2D  00F2               	movwf	?_lcd_put_byte
  4807  0B2E  3000               	movlw	0
  4808  0B2F  23BB  120A  158A   	fcall	_lcd_put_byte
  4809                           
  4810                           ;lcd(16).c: 24: _delay((unsigned long)((50)*(20000000/4000.0)));
  4811  0B32  3002               	movlw	2
  4812  0B33  00F9               	movwf	??_lcd_init+2
  4813  0B34  3045               	movlw	69
  4814  0B35  00F8               	movwf	??_lcd_init+1
  4815  0B36  30A9               	movlw	169
  4816  0B37  00F7               	movwf	??_lcd_init
  4817  0B38                     u3957:	
  4818  0B38  0BF7               	decfsz	??_lcd_init,f
  4819  0B39  2B38               	goto	u3957
  4820  0B3A  0BF8               	decfsz	??_lcd_init+1,f
  4821  0B3B  2B38               	goto	u3957
  4822  0B3C  0BF9               	decfsz	??_lcd_init+2,f
  4823  0B3D  2B38               	goto	u3957
  4824  0B3E  2B3F               	nop2
  4825                           
  4826                           ;lcd(16).c: 25: lcd_put_byte(0,0x32);
  4827  0B3F  3032               	movlw	50
  4828  0B40  00F2               	movwf	?_lcd_put_byte
  4829  0B41  3000               	movlw	0
  4830  0B42  23BB  120A  158A   	fcall	_lcd_put_byte
  4831                           
  4832                           ;lcd(16).c: 26: _delay((unsigned long)((100)*(20000000/4000.0)));
  4833  0B45  3003               	movlw	3
  4834  0B46  00F9               	movwf	??_lcd_init+2
  4835  0B47  308A               	movlw	138
  4836  0B48  00F8               	movwf	??_lcd_init+1
  4837  0B49  3056               	movlw	86
  4838  0B4A  00F7               	movwf	??_lcd_init
  4839  0B4B                     u3967:	
  4840  0B4B  0BF7               	decfsz	??_lcd_init,f
  4841  0B4C  2B4B               	goto	u3967
  4842  0B4D  0BF8               	decfsz	??_lcd_init+1,f
  4843  0B4E  2B4B               	goto	u3967
  4844  0B4F  0BF9               	decfsz	??_lcd_init+2,f
  4845  0B50  2B4B               	goto	u3967
  4846  0B51  2B52               	nop2
  4847                           
  4848                           ;lcd(16).c: 27: _delay((unsigned long)((100)*(20000000/4000.0)));
  4849  0B52  3003               	movlw	3
  4850  0B53  00F9               	movwf	??_lcd_init+2
  4851  0B54  308A               	movlw	138
  4852  0B55  00F8               	movwf	??_lcd_init+1
  4853  0B56  3056               	movlw	86
  4854  0B57  00F7               	movwf	??_lcd_init
  4855  0B58                     u3977:	
  4856  0B58  0BF7               	decfsz	??_lcd_init,f
  4857  0B59  2B58               	goto	u3977
  4858  0B5A  0BF8               	decfsz	??_lcd_init+1,f
  4859  0B5B  2B58               	goto	u3977
  4860  0B5C  0BF9               	decfsz	??_lcd_init+2,f
  4861  0B5D  2B58               	goto	u3977
  4862  0B5E  2B5F               	nop2
  4863                           
  4864                           ;lcd(16).c: 28: _delay((unsigned long)((100)*(20000000/4000.0)));
  4865  0B5F  3003               	movlw	3
  4866  0B60  00F9               	movwf	??_lcd_init+2
  4867  0B61  308A               	movlw	138
  4868  0B62  00F8               	movwf	??_lcd_init+1
  4869  0B63  3056               	movlw	86
  4870  0B64  00F7               	movwf	??_lcd_init
  4871  0B65                     u3987:	
  4872  0B65  0BF7               	decfsz	??_lcd_init,f
  4873  0B66  2B65               	goto	u3987
  4874  0B67  0BF8               	decfsz	??_lcd_init+1,f
  4875  0B68  2B65               	goto	u3987
  4876  0B69  0BF9               	decfsz	??_lcd_init+2,f
  4877  0B6A  2B65               	goto	u3987
  4878  0B6B  2B6C               	nop2
  4879  0B6C                     l6711:	
  4880                           ;lcd(16).c: 30: while(lcd_busy());
  4881                           
  4882  0B6C  244B  120A  158A   	fcall	_lcd_busy
  4883  0B6F  3800               	iorlw	0
  4884  0B70  1D03               	skipz
  4885  0B71  2B6C               	goto	l6711
  4886                           
  4887                           ;lcd(16).c: 31: lcd_put_byte(0,0b00101100 & 0b00111000);
  4888  0B72  3028               	movlw	40
  4889  0B73  00F2               	movwf	?_lcd_put_byte
  4890  0B74  3000               	movlw	0
  4891  0B75  23BB  120A  158A   	fcall	_lcd_put_byte
  4892  0B78                     l6715:	
  4893                           ;lcd(16).c: 32: while(lcd_busy());
  4894                           
  4895  0B78  244B  120A  158A   	fcall	_lcd_busy
  4896  0B7B  3800               	iorlw	0
  4897  0B7C  1D03               	skipz
  4898  0B7D  2B78               	goto	l6715
  4899                           
  4900                           ;lcd(16).c: 34: lcd_put_byte(0,0b00001011&0b00001101&0b00001110);
  4901  0B7E  3008               	movlw	8
  4902  0B7F  00F2               	movwf	?_lcd_put_byte
  4903  0B80  3000               	movlw	0
  4904  0B81  23BB  120A  158A   	fcall	_lcd_put_byte
  4905  0B84                     l6719:	
  4906                           ;lcd(16).c: 35: while(lcd_busy());
  4907                           
  4908  0B84  244B  120A  158A   	fcall	_lcd_busy
  4909  0B87  3800               	iorlw	0
  4910  0B88  1D03               	skipz
  4911  0B89  2B84               	goto	l6719
  4912                           
  4913                           ;lcd(16).c: 36: lcd_put_byte(0,0b00001111&0b00001101&0b00001110);
  4914  0B8A  300C               	movlw	12
  4915  0B8B  00F2               	movwf	?_lcd_put_byte
  4916  0B8C  3000               	movlw	0
  4917  0B8D  23BB  120A  158A   	fcall	_lcd_put_byte
  4918  0B90                     l6723:	
  4919                           ;lcd(16).c: 37: while(lcd_busy());
  4920                           
  4921  0B90  244B  120A  158A   	fcall	_lcd_busy
  4922  0B93  3800               	iorlw	0
  4923  0B94  1D03               	skipz
  4924  0B95  2B90               	goto	l6723
  4925  0B96  3000               	movlw	0
  4926                           
  4927                           ;lcd(16).c: 39: lcd_put_byte(0,0x01);
  4928  0B97  01F2               	clrf	?_lcd_put_byte
  4929  0B98  0AF2               	incf	?_lcd_put_byte,f
  4930  0B99  23BB  120A  158A   	fcall	_lcd_put_byte
  4931  0B9C                     l6727:	
  4932                           ;lcd(16).c: 40: while(lcd_busy());
  4933                           
  4934  0B9C  244B  120A  158A   	fcall	_lcd_busy
  4935  0B9F  3800               	iorlw	0
  4936  0BA0  1D03               	skipz
  4937  0BA1  2B9C               	goto	l6727
  4938                           
  4939                           ;lcd(16).c: 41: lcd_put_byte(0,0b00000100);
  4940  0BA2  3004               	movlw	4
  4941  0BA3  00F2               	movwf	?_lcd_put_byte
  4942  0BA4  3000               	movlw	0
  4943  0BA5  23BB  120A  158A   	fcall	_lcd_put_byte
  4944  0BA8                     l6731:	
  4945                           ;lcd(16).c: 42: while(lcd_busy());
  4946                           
  4947  0BA8  244B  120A  158A   	fcall	_lcd_busy
  4948  0BAB  3800               	iorlw	0
  4949  0BAC  1D03               	skipz
  4950  0BAD  2BA8               	goto	l6731
  4951  0BAE  3000               	movlw	0
  4952                           
  4953                           ;lcd(16).c: 43: lcd_put_byte(0,0x01);
  4954  0BAF  01F2               	clrf	?_lcd_put_byte
  4955  0BB0  0AF2               	incf	?_lcd_put_byte,f
  4956  0BB1  23BB  120A  158A   	fcall	_lcd_put_byte
  4957  0BB4                     l6735:	
  4958                           ;lcd(16).c: 44: while(lcd_busy());
  4959                           
  4960  0BB4  244B  120A  158A   	fcall	_lcd_busy
  4961  0BB7  3800               	iorlw	0
  4962  0BB8  1903               	btfsc	3,2
  4963  0BB9  0008               	return
  4964  0BBA  2BB4               	goto	l6735
  4965  0BBB                     __end_of_lcd_init:	
  4966  0BBB                     __ptext530:	
  4967 ;; =============== function _lcd_busy ends ============
  4968                           
  4969                           
  4970 ;; *************** function _lcd_put_byte *****************
  4971 ;; Defined at:
  4972 ;;		line 106 in file "C:\Users\DELL\Desktop\baitap_ttvxl\dotanso_khongdungCCP\lcd(16).c"
  4973 ;; Parameters:    Size  Location     Type
  4974 ;;  rs              1    wreg     unsigned char 
  4975 ;;  b               1    2[COMMON] unsigned char 
  4976 ;; Auto vars:     Size  Location     Type
  4977 ;;  rs              1    5[COMMON] unsigned char 
  4978 ;;  temp            1    6[COMMON] struct _BYTE_VAL
  4979 ;; Return value:  Size  Location     Type
  4980 ;;		None               void
  4981 ;; Registers used:
  4982 ;;		wreg, status,2, status,0
  4983 ;; Tracked objects:
  4984 ;;		On entry : 0/20
  4985 ;;		On exit  : 60/0
  4986 ;;		Unchanged: 0/0
  4987 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4988 ;;      Params:         1       0       0       0       0
  4989 ;;      Locals:         2       0       0       0       0
  4990 ;;      Temps:          2       0       0       0       0
  4991 ;;      Totals:         5       0       0       0       0
  4992 ;;Total ram usage:        5 bytes
  4993 ;; Hardware stack levels used:    1
  4994 ;; Hardware stack levels required when called:    1
  4995 ;; This function calls:
  4996 ;;		Nothing
  4997 ;; This function is called by:
  4998 ;;		_lcd_init
  4999 ;;		_lcd_putc
  5000 ;;		_lcd_gotoxy
  5001 ;; This function uses a non-reentrant model
  5002 ;;
  5003  0BBB                     _lcd_put_byte:	
  5004                           
  5005                           ; Regs used in _lcd_put_byte: [wreg+status,2+status,0]
  5006                           ;lcd_put_byte@rs stored from wreg
  5007  0BBB  00F5               	movwf	lcd_put_byte@rs
  5008                           
  5009                           ;lcd(16).c: 107: BYTE_VAL temp;
  5010                           ;lcd(16).c: 109: TRISD4 = 0;
  5011  0BBC  1683               	bsf	3,5	;RP0=1, select bank1
  5012  0BBD  1303               	bcf	3,6	;RP1=0, select bank1
  5013  0BBE  1208               	bcf	8,4
  5014                           
  5015                           ;lcd(16).c: 110: TRISD5 = 0;
  5016  0BBF  1288               	bcf	8,5
  5017                           
  5018                           ;lcd(16).c: 111: TRISD6 = 0;
  5019  0BC0  1308               	bcf	8,6
  5020                           
  5021                           ;lcd(16).c: 112: TRISD7 = 0;
  5022  0BC1  1388               	bcf	8,7
  5023                           
  5024                           ;lcd(16).c: 114: RD1 = 0;
  5025  0BC2  1283               	bcf	3,5	;RP0=0, select bank0
  5026  0BC3  1088               	bcf	8,1
  5027                           
  5028                           ;lcd(16).c: 115: if(rs) RD1 = 1;
  5029  0BC4  0875               	movf	lcd_put_byte@rs,w
  5030  0BC5  1D03               	skipz
  5031  0BC6  1488               	bsf	8,1
  5032                           
  5033                           ;lcd(16).c: 117: _delay((unsigned long)((20)*(20000000/4000000.0)));
  5034  0BC7  3021               	movlw	33
  5035  0BC8  00F3               	movwf	??_lcd_put_byte
  5036  0BC9                     u4037:	
  5037  0BC9  0BF3               	decfsz	??_lcd_put_byte,f
  5038  0BCA  2BC9               	goto	u4037
  5039  0BCB  2487               	call	PL33	;select bank 0
  5040                           
  5041                           ;lcd(16).c: 118: RD2 = 0;
  5042  0BCC  3021               	movlw	33
  5043  0BCD  1108               	bcf	8,2
  5044                           
  5045                           ;lcd(16).c: 119: _delay((unsigned long)((20)*(20000000/4000000.0)));
  5046  0BCE  00F3               	movwf	??_lcd_put_byte
  5047  0BCF                     u4047:	
  5048  0BCF  0BF3               	decfsz	??_lcd_put_byte,f
  5049  0BD0  2BCF               	goto	u4047
  5050  0BD1  2487               	call	PL33	;select bank 0
  5051                           
  5052                           ;lcd(16).c: 120: RD3 = 0;
  5053  0BD2  1188               	bcf	8,3
  5054                           
  5055                           ;lcd(16).c: 122: temp.Val = b;
  5056  0BD3  0872               	movf	lcd_put_byte@b,w
  5057  0BD4  00F6               	movwf	lcd_put_byte@temp
  5058                           
  5059                           ;lcd(16).c: 125: RD4 = temp.bits.b4;
  5060  0BD5  0E76               	swapf	lcd_put_byte@temp,w
  5061  0BD6  3901               	andlw	1
  5062  0BD7  00F3               	movwf	??_lcd_put_byte
  5063  0BD8  0C73               	rrf	??_lcd_put_byte,w
  5064  0BD9  1C03               	btfss	3,0
  5065  0BDA  2BDE               	goto	u2720
  5066  0BDB  2487               	call	PL33	;select bank 0
  5067  0BDC  1608               	bsf	8,4
  5068  0BDD  2BE0               	goto	l6503
  5069  0BDE                     u2720:	
  5070  0BDE  2487               	call	PL33	;select bank 0
  5071  0BDF  1208               	bcf	8,4
  5072  0BE0                     l6503:	
  5073                           
  5074                           ;lcd(16).c: 126: RD5 = temp.bits.b5;
  5075  0BE0  0E76               	swapf	lcd_put_byte@temp,w
  5076  0BE1  00F3               	movwf	??_lcd_put_byte
  5077  0BE2  0C73               	rrf	??_lcd_put_byte,w
  5078  0BE3  3901               	andlw	1
  5079  0BE4  00F4               	movwf	??_lcd_put_byte+1
  5080  0BE5  0C74               	rrf	??_lcd_put_byte+1,w
  5081  0BE6  1C03               	btfss	3,0
  5082  0BE7  2BEB               	goto	u2740
  5083  0BE8  2487               	call	PL33	;select bank 0
  5084  0BE9  1688               	bsf	8,5
  5085  0BEA  2BED               	goto	l6505
  5086  0BEB                     u2740:	
  5087  0BEB  2487               	call	PL33	;select bank 0
  5088  0BEC  1288               	bcf	8,5
  5089  0BED                     l6505:	
  5090                           
  5091                           ;lcd(16).c: 127: RD6 = temp.bits.b6;
  5092  0BED  0E76               	swapf	lcd_put_byte@temp,w
  5093  0BEE  2480  120A  158A   	fcall	PL30	;call to abstracted procedure
  5094  0BF1  1C03               	btfss	3,0
  5095  0BF2  2BF6               	goto	u2760
  5096  0BF3  2487               	call	PL33	;select bank 0
  5097  0BF4  1708               	bsf	8,6
  5098  0BF5  2BF8               	goto	l6507
  5099  0BF6                     u2760:	
  5100  0BF6  2487               	call	PL33	;select bank 0
  5101  0BF7  1308               	bcf	8,6
  5102  0BF8                     l6507:	
  5103                           
  5104                           ;lcd(16).c: 128: RD7 = temp.bits.b7;
  5105  0BF8  0D76               	rlf	lcd_put_byte@temp,w
  5106  0BF9  0D76               	rlf	lcd_put_byte@temp,w
  5107  0BFA  3901               	andlw	1
  5108  0BFB  00F3               	movwf	??_lcd_put_byte
  5109  0BFC  0C73               	rrf	??_lcd_put_byte,w
  5110  0BFD  1C03               	btfss	3,0
  5111  0BFE  2C02               	goto	u2780
  5112  0BFF  2487               	call	PL33	;select bank 0
  5113  0C00  1788               	bsf	8,7
  5114  0C01  2C04               	goto	u2794
  5115  0C02                     u2780:	
  5116  0C02  2487               	call	PL33	;select bank 0
  5117  0C03  1388               	bcf	8,7
  5118  0C04                     u2794:	
  5119                           
  5120                           ;lcd(16).c: 129: _delay((unsigned long)((20)*(20000000/4000000.0)));
  5121  0C04  3021               	movlw	33
  5122  0C05  00F3               	movwf	??_lcd_put_byte
  5123  0C06                     u4057:	
  5124  0C06  0BF3               	decfsz	??_lcd_put_byte,f
  5125  0C07  2C06               	goto	u4057
  5126  0C08  2487               	call	PL33	;select bank 0
  5127                           
  5128                           ;lcd(16).c: 130: RD3 = 1;
  5129  0C09  3021               	movlw	33
  5130  0C0A  1588               	bsf	8,3
  5131                           
  5132                           ;lcd(16).c: 131: _delay((unsigned long)((20)*(20000000/4000000.0)));
  5133  0C0B  00F3               	movwf	??_lcd_put_byte
  5134  0C0C                     u4067:	
  5135  0C0C  0BF3               	decfsz	??_lcd_put_byte,f
  5136  0C0D  2C0C               	goto	u4067
  5137  0C0E  2487               	call	PL33	;select bank 0
  5138                           
  5139                           ;lcd(16).c: 132: RD3 = 0;
  5140  0C0F  1188               	bcf	8,3
  5141                           
  5142                           ;lcd(16).c: 134: RD4 = temp.bits.b0;
  5143  0C10  0876               	movf	lcd_put_byte@temp,w
  5144  0C11  3901               	andlw	1
  5145  0C12  00F3               	movwf	??_lcd_put_byte
  5146  0C13  0C73               	rrf	??_lcd_put_byte,w
  5147  0C14  1C03               	btfss	3,0
  5148  0C15  2C19               	goto	u2800
  5149  0C16  2487               	call	PL33	;select bank 0
  5150  0C17  1608               	bsf	8,4
  5151  0C18  2C1B               	goto	l6515
  5152  0C19                     u2800:	
  5153  0C19  2487               	call	PL33	;select bank 0
  5154  0C1A  1208               	bcf	8,4
  5155  0C1B                     l6515:	
  5156                           
  5157                           ;lcd(16).c: 135: RD5 = temp.bits.b1;
  5158  0C1B  0C76               	rrf	lcd_put_byte@temp,w
  5159  0C1C  3901               	andlw	1
  5160  0C1D  00F3               	movwf	??_lcd_put_byte
  5161  0C1E  0C73               	rrf	??_lcd_put_byte,w
  5162  0C1F  1C03               	btfss	3,0
  5163  0C20  2C24               	goto	u2820
  5164  0C21  2487               	call	PL33	;select bank 0
  5165  0C22  1688               	bsf	8,5
  5166  0C23  2C26               	goto	l6517
  5167  0C24                     u2820:	
  5168  0C24  2487               	call	PL33	;select bank 0
  5169  0C25  1288               	bcf	8,5
  5170  0C26                     l6517:	
  5171                           
  5172                           ;lcd(16).c: 136: RD6 = temp.bits.b2;
  5173  0C26  0C76               	rrf	lcd_put_byte@temp,w
  5174  0C27  00F3               	movwf	??_lcd_put_byte
  5175  0C28  0C73               	rrf	??_lcd_put_byte,w
  5176  0C29  3901               	andlw	1
  5177  0C2A  00F4               	movwf	??_lcd_put_byte+1
  5178  0C2B  0C74               	rrf	??_lcd_put_byte+1,w
  5179  0C2C  1C03               	btfss	3,0
  5180  0C2D  2C31               	goto	u2840
  5181  0C2E  2487               	call	PL33	;select bank 0
  5182  0C2F  1708               	bsf	8,6
  5183  0C30  2C33               	goto	l6519
  5184  0C31                     u2840:	
  5185  0C31  2487               	call	PL33	;select bank 0
  5186  0C32  1308               	bcf	8,6
  5187  0C33                     l6519:	
  5188                           
  5189                           ;lcd(16).c: 137: RD7 = temp.bits.b3;
  5190  0C33  0C76               	rrf	lcd_put_byte@temp,w
  5191  0C34  2480  120A  158A   	fcall	PL30	;call to abstracted procedure
  5192  0C37  1C03               	btfss	3,0
  5193  0C38  2C3C               	goto	u2860
  5194  0C39  2487               	call	PL33	;select bank 0
  5195  0C3A  1788               	bsf	8,7
  5196  0C3B  2C3E               	goto	u2874
  5197  0C3C                     u2860:	
  5198  0C3C  2487               	call	PL33	;select bank 0
  5199  0C3D  1388               	bcf	8,7
  5200  0C3E                     u2874:	
  5201                           
  5202                           ;lcd(16).c: 138: _delay((unsigned long)((20)*(20000000/4000000.0)));
  5203  0C3E  3021               	movlw	33
  5204  0C3F  00F3               	movwf	??_lcd_put_byte
  5205  0C40                     u4077:	
  5206  0C40  0BF3               	decfsz	??_lcd_put_byte,f
  5207  0C41  2C40               	goto	u4077
  5208  0C42  2487               	call	PL33	;select bank 0
  5209                           
  5210                           ;lcd(16).c: 139: RD3 = 1;
  5211  0C43  3021               	movlw	33
  5212  0C44  1588               	bsf	8,3
  5213                           
  5214                           ;lcd(16).c: 140: _delay((unsigned long)((20)*(20000000/4000000.0)));
  5215  0C45  00F3               	movwf	??_lcd_put_byte
  5216  0C46                     u4087:	
  5217  0C46  0BF3               	decfsz	??_lcd_put_byte,f
  5218  0C47  2C46               	goto	u4087
  5219  0C48  2487               	call	PL33	;select bank 0
  5220                           
  5221                           ;lcd(16).c: 141: RD3 = 0;
  5222  0C49  1188               	bcf	8,3
  5223  0C4A  0008               	return
  5224  0C4B                     __end_of_lcd_put_byte:	
  5225  0C4B                     __ptext529:	
  5226 ;; =============== function ___ftadd ends ============
  5227                           
  5228                           
  5229 ;; *************** function _lcd_busy *****************
  5230 ;; Defined at:
  5231 ;;		line 47 in file "C:\Users\DELL\Desktop\baitap_ttvxl\dotanso_khongdungCCP\lcd(16).c"
  5232 ;; Parameters:    Size  Location     Type
  5233 ;;		None
  5234 ;; Auto vars:     Size  Location     Type
  5235 ;;  busy            1    3[COMMON] unsigned char 
  5236 ;; Return value:  Size  Location     Type
  5237 ;;                  1    wreg      unsigned char 
  5238 ;; Registers used:
  5239 ;;		wreg
  5240 ;; Tracked objects:
  5241 ;;		On entry : 0/0
  5242 ;;		On exit  : 60/0
  5243 ;;		Unchanged: 0/0
  5244 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5245 ;;      Params:         0       0       0       0       0
  5246 ;;      Locals:         1       0       0       0       0
  5247 ;;      Temps:          1       0       0       0       0
  5248 ;;      Totals:         2       0       0       0       0
  5249 ;;Total ram usage:        2 bytes
  5250 ;; Hardware stack levels used:    1
  5251 ;; Hardware stack levels required when called:    1
  5252 ;; This function calls:
  5253 ;;		Nothing
  5254 ;; This function is called by:
  5255 ;;		_lcd_init
  5256 ;;		_lcd_putc
  5257 ;;		_lcd_gotoxy
  5258 ;; This function uses a non-reentrant model
  5259 ;;
  5260  0C4B                     _lcd_busy:	
  5261                           
  5262                           ;lcd(16).c: 48: unsigned char busy;
  5263                           ;lcd(16).c: 50: TRISD4 = 1;
  5264                           
  5265                           ; Regs used in _lcd_busy: [wreg]
  5266  0C4B  1683               	bsf	3,5	;RP0=1, select bank1
  5267  0C4C  1303               	bcf	3,6	;RP1=0, select bank1
  5268  0C4D  1608               	bsf	8,4
  5269                           
  5270                           ;lcd(16).c: 51: TRISD5 = 1;
  5271  0C4E  1688               	bsf	8,5
  5272                           
  5273                           ;lcd(16).c: 52: TRISD6 = 1;
  5274  0C4F  1708               	bsf	8,6
  5275                           
  5276                           ;lcd(16).c: 53: TRISD7 = 1;
  5277  0C50  1788               	bsf	8,7
  5278                           
  5279                           ;lcd(16).c: 55: RD2 = 1;
  5280  0C51  1283               	bcf	3,5	;RP0=0, select bank0
  5281  0C52  3021               	movlw	33
  5282  0C53  1508               	bsf	8,2
  5283                           
  5284                           ;lcd(16).c: 56: RD1 = 0;
  5285  0C54  1088               	bcf	8,1
  5286                           
  5287                           ;lcd(16).c: 57: _delay((unsigned long)((20)*(20000000/4000000.0)));
  5288  0C55  00F2               	movwf	??_lcd_busy
  5289  0C56                     u3997:	
  5290  0C56  0BF2               	decfsz	??_lcd_busy,f
  5291  0C57  2C56               	goto	u3997
  5292  0C58  2487               	call	PL33	;select bank 0
  5293                           
  5294                           ;lcd(16).c: 58: RD3 = 1;
  5295  0C59  3021               	movlw	33
  5296  0C5A  1588               	bsf	8,3
  5297                           
  5298                           ;lcd(16).c: 59: _delay((unsigned long)((20)*(20000000/4000000.0)));
  5299  0C5B  00F2               	movwf	??_lcd_busy
  5300  0C5C                     u4007:	
  5301  0C5C  0BF2               	decfsz	??_lcd_busy,f
  5302  0C5D  2C5C               	goto	u4007
  5303                           
  5304                           ;lcd(16).c: 61: busy = RD7;
  5305  0C5E  3000               	movlw	0
  5306  0C5F  2487               	call	PL33	;select bank 0
  5307  0C60  1B88               	btfsc	8,7
  5308  0C61  3001               	movlw	1
  5309  0C62  00F3               	movwf	lcd_busy@busy
  5310  0C63  3021               	movlw	33
  5311                           
  5312                           ;lcd(16).c: 63: RD3 = 0;
  5313  0C64  1188               	bcf	8,3
  5314                           
  5315                           ;lcd(16).c: 64: _delay((unsigned long)((20)*(20000000/4000000.0)));
  5316  0C65  00F2               	movwf	??_lcd_busy
  5317  0C66                     u4017:	
  5318  0C66  0BF2               	decfsz	??_lcd_busy,f
  5319  0C67  2C66               	goto	u4017
  5320  0C68  2487               	call	PL33	;select bank 0
  5321                           
  5322                           ;lcd(16).c: 65: RD3 = 1;
  5323  0C69  3021               	movlw	33
  5324  0C6A  1588               	bsf	8,3
  5325                           
  5326                           ;lcd(16).c: 66: _delay((unsigned long)((20)*(20000000/4000000.0)));
  5327  0C6B  00F2               	movwf	??_lcd_busy
  5328  0C6C                     u4027:	
  5329  0C6C  0BF2               	decfsz	??_lcd_busy,f
  5330  0C6D  2C6C               	goto	u4027
  5331  0C6E  2487               	call	PL33	;select bank 0
  5332                           
  5333                           ;lcd(16).c: 67: RD3 = 0;
  5334  0C6F  1188               	bcf	8,3
  5335                           
  5336                           ;lcd(16).c: 70: return busy;
  5337  0C70  0873               	movf	lcd_busy@busy,w
  5338  0C71  0008               	return
  5339  0C72                     __end_of_lcd_busy:	
  5340  0C72                     __ptext546:	
  5341 ;; =============== function _isdigit ends ============
  5342                           
  5343                           
  5344 ;; *************** function _isprint *****************
  5345 ;; Defined at:
  5346 ;;		line 13 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\isprint.c"
  5347 ;; Parameters:    Size  Location     Type
  5348 ;;  c               1    wreg     unsigned char 
  5349 ;; Auto vars:     Size  Location     Type
  5350 ;;  c               1    3[COMMON] unsigned char 
  5351 ;; Return value:  Size  Location     Type
  5352 ;;		None               void
  5353 ;; Registers used:
  5354 ;;		wreg, status,2, status,0
  5355 ;; Tracked objects:
  5356 ;;		On entry : 0/20
  5357 ;;		On exit  : 0/20
  5358 ;;		Unchanged: FFFFF/0
  5359 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5360 ;;      Params:         0       0       0       0       0
  5361 ;;      Locals:         2       0       0       0       0
  5362 ;;      Temps:          0       0       0       0       0
  5363 ;;      Totals:         2       0       0       0       0
  5364 ;;Total ram usage:        2 bytes
  5365 ;; Hardware stack levels used:    1
  5366 ;; Hardware stack levels required when called:    1
  5367 ;; This function calls:
  5368 ;;		Nothing
  5369 ;; This function is called by:
  5370 ;;		_lcd_putc
  5371 ;; This function uses a non-reentrant model
  5372 ;;
  5373  0C72                     _isprint:	
  5374                           
  5375                           ; Regs used in _isprint: [wreg+status,2+status,0]
  5376                           ;isprint@c stored from wreg
  5377  0C72  00F3               	movwf	isprint@c
  5378  0C73  307F               	movlw	127
  5379  0C74  01F2               	clrf	_isprint$3671
  5380  0C75  0273               	subwf	isprint@c,w
  5381  0C76  1803               	skipnc
  5382  0C77  2C7E               	goto	l6085
  5383  0C78  3020               	movlw	32
  5384  0C79  0273               	subwf	isprint@c,w
  5385  0C7A  1C03               	skipc
  5386  0C7B  2C7E               	goto	l6085
  5387  0C7C  01F2               	clrf	_isprint$3671
  5388  0C7D  0AF2               	incf	_isprint$3671,f
  5389  0C7E                     l6085:	
  5390  0C7E  0C72               	rrf	_isprint$3671,w
  5391  0C7F  0008               	return
  5392  0C80                     __end_of_isprint:	
  5393  0C80                     PL30:	
  5394  0C80  00F3               	movwf	??_lcd_put_byte
  5395  0C81  0CF3               	rrf	??_lcd_put_byte,f
  5396  0C82  0C73               	rrf	??_lcd_put_byte,w
  5397  0C83  3901               	andlw	1
  5398  0C84  00F4               	movwf	??_lcd_put_byte+1
  5399  0C85  0C74               	rrf	??_lcd_put_byte+1,w
  5400  0C86  0008               	return
  5401  0C87                     PL33:	
  5402  0C87  1283               	bcf	3,5	;RP0=0, select bank0
  5403  0C88  1303               	bcf	3,6	;RP1=0, select bank0
  5404  0C89  0008               	return
  5405                           
  5406                           	psect	text525
  5407  0C8A                     __ptext525:	
  5408 ;; =============== function _lcd_init ends ============
  5409                           
  5410                           
  5411 ;; *************** function ___lltoft *****************
  5412 ;; Defined at:
  5413 ;;		line 36 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\lltoft.c"
  5414 ;; Parameters:    Size  Location     Type
  5415 ;;  c               4    0[BANK0 ] unsigned long 
  5416 ;; Auto vars:     Size  Location     Type
  5417 ;;  exp             1   10[COMMON] unsigned char 
  5418 ;; Return value:  Size  Location     Type
  5419 ;;                  3    0[BANK0 ] float 
  5420 ;; Registers used:
  5421 ;;		wreg, status,2, status,0, pclath, cstack
  5422 ;; Tracked objects:
  5423 ;;		On entry : 60/0
  5424 ;;		On exit  : 60/0
  5425 ;;		Unchanged: FFF9F/0
  5426 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5427 ;;      Params:         0       4       0       0       0
  5428 ;;      Locals:         1       0       0       0       0
  5429 ;;      Temps:          0       0       0       0       0
  5430 ;;      Totals:         1       4       0       0       0
  5431 ;;Total ram usage:        5 bytes
  5432 ;; Hardware stack levels used:    1
  5433 ;; Hardware stack levels required when called:    2
  5434 ;; This function calls:
  5435 ;;		___ftpack
  5436 ;; This function is called by:
  5437 ;;		_printf
  5438 ;; This function uses a non-reentrant model
  5439 ;;
  5440  0C8A                     ___lltoft:	
  5441                           
  5442                           ; Regs used in ___lltoft: [wreg+status,2+status,0+pclath+cstack]
  5443  0C8A  308E               	movlw	142
  5444  0C8B  00FA               	movwf	___lltoft@exp
  5445  0C8C                     l6693:	
  5446  0C8C  30FF               	movlw	255
  5447  0C8D  0523               	andwf	___lltoft@c+3,w
  5448  0C8E  1903               	btfsc	3,2
  5449  0C8F  2C97               	goto	l6695
  5450  0C90  1003               	clrc
  5451  0C91  0CA3               	rrf	___lltoft@c+3,f
  5452  0C92  0CA2               	rrf	___lltoft@c+2,f
  5453  0C93  0CA1               	rrf	___lltoft@c+1,f
  5454  0C94  0CA0               	rrf	___lltoft@c,f
  5455  0C95  0AFA               	incf	___lltoft@exp,f
  5456  0C96  2C8C               	goto	l6693
  5457  0C97                     l6695:	
  5458  0C97  0820               	movf	___lltoft@c,w
  5459  0C98  00F2               	movwf	?___ftpack
  5460  0C99  0821               	movf	___lltoft@c+1,w
  5461  0C9A  00F3               	movwf	?___ftpack+1
  5462  0C9B  0822               	movf	___lltoft@c+2,w
  5463  0C9C  00F4               	movwf	?___ftpack+2
  5464  0C9D  087A               	movf	___lltoft@exp,w
  5465  0C9E  00F5               	movwf	?___ftpack+3
  5466  0C9F  01F6               	clrf	?___ftpack+4
  5467  0CA0  2769               	fcall	___ftpack
  5468  0CA1  0872               	movf	?___ftpack,w
  5469  0CA2  00A0               	movwf	?___lltoft
  5470  0CA3  0873               	movf	?___ftpack+1,w
  5471  0CA4  00A1               	movwf	?___lltoft+1
  5472  0CA5  0874               	movf	?___ftpack+2,w
  5473  0CA6  00A2               	movwf	?___lltoft+2
  5474  0CA7  0008               	return
  5475  0CA8                     __end_of___lltoft:	
  5476  0CA8                     __ptext526:	
  5477 ;; =============== function ___lltoft ends ============
  5478                           
  5479                           
  5480 ;; *************** function ___altoft *****************
  5481 ;; Defined at:
  5482 ;;		line 43 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\altoft.c"
  5483 ;; Parameters:    Size  Location     Type
  5484 ;;  c               4    0[BANK0 ] long 
  5485 ;; Auto vars:     Size  Location     Type
  5486 ;;  sign            1   11[COMMON] unsigned char 
  5487 ;;  exp             1   10[COMMON] unsigned char 
  5488 ;; Return value:  Size  Location     Type
  5489 ;;                  3    0[BANK0 ] float 
  5490 ;; Registers used:
  5491 ;;		wreg, status,2, status,0, pclath, cstack
  5492 ;; Tracked objects:
  5493 ;;		On entry : 60/0
  5494 ;;		On exit  : 60/0
  5495 ;;		Unchanged: FFF9F/0
  5496 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5497 ;;      Params:         0       4       0       0       0
  5498 ;;      Locals:         2       0       0       0       0
  5499 ;;      Temps:          0       0       0       0       0
  5500 ;;      Totals:         2       4       0       0       0
  5501 ;;Total ram usage:        6 bytes
  5502 ;; Hardware stack levels used:    1
  5503 ;; Hardware stack levels required when called:    2
  5504 ;; This function calls:
  5505 ;;		___ftpack
  5506 ;; This function is called by:
  5507 ;;		_main
  5508 ;; This function uses a non-reentrant model
  5509 ;;
  5510  0CA8                     ___altoft:	
  5511  0CA8  308E               	movlw	142
  5512                           
  5513                           ; Regs used in ___altoft: [wreg+status,2+status,0+pclath+cstack]
  5514  0CA9  01FB               	clrf	___altoft@sign
  5515  0CAA  00FA               	movwf	___altoft@exp
  5516  0CAB  1FA3               	btfss	___altoft@c+3,7
  5517  0CAC  2CBA               	goto	l6683
  5518  0CAD  09A0               	comf	___altoft@c,f
  5519  0CAE  09A1               	comf	___altoft@c+1,f
  5520  0CAF  09A2               	comf	___altoft@c+2,f
  5521  0CB0  09A3               	comf	___altoft@c+3,f
  5522  0CB1  0AA0               	incf	___altoft@c,f
  5523  0CB2  1903               	skipnz
  5524  0CB3  0AA1               	incf	___altoft@c+1,f
  5525  0CB4  1903               	skipnz
  5526  0CB5  0AA2               	incf	___altoft@c+2,f
  5527  0CB6  1903               	skipnz
  5528  0CB7  0AA3               	incf	___altoft@c+3,f
  5529  0CB8  01FB               	clrf	___altoft@sign
  5530  0CB9  0AFB               	incf	___altoft@sign,f
  5531  0CBA                     l6683:	
  5532  0CBA  30FF               	movlw	255
  5533  0CBB  0523               	andwf	___altoft@c+3,w
  5534  0CBC  1903               	btfsc	3,2
  5535  0CBD  2CC5               	goto	l6685
  5536  0CBE  1003               	clrc
  5537  0CBF  0CA3               	rrf	___altoft@c+3,f
  5538  0CC0  0CA2               	rrf	___altoft@c+2,f
  5539  0CC1  0CA1               	rrf	___altoft@c+1,f
  5540  0CC2  0CA0               	rrf	___altoft@c,f
  5541  0CC3  0AFA               	incf	___altoft@exp,f
  5542  0CC4  2CBA               	goto	l6683
  5543  0CC5                     l6685:	
  5544  0CC5  0820               	movf	___altoft@c,w
  5545  0CC6  00F2               	movwf	?___ftpack
  5546  0CC7  0821               	movf	___altoft@c+1,w
  5547  0CC8  00F3               	movwf	?___ftpack+1
  5548  0CC9  0822               	movf	___altoft@c+2,w
  5549  0CCA  00F4               	movwf	?___ftpack+2
  5550  0CCB  087A               	movf	___altoft@exp,w
  5551  0CCC  00F5               	movwf	?___ftpack+3
  5552  0CCD  087B               	movf	___altoft@sign,w
  5553  0CCE  00F6               	movwf	?___ftpack+4
  5554  0CCF  2769               	fcall	___ftpack
  5555  0CD0  0872               	movf	?___ftpack,w
  5556  0CD1  00A0               	movwf	?___altoft
  5557  0CD2  0873               	movf	?___ftpack+1,w
  5558  0CD3  00A1               	movwf	?___altoft+1
  5559  0CD4  0874               	movf	?___ftpack+2,w
  5560  0CD5  00A2               	movwf	?___altoft+2
  5561  0CD6  0008               	return
  5562  0CD7                     __end_of___altoft:	
  5563  0CD7                     __ptext521:	
  5564 ;; =============== function ___ftsub ends ============
  5565                           
  5566                           
  5567 ;; *************** function _scale *****************
  5568 ;; Defined at:
  5569 ;;		line 422 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\lib\doprnt.c"
  5570 ;; Parameters:    Size  Location     Type
  5571 ;;  scl             1    wreg     char 
  5572 ;; Auto vars:     Size  Location     Type
  5573 ;;  scl             1   42[BANK0 ] char 
  5574 ;; Return value:  Size  Location     Type
  5575 ;;                  3   32[BANK0 ] char 
  5576 ;; Registers used:
  5577 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5578 ;; Tracked objects:
  5579 ;;		On entry : 60/20
  5580 ;;		On exit  : 60/0
  5581 ;;		Unchanged: FFF9F/0
  5582 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5583 ;;      Params:         0       3       0       0       0
  5584 ;;      Locals:         0       4       0       0       0
  5585 ;;      Temps:          0       4       0       0       0
  5586 ;;      Totals:         0      11       0       0       0
  5587 ;;Total ram usage:       11 bytes
  5588 ;; Hardware stack levels used:    1
  5589 ;; Hardware stack levels required when called:    3
  5590 ;; This function calls:
  5591 ;;		___awmod
  5592 ;;		___awdiv
  5593 ;;		___ftmul
  5594 ;;		___bmul
  5595 ;; This function is called by:
  5596 ;;		_printf
  5597 ;; This function uses a non-reentrant model
  5598 ;;
  5599  0CD7                     _scale:	
  5600                           
  5601                           ; Regs used in _scale: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5602                           ;scale@scl stored from wreg
  5603  0CD7  1283               	bcf	3,5	;RP0=0, select bank0
  5604  0CD8  00CA               	movwf	scale@scl
  5605  0CD9  1FCA               	btfss	scale@scl,7
  5606  0CDA  2DA3               	goto	l6793
  5607  0CDB  09CA               	comf	scale@scl,f
  5608  0CDC  0ACA               	incf	scale@scl,f
  5609  0CDD  084A               	movf	scale@scl,w
  5610  0CDE  3A80               	xorlw	128
  5611  0CDF  3E12               	addlw	-238
  5612  0CE0  1C03               	skipc
  5613  0CE1  2D47               	goto	l6783
  5614  0CE2  300A               	movlw	10
  5615  0CE3  27CB  120A  158A   	fcall	PL15	;call to abstracted procedure
  5616  0CE6  26AF  120A  158A   	fcall	___awmod
  5617  0CE9  0873               	movf	?___awmod+1,w
  5618  0CEA  00FB               	movwf	?___awdiv+3
  5619  0CEB  0872               	movf	?___awmod,w
  5620  0CEC  00FA               	movwf	?___awdiv+2
  5621  0CED  2669  120A  158A   	fcall	___awdiv
  5622  0CF0  27E0               	fcall	PL22	;call to abstracted procedure
  5623  0CF1  3E1C               	addlw	low ((__npowers_-__stringbase+27))
  5624  0CF2  0084               	movwf	4
  5625  0CF3  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5626  0CF8  00B1               	movwf	?___ftmul
  5627  0CF9  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5628  0CFE  00B2               	movwf	?___ftmul+1
  5629  0CFF  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5630  0D04  27E8  120A  158A   	fcall	PL24	;call to abstracted procedure
  5631  0D07  1BFA               	btfsc	?___awdiv+2,7
  5632  0D08  03FB               	decf	?___awdiv+3,f
  5633  0D09  2669  120A  158A   	fcall	___awdiv
  5634  0D0C  27AF               	fcall	PL9	;call to abstracted procedure
  5635  0D0D  3E37               	addlw	low ((__npowers_-__stringbase+54))
  5636  0D0E  0084               	movwf	4
  5637  0D0F  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5638  0D14  00B4               	movwf	?___ftmul+3
  5639  0D15  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5640  0D1A  00B5               	movwf	?___ftmul+4
  5641  0D1B  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5642  0D20  00B6               	movwf	?___ftmul+5
  5643  0D21  26EC  120A  158A   	fcall	___ftmul
  5644  0D24  27BE  120A  158A   	fcall	PL11	;call to abstracted procedure
  5645  0D27  1BF4               	btfsc	?___awmod+2,7
  5646  0D28  03F5               	decf	?___awmod+3,f
  5647  0D29  26AF  120A  158A   	fcall	___awmod
  5648  0D2C  27A7               	fcall	PL8	;call to abstracted procedure
  5649  0D2D  3E01               	addlw	low (__npowers_-__stringbase)
  5650  0D2E  0084               	movwf	4
  5651  0D2F  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5652  0D34  00B1               	movwf	?___ftmul
  5653  0D35  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5654  0D3A  00B2               	movwf	?___ftmul+1
  5655  0D3B  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5656  0D40  27F0  120A  158A   	fcall	PL25	;call to abstracted procedure
  5657  0D43  26EC  120A  158A   	fcall	___ftmul
  5658  0D46  2FB7               	ljmp	PL10	;call to abstracted procedure
  5659  0D47                     l6783:	
  5660  0D47  084A               	movf	scale@scl,w
  5661  0D48  3A80               	xorlw	128
  5662  0D49  3E75               	addlw	-139
  5663  0D4A  1C03               	skipc
  5664  0D4B  2D8C               	goto	l6789
  5665  0D4C  300A               	movlw	10
  5666  0D4D  00F2               	movwf	?___awmod
  5667  0D4E  01F3               	clrf	?___awmod+1
  5668  0D4F  084A               	movf	scale@scl,w
  5669  0D50  00F4               	movwf	?___awmod+2
  5670  0D51  01F5               	clrf	?___awmod+3
  5671  0D52  1BF4               	btfsc	?___awmod+2,7
  5672  0D53  03F5               	decf	?___awmod+3,f
  5673  0D54  26AF  120A  158A   	fcall	___awmod
  5674  0D57  27A7               	fcall	PL8	;call to abstracted procedure
  5675  0D58  3E01               	addlw	low (__npowers_-__stringbase)
  5676  0D59  0084               	movwf	4
  5677  0D5A  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5678  0D5F  00B1               	movwf	?___ftmul
  5679  0D60  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5680  0D65  00B2               	movwf	?___ftmul+1
  5681  0D66  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5682  0D6B  27F8  120A  158A   	fcall	PL26	;call to abstracted procedure
  5683  0D6E  1BFA               	btfsc	?___awdiv+2,7
  5684  0D6F  03FB               	decf	?___awdiv+3,f
  5685  0D70  2669  120A  158A   	fcall	___awdiv
  5686  0D73  27AF               	fcall	PL9	;call to abstracted procedure
  5687  0D74  3E1C               	addlw	low ((__npowers_-__stringbase+27))
  5688  0D75  0084               	movwf	4
  5689  0D76  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5690  0D7B  00B4               	movwf	?___ftmul+3
  5691  0D7C  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5692  0D81  00B5               	movwf	?___ftmul+4
  5693  0D82  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5694  0D87  00B6               	movwf	?___ftmul+5
  5695  0D88  26EC  120A  158A   	fcall	___ftmul
  5696  0D8B  2FB7               	ljmp	PL10	;call to abstracted procedure
  5697  0D8C                     l6789:	
  5698  0D8C  3003               	movlw	3
  5699  0D8D  00FB               	movwf	?___bmul
  5700  0D8E  084A               	movf	scale@scl,w
  5701  0D8F  275B               	fcall	___bmul
  5702  0D90  3E01               	addlw	low (__npowers_-__stringbase)
  5703  0D91  0084               	movwf	4
  5704  0D92  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5705  0D97  00C0               	movwf	?_scale
  5706  0D98  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5707  0D9D  00C1               	movwf	?_scale+1
  5708  0D9E  160A  118A  2000   	fcall	stringdir
  5709  0DA1  00C2               	movwf	?_scale+2
  5710  0DA2  0008               	return
  5711  0DA3                     l6793:	
  5712  0DA3  084A               	movf	scale@scl,w
  5713  0DA4  3A80               	xorlw	128
  5714  0DA5  3E12               	addlw	-238
  5715  0DA6  1C03               	skipc
  5716  0DA7  2E0D               	goto	l6801
  5717  0DA8  300A               	movlw	10
  5718  0DA9  27CB  120A  158A   	fcall	PL15	;call to abstracted procedure
  5719  0DAC  26AF  120A  158A   	fcall	___awmod
  5720  0DAF  0873               	movf	?___awmod+1,w
  5721  0DB0  00FB               	movwf	?___awdiv+3
  5722  0DB1  0872               	movf	?___awmod,w
  5723  0DB2  00FA               	movwf	?___awdiv+2
  5724  0DB3  2669  120A  158A   	fcall	___awdiv
  5725  0DB6  27E0               	fcall	PL22	;call to abstracted procedure
  5726  0DB7  3E43               	addlw	low ((__powers_-__stringbase+27))
  5727  0DB8  0084               	movwf	4
  5728  0DB9  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5729  0DBE  00B1               	movwf	?___ftmul
  5730  0DBF  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5731  0DC4  00B2               	movwf	?___ftmul+1
  5732  0DC5  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5733  0DCA  27E8  120A  158A   	fcall	PL24	;call to abstracted procedure
  5734  0DCD  1BFA               	btfsc	?___awdiv+2,7
  5735  0DCE  03FB               	decf	?___awdiv+3,f
  5736  0DCF  2669  120A  158A   	fcall	___awdiv
  5737  0DD2  27AF               	fcall	PL9	;call to abstracted procedure
  5738  0DD3  3E5E               	addlw	low ((__powers_-__stringbase+54))
  5739  0DD4  0084               	movwf	4
  5740  0DD5  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5741  0DDA  00B4               	movwf	?___ftmul+3
  5742  0DDB  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5743  0DE0  00B5               	movwf	?___ftmul+4
  5744  0DE1  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5745  0DE6  00B6               	movwf	?___ftmul+5
  5746  0DE7  26EC  120A  158A   	fcall	___ftmul
  5747  0DEA  27BE  120A  158A   	fcall	PL11	;call to abstracted procedure
  5748  0DED  1BF4               	btfsc	?___awmod+2,7
  5749  0DEE  03F5               	decf	?___awmod+3,f
  5750  0DEF  26AF  120A  158A   	fcall	___awmod
  5751  0DF2  27A7               	fcall	PL8	;call to abstracted procedure
  5752  0DF3  3E28               	addlw	low (__powers_-__stringbase)
  5753  0DF4  0084               	movwf	4
  5754  0DF5  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5755  0DFA  00B1               	movwf	?___ftmul
  5756  0DFB  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5757  0E00  00B2               	movwf	?___ftmul+1
  5758  0E01  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5759  0E06  27F0  120A  158A   	fcall	PL25	;call to abstracted procedure
  5760  0E09  26EC  120A  158A   	fcall	___ftmul
  5761  0E0C  2FB7               	ljmp	PL10	;call to abstracted procedure
  5762  0E0D                     l6801:	
  5763  0E0D  084A               	movf	scale@scl,w
  5764  0E0E  3A80               	xorlw	128
  5765  0E0F  3E75               	addlw	-139
  5766  0E10  1C03               	skipc
  5767  0E11  2E52               	goto	l6807
  5768  0E12  300A               	movlw	10
  5769  0E13  00F2               	movwf	?___awmod
  5770  0E14  01F3               	clrf	?___awmod+1
  5771  0E15  084A               	movf	scale@scl,w
  5772  0E16  00F4               	movwf	?___awmod+2
  5773  0E17  01F5               	clrf	?___awmod+3
  5774  0E18  1BF4               	btfsc	?___awmod+2,7
  5775  0E19  03F5               	decf	?___awmod+3,f
  5776  0E1A  26AF  120A  158A   	fcall	___awmod
  5777  0E1D  27A7               	fcall	PL8	;call to abstracted procedure
  5778  0E1E  3E28               	addlw	low (__powers_-__stringbase)
  5779  0E1F  0084               	movwf	4
  5780  0E20  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5781  0E25  00B1               	movwf	?___ftmul
  5782  0E26  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5783  0E2B  00B2               	movwf	?___ftmul+1
  5784  0E2C  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5785  0E31  27F8  120A  158A   	fcall	PL26	;call to abstracted procedure
  5786  0E34  1BFA               	btfsc	?___awdiv+2,7
  5787  0E35  03FB               	decf	?___awdiv+3,f
  5788  0E36  2669  120A  158A   	fcall	___awdiv
  5789  0E39  27AF               	fcall	PL9	;call to abstracted procedure
  5790  0E3A  3E43               	addlw	low ((__powers_-__stringbase+27))
  5791  0E3B  0084               	movwf	4
  5792  0E3C  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5793  0E41  00B4               	movwf	?___ftmul+3
  5794  0E42  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5795  0E47  00B5               	movwf	?___ftmul+4
  5796  0E48  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5797  0E4D  00B6               	movwf	?___ftmul+5
  5798  0E4E  26EC  120A  158A   	fcall	___ftmul
  5799  0E51  2FB7               	ljmp	PL10	;call to abstracted procedure
  5800  0E52                     l6807:	
  5801  0E52  3003               	movlw	3
  5802  0E53  00FB               	movwf	?___bmul
  5803  0E54  084A               	movf	scale@scl,w
  5804  0E55  275B               	fcall	___bmul
  5805  0E56  3E28               	addlw	low (__powers_-__stringbase)
  5806  0E57  0084               	movwf	4
  5807  0E58  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5808  0E5D  00C0               	movwf	?_scale
  5809  0E5E  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5810  0E63  00C1               	movwf	?_scale+1
  5811  0E64  160A  118A  2000   	fcall	stringdir
  5812  0E67  00C2               	movwf	?_scale+2
  5813  0E68  0008               	return
  5814  0E69                     __end_of_scale:	
  5815  0E69                     __ptext536:	
  5816 ;; =============== function ___llmod ends ============
  5817                           
  5818                           
  5819 ;; *************** function ___awdiv *****************
  5820 ;; Defined at:
  5821 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\awdiv.c"
  5822 ;; Parameters:    Size  Location     Type
  5823 ;;  divisor         2    8[COMMON] int 
  5824 ;;  dividend        2   10[COMMON] int 
  5825 ;; Auto vars:     Size  Location     Type
  5826 ;;  quotient        2    2[BANK0 ] int 
  5827 ;;  sign            1    1[BANK0 ] unsigned char 
  5828 ;;  counter         1    0[BANK0 ] unsigned char 
  5829 ;; Return value:  Size  Location     Type
  5830 ;;                  2    8[COMMON] int 
  5831 ;; Registers used:
  5832 ;;		wreg, status,2, status,0
  5833 ;; Tracked objects:
  5834 ;;		On entry : 40/20
  5835 ;;		On exit  : 60/0
  5836 ;;		Unchanged: FFF9F/0
  5837 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5838 ;;      Params:         4       0       0       0       0
  5839 ;;      Locals:         0       4       0       0       0
  5840 ;;      Temps:          0       0       0       0       0
  5841 ;;      Totals:         4       4       0       0       0
  5842 ;;Total ram usage:        8 bytes
  5843 ;; Hardware stack levels used:    1
  5844 ;; Hardware stack levels required when called:    1
  5845 ;; This function calls:
  5846 ;;		Nothing
  5847 ;; This function is called by:
  5848 ;;		_scale
  5849 ;;		_printf
  5850 ;; This function uses a non-reentrant model
  5851 ;;
  5852  0E69                     ___awdiv:	
  5853                           
  5854                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  5855  0E69  1283               	bcf	3,5	;RP0=0, select bank0
  5856  0E6A  01A1               	clrf	___awdiv@sign
  5857  0E6B  1FF9               	btfss	___awdiv@divisor+1,7
  5858  0E6C  2E74               	goto	l6343
  5859  0E6D  09F8               	comf	___awdiv@divisor,f
  5860  0E6E  09F9               	comf	___awdiv@divisor+1,f
  5861  0E6F  0AF8               	incf	___awdiv@divisor,f
  5862  0E70  1903               	skipnz
  5863  0E71  0AF9               	incf	___awdiv@divisor+1,f
  5864  0E72  01A1               	clrf	___awdiv@sign
  5865  0E73  0AA1               	incf	___awdiv@sign,f
  5866  0E74                     l6343:	
  5867  0E74  1FFB               	btfss	___awdiv@dividend+1,7
  5868  0E75  2E7D               	goto	l6349
  5869  0E76  09FA               	comf	___awdiv@dividend,f
  5870  0E77  09FB               	comf	___awdiv@dividend+1,f
  5871  0E78  0AFA               	incf	___awdiv@dividend,f
  5872  0E79  1903               	skipnz
  5873  0E7A  0AFB               	incf	___awdiv@dividend+1,f
  5874  0E7B  3001               	movlw	1
  5875  0E7C  06A1               	xorwf	___awdiv@sign,f
  5876  0E7D                     l6349:	
  5877  0E7D  01A2               	clrf	___awdiv@quotient
  5878  0E7E  01A3               	clrf	___awdiv@quotient+1
  5879  0E7F  0879               	movf	___awdiv@divisor+1,w
  5880  0E80  0478               	iorwf	___awdiv@divisor,w
  5881  0E81  1903               	skipnz
  5882  0E82  2EA2               	goto	l6371
  5883  0E83  01A0               	clrf	___awdiv@counter
  5884  0E84                     L15:	
  5885  0E84  0AA0               	incf	___awdiv@counter,f
  5886  0E85  1BF9               	btfsc	___awdiv@divisor+1,7
  5887  0E86  2E8B               	goto	l6359
  5888  0E87  1003               	clrc
  5889  0E88  0DF8               	rlf	___awdiv@divisor,f
  5890  0E89  0DF9               	rlf	___awdiv@divisor+1,f
  5891  0E8A  2E84               	goto	L15
  5892  0E8B                     l6359:	
  5893  0E8B  1003               	clrc
  5894  0E8C  0DA2               	rlf	___awdiv@quotient,f
  5895  0E8D  0DA3               	rlf	___awdiv@quotient+1,f
  5896  0E8E  0879               	movf	___awdiv@divisor+1,w
  5897  0E8F  027B               	subwf	___awdiv@dividend+1,w
  5898  0E90  1D03               	skipz
  5899  0E91  2E94               	goto	u2495
  5900  0E92  0878               	movf	___awdiv@divisor,w
  5901  0E93  027A               	subwf	___awdiv@dividend,w
  5902  0E94                     u2495:	
  5903  0E94  1C03               	skipc
  5904  0E95  2E9E               	goto	L16
  5905  0E96  0878               	movf	___awdiv@divisor,w
  5906  0E97  02FA               	subwf	___awdiv@dividend,f
  5907  0E98  0879               	movf	___awdiv@divisor+1,w
  5908  0E99  1C03               	skipc
  5909  0E9A  03FB               	decf	___awdiv@dividend+1,f
  5910  0E9B  02FB               	subwf	___awdiv@dividend+1,f
  5911  0E9C  1422               	bsf	___awdiv@quotient,0
  5912  0E9D  1003               	clrc
  5913  0E9E                     L16:	
  5914  0E9E  0CF9               	rrf	___awdiv@divisor+1,f
  5915  0E9F  0CF8               	rrf	___awdiv@divisor,f
  5916  0EA0  0BA0               	decfsz	___awdiv@counter,f
  5917  0EA1  2E8B               	goto	l6359
  5918  0EA2                     l6371:	
  5919  0EA2  0821               	movf	___awdiv@sign,w
  5920  0EA3  1903               	btfsc	3,2
  5921  0EA4  2EAA               	goto	l6375
  5922  0EA5  09A2               	comf	___awdiv@quotient,f
  5923  0EA6  09A3               	comf	___awdiv@quotient+1,f
  5924  0EA7  0AA2               	incf	___awdiv@quotient,f
  5925  0EA8  1903               	skipnz
  5926  0EA9  0AA3               	incf	___awdiv@quotient+1,f
  5927  0EAA                     l6375:	
  5928  0EAA  0823               	movf	___awdiv@quotient+1,w
  5929  0EAB  00F9               	movwf	?___awdiv+1
  5930  0EAC  0822               	movf	___awdiv@quotient,w
  5931  0EAD  00F8               	movwf	?___awdiv
  5932  0EAE  0008               	return
  5933  0EAF                     __end_of___awdiv:	
  5934  0EAF                     __ptext531:	
  5935 ;; =============== function _lcd_put_byte ends ============
  5936                           
  5937                           
  5938 ;; *************** function ___awmod *****************
  5939 ;; Defined at:
  5940 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\awmod.c"
  5941 ;; Parameters:    Size  Location     Type
  5942 ;;  divisor         2    2[COMMON] int 
  5943 ;;  dividend        2    4[COMMON] int 
  5944 ;; Auto vars:     Size  Location     Type
  5945 ;;  sign            1    7[COMMON] unsigned char 
  5946 ;;  counter         1    6[COMMON] unsigned char 
  5947 ;; Return value:  Size  Location     Type
  5948 ;;                  2    2[COMMON] int 
  5949 ;; Registers used:
  5950 ;;		wreg, status,2, status,0
  5951 ;; Tracked objects:
  5952 ;;		On entry : 60/0
  5953 ;;		On exit  : 60/0
  5954 ;;		Unchanged: FFF9F/0
  5955 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5956 ;;      Params:         4       0       0       0       0
  5957 ;;      Locals:         2       0       0       0       0
  5958 ;;      Temps:          0       0       0       0       0
  5959 ;;      Totals:         6       0       0       0       0
  5960 ;;Total ram usage:        6 bytes
  5961 ;; Hardware stack levels used:    1
  5962 ;; Hardware stack levels required when called:    1
  5963 ;; This function calls:
  5964 ;;		Nothing
  5965 ;; This function is called by:
  5966 ;;		_scale
  5967 ;; This function uses a non-reentrant model
  5968 ;;
  5969  0EAF                     ___awmod:	
  5970                           
  5971                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  5972  0EAF  01F7               	clrf	___awmod@sign
  5973  0EB0  1FF5               	btfss	___awmod@dividend+1,7
  5974  0EB1  2EB9               	goto	l6461
  5975  0EB2  09F4               	comf	___awmod@dividend,f
  5976  0EB3  09F5               	comf	___awmod@dividend+1,f
  5977  0EB4  0AF4               	incf	___awmod@dividend,f
  5978  0EB5  1903               	skipnz
  5979  0EB6  0AF5               	incf	___awmod@dividend+1,f
  5980  0EB7  01F7               	clrf	___awmod@sign
  5981  0EB8  0AF7               	incf	___awmod@sign,f
  5982  0EB9                     l6461:	
  5983  0EB9  1FF3               	btfss	___awmod@divisor+1,7
  5984  0EBA  2EC0               	goto	l6465
  5985  0EBB  09F2               	comf	___awmod@divisor,f
  5986  0EBC  09F3               	comf	___awmod@divisor+1,f
  5987  0EBD  0AF2               	incf	___awmod@divisor,f
  5988  0EBE  1903               	skipnz
  5989  0EBF  0AF3               	incf	___awmod@divisor+1,f
  5990  0EC0                     l6465:	
  5991  0EC0  0873               	movf	___awmod@divisor+1,w
  5992  0EC1  0472               	iorwf	___awmod@divisor,w
  5993  0EC2  1903               	skipnz
  5994  0EC3  2EDF               	goto	l6481
  5995  0EC4  01F6               	clrf	___awmod@counter
  5996  0EC5                     L8:	
  5997  0EC5  0AF6               	incf	___awmod@counter,f
  5998  0EC6  1BF3               	btfsc	___awmod@divisor+1,7
  5999  0EC7  2ECC               	goto	l6473
  6000  0EC8  1003               	clrc
  6001  0EC9  0DF2               	rlf	___awmod@divisor,f
  6002  0ECA  0DF3               	rlf	___awmod@divisor+1,f
  6003  0ECB  2EC5               	goto	L8
  6004  0ECC                     l6473:	
  6005  0ECC  0873               	movf	___awmod@divisor+1,w
  6006  0ECD  0275               	subwf	___awmod@dividend+1,w
  6007  0ECE  1D03               	skipz
  6008  0ECF  2ED2               	goto	u2685
  6009  0ED0  0872               	movf	___awmod@divisor,w
  6010  0ED1  0274               	subwf	___awmod@dividend,w
  6011  0ED2                     u2685:	
  6012  0ED2  1C03               	skipc
  6013  0ED3  2EDB               	goto	L9
  6014  0ED4  0872               	movf	___awmod@divisor,w
  6015  0ED5  02F4               	subwf	___awmod@dividend,f
  6016  0ED6  0873               	movf	___awmod@divisor+1,w
  6017  0ED7  1C03               	skipc
  6018  0ED8  03F5               	decf	___awmod@dividend+1,f
  6019  0ED9  02F5               	subwf	___awmod@dividend+1,f
  6020  0EDA  1003               	clrc
  6021  0EDB                     L9:	
  6022  0EDB  0CF3               	rrf	___awmod@divisor+1,f
  6023  0EDC  0CF2               	rrf	___awmod@divisor,f
  6024  0EDD  0BF6               	decfsz	___awmod@counter,f
  6025  0EDE  2ECC               	goto	l6473
  6026  0EDF                     l6481:	
  6027  0EDF  0877               	movf	___awmod@sign,w
  6028  0EE0  1903               	btfsc	3,2
  6029  0EE1  2EE7               	goto	l6485
  6030  0EE2  09F4               	comf	___awmod@dividend,f
  6031  0EE3  09F5               	comf	___awmod@dividend+1,f
  6032  0EE4  0AF4               	incf	___awmod@dividend,f
  6033  0EE5  1903               	skipnz
  6034  0EE6  0AF5               	incf	___awmod@dividend+1,f
  6035  0EE7                     l6485:	
  6036  0EE7  0875               	movf	___awmod@dividend+1,w
  6037  0EE8  00F3               	movwf	?___awmod+1
  6038  0EE9  0874               	movf	___awmod@dividend,w
  6039  0EEA  00F2               	movwf	?___awmod
  6040  0EEB  0008               	return
  6041  0EEC                     __end_of___awmod:	
  6042  0EEC                     __ptext527:	
  6043 ;; =============== function ___altoft ends ============
  6044                           
  6045                           
  6046 ;; *************** function ___ftmul *****************
  6047 ;; Defined at:
  6048 ;;		line 52 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\ftmul.c"
  6049 ;; Parameters:    Size  Location     Type
  6050 ;;  f1              3   17[BANK0 ] float 
  6051 ;;  f2              3   20[BANK0 ] float 
  6052 ;; Auto vars:     Size  Location     Type
  6053 ;;  f3_as_produc    3   27[BANK0 ] unsigned um
  6054 ;;  sign            1   31[BANK0 ] unsigned char 
  6055 ;;  cntr            1   30[BANK0 ] unsigned char 
  6056 ;;  exp             1   26[BANK0 ] unsigned char 
  6057 ;; Return value:  Size  Location     Type
  6058 ;;                  3   17[BANK0 ] float 
  6059 ;; Registers used:
  6060 ;;		wreg, status,2, status,0, pclath, cstack
  6061 ;; Tracked objects:
  6062 ;;		On entry : 60/0
  6063 ;;		On exit  : 60/0
  6064 ;;		Unchanged: FFF9F/0
  6065 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6066 ;;      Params:         0       6       0       0       0
  6067 ;;      Locals:         0       6       0       0       0
  6068 ;;      Temps:          0       3       0       0       0
  6069 ;;      Totals:         0      15       0       0       0
  6070 ;;Total ram usage:       15 bytes
  6071 ;; Hardware stack levels used:    1
  6072 ;; Hardware stack levels required when called:    2
  6073 ;; This function calls:
  6074 ;;		___ftpack
  6075 ;; This function is called by:
  6076 ;;		_main
  6077 ;;		_fround
  6078 ;;		_scale
  6079 ;;		_printf
  6080 ;; This function uses a non-reentrant model
  6081 ;;
  6082  0EEC                     ___ftmul:	
  6083                           
  6084                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  6085  0EEC  0831               	movf	___ftmul@f1,w
  6086  0EED  00B7               	movwf	??___ftmul
  6087  0EEE  0832               	movf	___ftmul@f1+1,w
  6088  0EEF  00B8               	movwf	??___ftmul+1
  6089  0EF0  0833               	movf	___ftmul@f1+2,w
  6090  0EF1  00B9               	movwf	??___ftmul+2
  6091  0EF2  1003               	clrc
  6092  0EF3  0D38               	rlf	??___ftmul+1,w
  6093  0EF4  0D39               	rlf	??___ftmul+2,w
  6094  0EF5  00BA               	movwf	___ftmul@exp
  6095  0EF6  08BA               	movf	___ftmul@exp,f
  6096  0EF7  1D03               	skipz
  6097  0EF8  2EFD               	goto	l6623
  6098  0EF9  01B1               	clrf	?___ftmul
  6099  0EFA  01B2               	clrf	?___ftmul+1
  6100  0EFB  01B3               	clrf	?___ftmul+2
  6101  0EFC  0008               	return
  6102  0EFD                     l6623:	
  6103  0EFD  0834               	movf	___ftmul@f2,w
  6104  0EFE  00B7               	movwf	??___ftmul
  6105  0EFF  0835               	movf	___ftmul@f2+1,w
  6106  0F00  00B8               	movwf	??___ftmul+1
  6107  0F01  0836               	movf	___ftmul@f2+2,w
  6108  0F02  00B9               	movwf	??___ftmul+2
  6109  0F03  1003               	clrc
  6110  0F04  0D38               	rlf	??___ftmul+1,w
  6111  0F05  0D39               	rlf	??___ftmul+2,w
  6112  0F06  00BF               	movwf	___ftmul@sign
  6113  0F07  08BF               	movf	___ftmul@sign,f
  6114  0F08  1D03               	skipz
  6115  0F09  2F0E               	goto	l6629
  6116  0F0A  01B1               	clrf	?___ftmul
  6117  0F0B  01B2               	clrf	?___ftmul+1
  6118  0F0C  01B3               	clrf	?___ftmul+2
  6119  0F0D  0008               	return
  6120  0F0E                     l6629:	
  6121  0F0E  083F               	movf	___ftmul@sign,w
  6122  0F0F  3E7B               	addlw	123
  6123  0F10  07BA               	addwf	___ftmul@exp,f
  6124  0F11  0833               	movf	___ftmul@f1+2,w
  6125  0F12  00BF               	movwf	___ftmul@sign
  6126  0F13  0836               	movf	___ftmul@f2+2,w
  6127  0F14  06BF               	xorwf	___ftmul@sign,f
  6128  0F15  3080               	movlw	128
  6129  0F16  05BF               	andwf	___ftmul@sign,f
  6130  0F17  3007               	movlw	7
  6131  0F18  17B2               	bsf	___ftmul@f1+1,7
  6132  0F19  17B5               	bsf	___ftmul@f2+1,7
  6133  0F1A  01B6               	clrf	___ftmul@f2+2
  6134  0F1B  01BB               	clrf	___ftmul@f3_as_product
  6135  0F1C  01BC               	clrf	___ftmul@f3_as_product+1
  6136  0F1D  01BD               	clrf	___ftmul@f3_as_product+2
  6137  0F1E  00BE               	movwf	___ftmul@cntr
  6138  0F1F                     l6647:	
  6139  0F1F  1C31               	btfss	___ftmul@f1,0
  6140  0F20  2F29               	goto	l6651
  6141  0F21  0834               	movf	___ftmul@f2,w
  6142  0F22  27D6  120A  158A   	fcall	PL19	;call to abstracted procedure
  6143  0F25  1803               	skipnc
  6144  0F26  0A36               	incf	___ftmul@f2+2,w
  6145  0F27  1D03               	btfss	3,2
  6146  0F28  07BD               	addwf	___ftmul@f3_as_product+2,f
  6147  0F29                     l6651:	
  6148  0F29  1003               	clrc
  6149  0F2A  0CB3               	rrf	___ftmul@f1+2,f
  6150  0F2B  0CB2               	rrf	___ftmul@f1+1,f
  6151  0F2C  0CB1               	rrf	___ftmul@f1,f
  6152  0F2D  1003               	clrc
  6153  0F2E  0DB4               	rlf	___ftmul@f2,f
  6154  0F2F  0DB5               	rlf	___ftmul@f2+1,f
  6155  0F30  0DB6               	rlf	___ftmul@f2+2,f
  6156  0F31  0BBE               	decfsz	___ftmul@cntr,f
  6157  0F32  2F1F               	goto	l6647
  6158  0F33  3009               	movlw	9
  6159  0F34  00BE               	movwf	___ftmul@cntr
  6160  0F35                     l6659:	
  6161  0F35  1C31               	btfss	___ftmul@f1,0
  6162  0F36  2F3F               	goto	l6663
  6163  0F37  0834               	movf	___ftmul@f2,w
  6164  0F38  27D6  120A  158A   	fcall	PL19	;call to abstracted procedure
  6165  0F3B  1803               	skipnc
  6166  0F3C  0A36               	incf	___ftmul@f2+2,w
  6167  0F3D  1D03               	btfss	3,2
  6168  0F3E  07BD               	addwf	___ftmul@f3_as_product+2,f
  6169  0F3F                     l6663:	
  6170  0F3F  1003               	clrc
  6171  0F40  0CB3               	rrf	___ftmul@f1+2,f
  6172  0F41  0CB2               	rrf	___ftmul@f1+1,f
  6173  0F42  0CB1               	rrf	___ftmul@f1,f
  6174  0F43  1003               	clrc
  6175  0F44  0CBD               	rrf	___ftmul@f3_as_product+2,f
  6176  0F45  0CBC               	rrf	___ftmul@f3_as_product+1,f
  6177  0F46  0CBB               	rrf	___ftmul@f3_as_product,f
  6178  0F47  0BBE               	decfsz	___ftmul@cntr,f
  6179  0F48  2F35               	goto	l6659
  6180  0F49  083B               	movf	___ftmul@f3_as_product,w
  6181  0F4A  00F2               	movwf	?___ftpack
  6182  0F4B  083C               	movf	___ftmul@f3_as_product+1,w
  6183  0F4C  00F3               	movwf	?___ftpack+1
  6184  0F4D  083D               	movf	___ftmul@f3_as_product+2,w
  6185  0F4E  00F4               	movwf	?___ftpack+2
  6186  0F4F  083A               	movf	___ftmul@exp,w
  6187  0F50  00F5               	movwf	?___ftpack+3
  6188  0F51  083F               	movf	___ftmul@sign,w
  6189  0F52  00F6               	movwf	?___ftpack+4
  6190  0F53  2769               	fcall	___ftpack
  6191  0F54  0872               	movf	?___ftpack,w
  6192  0F55  00B1               	movwf	?___ftmul
  6193  0F56  0873               	movf	?___ftpack+1,w
  6194  0F57  00B2               	movwf	?___ftmul+1
  6195  0F58  0874               	movf	?___ftpack+2,w
  6196  0F59  00B3               	movwf	?___ftmul+2
  6197  0F5A  0008               	return
  6198  0F5B                     __end_of___ftmul:	
  6199  0F5B                     __ptext542:	
  6200 ;; =============== function ___wmul ends ============
  6201                           
  6202                           
  6203 ;; *************** function ___bmul *****************
  6204 ;; Defined at:
  6205 ;;		line 3 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\bmul.c"
  6206 ;; Parameters:    Size  Location     Type
  6207 ;;  multiplier      1    wreg     unsigned char 
  6208 ;;  multiplicand    1   11[COMMON] unsigned char 
  6209 ;; Auto vars:     Size  Location     Type
  6210 ;;  multiplier      1    1[BANK0 ] unsigned char 
  6211 ;;  product         1    0[BANK0 ] unsigned char 
  6212 ;; Return value:  Size  Location     Type
  6213 ;;                  1    wreg      unsigned char 
  6214 ;; Registers used:
  6215 ;;		wreg, status,2, status,0
  6216 ;; Tracked objects:
  6217 ;;		On entry : 60/0
  6218 ;;		On exit  : 60/0
  6219 ;;		Unchanged: FFF9F/0
  6220 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6221 ;;      Params:         1       0       0       0       0
  6222 ;;      Locals:         0       2       0       0       0
  6223 ;;      Temps:          0       0       0       0       0
  6224 ;;      Totals:         1       2       0       0       0
  6225 ;;Total ram usage:        3 bytes
  6226 ;; Hardware stack levels used:    1
  6227 ;; Hardware stack levels required when called:    1
  6228 ;; This function calls:
  6229 ;;		Nothing
  6230 ;; This function is called by:
  6231 ;;		_fround
  6232 ;;		_scale
  6233 ;; This function uses a non-reentrant model
  6234 ;;
  6235  0F5B                     ___bmul:	
  6236                           
  6237                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  6238                           ;___bmul@multiplier stored from wreg
  6239  0F5B  00A1               	movwf	___bmul@multiplier
  6240  0F5C  01A0               	clrf	___bmul@product
  6241  0F5D                     l6197:	
  6242  0F5D  087B               	movf	___bmul@multiplicand,w
  6243  0F5E  1821               	btfsc	___bmul@multiplier,0
  6244  0F5F  07A0               	addwf	___bmul@product,f
  6245  0F60  1003               	clrc
  6246  0F61  0DFB               	rlf	___bmul@multiplicand,f
  6247  0F62  1003               	clrc
  6248  0F63  0CA1               	rrf	___bmul@multiplier,f
  6249  0F64  08A1               	movf	___bmul@multiplier,f
  6250  0F65  1D03               	skipz
  6251  0F66  2F5D               	goto	l6197
  6252  0F67  0820               	movf	___bmul@product,w
  6253  0F68  0008               	return
  6254  0F69                     __end_of___bmul:	
  6255  0F69                     __ptext538:	
  6256 ;; =============== function ___fttol ends ============
  6257                           
  6258                           
  6259 ;; *************** function ___ftpack *****************
  6260 ;; Defined at:
  6261 ;;		line 63 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\float.c"
  6262 ;; Parameters:    Size  Location     Type
  6263 ;;  arg             3    2[COMMON] unsigned um
  6264 ;;  exp             1    5[COMMON] unsigned char 
  6265 ;;  sign            1    6[COMMON] unsigned char 
  6266 ;; Auto vars:     Size  Location     Type
  6267 ;;		None
  6268 ;; Return value:  Size  Location     Type
  6269 ;;                  3    2[COMMON] float 
  6270 ;; Registers used:
  6271 ;;		wreg, status,2, status,0
  6272 ;; Tracked objects:
  6273 ;;		On entry : 60/0
  6274 ;;		On exit  : 60/0
  6275 ;;		Unchanged: FFF9F/0
  6276 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6277 ;;      Params:         5       0       0       0       0
  6278 ;;      Locals:         0       0       0       0       0
  6279 ;;      Temps:          3       0       0       0       0
  6280 ;;      Totals:         8       0       0       0       0
  6281 ;;Total ram usage:        8 bytes
  6282 ;; Hardware stack levels used:    1
  6283 ;; Hardware stack levels required when called:    1
  6284 ;; This function calls:
  6285 ;;		Nothing
  6286 ;; This function is called by:
  6287 ;;		___ftadd
  6288 ;;		___ftmul
  6289 ;;		___altoft
  6290 ;;		___lltoft
  6291 ;; This function uses a non-reentrant model
  6292 ;;
  6293  0F69                     ___ftpack:	
  6294                           
  6295                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  6296  0F69  0875               	movf	___ftpack@exp,w
  6297  0F6A  1903               	btfsc	3,2
  6298  0F6B  2F71               	goto	l6273
  6299  0F6C  0874               	movf	___ftpack@arg+2,w
  6300  0F6D  0473               	iorwf	___ftpack@arg+1,w
  6301  0F6E  0472               	iorwf	___ftpack@arg,w
  6302  0F6F  1D03               	skipz
  6303  0F70  2F7A               	goto	l6279
  6304  0F71                     l6273:	
  6305  0F71  01F2               	clrf	?___ftpack
  6306  0F72  01F3               	clrf	?___ftpack+1
  6307  0F73  01F4               	clrf	?___ftpack+2
  6308  0F74  0008               	return
  6309  0F75                     l6277:	
  6310  0F75  0AF5               	incf	___ftpack@exp,f
  6311  0F76  1003               	clrc
  6312  0F77  0CF4               	rrf	___ftpack@arg+2,f
  6313  0F78  0CF3               	rrf	___ftpack@arg+1,f
  6314  0F79  0CF2               	rrf	___ftpack@arg,f
  6315  0F7A                     l6279:	
  6316  0F7A  30FE               	movlw	254
  6317  0F7B  0574               	andwf	___ftpack@arg+2,w
  6318  0F7C  1903               	btfsc	3,2
  6319  0F7D  2F89               	goto	l6283
  6320  0F7E  2F75               	goto	l6277
  6321  0F7F                     l6281:	
  6322  0F7F  0AF5               	incf	___ftpack@exp,f
  6323  0F80  0AF2               	incf	___ftpack@arg,f
  6324  0F81  1903               	skipnz
  6325  0F82  0AF3               	incf	___ftpack@arg+1,f
  6326  0F83  1903               	skipnz
  6327  0F84  0AF4               	incf	___ftpack@arg+2,f
  6328  0F85  1003               	clrc
  6329  0F86  0CF4               	rrf	___ftpack@arg+2,f
  6330  0F87  0CF3               	rrf	___ftpack@arg+1,f
  6331  0F88  0CF2               	rrf	___ftpack@arg,f
  6332  0F89                     l6283:	
  6333  0F89  30FF               	movlw	255
  6334  0F8A  0574               	andwf	___ftpack@arg+2,w
  6335  0F8B  1903               	btfsc	3,2
  6336  0F8C  2F93               	goto	l6287
  6337  0F8D  2F7F               	goto	l6281
  6338  0F8E                     l6285:	
  6339  0F8E  03F5               	decf	___ftpack@exp,f
  6340  0F8F  1003               	clrc
  6341  0F90  0DF2               	rlf	___ftpack@arg,f
  6342  0F91  0DF3               	rlf	___ftpack@arg+1,f
  6343  0F92  0DF4               	rlf	___ftpack@arg+2,f
  6344  0F93                     l6287:	
  6345  0F93  1FF3               	btfss	___ftpack@arg+1,7
  6346  0F94  2F8E               	goto	l6285
  6347  0F95  1C75               	btfss	___ftpack@exp,0
  6348  0F96  13F3               	bcf	___ftpack@arg+1,7
  6349  0F97  1003               	clrc
  6350  0F98  0CF5               	rrf	___ftpack@exp,f
  6351  0F99  0875               	movf	___ftpack@exp,w
  6352  0F9A  00F9               	movwf	??___ftpack+2
  6353  0F9B  01F8               	clrf	??___ftpack+1
  6354  0F9C  01F7               	clrf	??___ftpack
  6355  0F9D  0877               	movf	??___ftpack,w
  6356  0F9E  04F2               	iorwf	___ftpack@arg,f
  6357  0F9F  0878               	movf	??___ftpack+1,w
  6358  0FA0  04F3               	iorwf	___ftpack@arg+1,f
  6359  0FA1  0879               	movf	??___ftpack+2,w
  6360  0FA2  04F4               	iorwf	___ftpack@arg+2,f
  6361  0FA3  0876               	movf	___ftpack@sign,w
  6362  0FA4  1D03               	skipz
  6363  0FA5  17F4               	bsf	___ftpack@arg+2,7
  6364  0FA6  0008               	return
  6365  0FA7                     __end_of___ftpack:	
  6366  0FA7                     PL8:	
  6367  0FA7  0872               	movf	?___awmod,w
  6368  0FA8  00C3               	movwf	??_scale
  6369  0FA9  0873               	movf	?___awmod+1,w
  6370  0FAA  00C4               	movwf	??_scale+1
  6371  0FAB  0843               	movf	??_scale,w
  6372  0FAC  0743               	addwf	??_scale,w
  6373  0FAD  0743               	addwf	??_scale,w
  6374  0FAE  0008               	return
  6375  0FAF                     PL9:	
  6376  0FAF  0878               	movf	?___awdiv,w
  6377  0FB0  00C5               	movwf	??_scale+2
  6378  0FB1  0879               	movf	?___awdiv+1,w
  6379  0FB2  00C6               	movwf	??_scale+3
  6380  0FB3  0845               	movf	??_scale+2,w
  6381  0FB4  0745               	addwf	??_scale+2,w
  6382  0FB5  0745               	addwf	??_scale+2,w
  6383  0FB6  0008               	return
  6384  0FB7                     PL10:	
  6385  0FB7  0831               	movf	?___ftmul,w
  6386  0FB8  00C0               	movwf	?_scale
  6387  0FB9  0832               	movf	?___ftmul+1,w
  6388  0FBA  00C1               	movwf	?_scale+1
  6389  0FBB  0833               	movf	?___ftmul+2,w
  6390  0FBC  00C2               	movwf	?_scale+2
  6391  0FBD  0008               	return
  6392  0FBE                     PL11:	
  6393  0FBE  0831               	movf	?___ftmul,w
  6394  0FBF  00C7               	movwf	_scale$4112
  6395  0FC0  0832               	movf	?___ftmul+1,w
  6396  0FC1  00C8               	movwf	_scale$4112+1
  6397  0FC2  0833               	movf	?___ftmul+2,w
  6398  0FC3  00C9               	movwf	_scale$4112+2
  6399  0FC4  300A               	movlw	10
  6400  0FC5  00F2               	movwf	?___awmod
  6401  0FC6  01F3               	clrf	?___awmod+1
  6402  0FC7  084A               	movf	scale@scl,w
  6403  0FC8  00F4               	movwf	?___awmod+2
  6404  0FC9  01F5               	clrf	?___awmod+3
  6405  0FCA  0008               	return
  6406  0FCB                     PL15:	
  6407  0FCB  00F8               	movwf	?___awdiv
  6408  0FCC  01F9               	clrf	?___awdiv+1
  6409  0FCD  084A               	movf	scale@scl,w
  6410  0FCE  00F4               	movwf	?___awmod+2
  6411  0FCF  01F5               	clrf	?___awmod+3
  6412  0FD0  1BF4               	btfsc	?___awmod+2,7
  6413  0FD1  03F5               	decf	?___awmod+3,f
  6414  0FD2  3064               	movlw	100
  6415  0FD3  00F2               	movwf	?___awmod
  6416  0FD4  01F3               	clrf	?___awmod+1
  6417  0FD5  0008               	return
  6418  0FD6                     PL19:	
  6419  0FD6  07BB               	addwf	___ftmul@f3_as_product,f
  6420  0FD7  0835               	movf	___ftmul@f2+1,w
  6421  0FD8  1103               	clrz
  6422  0FD9  1803               	skipnc
  6423  0FDA  0A35               	incf	___ftmul@f2+1,w
  6424  0FDB  1D03               	btfss	3,2
  6425  0FDC  07BC               	addwf	___ftmul@f3_as_product+1,f
  6426  0FDD  0836               	movf	___ftmul@f2+2,w
  6427  0FDE  1103               	clrz
  6428  0FDF  0008               	return
  6429  0FE0                     PL22:	
  6430  0FE0  0878               	movf	?___awdiv,w
  6431  0FE1  00C3               	movwf	??_scale
  6432  0FE2  0879               	movf	?___awdiv+1,w
  6433  0FE3  00C4               	movwf	??_scale+1
  6434  0FE4  0843               	movf	??_scale,w
  6435  0FE5  0743               	addwf	??_scale,w
  6436  0FE6  0743               	addwf	??_scale,w
  6437  0FE7  0008               	return
  6438  0FE8                     PL24:	
  6439  0FE8  00B3               	movwf	?___ftmul+2
  6440  0FE9  3064               	movlw	100
  6441  0FEA  00F8               	movwf	?___awdiv
  6442  0FEB  01F9               	clrf	?___awdiv+1
  6443  0FEC  084A               	movf	scale@scl,w
  6444  0FED  00FA               	movwf	?___awdiv+2
  6445  0FEE  01FB               	clrf	?___awdiv+3
  6446  0FEF  0008               	return
  6447  0FF0                     PL25:	
  6448  0FF0  00B3               	movwf	?___ftmul+2
  6449  0FF1  0847               	movf	_scale$4112,w
  6450  0FF2  00B4               	movwf	?___ftmul+3
  6451  0FF3  0848               	movf	_scale$4112+1,w
  6452  0FF4  00B5               	movwf	?___ftmul+4
  6453  0FF5  0849               	movf	_scale$4112+2,w
  6454  0FF6  00B6               	movwf	?___ftmul+5
  6455  0FF7  0008               	return
  6456  0FF8                     PL26:	
  6457  0FF8  00B3               	movwf	?___ftmul+2
  6458  0FF9  300A               	movlw	10
  6459  0FFA  00F8               	movwf	?___awdiv
  6460  0FFB  01F9               	clrf	?___awdiv+1
  6461  0FFC  084A               	movf	scale@scl,w
  6462  0FFD  00FA               	movwf	?___awdiv+2
  6463  0FFE  01FB               	clrf	?___awdiv+3
  6464  0FFF  0008               	return
  6465                           
  6466                           	psect	text543
  6467  1735                     __ptext543:	
  6468 ;; =============== function ___bmul ends ============
  6469                           
  6470                           
  6471 ;; *************** function __div_to_l_ *****************
  6472 ;; Defined at:
  6473 ;;		line 61 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\fldivl.c"
  6474 ;; Parameters:    Size  Location     Type
  6475 ;;  f1              3    2[COMMON] unsigned char 
  6476 ;;  f2              3    5[COMMON] unsigned char 
  6477 ;; Auto vars:     Size  Location     Type
  6478 ;;  quot            4    8[BANK0 ] unsigned long 
  6479 ;;  exp1            1   13[BANK0 ] unsigned char 
  6480 ;;  cntr            1   12[BANK0 ] unsigned char 
  6481 ;; Return value:  Size  Location     Type
  6482 ;;                  4    2[COMMON] unsigned long 
  6483 ;; Registers used:
  6484 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  6485 ;; Tracked objects:
  6486 ;;		On entry : 0/0
  6487 ;;		On exit  : 60/0
  6488 ;;		Unchanged: FFF9F/0
  6489 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6490 ;;      Params:         6       0       0       0       0
  6491 ;;      Locals:         0       6       0       0       0
  6492 ;;      Temps:          0       8       0       0       0
  6493 ;;      Totals:         6      14       0       0       0
  6494 ;;Total ram usage:       20 bytes
  6495 ;; Hardware stack levels used:    1
  6496 ;; Hardware stack levels required when called:    1
  6497 ;; This function calls:
  6498 ;;		Nothing
  6499 ;; This function is called by:
  6500 ;;		_printf
  6501 ;; This function uses a non-reentrant model
  6502 ;;
  6503  1735                     __div_to_l_:	
  6504                           
  6505                           ; Regs used in __div_to_l_: [wreg-fsr0h+status,2+status,0]
  6506  1735  3072               	movlw	low __div_to_l_@f1
  6507  1736  0084               	movwf	4
  6508  1737  0800               	movf	0,w
  6509  1738  1283               	bcf	3,5	;RP0=0, select bank0
  6510  1739  1303               	bcf	3,6	;RP1=0, select bank0
  6511  173A  00A0               	movwf	??__div_to_l_
  6512  173B  0A84               	incf	4,f
  6513  173C  0800               	movf	0,w
  6514  173D  00A1               	movwf	??__div_to_l_+1
  6515  173E  0A84               	incf	4,f
  6516  173F  0800               	movf	0,w
  6517  1740  00A2               	movwf	??__div_to_l_+2
  6518  1741  0A84               	incf	4,f
  6519  1742  0800               	movf	0,w
  6520  1743  00A3               	movwf	??__div_to_l_+3
  6521  1744  1003               	clrc
  6522  1745  0D22               	rlf	??__div_to_l_+2,w
  6523  1746  0D23               	rlf	??__div_to_l_+3,w
  6524  1747  00AD               	movwf	__div_to_l_@exp1
  6525  1748  08AD               	movf	__div_to_l_@exp1,f
  6526  1749  1D03               	skipz
  6527  174A  2F50               	goto	l6153
  6528  174B                     l6151:	
  6529  174B  01F2               	clrf	?__div_to_l_
  6530  174C  01F3               	clrf	?__div_to_l_+1
  6531  174D  01F4               	clrf	?__div_to_l_+2
  6532  174E  01F5               	clrf	?__div_to_l_+3
  6533  174F  0008               	return
  6534  1750                     l6153:	
  6535  1750  3075               	movlw	low __div_to_l_@f2
  6536  1751  27F3  160A  118A   	fcall	PL3	;call to abstracted procedure
  6537  1754  1003               	clrc
  6538  1755  0D22               	rlf	??__div_to_l_+2,w
  6539  1756  0D23               	rlf	??__div_to_l_+3,w
  6540  1757  00AC               	movwf	__div_to_l_@cntr
  6541  1758  08AC               	movf	__div_to_l_@cntr,f
  6542  1759  1903               	btfsc	3,2
  6543  175A  2F4B               	goto	l6151
  6544  175B  3072               	movlw	low __div_to_l_@f1
  6545  175C  0084               	movwf	4
  6546  175D  3080               	movlw	128
  6547  175E  0A84               	incf	4,f
  6548  175F  0A84               	incf	4,f
  6549  1760  0480               	iorwf	0,f
  6550  1761  3072               	movlw	low __div_to_l_@f1
  6551  1762  0A84               	incf	4,f
  6552  1763  0084               	movwf	4
  6553  1764  3075               	movlw	low __div_to_l_@f2
  6554  1765  0A84               	incf	4,f
  6555  1766  0A84               	incf	4,f
  6556  1767  0A84               	incf	4,f
  6557  1768  0180               	clrf	0
  6558  1769  0084               	movwf	4
  6559  176A  3080               	movlw	128
  6560  176B  0A84               	incf	4,f
  6561  176C  0A84               	incf	4,f
  6562  176D  0480               	iorwf	0,f
  6563  176E  3075               	movlw	low __div_to_l_@f2
  6564  176F  0A84               	incf	4,f
  6565  1770  0084               	movwf	4
  6566  1771  307F               	movlw	127
  6567  1772  0A84               	incf	4,f
  6568  1773  0A84               	incf	4,f
  6569  1774  0A84               	incf	4,f
  6570  1775  0180               	clrf	0
  6571  1776  01A8               	clrf	__div_to_l_@quot
  6572  1777  01A9               	clrf	__div_to_l_@quot+1
  6573  1778  01AA               	clrf	__div_to_l_@quot+2
  6574  1779  01AB               	clrf	__div_to_l_@quot+3
  6575  177A  02AD               	subwf	__div_to_l_@exp1,f
  6576  177B  30A0               	movlw	160
  6577  177C  072C               	addwf	__div_to_l_@cntr,w
  6578  177D  00A0               	movwf	??__div_to_l_
  6579  177E  02AD               	subwf	__div_to_l_@exp1,f
  6580  177F  3020               	movlw	32
  6581  1780  00AC               	movwf	__div_to_l_@cntr
  6582  1781                     l6167:	
  6583  1781  3075               	movlw	low __div_to_l_@f2
  6584  1782  1003               	clrc
  6585  1783  0DA8               	rlf	__div_to_l_@quot,f
  6586  1784  0DA9               	rlf	__div_to_l_@quot+1,f
  6587  1785  0DAA               	rlf	__div_to_l_@quot+2,f
  6588  1786  0DAB               	rlf	__div_to_l_@quot+3,f
  6589  1787  27F3  160A  118A   	fcall	PL3	;call to abstracted procedure
  6590  178A  3072               	movlw	low __div_to_l_@f1
  6591  178B  0084               	movwf	4
  6592  178C  0800               	movf	0,w
  6593  178D  00A4               	movwf	??__div_to_l_+4
  6594  178E  0A84               	incf	4,f
  6595  178F  0800               	movf	0,w
  6596  1790  00A5               	movwf	??__div_to_l_+5
  6597  1791  0A84               	incf	4,f
  6598  1792  0800               	movf	0,w
  6599  1793  00A6               	movwf	??__div_to_l_+6
  6600  1794  0A84               	incf	4,f
  6601  1795  0800               	movf	0,w
  6602  1796  00A7               	movwf	??__div_to_l_+7
  6603  1797  0823               	movf	??__div_to_l_+3,w
  6604  1798  0227               	subwf	??__div_to_l_+7,w
  6605  1799  1D03               	skipz
  6606  179A  2FA5               	goto	u2125
  6607  179B  0822               	movf	??__div_to_l_+2,w
  6608  179C  0226               	subwf	??__div_to_l_+6,w
  6609  179D  1D03               	skipz
  6610  179E  2FA5               	goto	u2125
  6611  179F  0821               	movf	??__div_to_l_+1,w
  6612  17A0  0225               	subwf	??__div_to_l_+5,w
  6613  17A1  1D03               	skipz
  6614  17A2  2FA5               	goto	u2125
  6615  17A3  0820               	movf	??__div_to_l_,w
  6616  17A4  0224               	subwf	??__div_to_l_+4,w
  6617  17A5                     u2125:	
  6618  17A5  1C03               	skipc
  6619  17A6  2FC1               	goto	l3593
  6620  17A7  3075               	movlw	low __div_to_l_@f2
  6621  17A8  27F3  160A  118A   	fcall	PL3	;call to abstracted procedure
  6622  17AB  3072               	movlw	low __div_to_l_@f1
  6623  17AC  0084               	movwf	4
  6624  17AD  0820               	movf	??__div_to_l_,w
  6625  17AE  0280               	subwf	0,f
  6626  17AF  0A84               	incf	4,f
  6627  17B0  0821               	movf	??__div_to_l_+1,w
  6628  17B1  1C03               	skipc
  6629  17B2  0F21               	incfsz	??__div_to_l_+1,w
  6630  17B3  0280               	subwf	0,f
  6631  17B4  0A84               	incf	4,f
  6632  17B5  0822               	movf	??__div_to_l_+2,w
  6633  17B6  1C03               	skipc
  6634  17B7  0F22               	incfsz	??__div_to_l_+2,w
  6635  17B8  0280               	subwf	0,f
  6636  17B9  0A84               	incf	4,f
  6637  17BA  0823               	movf	??__div_to_l_+3,w
  6638  17BB  1C03               	skipc
  6639  17BC  0A23               	incf	??__div_to_l_+3,w
  6640  17BD  0280               	subwf	0,f
  6641  17BE  3003               	movlw	3
  6642  17BF  0284               	subwf	4,f
  6643  17C0  1428               	bsf	__div_to_l_@quot,0
  6644  17C1                     l3593:	
  6645  17C1  3072               	movlw	low __div_to_l_@f1
  6646  17C2  0084               	movwf	4
  6647  17C3  1003               	clrc
  6648  17C4  0D80               	rlf	0,f
  6649  17C5  0A84               	incf	4,f
  6650  17C6  0D80               	rlf	0,f
  6651  17C7  0A84               	incf	4,f
  6652  17C8  0D80               	rlf	0,f
  6653  17C9  0A84               	incf	4,f
  6654  17CA  0D80               	rlf	0,f
  6655  17CB  0BAC               	decfsz	__div_to_l_@cntr,f
  6656  17CC  2F81               	goto	l6167
  6657  17CD  1FAD               	btfss	__div_to_l_@exp1,7
  6658  17CE  2FDC               	goto	l6185
  6659  17CF  082D               	movf	__div_to_l_@exp1,w
  6660  17D0  3A80               	xorlw	128
  6661  17D1  3E9F               	addlw	159
  6662  17D2  1C03               	btfss	3,0
  6663  17D3  2F4B               	goto	l6151
  6664  17D4                     l6181:	
  6665  17D4  1003               	clrc
  6666  17D5  0CAB               	rrf	__div_to_l_@quot+3,f
  6667  17D6  0CAA               	rrf	__div_to_l_@quot+2,f
  6668  17D7  0CA9               	rrf	__div_to_l_@quot+1,f
  6669  17D8  0CA8               	rrf	__div_to_l_@quot,f
  6670  17D9  0FAD               	incfsz	__div_to_l_@exp1,f
  6671  17DA  2FD4               	goto	l6181
  6672  17DB  2FEA               	goto	l6191
  6673  17DC                     l6185:	
  6674  17DC  3020               	movlw	32
  6675  17DD  022D               	subwf	__div_to_l_@exp1,w
  6676  17DE  1803               	btfsc	3,0
  6677  17DF  2F4B               	goto	l6151
  6678  17E0                     l3601:	
  6679  17E0  08AD               	movf	__div_to_l_@exp1,f
  6680  17E1  1903               	btfsc	3,2
  6681  17E2  2FEA               	goto	l6191
  6682  17E3  1003               	clrc
  6683  17E4  0DA8               	rlf	__div_to_l_@quot,f
  6684  17E5  0DA9               	rlf	__div_to_l_@quot+1,f
  6685  17E6  0DAA               	rlf	__div_to_l_@quot+2,f
  6686  17E7  0DAB               	rlf	__div_to_l_@quot+3,f
  6687  17E8  03AD               	decf	__div_to_l_@exp1,f
  6688  17E9  2FE0               	goto	l3601
  6689  17EA                     l6191:	
  6690  17EA  082B               	movf	__div_to_l_@quot+3,w
  6691  17EB  00F5               	movwf	?__div_to_l_+3
  6692  17EC  082A               	movf	__div_to_l_@quot+2,w
  6693  17ED  00F4               	movwf	?__div_to_l_+2
  6694  17EE  0829               	movf	__div_to_l_@quot+1,w
  6695  17EF  00F3               	movwf	?__div_to_l_+1
  6696  17F0  0828               	movf	__div_to_l_@quot,w
  6697  17F1  00F2               	movwf	?__div_to_l_
  6698  17F2  0008               	return
  6699  17F3                     __end_of__div_to_l_:	
  6700  17F3                     PL3:	
  6701  17F3  0084               	movwf	4
  6702  17F4  0800               	movf	0,w
  6703  17F5  00A0               	movwf	??__div_to_l_
  6704  17F6  0A84               	incf	4,f
  6705  17F7  0800               	movf	0,w
  6706  17F8  00A1               	movwf	??__div_to_l_+1
  6707  17F9  0A84               	incf	4,f
  6708  17FA  0800               	movf	0,w
  6709  17FB  00A2               	movwf	??__div_to_l_+2
  6710  17FC  0A84               	incf	4,f
  6711  17FD  0800               	movf	0,w
  6712  17FE  00A3               	movwf	??__div_to_l_+3
  6713  17FF  0008               	return
  6714                           
  6715                           	psect	text547
  6716  07A9                     __ptext547:	
  6717 ;; =============== function _isprint ends ============
  6718                           
  6719                           
  6720 ;; *************** function _ngat *****************
  6721 ;; Defined at:
  6722 ;;		line 69 in file "C:\Users\DELL\Desktop\baitap_ttvxl\dotanso_khongdungCCP\dotansodungkoCCP(2).c"
  6723 ;; Parameters:    Size  Location     Type
  6724 ;;		None
  6725 ;; Auto vars:     Size  Location     Type
  6726 ;;		None
  6727 ;; Return value:  Size  Location     Type
  6728 ;;		None               void
  6729 ;; Registers used:
  6730 ;;		None
  6731 ;; Tracked objects:
  6732 ;;		On entry : 0/0
  6733 ;;		On exit  : 60/0
  6734 ;;		Unchanged: FFF9F/0
  6735 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6736 ;;      Params:         0       0       0       0       0
  6737 ;;      Locals:         0       0       0       0       0
  6738 ;;      Temps:          2       0       0       0       0
  6739 ;;      Totals:         2       0       0       0       0
  6740 ;;Total ram usage:        2 bytes
  6741 ;; Hardware stack levels used:    1
  6742 ;; This function calls:
  6743 ;;		Nothing
  6744 ;; This function is called by:
  6745 ;;		Interrupt level 1
  6746 ;; This function uses a non-reentrant model
  6747 ;;
  6748  07A9                     _ngat:	
  6749                           
  6750                           ;dotansodungkoCCP(2).c: 70: if(RB1 == 1) {TMR1ON = 1;}
  6751  07A9  1283               	bcf	3,5	;RP0=0, select bank0
  6752  07AA  1303               	bcf	3,6	;RP1=0, select bank0
  6753  07AB  1886               	btfsc	6,1
  6754  07AC  1410               	bsf	16,0
  6755                           
  6756                           ;dotansodungkoCCP(2).c: 71: if(RB1 == 0) {TMR1ON = 0;}
  6757  07AD  1C86               	btfss	6,1
  6758  07AE  1010               	bcf	16,0
  6759                           
  6760                           ;dotansodungkoCCP(2).c: 72: RBIF = 0;
  6761  07AF  100B               	bcf	11,0
  6762  07B0  0871               	movf	??_ngat+1,w
  6763  07B1  008A               	movwf	10
  6764  07B2  0E70               	swapf	??_ngat^(0+-128),w
  6765  07B3  0083               	movwf	3
  6766  07B4  0EFE               	swapf	126,f
  6767  07B5  0E7E               	swapf	126,w
  6768  07B6  0009               	retfie
  6769  07B7                     __end_of_ngat:	
  6770                           
  6771                           	psect	intentry
  6772  0004                     __pintentry:	
  6773                           ; Regs used in _ngat: []
  6774                           
  6775  0004                     interrupt_function:	
  6776  007E                     saved_w	set	btemp
  6777  0004  00FE               	movwf	btemp
  6778  0005  0E03               	swapf	3,w
  6779  0006  00F0               	movwf	??_ngat
  6780  0007  080A               	movf	10,w
  6781  0008  00F1               	movwf	??_ngat+1
  6782  0009  120A  118A  2FA9   	ljmp	_ngat
  6783                           
  6784                           	psect	text548
  6785  0000                     __ptext548:	
  6786 ;; =============== function _ngat ends ============
  6787                           
  6788  007E                     btemp	set	126	;btemp
  6789  007E                     wtemp0	set	126


HI-TECH Software PICC Macro Assembler V9.83 build 10920 
Symbol Table                                                                                   Tue Dec 06 11:04:58 2022

         ___altoft@exp 007A                      _d 0066                      _t 0069                      pc 0002  
       ___bmul@product 0020          ___altoft@sign 007B           ___awdiv@sign 0021                     fsr 0004  
  ___wmul@multiplicand 0074           ___ftadd@exp1 004B           ___ftadd@exp2 004A          ?_lcd_put_byte 0072  
         ___ftadd@sign 0049                    _GIE 005F                    _RB1 0031                    _RD1 0041  
                  _RD2 0042                    _RE1 0049                    _RD3 0043                    _RD4 0044  
                  _RD5 0045                    _RD6 0046                    _RD7 0047                    fsr0 0004  
                  indf 0000           ___awmod@sign 0077                   l1056 0000                   l1090 0000  
                 l1067 0000                   l1059 0000                   l2300 054C                   l2221 00A1  
                 l2206 002D                   l3300 0000                   l2164 0000                   l3306 0000  
                 l2266 0374                   l3420 061C                   l3333 0A78                   l3342 0000  
                 l3336 0000                   l3601 17E0                   l3521 0000                   l3290 0000  
                 l3364 0921                   l3285 0000                   l6101 0000                   l3453 0000  
                 l3551 0000                   l6111 0000                   l6103 0694                   l3463 0000  
                 l3535 0000                   l3543 0000                   l6121 0000                   l6113 0000  
                 l6105 0699                   l7001 0000                   l3482 0000                   l3386 0000  
                 l6115 0000                   l6203 0000                   l6211 0000                   l3467 0000  
                 l7011 0335                   l7003 02F7                   l6125 0000                   l6117 0000  
                 l6109 0000                   l6205 0000                   l6221 0000                   l6213 05CB  
                 l6301 05F1                   l7101 04F1                   l3558 06EB                   l6135 06DF  
                 l6119 06B6                   l6151 174B                   l6231 0000                   l6311 0000  
                 l6303 0000                   l7103 04F5                   l7023 035D                   l7015 0000  
                 l6145 06F5                   l6137 0000                   l6129 0000                   l3593 17C1  
                 l6161 0000                   l6153 1750                   l6217 05D3                   l6241 0000  
                 l6233 0A72                   l6321 0618                   l6305 0000                   l7105 0000  
                 l7113 050A                   l7041 0000                   l7033 0000                   l7025 0000  
                 l7017 0339                   l7009 0309                   l7121 0000                   l3594 0000  
                 l6091 0000                   l6139 06E7                   l6163 0000                   l6219 0000  
                 l6227 0000                   l6251 0000                   l6331 0634                   l6307 0000  
                 l6411 059E                   l7107 0502                   l7035 0401                   l7027 0396  
                 l7019 034E                   l7115 0013                   l7131 0000                   l7123 0000  
                 l6085 0C7E                   l6077 0000                   l6181 17D4                   l6173 0000  
                 l6165 0000                   l6149 0000                   l6245 0000                   l6237 0000  
                 l6229 0000                   l6253 0000                   l6317 0610                   l6309 0000  
                 l6341 0000                   l6501 0000                   l7061 0463                   l7053 042F  
                 l7037 040F                   l7141 0000                   l7133 0000                   l7125 0000  
                 l7117 0000                   l6079 0000                   l6191 17EA                   l6183 0000  
                 l6175 0000                   l6167 1781                   l6159 0000                   l6247 0A85  
                 l6263 0A9F                   l6255 0A8B                   l6271 0000                   l6327 0626  
                 l6319 0000                   l6351 0000                   l6343 0E74                   l6335 0000  
                 l6415 05AD                   l6407 0000                   l6511 0000                   l6503 0BE0  
                 l7047 042D                   l7039 0000                   l7151 0000                   l7143 0000  
                 l7135 0000                   l7127 0000                   l7119 0000                   l6097 05C7  
                 l6089 0000                   l6185 17DC                   l6169 0000                   l6265 0000  
                 l6257 0000                   l6281 0F7F                   l6273 0F71                   l6329 0000  
                 l6361 0000                   l6337 0000                   l6417 0000                   l6521 0000  
                 l6513 0000                   l6505 0BED                   l6601 0937                   l7081 04B6  
                 l7065 0477                   l7161 0000                   l7153 0000                   l7145 0000  
                 l7137 0000                   l7129 0000                   l6195 0000                   l6259 0000  
                 l6291 0000                   l6283 0F89                   l6371 0EA2                   l6347 0000  
                 l6419 0000                   l6443 0000                   l6427 0000                   l6523 0000  
                 l6515 0C1B                   l6507 0BF8                   l6531 0000                   l6611 0000  
                 l6603 0000                   l7083 04B9                   l7075 049C                   l7059 0000  
                 l7171 0000                   l7163 0000                   l7155 0000                   l7147 0000  
                 l7139 0000                   l6197 0F5D                   l6293 0000                   l6285 0F8E  
                 l6277 0F75                   l6269 0000                   l6373 0000                   l6365 0000  
                 l6349 0E7D                   l6437 0652                   l6429 0000                   l6461 0EB9  
                 l6453 0000                   l6517 0C26                   l6509 0000                   l6533 0000  
                 l6525 0000                   l6613 0953                   l6605 0000                   l6541 0000  
                 l6701 0000                   l7069 048F                   l7173 0000                   l7165 0000  
                 l7157 16AC                   l7149 0000                   l6295 0000                   l6287 0F93  
                 l6279 0F7A                   l6375 0EAA                   l6359 0E8B                   l6447 0000  
                 l6439 0000                   l6455 0000                   l6519 0C33                   l6535 0000  
                 l6527 0000                   l6551 08CF                   l6543 0000                   l6631 0000  
                 l6623 0EFD                   l6711 0B6C                   l6703 0000                   l7095 04E2  
                 l7087 04D5                   l7175 0000                   l7167 0000                   l7159 0000  
                 l6297 0000                   l6369 0000                   l6393 0000                   l6449 067D  
                 l6473 0ECC                   l6481 0EDF                   l6465 0EC0                   l6529 0000  
                 l6609 0000                   l6553 0000                   l6641 0000                   l6633 0000  
                 l6617 0000                   l6705 0000                   l6801 0E0D                   l7089 04D8  
                 l7169 0000                   l6299 05EC                   l6387 0561                   l6395 0586  
                 l6379 0000                   l6483 0000                   l6459 0000                   l6491 0000  
                 l6571 0000                   l6547 08C8                   l6539 0000                   l6651 0F29  
                 l6643 0000                   l6635 0000                   l6731 0BA8                   l6723 0B90  
                 l6715 0B78                   l6707 0000                   l6811 0000                   l7099 0000  
                 l6485 0EE7                   l6493 0000                   l6581 0909                   l6565 0000  
                 l6557 08DE                   l6653 0000                   l6645 0000                   l6637 0000  
                 l6629 0F0E                   l6709 0000                   l6741 0AC0                   l6813 0000  
                 l6821 0AD9                   l6901 00F5                   l6399 0000                   l6479 0000  
                 l6583 0000                   l6575 08FB                   l6567 0000                   l6559 0000  
                 l6663 0F3F                   l6655 0000                   l6647 0F1F                   l6639 0000  
                 l6735 0BB4                   l6727 0B9C                   l6719 0B84                   l6743 0AC1  
                 l6807 0E52                   l6823 0AE0                   l6911 0000                   l6903 0000  
                 l6497 0000                   l6489 0000                   l6593 0000                   l6577 0900  
                 l6569 08EC                   l6665 0000                   l6657 0000                   l6673 0000  
                 l6745 0000                   l6737 0000                   l6753 0000                   l6825 0AE4  
                 l6833 0AF7                   l6817 0000                   l6921 0143                   l6913 0000  
                 l6499 0000                   l6595 092C                   l6587 0918                   l6579 0905  
                 l6667 0000                   l6659 0F35                   l6683 0CBA                   l6675 0000  
                 l6747 0ACA                   l6739 0000                   l6763 0000                   l6771 0000  
                 l6819 0AD3                   l6835 0000                   l6923 0000                   l6915 0000  
                 l6907 0000                   l6851 003A                   l6843 0028                   l6589 091D  
                 l6669 0000                   l6685 0CC5                   l6677 0000                   l6693 0C8C  
                 l6749 0000                   l6829 0AF0                   l6925 0000                   l6917 0000  
                 l6909 0000                   l6933 018C                   l6861 006A                   l6845 0000  
                 l6837 0000                   l6599 0000                   l6695 0C97                   l6767 0A46  
                 l6759 09F2                   l6783 0D47                   l6775 0000                   l6871 0000  
                 l6855 0048                   l6689 0000                   l6793 0DA3                   l6961 022C  
                 l6945 01EB                   l6937 01C0                   l6929 017C                   l6873 0078  
                 l6865 0000                   l6857 0000                   l6849 002F                   l6699 0000  
                 l6971 0271                   l6963 0000                   l6955 0000                   l6891 00C9  
                 l6883 00A6                   l6867 0000                   l6875 009D                   l6859 0000  
                 l6789 0D8C                   l6981 0000                   l6965 026F                   l6957 0000  
                 l6949 01FC                   l6893 0000                   l6885 00B9                   l6877 0000  
                 l6959 0000                   l6895 0000                   l6879 00A3                   l6993 02D9  
                 l6985 02CE                   l6977 0000                   l6995 0000                   l6979 02A5  
                 l6899 0000                   l6997 02E2                   l6989 02D6                   l6999 02EE  
                 STR_1 107C                   STR_2 1087                   u2035 06C5                   _IOCB 0096  
                 u2125 17A5                   u4007 0C5C                   u4017 0C66                   u4027 0C6C  
                 u2380 0000                   u4037 0BC9                   u4047 0BCF                   u2800 0C19  
                 u2720 0BDE                   u2385 05F5                   u2545 056F                   u2625 0665  
                 u4057 0C06                   u4067 0C0C                   u3515 0195                   u2820 0C24  
                 u2740 0BEB                   u4077 0C40                   u3525 01CA                   u3470 0000  
                 u2495 0E94                   u4087 0C46                   u2840 0C31                   u2760 0BF6  
                 u3625 02EB                   u3635 0300                   u3555 01E9                   u3475 0108  
                 _PEIE 005E                   u2860 0C3C                   u2780 0C02                   u2685 0ED2  
                 u3805 04AC                   u3815 04C7                   u3735 045C                   u3575 029E  
                 _RBIE 005B                   _RBIF 0058                   u3665 0342                   u2874 0C3E  
                 u2794 0C04                   u3755 0471                   u3675 0358                   u3765 0487  
                 u3917 16B3                   u3927 16C1                   u3937 0B12                   u3947 0B25  
                 u3957 0B38                   u3967 0B4B                   u3977 0B58                   u3987 0B65  
                 u3997 0C56                   _TMR1 000E                   _main 168B                   _ngat 07A9  
         ___ftpack@arg 0072           ___ftpack@exp 0075           lcd_busy@busy 0073                   btemp 007E  
                 _xung 0062                   start 000C      ___bmul@multiplier 0021           ___ftmul@cntr 003E  
         ___ftmul@sign 003F           ___fttol@exp1 0030           ___fttol@lval 002C         ??_lcd_put_byte 0073  
                ?_main 0070                  ?_ngat 0070        __end_of___awdiv 0EAF        __end_of___lbdiv 0A87  
      __end_of___ftadd 0967        __end_of___awmod 0EEC        __end_of___lbmod 0AA3        __end_of___ftneg 0706  
                _ANSEL 0188        __end_of___lldiv 0686        __end_of___ftmul 0F5B        ___awdiv@divisor 0078  
      __end_of___llmod 058F        __end_of___ftsub 08A5        __end_of___fttol 063D        ___awdiv@counter 0020  
                _TMR1H 000F                  _TMR1L 000E           ___lltoft@exp 007A                  _scale 0CD7  
      __end_of_isdigit 05C9          ___ftpack@sign 0076                  _putch 054D        __end_of_isprint 0C80  
                pclath 000A                  status 0003                  wtemp0 007E        ___lbdiv@divisor 0077  
      ___lbdiv@counter 0079           __end_of_main 1735           __end_of_ngat 07B7          lcd_gotoxy@col 0078  
        lcd_gotoxy@row 0077                 ??_main 005F          ___fttol@sign1 002B                 ??_ngat 0070  
 __size_of__tdiv_to_l_ 0078       __end_of___altoft 0CD7       ___llmod@dividend 0029                 ?_scale 0040  
     ___awdiv@dividend 007A                 ?_putch 0070       __end_of___ftpack 0FA7                 _ANSELH 0189  
     __end_of___lltoft 0CA8                 i1l2161 0000                 _T1SYNC 0082                 i1l4849 0000  
               _TMR1GE 0086                 _TMR1CS 0081                 _TMR1ON 0080                 _TRISB1 0431  
               _TRISC0 0438                 _TRISD1 0441                 _TRISE0 0448                 _TRISD2 0442  
               _TRISE1 0449                 _TRISD3 0443                 _TRISD4 0444                 _TRISD5 0445  
               _TRISD6 0446                 _TRISD7 0447       __end_of_lcd_busy 0C72       __end_of_lcd_init 0BBB  
     __end_of_lcd_putc 0B00                 ___bmul 0F5B                 ___ftge 058F                 ___wmul 05C9  
            ??___awdiv 007C              ??___lbdiv 0078              ??___ftadd 0046              ??___awmod 0076  
            ??___lbmod 0073              ??___ftneg 0075              ??___lldiv 007A              ??___ftmul 0037  
            ??___llmod 007A              ??___ftsub 007C              ??___fttol 0028                 _fround 0967  
     ___awdiv@quotient 0022        ___awmod@divisor 0072        ___awmod@counter 0076                 _printf 000F  
        lcd_put_byte@b 0072  ___ftmul@f3_as_product 003B              ??_isdigit 0072                 saved_w 007E  
            ??_isprint 0072                 putch@c 007B       ___lbdiv@dividend 0078        ___lbmod@divisor 0072  
           ___altoft@c 0020        ___lbmod@counter 0075   __end_of_lcd_put_byte 0C4B             ___ftadd@f1 0040  
           ___ftadd@f2 0043             ___ftge@ff1 0072             ___ftge@ff2 0075             ___ftneg@f1 0072  
  ___bmul@multiplicand 007B             ___ftmul@f1 0031             ___ftmul@f2 0034             ___ftsub@f1 004F  
           ___ftsub@f2 004C             ___fttol@f1 0024         __pcstackCOMMON 0070             ___lltoft@c 0020  
        __end_of_scale 0E69          __end_of_putch 0551       ___lbdiv@quotient 007A             __div_to_l_ 1735  
    lcd_gotoxy@address 0079        __div_to_l_@exp1 002D        __div_to_l_@cntr 002C                ??_scale 0043  
      __div_to_l_@quot 0028                ??_putch 007B             __pbssBANK0 0062          __div_to_l_@f1 0072  
        __div_to_l_@f2 0075             __pmaintext 168B                ?___bmul 007B                ?___ftge 0072  
              ?___wmul 0072             __pintentry 0004              ?___altoft 0020                ?_fround 004C  
            ?___ftpack 0072                ?_printf 0056              ?___lltoft 0020                _T1CKPS0 0084  
              _T1CKPS1 0085             _lcd_gotoxy 0AB9              ?_lcd_busy 0070              ?_lcd_init 0070  
            ?_lcd_putc 0070             _scale$4112 0047        __size_of___bmul 000E        __size_of___ftge 002C  
              ___awdiv 0E69                ___lbdiv 0A6C                ___ftadd 08A5                ___awmod 0EAF  
              ___lbmod 0A87                ___ftneg 06FE                ___lldiv 063D        __size_of___wmul 0019  
              ___ftmul 0EEC                ___llmod 0551                ___ftsub 088F                ___fttol 05E2  
           ??___altoft 007A             ??___ftpack 0077        __size_of_fround 0105             ??___lltoft 007A  
      __size_of_printf 053E            ?__div_to_l_ 0072                _dpowers 1054                _isdigit 05BB  
     ___awmod@dividend 0074                _isprint 0C72  __size_of_lcd_put_byte 0090             ??_lcd_busy 0072  
           ??_lcd_init 0077             ??_lcd_putc 007A   end_of_initialization 07A5         lcd_put_byte@rs 0075  
      ___lldiv@divisor 0072        ___lldiv@counter 0024                printf@c 00B8                printf@f 00AC  
       __tdiv_to_l_@f1 0072         __tdiv_to_l_@f2 0075          ??__tdiv_to_l_ 0078           _lcd_put_byte 0BBB  
     ___lbmod@dividend 0074            ?_lcd_gotoxy 0077            ___lbmod@rem 0076            printf@integ 00A5  
          printf@width 00B1    __size_of__div_to_l_ 00BE            ___ftmul@exp 003A         __end_of___bmul 0F69  
       __end_of___ftge 05BB         __end_of___wmul 05E2         __end_of_fround 0A6C         __end_of_printf 054D  
  start_initialization 079B    __end_of__tdiv_to_l_ 06FE        ___llmod@divisor 0025        ___llmod@counter 007A  
             ??___bmul 007C               ??___ftge 0078    __size_of_lcd_gotoxy 0018               ??___wmul 0076  
             ??_fround 007C               ??_printf 005A      __size_of___altoft 002F             fround@prec 0055  
    __size_of___ftpack 003E      __size_of___lltoft 001E          __pcstackBANK0 0020          __pcstackBANK1 00A0  
         _isdigit$3668 0072      __size_of_lcd_busy 0027      __size_of_lcd_init 00BB      __size_of_lcd_putc 002F  
             ?___awdiv 0078               ?___lbdiv 0077               ?___ftadd 0040              __ptext520 088F  
            __ptext521 0CD7              __ptext530 0BBB              __ptext522 0967              __ptext531 0EAF  
            __ptext523 0AB9               ?___awmod 0072              __ptext540 0A6C              __ptext532 063D  
            __ptext524 0B00              __ptext541 05C9              __ptext533 058F              __ptext525 0C8A  
            __ptext517 000F              __ptext542 0F5B              __ptext534 06FE              __ptext526 0CA8  
            __ptext518 054D              __ptext543 1735              __ptext535 0551              __ptext527 0EEC  
            __ptext519 0AD1              __ptext544 0686              __ptext536 0E69              __ptext528 08A5  
            __ptext545 05BB              __ptext537 05E2              __ptext529 0C4B              __ptext546 0C72  
            __ptext538 0F69              __ptext547 07A9              __ptext539 0A87               ?___lbmod 0072  
            __ptext548 0000               ?___ftneg 0072               ?___lldiv 0072               ?___ftmul 0031  
             ?___llmod 0025               ?___ftsub 004C              __npowers_ 1006               ?___fttol 0024  
            __pstrings 1000            __tdiv_to_l_ 0686           ??__div_to_l_ 0020               ?_isdigit 0070  
             ?_isprint 0070         __size_of_scale 0192         __size_of_putch 0004      interrupt_function 0004  
       ___wmul@product 0076     __end_of__div_to_l_ 17F3            __stringbase 1005      ___wmul@multiplier 0072  
           printf@_val 00A8             printf@flag 00AD             printf@fval 00B3             printf@prec 00B6  
            lcd_putc@c 007A           ??_lcd_gotoxy 0078       lcd_put_byte@temp 0076           _isprint$3671 0072  
   __end_of_lcd_gotoxy 0AD1       __size_of___awdiv 0046       __size_of___lbdiv 001B       __size_of___ftadd 00C2  
     __size_of___awmod 003D       __size_of___lbmod 001C       __size_of___ftneg 0008       __size_of___lldiv 0049  
             ___altoft 0CA8       __size_of___ftmul 006F       __size_of___llmod 003E       __size_of___ftsub 0016  
     __size_of___fttol 005B               ___ftpack 0F69            _fround$4110 0052            _fround$4111 004F  
             ___lltoft 0C8A       __size_of_isdigit 000E       __size_of_isprint 000E               __powers_ 102D  
             _lcd_busy 0C4B               _lcd_init 0B00               _lcd_putc 0AD1          __size_of_main 00AA  
        __size_of_ngat 000E              printf@exp 00AF               isdigit@c 0073               scale@scl 004A  
             intlevel1 0000       __tdiv_to_l_@exp1 0025       __tdiv_to_l_@cntr 0024       __tdiv_to_l_@quot 0020  
     ___lldiv@dividend 0076               isprint@c 0073              stringcode 1000               printf@ap 00A4  
         ?__tdiv_to_l_ 0072            _printf$3160 00A0       ___lldiv@quotient 0020               stringdir 1000  
             stringtab 1000  
