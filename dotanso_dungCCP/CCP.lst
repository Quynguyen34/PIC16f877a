

HI-TECH Software PIC PRO Macro Assembler V9.83 build 10920 
                                                                                               Tue Dec 06 10:48:29 2022

HI-TECH Software Omniscient Code Generator (PRO mode) build 10920
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	config,global,class=CONFIG,delta=2
     5                           	psect	strings,global,class=STRING,delta=2
     6                           	psect	cinit,global,class=CODE,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	maintext,global,class=CODE,delta=2
    14                           	psect	text757,local,class=CODE,delta=2
    15                           	psect	text760,local,class=CODE,delta=2
    16                           	psect	text762,local,class=CODE,delta=2
    17                           	psect	text763,local,class=CODE,delta=2
    18                           	psect	text766,local,class=CODE,delta=2
    19                           	psect	text784,local,class=CODE,delta=2
    20                           	psect	text788,local,class=CODE,delta=2
    21                           	psect	intentry,global,class=CODE,delta=2
    22                           	psect	text790,local,class=CODE,delta=2
    23                           	psect	pa_nodes,global,class=CODE,delta=2
    24                           	dabs	1,0x7E,2
    25  000A                     	;#
    26                           
    27                           	psect	config
    28  2007  E3C2               	dw	58306	;#
    29                           
    30                           	psect	strings
    31  1000                     __pstrings:	
    32  1000                     stringtab:	
    33                           ;	global	stringdir,stringtab,__stringbase
    34                           
    35  1000                     stringcode:	
    36                           ;	String table - string pointers are 1 byte each
    37                           
    38  1000                     stringdir:	
    39  1000  3010               	movlw	high stringdir
    40  1001  008A               	movwf	10
    41  1002  0804               	movf	4,w
    42  1003  0A84               	incf	4,f
    43  1004  0782               	addwf	2,f
    44  1005                     __stringbase:	
    45  1005  3400               	retlw	0
    46  1006                     __npowers_:	
    47  1006  3400               	retlw	0
    48  1007  3480               	retlw	128
    49  1008  343F               	retlw	63
    50  1009  34CD               	retlw	205
    51  100A  34CC               	retlw	204
    52  100B  343D               	retlw	61
    53  100C  34D7               	retlw	215
    54  100D  3423               	retlw	35
    55  100E  343C               	retlw	60
    56  100F  3412               	retlw	18
    57  1010  3483               	retlw	131
    58  1011  343A               	retlw	58
    59  1012  34B7               	retlw	183
    60  1013  34D1               	retlw	209
    61  1014  3438               	retlw	56
    62  1015  34C6               	retlw	198
    63  1016  3427               	retlw	39
    64  1017  3437               	retlw	55
    65  1018  3438               	retlw	56
    66  1019  3486               	retlw	134
    67  101A  3435               	retlw	53
    68  101B  34C0               	retlw	192
    69  101C  34D6               	retlw	214
    70  101D  3433               	retlw	51
    71  101E  34CC               	retlw	204
    72  101F  342B               	retlw	43
    73  1020  3432               	retlw	50
    74  1021  3470               	retlw	112
    75  1022  3489               	retlw	137
    76  1023  3430               	retlw	48
    77  1024  34E7               	retlw	231
    78  1025  34DB               	retlw	219
    79  1026  342E               	retlw	46
    80  1027  34E5               	retlw	229
    81  1028  343C               	retlw	60
    82  1029  341E               	retlw	30
    83  102A  3442               	retlw	66
    84  102B  34A2               	retlw	162
    85  102C  340D               	retlw	13
    86  102D                     __powers_:	
    87  102D  3400               	retlw	0
    88  102E  3480               	retlw	128
    89  102F  343F               	retlw	63
    90  1030  3400               	retlw	0
    91  1031  3420               	retlw	32
    92  1032  3441               	retlw	65
    93  1033  3400               	retlw	0
    94  1034  34C8               	retlw	200
    95  1035  3442               	retlw	66
    96  1036  3400               	retlw	0
    97  1037  347A               	retlw	122
    98  1038  3444               	retlw	68
    99  1039  3440               	retlw	64
   100  103A  341C               	retlw	28
   101  103B  3446               	retlw	70
   102  103C  3450               	retlw	80
   103  103D  34C3               	retlw	195
   104  103E  3447               	retlw	71
   105  103F  3424               	retlw	36
   106  1040  3474               	retlw	116
   107  1041  3449               	retlw	73
   108  1042  3497               	retlw	151
   109  1043  3418               	retlw	24
   110  1044  344B               	retlw	75
   111  1045  34BC               	retlw	188
   112  1046  34BE               	retlw	190
   113  1047  344C               	retlw	76
   114  1048  346B               	retlw	107
   115  1049  346E               	retlw	110
   116  104A  344E               	retlw	78
   117  104B  3403               	retlw	3
   118  104C  3415               	retlw	21
   119  104D  3450               	retlw	80
   120  104E  3479               	retlw	121
   121  104F  34AD               	retlw	173
   122  1050  3460               	retlw	96
   123  1051  34F3               	retlw	243
   124  1052  3449               	retlw	73
   125  1053  3471               	retlw	113
   126  1054                     _dpowers:	
   127  1054  3401               	retlw	1
   128  1055  3400               	retlw	0
   129  1056  3400               	retlw	0
   130  1057  3400               	retlw	0
   131  1058  340A               	retlw	10
   132  1059  3400               	retlw	0
   133  105A  3400               	retlw	0
   134  105B  3400               	retlw	0
   135  105C  3464               	retlw	100
   136  105D  3400               	retlw	0
   137  105E  3400               	retlw	0
   138  105F  3400               	retlw	0
   139  1060  34E8               	retlw	232
   140  1061  3403               	retlw	3
   141  1062  3400               	retlw	0
   142  1063  3400               	retlw	0
   143  1064  3410               	retlw	16
   144  1065  3427               	retlw	39
   145  1066  3400               	retlw	0
   146  1067  3400               	retlw	0
   147  1068  34A0               	retlw	160
   148  1069  3486               	retlw	134
   149  106A  3401               	retlw	1
   150  106B  3400               	retlw	0
   151  106C  3440               	retlw	64
   152  106D  3442               	retlw	66
   153  106E  340F               	retlw	15
   154  106F  3400               	retlw	0
   155  1070  3480               	retlw	128
   156  1071  3496               	retlw	150
   157  1072  3498               	retlw	152
   158  1073  3400               	retlw	0
   159  1074  3400               	retlw	0
   160  1075  34E1               	retlw	225
   161  1076  34F5               	retlw	245
   162  1077  3405               	retlw	5
   163  1078  3400               	retlw	0
   164  1079  34CA               	retlw	202
   165  107A  349A               	retlw	154
   166  107B  343B               	retlw	59
   167  0015                     _CCPR1	set	21
   168  0017                     _CCP1CON	set	23
   169  0016                     _CCPR1H	set	22
   170  0015                     _CCPR1L	set	21
   171  000F                     _TMR1H	set	15
   172  000E                     _TMR1L	set	14
   173  0062                     _CCP1IF	set	98
   174  005F                     _GIE	set	95
   175  005E                     _PEIE	set	94
   176  0041                     _RD1	set	65
   177  0042                     _RD2	set	66
   178  0043                     _RD3	set	67
   179  0044                     _RD4	set	68
   180  0045                     _RD5	set	69
   181  0046                     _RD6	set	70
   182  0047                     _RD7	set	71
   183  0048                     _RE0	set	72
   184  0084                     _T1CKPS0	set	132
   185  0085                     _T1CKPS1	set	133
   186  0082                     _T1SYNC	set	130
   187  0081                     _TMR1CS	set	129
   188  0086                     _TMR1GE	set	134
   189  0080                     _TMR1ON	set	128
   190  0462                     _CCP1IE	set	1122
   191  043A                     _TRISC2	set	1082
   192  0441                     _TRISD1	set	1089
   193  0442                     _TRISD2	set	1090
   194  0443                     _TRISD3	set	1091
   195  0444                     _TRISD4	set	1092
   196  0445                     _TRISD5	set	1093
   197  0446                     _TRISD6	set	1094
   198  0447                     _TRISD7	set	1095
   199  0448                     _TRISE0	set	1096
   200  0188                     _ANSEL	set	392
   201  0189                     _ANSELH	set	393
   202  107C                     STR_1:	
   203  107C  3478               	retlw	120	;'x'
   204  107D  3475               	retlw	117	;'u'
   205  107E  346E               	retlw	110	;'n'
   206  107F  3467               	retlw	103	;'g'
   207  1080  343A               	retlw	58	;':'
   208  1081  3420               	retlw	32	;' '
   209  1082  3425               	retlw	37	;'%'
   210  1083  3430               	retlw	48	;'0'
   211  1084  3435               	retlw	53	;'5'
   212  1085  3475               	retlw	117	;'u'
   213  1086  3400               	retlw	0
   214  1087                     STR_2:	
   215  1087  3466               	retlw	102	;'f'
   216  1088  343A               	retlw	58	;':'
   217  1089  3420               	retlw	32	;' '
   218  108A  3425               	retlw	37	;'%'
   219  108B  3433               	retlw	51	;'3'
   220  108C  342E               	retlw	46	;'.'
   221  108D  3432               	retlw	50	;'2'
   222  108E  3466               	retlw	102	;'f'
   223  108F  3400               	retlw	0
   224                           
   225                           	psect	cinit
   226  07D0                     start_initialization:	
   227                           
   228                           ; Clear objects allocated to COMMON
   229  07D0  01F6               	clrf	__pbssCOMMON& (0+127)
   230  07D1  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
   231                           
   232                           ; Clear objects allocated to BANK0
   233  07D2  01E9               	clrf	__pbssBANK0& (0+127)
   234  07D3  01EA               	clrf	(__pbssBANK0+1)& (0+127)
   235  07D4  01EB               	clrf	(__pbssBANK0+2)& (0+127)
   236  07D5  01EC               	clrf	(__pbssBANK0+3)& (0+127)
   237  07D6  01ED               	clrf	(__pbssBANK0+4)& (0+127)
   238  07D7  01EE               	clrf	(__pbssBANK0+5)& (0+127)
   239  07D8  01EF               	clrf	(__pbssBANK0+6)& (0+127)
   240                           
   241                           ; Clear objects allocated to BANK1
   242  07D9  1683               	bsf	3,5	;RP0=1, select bank1
   243  07DA  01B9               	clrf	__pbssBANK1& (0+127)
   244  07DB  01BA               	clrf	(__pbssBANK1+1)& (0+127)
   245  07DC  01BB               	clrf	(__pbssBANK1+2)& (0+127)
   246  07DD                     end_of_initialization:	
   247                           ;End of C runtime variable initialization code
   248                           
   249  07DD  0183               	clrf	3
   250  07DE  160A  118A  2EA2   	ljmp	_main	;jump to C main() function
   251                           
   252                           	psect	bssCOMMON
   253  0076                     __pbssCOMMON:	
   254  0076                     _ccp1_old:	
   255  0076                     	ds	2
   256                           
   257                           	psect	bssBANK0
   258  0069                     __pbssBANK0:	
   259  0069                     _xung:	
   260  0069                     	ds	4
   261  006D                     _f:	
   262  006D                     	ds	3
   263                           
   264                           	psect	bssBANK1
   265  00B9                     __pbssBANK1:	
   266  00B9                     _t:	
   267  00B9                     	ds	3
   268                           
   269                           	psect	cstackBANK1
   270  00A0                     __pcstackBANK1:	
   271  00A0                     _printf$3160:	
   272                           
   273                           ; 4 bytes @ 0x0
   274  00A0                     	ds	4
   275  00A4                     printf@ap:	
   276                           
   277                           ; 1 bytes @ 0x4
   278  00A4                     	ds	1
   279  00A5                     printf@integ:	
   280                           
   281                           ; 3 bytes @ 0x5
   282  00A5                     	ds	3
   283  00A8                     printf@_val:	
   284                           
   285                           ; 4 bytes @ 0x8
   286  00A8                     	ds	4
   287  00AC                     printf@f:	
   288                           
   289                           ; 1 bytes @ 0xC
   290  00AC                     	ds	1
   291  00AD                     printf@flag:	
   292                           
   293                           ; 2 bytes @ 0xD
   294  00AD                     	ds	2
   295  00AF                     printf@exp:	
   296                           
   297                           ; 2 bytes @ 0xF
   298  00AF                     	ds	2
   299  00B1                     printf@width:	
   300                           
   301                           ; 2 bytes @ 0x11
   302  00B1                     	ds	2
   303  00B3                     printf@fval:	
   304                           
   305                           ; 3 bytes @ 0x13
   306  00B3                     	ds	3
   307  00B6                     printf@prec:	
   308                           
   309                           ; 2 bytes @ 0x16
   310  00B6                     	ds	2
   311  00B8                     printf@c:	
   312                           
   313                           ; 1 bytes @ 0x18
   314  00B8                     	ds	1
   315                           
   316                           	psect	cstackCOMMON
   317  0070                     __pcstackCOMMON:	
   318  0070                     ?_isprint:	
   319  0070                     ?_isdigit:	
   320                           ; 1 bit 
   321                           
   322  0070                     ?_lcd_init:	
   323                           ; 1 bit 
   324                           
   325  0070                     ?_lcd_putc:	
   326                           ; 0 bytes @ 0x0
   327                           
   328  0070                     ?_main:	
   329                           ; 0 bytes @ 0x0
   330                           
   331  0070                     ?_ngat:	
   332                           ; 0 bytes @ 0x0
   333                           
   334  0070                     ?_putch:	
   335                           ; 0 bytes @ 0x0
   336                           
   337  0070                     ?_lcd_busy:	
   338                           ; 0 bytes @ 0x0
   339                           
   340  0070                     ?_abs:	
   341                           ; 1 bytes @ 0x0
   342                           
   343  0070                     abs@a:	
   344                           ; 2 bytes @ 0x0
   345                           
   346                           
   347                           ; 2 bytes @ 0x0
   348  0070                     	ds	2
   349  0072                     ??_abs:	
   350                           
   351                           ; 0 bytes @ 0x2
   352  0072                     	ds	2
   353  0074                     ??_ngat:	
   354                           
   355                           ; 0 bytes @ 0x4
   356  0074                     	ds	2
   357  0076                     ??_lcd_gotoxy:	
   358  0076                     ??_isprint:	
   359                           ; 0 bytes @ 0x6
   360                           
   361  0076                     ??_isdigit:	
   362                           ; 0 bytes @ 0x6
   363                           
   364  0076                     ??_lcd_putc:	
   365                           ; 0 bytes @ 0x6
   366                           
   367  0076                     ??_main:	
   368                           ; 0 bytes @ 0x6
   369                           
   370  0076                     ??_putch:	
   371                           ; 0 bytes @ 0x6
   372                           
   373  0076                     ??_fround:	
   374                           ; 0 bytes @ 0x6
   375                           
   376  0076                     ??___bmul:	
   377                           ; 0 bytes @ 0x6
   378                           
   379  0076                     ??___wmul:	
   380                           ; 0 bytes @ 0x6
   381                           
   382  0076                     ??___lbdiv:	
   383                           ; 0 bytes @ 0x6
   384                           
   385  0076                     ??___ftsub:	
   386                           ; 0 bytes @ 0x6
   387                           
   388  0076                     ??___awdiv:	
   389                           ; 0 bytes @ 0x6
   390                           
   391  0076                     ??___llmod:	
   392                           ; 0 bytes @ 0x6
   393                           
   394  0076                     ??___ftneg:	
   395                           ; 0 bytes @ 0x6
   396                           
   397  0076                     ??___ftge:	
   398                           ; 0 bytes @ 0x6
   399                           
   400  0076                     ??___lldiv:	
   401                           ; 0 bytes @ 0x6
   402                           
   403  0076                     ??___awmod:	
   404                           ; 0 bytes @ 0x6
   405                           
   406  0076                     ??___altoft:	
   407                           ; 0 bytes @ 0x6
   408                           
   409  0076                     ??___lltoft:	
   410                           ; 0 bytes @ 0x6
   411                           
   412                           
   413                           	psect	cstackBANK0
   414  0020                     __pcstackBANK0:	
   415                           ; 0 bytes @ 0x6
   416                           
   417  0020                     ?_lcd_put_byte:	
   418  0020                     ??_lcd_busy:	
   419                           ; 0 bytes @ 0x0
   420                           
   421  0020                     ?___ftge:	
   422                           ; 0 bytes @ 0x0
   423                           
   424  0020                     ?___lbmod:	
   425                           ; 1 bit 
   426                           
   427  0020                     ?___wmul:	
   428                           ; 1 bytes @ 0x0
   429                           
   430  0020                     ?___awmod:	
   431                           ; 2 bytes @ 0x0
   432                           
   433  0020                     ?___ftpack:	
   434                           ; 2 bytes @ 0x0
   435                           
   436  0020                     ?___ftneg:	
   437                           ; 3 bytes @ 0x0
   438                           
   439  0020                     ?__tdiv_to_l_:	
   440                           ; 3 bytes @ 0x0
   441                           
   442  0020                     ?__div_to_l_:	
   443                           ; 4 bytes @ 0x0
   444                           
   445  0020                     ?___lldiv:	
   446                           ; 4 bytes @ 0x0
   447                           
   448  0020                     lcd_put_byte@b:	
   449                           ; 4 bytes @ 0x0
   450                           
   451  0020                     _isdigit$3670:	
   452                           ; 1 bytes @ 0x0
   453                           
   454  0020                     _isprint$3673:	
   455                           ; 1 bytes @ 0x0
   456                           
   457  0020                     ___lbmod@divisor:	
   458                           ; 1 bytes @ 0x0
   459                           
   460  0020                     ___wmul@multiplier:	
   461                           ; 1 bytes @ 0x0
   462                           
   463  0020                     ___awmod@divisor:	
   464                           ; 2 bytes @ 0x0
   465                           
   466  0020                     ___ftneg@f1:	
   467                           ; 2 bytes @ 0x0
   468                           
   469  0020                     ___ftge@ff1:	
   470                           ; 3 bytes @ 0x0
   471                           
   472  0020                     __tdiv_to_l_@f1:	
   473                           ; 3 bytes @ 0x0
   474                           
   475  0020                     __div_to_l_@f1:	
   476                           ; 3 bytes @ 0x0
   477                           
   478  0020                     ___ftpack@arg:	
   479                           ; 3 bytes @ 0x0
   480                           
   481  0020                     ___lldiv@divisor:	
   482                           ; 3 bytes @ 0x0
   483                           
   484                           
   485                           ; 4 bytes @ 0x0
   486  0020                     	ds	1
   487  0021                     ??_lcd_put_byte:	
   488  0021                     ??___lbmod:	
   489                           ; 0 bytes @ 0x1
   490                           
   491  0021                     lcd_busy@busy:	
   492                           ; 0 bytes @ 0x1
   493                           
   494  0021                     isdigit@c:	
   495                           ; 1 bytes @ 0x1
   496                           
   497  0021                     isprint@c:	
   498                           ; 1 bytes @ 0x1
   499                           
   500                           
   501                           ; 1 bytes @ 0x1
   502  0021                     	ds	1
   503  0022                     ___lbmod@dividend:	
   504  0022                     ___wmul@multiplicand:	
   505                           ; 1 bytes @ 0x2
   506                           
   507  0022                     ___awmod@dividend:	
   508                           ; 2 bytes @ 0x2
   509                           
   510                           
   511                           ; 2 bytes @ 0x2
   512  0022                     	ds	1
   513  0023                     lcd_put_byte@rs:	
   514  0023                     ___lbmod@counter:	
   515                           ; 1 bytes @ 0x3
   516                           
   517  0023                     ___ftpack@exp:	
   518                           ; 1 bytes @ 0x3
   519                           
   520  0023                     ___ftge@ff2:	
   521                           ; 1 bytes @ 0x3
   522                           
   523  0023                     __tdiv_to_l_@f2:	
   524                           ; 3 bytes @ 0x3
   525                           
   526  0023                     __div_to_l_@f2:	
   527                           ; 3 bytes @ 0x3
   528                           
   529                           
   530                           ; 3 bytes @ 0x3
   531  0023                     	ds	1
   532  0024                     lcd_put_byte@temp:	
   533  0024                     ___lbmod@rem:	
   534                           ; 1 bytes @ 0x4
   535                           
   536  0024                     ___awmod@counter:	
   537                           ; 1 bytes @ 0x4
   538                           
   539  0024                     ___ftpack@sign:	
   540                           ; 1 bytes @ 0x4
   541                           
   542  0024                     ___wmul@product:	
   543                           ; 1 bytes @ 0x4
   544                           
   545  0024                     ___lldiv@dividend:	
   546                           ; 2 bytes @ 0x4
   547                           
   548                           
   549                           ; 4 bytes @ 0x4
   550  0024                     	ds	1
   551  0025                     ?_lcd_gotoxy:	
   552  0025                     ??___ftpack:	
   553                           ; 0 bytes @ 0x5
   554                           
   555  0025                     ??_lcd_init:	
   556                           ; 0 bytes @ 0x5
   557                           
   558  0025                     ?___lbdiv:	
   559                           ; 0 bytes @ 0x5
   560                           
   561  0025                     lcd_gotoxy@row:	
   562                           ; 1 bytes @ 0x5
   563                           
   564  0025                     ___lbdiv@divisor:	
   565                           ; 1 bytes @ 0x5
   566                           
   567  0025                     ___awmod@sign:	
   568                           ; 1 bytes @ 0x5
   569                           
   570                           
   571                           ; 1 bytes @ 0x5
   572  0025                     	ds	1
   573  0026                     ??__tdiv_to_l_:	
   574  0026                     ??__div_to_l_:	
   575                           ; 0 bytes @ 0x6
   576                           
   577  0026                     ?___awdiv:	
   578                           ; 0 bytes @ 0x6
   579                           
   580  0026                     lcd_gotoxy@col:	
   581                           ; 2 bytes @ 0x6
   582                           
   583  0026                     ___lbdiv@dividend:	
   584                           ; 1 bytes @ 0x6
   585                           
   586  0026                     ___awdiv@divisor:	
   587                           ; 1 bytes @ 0x6
   588                           
   589                           
   590                           ; 2 bytes @ 0x6
   591  0026                     	ds	1
   592  0027                     lcd_gotoxy@address:	
   593  0027                     ___lbdiv@counter:	
   594                           ; 1 bytes @ 0x7
   595                           
   596                           
   597                           ; 1 bytes @ 0x7
   598  0027                     	ds	1
   599  0028                     ?___ftdiv:	
   600  0028                     ?___altoft:	
   601                           ; 3 bytes @ 0x8
   602                           
   603  0028                     ?___lltoft:	
   604                           ; 3 bytes @ 0x8
   605                           
   606  0028                     lcd_putc@c:	
   607                           ; 3 bytes @ 0x8
   608                           
   609  0028                     ___lbdiv@quotient:	
   610                           ; 1 bytes @ 0x8
   611                           
   612  0028                     ___awdiv@dividend:	
   613                           ; 1 bytes @ 0x8
   614                           
   615  0028                     ___ftdiv@f2:	
   616                           ; 2 bytes @ 0x8
   617                           
   618  0028                     ___lldiv@quotient:	
   619                           ; 3 bytes @ 0x8
   620                           
   621  0028                     ___altoft@c:	
   622                           ; 4 bytes @ 0x8
   623                           
   624  0028                     ___lltoft@c:	
   625                           ; 4 bytes @ 0x8
   626                           
   627                           
   628                           ; 4 bytes @ 0x8
   629  0028                     	ds	1
   630  0029                     ?___bmul:	
   631  0029                     putch@c:	
   632                           ; 1 bytes @ 0x9
   633                           
   634  0029                     ___bmul@multiplicand:	
   635                           ; 1 bytes @ 0x9
   636                           
   637  0029                     __tdiv_to_l_@quot:	
   638                           ; 1 bytes @ 0x9
   639                           
   640                           
   641                           ; 4 bytes @ 0x9
   642  0029                     	ds	1
   643  002A                     ___bmul@product:	
   644  002A                     ___awdiv@counter:	
   645                           ; 1 bytes @ 0xA
   646                           
   647                           
   648                           ; 1 bytes @ 0xA
   649  002A                     	ds	1
   650  002B                     ___bmul@multiplier:	
   651  002B                     ___awdiv@sign:	
   652                           ; 1 bytes @ 0xB
   653                           
   654  002B                     ___ftdiv@f1:	
   655                           ; 1 bytes @ 0xB
   656                           
   657                           
   658                           ; 3 bytes @ 0xB
   659  002B                     	ds	1
   660  002C                     ___lldiv@counter:	
   661  002C                     ___altoft@exp:	
   662                           ; 1 bytes @ 0xC
   663                           
   664  002C                     ___lltoft@exp:	
   665                           ; 1 bytes @ 0xC
   666                           
   667  002C                     ___awdiv@quotient:	
   668                           ; 1 bytes @ 0xC
   669                           
   670                           
   671                           ; 2 bytes @ 0xC
   672  002C                     	ds	1
   673  002D                     ?___llmod:	
   674  002D                     ___altoft@sign:	
   675                           ; 4 bytes @ 0xD
   676                           
   677  002D                     __tdiv_to_l_@cntr:	
   678                           ; 1 bytes @ 0xD
   679                           
   680  002D                     ___llmod@divisor:	
   681                           ; 1 bytes @ 0xD
   682                           
   683                           
   684                           ; 4 bytes @ 0xD
   685  002D                     	ds	1
   686  002E                     ??___ftdiv:	
   687  002E                     ?___fttol:	
   688                           ; 0 bytes @ 0xE
   689                           
   690  002E                     __tdiv_to_l_@exp1:	
   691                           ; 4 bytes @ 0xE
   692                           
   693  002E                     ___fttol@f1:	
   694                           ; 1 bytes @ 0xE
   695                           
   696  002E                     __div_to_l_@quot:	
   697                           ; 3 bytes @ 0xE
   698                           
   699                           
   700                           ; 4 bytes @ 0xE
   701  002E                     	ds	3
   702  0031                     ___ftdiv@cntr:	
   703  0031                     ___llmod@dividend:	
   704                           ; 1 bytes @ 0x11
   705                           
   706                           
   707                           ; 4 bytes @ 0x11
   708  0031                     	ds	1
   709  0032                     ??___fttol:	
   710  0032                     __div_to_l_@cntr:	
   711                           ; 0 bytes @ 0x12
   712                           
   713  0032                     ___ftdiv@f3:	
   714                           ; 1 bytes @ 0x12
   715                           
   716                           
   717                           ; 3 bytes @ 0x12
   718  0032                     	ds	1
   719  0033                     __div_to_l_@exp1:	
   720                           
   721                           ; 1 bytes @ 0x13
   722  0033                     	ds	2
   723  0035                     ___ftdiv@exp:	
   724  0035                     ___fttol@sign1:	
   725                           ; 1 bytes @ 0x15
   726                           
   727  0035                     ___llmod@counter:	
   728                           ; 1 bytes @ 0x15
   729                           
   730                           
   731                           ; 1 bytes @ 0x15
   732  0035                     	ds	1
   733  0036                     ___ftdiv@sign:	
   734  0036                     ___fttol@lval:	
   735                           ; 1 bytes @ 0x16
   736                           
   737                           
   738                           ; 4 bytes @ 0x16
   739  0036                     	ds	4
   740  003A                     ___fttol@exp1:	
   741                           
   742                           ; 1 bytes @ 0x1A
   743  003A                     	ds	1
   744  003B                     ?___ftmul:	
   745  003B                     ___ftmul@f1:	
   746                           ; 3 bytes @ 0x1B
   747                           
   748                           
   749                           ; 3 bytes @ 0x1B
   750  003B                     	ds	3
   751  003E                     ___ftmul@f2:	
   752                           
   753                           ; 3 bytes @ 0x1E
   754  003E                     	ds	3
   755  0041                     ??___ftmul:	
   756                           
   757                           ; 0 bytes @ 0x21
   758  0041                     	ds	3
   759  0044                     ___ftmul@exp:	
   760                           
   761                           ; 1 bytes @ 0x24
   762  0044                     	ds	1
   763  0045                     ___ftmul@f3_as_product:	
   764                           
   765                           ; 3 bytes @ 0x25
   766  0045                     	ds	3
   767  0048                     ___ftmul@cntr:	
   768                           
   769                           ; 1 bytes @ 0x28
   770  0048                     	ds	1
   771  0049                     ___ftmul@sign:	
   772                           
   773                           ; 1 bytes @ 0x29
   774  0049                     	ds	1
   775  004A                     ?_scale:	
   776  004A                     ?___ftadd:	
   777                           ; 3 bytes @ 0x2A
   778                           
   779  004A                     ___ftadd@f1:	
   780                           ; 3 bytes @ 0x2A
   781                           
   782                           
   783                           ; 3 bytes @ 0x2A
   784  004A                     	ds	3
   785  004D                     ??_scale:	
   786  004D                     ___ftadd@f2:	
   787                           ; 0 bytes @ 0x2D
   788                           
   789                           
   790                           ; 3 bytes @ 0x2D
   791  004D                     	ds	3
   792  0050                     ??___ftadd:	
   793                           
   794                           ; 0 bytes @ 0x30
   795  0050                     	ds	1
   796  0051                     _scale$4114:	
   797                           
   798                           ; 3 bytes @ 0x31
   799  0051                     	ds	2
   800  0053                     ___ftadd@sign:	
   801                           
   802                           ; 1 bytes @ 0x33
   803  0053                     	ds	1
   804  0054                     scale@scl:	
   805  0054                     ___ftadd@exp2:	
   806                           ; 1 bytes @ 0x34
   807                           
   808                           
   809                           ; 1 bytes @ 0x34
   810  0054                     	ds	1
   811  0055                     ___ftadd@exp1:	
   812                           
   813                           ; 1 bytes @ 0x35
   814  0055                     	ds	1
   815  0056                     ?_fround:	
   816  0056                     ?___ftsub:	
   817                           ; 3 bytes @ 0x36
   818                           
   819  0056                     ___ftsub@f2:	
   820                           ; 3 bytes @ 0x36
   821                           
   822                           
   823                           ; 3 bytes @ 0x36
   824  0056                     	ds	3
   825  0059                     ___ftsub@f1:	
   826  0059                     _fround$4113:	
   827                           ; 3 bytes @ 0x39
   828                           
   829                           
   830                           ; 3 bytes @ 0x39
   831  0059                     	ds	3
   832  005C                     _fround$4112:	
   833                           
   834                           ; 3 bytes @ 0x3C
   835  005C                     	ds	3
   836  005F                     fround@prec:	
   837                           
   838                           ; 1 bytes @ 0x3F
   839  005F                     	ds	1
   840  0060                     ?_printf:	
   841                           
   842                           ; 2 bytes @ 0x40
   843  0060                     	ds	4
   844  0064                     ??_printf:	
   845                           
   846                           ; 0 bytes @ 0x44
   847  0064                     	ds	5
   848                           
   849                           	psect	maintext
   850  16A2                     __pmaintext:	
   851 ;;Data sizes: Strings 20, constant 118, data 0, bss 12, persistent 0 stack 0
   852 ;;Auto spaces:   Size  Autos    Used
   853 ;; COMMON          14      6       8
   854 ;; BANK0           80     73      80
   855 ;; BANK1           80     25      28
   856 ;; BANK3           96      0       0
   857 ;; BANK2           96      0       0
   858 ;;
   859 ;; Pointer list with targets:
   860 ;; ?___ftpack	float  size(1) Largest target is 3
   861 ;;		 -> t(BANK1[3]), 
   862 ;;
   863 ;; ?___lldiv	unsigned long  size(1) Largest target is 0
   864 ;;
   865 ;; ?___llmod	unsigned long  size(1) Largest target is 3
   866 ;;		 -> t(BANK1[3]), 
   867 ;;
   868 ;; ?___ftsub	float  size(1) Largest target is 0
   869 ;;
   870 ;; ?___lltoft	float  size(1) Largest target is 0
   871 ;;
   872 ;; ?__tdiv_to_l_	unsigned long  size(1) Largest target is 0
   873 ;;
   874 ;; ?__div_to_l_	unsigned long  size(1) Largest target is 0
   875 ;;
   876 ;; ?___fttol	long  size(1) Largest target is 3
   877 ;;		 -> t(BANK1[3]), 
   878 ;;
   879 ;; ?___ftadd	float  size(1) Largest target is 3
   880 ;;		 -> t(BANK1[3]), 
   881 ;;
   882 ;; ?___ftneg	float  size(1) Largest target is 3
   883 ;;		 -> t(BANK1[3]), 
   884 ;;
   885 ;; ?___awmod	int  size(2) Largest target is 40
   886 ;;		 -> dpowers(CODE[40]), t(BANK1[3]), 
   887 ;;
   888 ;; ?___awdiv	int  size(1) Largest target is 0
   889 ;;
   890 ;; ?_scale	int  size(1) Largest target is 0
   891 ;;
   892 ;; ?___wmul	unsigned int  size(1) Largest target is 0
   893 ;;
   894 ;; ?_fround	unsigned int  size(1) Largest target is 0
   895 ;;
   896 ;; ?_abs	int  size(1) Largest target is 0
   897 ;;
   898 ;; ?___ftdiv	float  size(1) Largest target is 0
   899 ;;
   900 ;; ?___ftmul	float  size(1) Largest target is 0
   901 ;;
   902 ;; ?___altoft	float  size(1) Largest target is 0
   903 ;;
   904 ;; printf@f	PTR const unsigned char  size(1) Largest target is 11
   905 ;;		 -> STR_2(CODE[9]), STR_1(CODE[11]), 
   906 ;;
   907 ;; ?_printf	int  size(1) Largest target is 3
   908 ;;		 -> t(BANK1[3]), 
   909 ;;
   910 ;; printf@ap	PTR void [1] size(1) Largest target is 2
   911 ;;		 -> ?_printf(BANK0[2]), 
   912 ;;
   913 ;; S3149$_cp	PTR const unsigned char  size(1) Largest target is 0
   914 ;;
   915 ;; _val._str._cp	PTR const unsigned char  size(1) Largest target is 0
   916 ;;
   917 ;;
   918 ;; Critical Paths under _main in COMMON
   919 ;;
   920 ;;   None.
   921 ;;
   922 ;; Critical Paths under _ngat in COMMON
   923 ;;
   924 ;;   _ngat->_abs
   925 ;;
   926 ;; Critical Paths under _main in BANK0
   927 ;;
   928 ;;   _main->_printf
   929 ;;   _printf->_fround
   930 ;;   _putch->_lcd_putc
   931 ;;   _lcd_putc->_lcd_gotoxy
   932 ;;   ___ftsub->___ftadd
   933 ;;   _scale->___ftmul
   934 ;;   _fround->___ftadd
   935 ;;   _lcd_gotoxy->_lcd_put_byte
   936 ;;   _lcd_init->_lcd_put_byte
   937 ;;   ___lltoft->___ftpack
   938 ;;   ___altoft->___ftpack
   939 ;;   ___ftmul->___fttol
   940 ;;   ___ftdiv->___ftpack
   941 ;;   ___ftadd->___ftmul
   942 ;;   ___llmod->___lldiv
   943 ;;   ___awdiv->___awmod
   944 ;;   ___fttol->___awdiv
   945 ;;   ___lbdiv->___lbmod
   946 ;;   ___bmul->___lbdiv
   947 ;;
   948 ;; Critical Paths under _ngat in BANK0
   949 ;;
   950 ;;   None.
   951 ;;
   952 ;; Critical Paths under _main in BANK1
   953 ;;
   954 ;;   _main->_printf
   955 ;;
   956 ;; Critical Paths under _ngat in BANK1
   957 ;;
   958 ;;   None.
   959 ;;
   960 ;; Critical Paths under _main in BANK3
   961 ;;
   962 ;;   None.
   963 ;;
   964 ;; Critical Paths under _ngat in BANK3
   965 ;;
   966 ;;   None.
   967 ;;
   968 ;; Critical Paths under _main in BANK2
   969 ;;
   970 ;;   None.
   971 ;;
   972 ;; Critical Paths under _ngat in BANK2
   973 ;;
   974 ;;   None.
   975 ;;
   976 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   977 ;;
   978 ;;
   979 ;;Call Graph Tables:
   980 ;;
   981 ;; ---------------------------------------------------------------------------------
   982 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   983 ;; ---------------------------------------------------------------------------------
   984 ;; (0) _main                                                 0     0      0   15487
   985 ;;                           _lcd_init
   986 ;;                           ___altoft
   987 ;;                            ___ftmul
   988 ;;                            ___ftdiv
   989 ;;                         _lcd_gotoxy
   990 ;;                             _printf
   991 ;; ---------------------------------------------------------------------------------
   992 ;; (1) _printf                                              38    34      4   13460
   993 ;;                                             64 BANK0      9     5      4
   994 ;;                                              0 BANK1     25    25      0
   995 ;;                              _putch
   996 ;;                            _isdigit
   997 ;;                             ___wmul
   998 ;;                             ___ftge
   999 ;;                            ___ftneg
  1000 ;;                            ___awdiv
  1001 ;;                              _scale
  1002 ;;                            ___ftmul
  1003 ;;                             _fround
  1004 ;;                            ___ftadd
  1005 ;;                            ___fttol
  1006 ;;                         __div_to_l_
  1007 ;;                        __tdiv_to_l_
  1008 ;;                           ___lltoft
  1009 ;;                            ___ftsub
  1010 ;;                            ___lldiv
  1011 ;;                            ___llmod
  1012 ;; ---------------------------------------------------------------------------------
  1013 ;; (2) _putch                                                1     1      0     813
  1014 ;;                                              9 BANK0      1     1      0
  1015 ;;                           _lcd_putc
  1016 ;; ---------------------------------------------------------------------------------
  1017 ;; (3) _lcd_putc                                             1     1      0     782
  1018 ;;                                              8 BANK0      1     1      0
  1019 ;;                       _lcd_put_byte
  1020 ;;                           _lcd_busy
  1021 ;;                         _lcd_gotoxy
  1022 ;;                            _isprint
  1023 ;; ---------------------------------------------------------------------------------
  1024 ;; (2) ___ftsub                                              6     0      6    1114
  1025 ;;                                             54 BANK0      6     0      6
  1026 ;;                            ___ftadd
  1027 ;;                           ___lltoft (ARG)
  1028 ;; ---------------------------------------------------------------------------------
  1029 ;; (2) _scale                                               14    11      3    2218
  1030 ;;                                             42 BANK0     11     8      3
  1031 ;;                            ___awmod
  1032 ;;                            ___awdiv
  1033 ;;                            ___ftmul
  1034 ;;                             ___bmul
  1035 ;;                            ___fttol (ARG)
  1036 ;; ---------------------------------------------------------------------------------
  1037 ;; (2) _fround                                              13    10      3    1461
  1038 ;;                                             54 BANK0     10     7      3
  1039 ;;                            ___lbmod
  1040 ;;                             ___bmul
  1041 ;;                            ___lbdiv
  1042 ;;                            ___ftmul
  1043 ;;                            ___ftadd (ARG)
  1044 ;; ---------------------------------------------------------------------------------
  1045 ;; (4) _lcd_gotoxy                                           3     2      1     346
  1046 ;;                                              5 BANK0      3     2      1
  1047 ;;                       _lcd_put_byte
  1048 ;;                           _lcd_busy
  1049 ;; ---------------------------------------------------------------------------------
  1050 ;; (1) _lcd_init                                             4     4      0     244
  1051 ;;                                              5 BANK0      3     3      0
  1052 ;;                       _lcd_put_byte
  1053 ;;                           _lcd_busy
  1054 ;; ---------------------------------------------------------------------------------
  1055 ;; (2) ___lltoft                                             5     1      4     311
  1056 ;;                                              8 BANK0      5     1      4
  1057 ;;                           ___ftpack
  1058 ;; ---------------------------------------------------------------------------------
  1059 ;; (1) ___altoft                                             6     2      4     413
  1060 ;;                                              8 BANK0      6     2      4
  1061 ;;                           ___ftpack
  1062 ;; ---------------------------------------------------------------------------------
  1063 ;; (3) ___ftmul                                             15     9      6     535
  1064 ;;                                             27 BANK0     15     9      6
  1065 ;;                           ___ftpack
  1066 ;;                           ___altoft (ARG)
  1067 ;;                            ___fttol (ARG)
  1068 ;;                            ___awdiv (ARG)
  1069 ;;                            ___awmod (ARG)
  1070 ;;                             ___bmul (ARG)
  1071 ;;                            ___lbdiv (ARG)
  1072 ;;                            ___lbmod (ARG)
  1073 ;; ---------------------------------------------------------------------------------
  1074 ;; (1) ___ftdiv                                             15     9      6     489
  1075 ;;                                              8 BANK0     15     9      6
  1076 ;;                           ___ftpack
  1077 ;; ---------------------------------------------------------------------------------
  1078 ;; (3) ___ftadd                                             12     6      6    1049
  1079 ;;                                             42 BANK0     12     6      6
  1080 ;;                           ___ftpack
  1081 ;;                            ___lbmod (ARG)
  1082 ;;                             ___bmul (ARG)
  1083 ;;                            ___lbdiv (ARG)
  1084 ;;                            ___ftmul (ARG)
  1085 ;; ---------------------------------------------------------------------------------
  1086 ;; (5) _lcd_busy                                             2     2      0      23
  1087 ;;                                              0 BANK0      2     2      0
  1088 ;; ---------------------------------------------------------------------------------
  1089 ;; (5) _lcd_put_byte                                         5     4      1     221
  1090 ;;                                              0 BANK0      5     4      1
  1091 ;; ---------------------------------------------------------------------------------
  1092 ;; (3) ___awmod                                              6     2      4     433
  1093 ;;                                              0 BANK0      6     2      4
  1094 ;; ---------------------------------------------------------------------------------
  1095 ;; (2) ___lldiv                                             13     5      8     241
  1096 ;;                                              0 BANK0     13     5      8
  1097 ;; ---------------------------------------------------------------------------------
  1098 ;; (2) ___ftge                                               6     0      6     198
  1099 ;;                                              0 BANK0      6     0      6
  1100 ;; ---------------------------------------------------------------------------------
  1101 ;; (2) ___ftneg                                              3     0      3      65
  1102 ;;                                              0 BANK0      3     0      3
  1103 ;; ---------------------------------------------------------------------------------
  1104 ;; (2) ___llmod                                              9     1      8     232
  1105 ;;                                             13 BANK0      9     1      8
  1106 ;;                            ___lldiv (ARG)
  1107 ;; ---------------------------------------------------------------------------------
  1108 ;; (3) ___awdiv                                              8     4      4     445
  1109 ;;                                              6 BANK0      8     4      4
  1110 ;;                            ___awmod (ARG)
  1111 ;; ---------------------------------------------------------------------------------
  1112 ;; (2) ___fttol                                             13     9      4     252
  1113 ;;                                             14 BANK0     13     9      4
  1114 ;;                           ___ftpack (ARG)
  1115 ;;                            ___awmod (ARG)
  1116 ;;                            ___awdiv (ARG)
  1117 ;;                             ___bmul (ARG)
  1118 ;; ---------------------------------------------------------------------------------
  1119 ;; (4) ___ftpack                                             8     3      5     209
  1120 ;;                                              0 BANK0      8     3      5
  1121 ;; ---------------------------------------------------------------------------------
  1122 ;; (3) ___lbmod                                              5     4      1     159
  1123 ;;                                              0 BANK0      5     4      1
  1124 ;; ---------------------------------------------------------------------------------
  1125 ;; (3) ___lbdiv                                              4     3      1     241
  1126 ;;                                              5 BANK0      4     3      1
  1127 ;;                            ___lbmod (ARG)
  1128 ;; ---------------------------------------------------------------------------------
  1129 ;; (2) ___wmul                                               6     2      4     136
  1130 ;;                                              0 BANK0      6     2      4
  1131 ;; ---------------------------------------------------------------------------------
  1132 ;; (3) ___bmul                                               3     2      1     108
  1133 ;;                                              9 BANK0      3     2      1
  1134 ;;                            ___lbmod (ARG)
  1135 ;;                            ___lbdiv (ARG)
  1136 ;; ---------------------------------------------------------------------------------
  1137 ;; (2) __div_to_l_                                          20    14      6     446
  1138 ;;                                              0 BANK0     20    14      6
  1139 ;; ---------------------------------------------------------------------------------
  1140 ;; (2) __tdiv_to_l_                                         15     9      6     303
  1141 ;;                                              0 BANK0     15     9      6
  1142 ;; ---------------------------------------------------------------------------------
  1143 ;; (2) _isdigit                                              2     2      0      99
  1144 ;;                                              0 BANK0      2     2      0
  1145 ;; ---------------------------------------------------------------------------------
  1146 ;; (4) _isprint                                              2     2      0      99
  1147 ;;                                              0 BANK0      2     2      0
  1148 ;; ---------------------------------------------------------------------------------
  1149 ;; Estimated maximum stack depth 5
  1150 ;; ---------------------------------------------------------------------------------
  1151 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1152 ;; ---------------------------------------------------------------------------------
  1153 ;; (6) _ngat                                                 2     2      0      66
  1154 ;;                                              4 COMMON     2     2      0
  1155 ;;                                _abs
  1156 ;; ---------------------------------------------------------------------------------
  1157 ;; (7) _abs                                                  4     2      2      66
  1158 ;;                                              0 COMMON     4     2      2
  1159 ;; ---------------------------------------------------------------------------------
  1160 ;; Estimated maximum stack depth 7
  1161 ;; ---------------------------------------------------------------------------------
  1162 ;; Call Graph Graphs:
  1163 ;; _main (ROOT)
  1164 ;;   _lcd_init
  1165 ;;     _lcd_put_byte
  1166 ;;     _lcd_busy
  1167 ;;   ___altoft
  1168 ;;     ___ftpack
  1169 ;;   ___ftmul
  1170 ;;     ___ftpack
  1171 ;;     ___altoft (ARG)
  1172 ;;       ___ftpack
  1173 ;;     ___fttol (ARG)
  1174 ;;       ___ftpack (ARG)
  1175 ;;       ___awmod (ARG)
  1176 ;;       ___awdiv (ARG)
  1177 ;;         ___awmod (ARG)
  1178 ;;       ___bmul (ARG)
  1179 ;;         ___lbmod (ARG)
  1180 ;;         ___lbdiv (ARG)
  1181 ;;           ___lbmod (ARG)
  1182 ;;     ___awdiv (ARG)
  1183 ;;       ___awmod (ARG)
  1184 ;;     ___awmod (ARG)
  1185 ;;     ___bmul (ARG)
  1186 ;;       ___lbmod (ARG)
  1187 ;;       ___lbdiv (ARG)
  1188 ;;         ___lbmod (ARG)
  1189 ;;     ___lbdiv (ARG)
  1190 ;;       ___lbmod (ARG)
  1191 ;;     ___lbmod (ARG)
  1192 ;;   ___ftdiv
  1193 ;;     ___ftpack
  1194 ;;   _lcd_gotoxy
  1195 ;;     _lcd_put_byte
  1196 ;;     _lcd_busy
  1197 ;;   _printf
  1198 ;;     _putch
  1199 ;;       _lcd_putc
  1200 ;;         _lcd_put_byte
  1201 ;;         _lcd_busy
  1202 ;;         _lcd_gotoxy
  1203 ;;           _lcd_put_byte
  1204 ;;           _lcd_busy
  1205 ;;         _isprint
  1206 ;;     _isdigit
  1207 ;;     ___wmul
  1208 ;;     ___ftge
  1209 ;;     ___ftneg
  1210 ;;     ___awdiv
  1211 ;;       ___awmod (ARG)
  1212 ;;     _scale
  1213 ;;       ___awmod
  1214 ;;       ___awdiv
  1215 ;;         ___awmod (ARG)
  1216 ;;       ___ftmul
  1217 ;;         ___ftpack
  1218 ;;         ___altoft (ARG)
  1219 ;;           ___ftpack
  1220 ;;         ___fttol (ARG)
  1221 ;;           ___ftpack (ARG)
  1222 ;;           ___awmod (ARG)
  1223 ;;           ___awdiv (ARG)
  1224 ;;             ___awmod (ARG)
  1225 ;;           ___bmul (ARG)
  1226 ;;             ___lbmod (ARG)
  1227 ;;             ___lbdiv (ARG)
  1228 ;;               ___lbmod (ARG)
  1229 ;;         ___awdiv (ARG)
  1230 ;;           ___awmod (ARG)
  1231 ;;         ___awmod (ARG)
  1232 ;;         ___bmul (ARG)
  1233 ;;           ___lbmod (ARG)
  1234 ;;           ___lbdiv (ARG)
  1235 ;;             ___lbmod (ARG)
  1236 ;;         ___lbdiv (ARG)
  1237 ;;           ___lbmod (ARG)
  1238 ;;         ___lbmod (ARG)
  1239 ;;       ___bmul
  1240 ;;         ___lbmod (ARG)
  1241 ;;         ___lbdiv (ARG)
  1242 ;;           ___lbmod (ARG)
  1243 ;;       ___fttol (ARG)
  1244 ;;         ___ftpack (ARG)
  1245 ;;         ___awmod (ARG)
  1246 ;;         ___awdiv (ARG)
  1247 ;;           ___awmod (ARG)
  1248 ;;         ___bmul (ARG)
  1249 ;;           ___lbmod (ARG)
  1250 ;;           ___lbdiv (ARG)
  1251 ;;             ___lbmod (ARG)
  1252 ;;     ___ftmul
  1253 ;;       ___ftpack
  1254 ;;       ___altoft (ARG)
  1255 ;;         ___ftpack
  1256 ;;       ___fttol (ARG)
  1257 ;;         ___ftpack (ARG)
  1258 ;;         ___awmod (ARG)
  1259 ;;         ___awdiv (ARG)
  1260 ;;           ___awmod (ARG)
  1261 ;;         ___bmul (ARG)
  1262 ;;           ___lbmod (ARG)
  1263 ;;           ___lbdiv (ARG)
  1264 ;;             ___lbmod (ARG)
  1265 ;;       ___awdiv (ARG)
  1266 ;;         ___awmod (ARG)
  1267 ;;       ___awmod (ARG)
  1268 ;;       ___bmul (ARG)
  1269 ;;         ___lbmod (ARG)
  1270 ;;         ___lbdiv (ARG)
  1271 ;;           ___lbmod (ARG)
  1272 ;;       ___lbdiv (ARG)
  1273 ;;         ___lbmod (ARG)
  1274 ;;       ___lbmod (ARG)
  1275 ;;     _fround
  1276 ;;       ___lbmod
  1277 ;;       ___bmul
  1278 ;;         ___lbmod (ARG)
  1279 ;;         ___lbdiv (ARG)
  1280 ;;           ___lbmod (ARG)
  1281 ;;       ___lbdiv
  1282 ;;         ___lbmod (ARG)
  1283 ;;       ___ftmul
  1284 ;;         ___ftpack
  1285 ;;         ___altoft (ARG)
  1286 ;;           ___ftpack
  1287 ;;         ___fttol (ARG)
  1288 ;;           ___ftpack (ARG)
  1289 ;;           ___awmod (ARG)
  1290 ;;           ___awdiv (ARG)
  1291 ;;             ___awmod (ARG)
  1292 ;;           ___bmul (ARG)
  1293 ;;             ___lbmod (ARG)
  1294 ;;             ___lbdiv (ARG)
  1295 ;;               ___lbmod (ARG)
  1296 ;;         ___awdiv (ARG)
  1297 ;;           ___awmod (ARG)
  1298 ;;         ___awmod (ARG)
  1299 ;;         ___bmul (ARG)
  1300 ;;           ___lbmod (ARG)
  1301 ;;           ___lbdiv (ARG)
  1302 ;;             ___lbmod (ARG)
  1303 ;;         ___lbdiv (ARG)
  1304 ;;           ___lbmod (ARG)
  1305 ;;         ___lbmod (ARG)
  1306 ;;       ___ftadd (ARG)
  1307 ;;         ___ftpack
  1308 ;;         ___lbmod (ARG)
  1309 ;;         ___bmul (ARG)
  1310 ;;           ___lbmod (ARG)
  1311 ;;           ___lbdiv (ARG)
  1312 ;;             ___lbmod (ARG)
  1313 ;;         ___lbdiv (ARG)
  1314 ;;           ___lbmod (ARG)
  1315 ;;         ___ftmul (ARG)
  1316 ;;           ___ftpack
  1317 ;;           ___altoft (ARG)
  1318 ;;             ___ftpack
  1319 ;;           ___fttol (ARG)
  1320 ;;             ___ftpack (ARG)
  1321 ;;             ___awmod (ARG)
  1322 ;;             ___awdiv (ARG)
  1323 ;;               ___awmod (ARG)
  1324 ;;             ___bmul (ARG)
  1325 ;;               ___lbmod (ARG)
  1326 ;;               ___lbdiv (ARG)
  1327 ;;                 ___lbmod (ARG)
  1328 ;;           ___awdiv (ARG)
  1329 ;;             ___awmod (ARG)
  1330 ;;           ___awmod (ARG)
  1331 ;;           ___bmul (ARG)
  1332 ;;             ___lbmod (ARG)
  1333 ;;             ___lbdiv (ARG)
  1334 ;;               ___lbmod (ARG)
  1335 ;;           ___lbdiv (ARG)
  1336 ;;             ___lbmod (ARG)
  1337 ;;           ___lbmod (ARG)
  1338 ;;     ___ftadd
  1339 ;;       ___ftpack
  1340 ;;       ___lbmod (ARG)
  1341 ;;       ___bmul (ARG)
  1342 ;;         ___lbmod (ARG)
  1343 ;;         ___lbdiv (ARG)
  1344 ;;           ___lbmod (ARG)
  1345 ;;       ___lbdiv (ARG)
  1346 ;;         ___lbmod (ARG)
  1347 ;;       ___ftmul (ARG)
  1348 ;;         ___ftpack
  1349 ;;         ___altoft (ARG)
  1350 ;;           ___ftpack
  1351 ;;         ___fttol (ARG)
  1352 ;;           ___ftpack (ARG)
  1353 ;;           ___awmod (ARG)
  1354 ;;           ___awdiv (ARG)
  1355 ;;             ___awmod (ARG)
  1356 ;;           ___bmul (ARG)
  1357 ;;             ___lbmod (ARG)
  1358 ;;             ___lbdiv (ARG)
  1359 ;;               ___lbmod (ARG)
  1360 ;;         ___awdiv (ARG)
  1361 ;;           ___awmod (ARG)
  1362 ;;         ___awmod (ARG)
  1363 ;;         ___bmul (ARG)
  1364 ;;           ___lbmod (ARG)
  1365 ;;           ___lbdiv (ARG)
  1366 ;;             ___lbmod (ARG)
  1367 ;;         ___lbdiv (ARG)
  1368 ;;           ___lbmod (ARG)
  1369 ;;         ___lbmod (ARG)
  1370 ;;     ___fttol
  1371 ;;       ___ftpack (ARG)
  1372 ;;       ___awmod (ARG)
  1373 ;;       ___awdiv (ARG)
  1374 ;;         ___awmod (ARG)
  1375 ;;       ___bmul (ARG)
  1376 ;;         ___lbmod (ARG)
  1377 ;;         ___lbdiv (ARG)
  1378 ;;           ___lbmod (ARG)
  1379 ;;     __div_to_l_
  1380 ;;     __tdiv_to_l_
  1381 ;;     ___lltoft
  1382 ;;       ___ftpack
  1383 ;;     ___ftsub
  1384 ;;       ___ftadd
  1385 ;;         ___ftpack
  1386 ;;         ___lbmod (ARG)
  1387 ;;         ___bmul (ARG)
  1388 ;;           ___lbmod (ARG)
  1389 ;;           ___lbdiv (ARG)
  1390 ;;             ___lbmod (ARG)
  1391 ;;         ___lbdiv (ARG)
  1392 ;;           ___lbmod (ARG)
  1393 ;;         ___ftmul (ARG)
  1394 ;;           ___ftpack
  1395 ;;           ___altoft (ARG)
  1396 ;;             ___ftpack
  1397 ;;           ___fttol (ARG)
  1398 ;;             ___ftpack (ARG)
  1399 ;;             ___awmod (ARG)
  1400 ;;             ___awdiv (ARG)
  1401 ;;               ___awmod (ARG)
  1402 ;;             ___bmul (ARG)
  1403 ;;               ___lbmod (ARG)
  1404 ;;               ___lbdiv (ARG)
  1405 ;;                 ___lbmod (ARG)
  1406 ;;           ___awdiv (ARG)
  1407 ;;             ___awmod (ARG)
  1408 ;;           ___awmod (ARG)
  1409 ;;           ___bmul (ARG)
  1410 ;;             ___lbmod (ARG)
  1411 ;;             ___lbdiv (ARG)
  1412 ;;               ___lbmod (ARG)
  1413 ;;           ___lbdiv (ARG)
  1414 ;;             ___lbmod (ARG)
  1415 ;;           ___lbmod (ARG)
  1416 ;;       ___lltoft (ARG)
  1417 ;;         ___ftpack
  1418 ;;     ___lldiv
  1419 ;;     ___llmod
  1420 ;;       ___lldiv (ARG)
  1421 ;;
  1422 ;; _ngat (ROOT)
  1423 ;;   _abs
  1424 ;;
  1425 ;; Address spaces:
  1426 ;;Name               Size   Autos  Total    Cost      Usage
  1427 ;;BITCOMMON            E      0       0       0        0.0%
  1428 ;;EEDATA             100      0       0       0        0.0%
  1429 ;;NULL                 0      0       0       0        0.0%
  1430 ;;CODE                 0      0       0       0        0.0%
  1431 ;;COMMON               E      6       8       1       57.1%
  1432 ;;BITSFR0              0      0       0       1        0.0%
  1433 ;;SFR0                 0      0       0       1        0.0%
  1434 ;;BITSFR1              0      0       0       2        0.0%
  1435 ;;SFR1                 0      0       0       2        0.0%
  1436 ;;STACK                0      0       9       2        0.0%
  1437 ;;ABS                  0      0      74       3        0.0%
  1438 ;;BITBANK0            50      0       0       4        0.0%
  1439 ;;BITSFR3              0      0       0       4        0.0%
  1440 ;;SFR3                 0      0       0       4        0.0%
  1441 ;;BANK0               50     49      50       5      100.0%
  1442 ;;BITSFR2              0      0       0       5        0.0%
  1443 ;;SFR2                 0      0       0       5        0.0%
  1444 ;;BITBANK1            50      0       0       6        0.0%
  1445 ;;BANK1               50     19      1C       7       35.0%
  1446 ;;BITBANK3            60      0       0       8        0.0%
  1447 ;;BANK3               60      0       0       9        0.0%
  1448 ;;BITBANK2            60      0       0      10        0.0%
  1449 ;;BANK2               60      0       0      11        0.0%
  1450 ;;DATA                 0      0      7D      12        0.0%
  1451                           
  1452                           
  1453 ;; *************** function _main *****************
  1454 ;; Defined at:
  1455 ;;		line 15 in file "C:\Users\DELL\Desktop\baitap_ttvxl\dotanso_dungCCP\dotansodungCCP.c"
  1456 ;; Parameters:    Size  Location     Type
  1457 ;;		None
  1458 ;; Auto vars:     Size  Location     Type
  1459 ;;		None
  1460 ;; Return value:  Size  Location     Type
  1461 ;;		None               void
  1462 ;; Registers used:
  1463 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1464 ;; Tracked objects:
  1465 ;;		On entry : 17F/0
  1466 ;;		On exit  : 60/20
  1467 ;;		Unchanged: 0/0
  1468 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1469 ;;      Params:         0       0       0       0       0
  1470 ;;      Locals:         0       0       0       0       0
  1471 ;;      Temps:          0       0       0       0       0
  1472 ;;      Totals:         0       0       0       0       0
  1473 ;;Total ram usage:        0 bytes
  1474 ;; Hardware stack levels required when called:    7
  1475 ;; This function calls:
  1476 ;;		_lcd_init
  1477 ;;		___altoft
  1478 ;;		___ftmul
  1479 ;;		___ftdiv
  1480 ;;		_lcd_gotoxy
  1481 ;;		_printf
  1482 ;; This function is called by:
  1483 ;;		Startup code after reset
  1484 ;; This function uses a non-reentrant model
  1485 ;;
  1486  16A2                     _main:	
  1487                           
  1488                           ;dotansodungCCP.c: 16: ANSEL = ANSELH = 0;
  1489                           
  1490                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1491  16A2  1683               	bsf	3,5	;RP0=1, select bank3
  1492  16A3  1703               	bsf	3,6	;RP1=1, select bank3
  1493  16A4  0189               	clrf	9	;volatile
  1494  16A5  0188               	clrf	8	;volatile
  1495                           
  1496                           ;dotansodungCCP.c: 17: lcd_init();
  1497  16A6  120A  118A  2415   	fcall	_lcd_init
      +       160A  118A         
  1498                           
  1499                           ;dotansodungCCP.c: 18: TRISE0 = 0; RE0 =1;
  1500  16AB  1683               	bsf	3,5	;RP0=1, select bank1
  1501  16AC  1009               	bcf	9,0
  1502  16AD  1283               	bcf	3,5	;RP0=0, select bank0
  1503  16AE  1409               	bsf	9,0
  1504                           
  1505                           ;dotansodungCCP.c: 20: TRISC2 = 1;
  1506  16AF  1683               	bsf	3,5	;RP0=1, select bank1
  1507  16B0  3005               	movlw	5
  1508  16B1  1507               	bsf	7,2
  1509                           
  1510                           ;dotansodungCCP.c: 21: CCP1CON = 0b00000101;
  1511  16B2  1283               	bcf	3,5	;RP0=0, select bank0
  1512  16B3  0097               	movwf	23	;volatile
  1513                           
  1514                           ;dotansodungCCP.c: 22: CCPR1H = CCPR1L = 0;
  1515  16B4  0195               	clrf	21	;volatile
  1516  16B5  0196               	clrf	22	;volatile
  1517                           
  1518                           ;dotansodungCCP.c: 23: CCP1IE = 1;
  1519  16B6  1683               	bsf	3,5	;RP0=1, select bank1
  1520  16B7  150C               	bsf	12,2
  1521                           
  1522                           ;dotansodungCCP.c: 24: CCP1IF = 0;
  1523  16B8  1283               	bcf	3,5	;RP0=0, select bank0
  1524  16B9  110C               	bcf	12,2
  1525                           
  1526                           ;dotansodungCCP.c: 25: PEIE = 1;
  1527  16BA  170B               	bsf	11,6
  1528                           
  1529                           ;dotansodungCCP.c: 26: GIE = 1;
  1530  16BB  178B               	bsf	11,7
  1531                           
  1532                           ;dotansodungCCP.c: 28: TMR1CS = 0;
  1533  16BC  1090               	bcf	16,1
  1534                           
  1535                           ;dotansodungCCP.c: 29: T1CKPS1 = 0; T1CKPS0 = 0;
  1536  16BD  1290               	bcf	16,5
  1537  16BE  1210               	bcf	16,4
  1538                           
  1539                           ;dotansodungCCP.c: 30: T1SYNC = 1;
  1540  16BF  1510               	bsf	16,2
  1541                           
  1542                           ;dotansodungCCP.c: 31: TMR1H = 0; TMR1L = 0;
  1543  16C0  018F               	clrf	15	;volatile
  1544  16C1  018E               	clrf	14	;volatile
  1545                           
  1546                           ;dotansodungCCP.c: 32: TMR1GE = 0;
  1547  16C2  1310               	bcf	16,6
  1548                           
  1549                           ;dotansodungCCP.c: 33: TMR1ON = 1;
  1550  16C3  1410               	bsf	16,0
  1551  16C4                     l8074:	
  1552                           
  1553                           ;dotansodungCCP.c: 35: {
  1554                           ;dotansodungCCP.c: 36: t= xung*(1.0/5000000.0);
  1555  16C4  30C0               	movlw	192
  1556  16C5  1283               	bcf	3,5	;RP0=0, select bank0
  1557  16C6  00BB               	movwf	?___ftmul
  1558  16C7  3056               	movlw	86
  1559  16C8  00BC               	movwf	?___ftmul+1
  1560  16C9  3034               	movlw	52
  1561  16CA  00BD               	movwf	?___ftmul+2
  1562  16CB  086C               	movf	_xung+3,w
  1563  16CC  00AB               	movwf	?___altoft+3
  1564  16CD  086B               	movf	_xung+2,w
  1565  16CE  00AA               	movwf	?___altoft+2
  1566  16CF  086A               	movf	_xung+1,w
  1567  16D0  00A9               	movwf	?___altoft+1
  1568  16D1  0869               	movf	_xung,w
  1569  16D2  00A8               	movwf	?___altoft
  1570  16D3  120A  118A  200F   	fcall	___altoft
      +       160A  118A         
  1571  16D8  0828               	movf	?___altoft,w
  1572  16D9  00BE               	movwf	?___ftmul+3
  1573  16DA  0829               	movf	?___altoft+1,w
  1574  16DB  00BF               	movwf	?___ftmul+4
  1575  16DC  082A               	movf	?___altoft+2,w
  1576  16DD  00C0               	movwf	?___ftmul+5
  1577  16DE  120A  118A  22BA   	fcall	___ftmul
      +       160A  118A         
  1578  16E3  083B               	movf	?___ftmul,w
  1579  16E4  1683               	bsf	3,5	;RP0=1, select bank1
  1580  16E5  00B9               	movwf	_t^(0+128)
  1581  16E6  1283               	bcf	3,5	;RP0=0, select bank0
  1582  16E7  083C               	movf	?___ftmul+1,w
  1583  16E8  1683               	bsf	3,5	;RP0=1, select bank1
  1584  16E9  00BA               	movwf	(_t+1)^(0+128)
  1585  16EA  1283               	bcf	3,5	;RP0=0, select bank0
  1586  16EB  083D               	movf	?___ftmul+2,w
  1587  16EC  1683               	bsf	3,5	;RP0=1, select bank1
  1588  16ED  00BB               	movwf	(_t+2)^(0+128)
  1589                           
  1590                           ;dotansodungCCP.c: 37: f = 4.0/t;
  1591  16EE  0839               	movf	_t^(0+128),w
  1592  16EF  1283               	bcf	3,5	;RP0=0, select bank0
  1593  16F0  00A8               	movwf	?___ftdiv
  1594  16F1  1683               	bsf	3,5	;RP0=1, select bank1
  1595  16F2  083A               	movf	(_t+1)^(0+128),w
  1596  16F3  1283               	bcf	3,5	;RP0=0, select bank0
  1597  16F4  00A9               	movwf	?___ftdiv+1
  1598  16F5  1683               	bsf	3,5	;RP0=1, select bank1
  1599  16F6  083B               	movf	(_t+2)^(0+128),w
  1600  16F7  1283               	bcf	3,5	;RP0=0, select bank0
  1601  16F8  00AA               	movwf	?___ftdiv+2
  1602  16F9  3080               	movlw	128
  1603  16FA  01AB               	clrf	?___ftdiv+3
  1604  16FB  00AC               	movwf	?___ftdiv+4
  1605  16FC  3040               	movlw	64
  1606  16FD  00AD               	movwf	?___ftdiv+5
  1607  16FE  120A  118A  203E   	fcall	___ftdiv
      +       160A  118A         
  1608  1703  0828               	movf	?___ftdiv,w
  1609  1704  00ED               	movwf	_f
  1610  1705  0829               	movf	?___ftdiv+1,w
  1611  1706  00EE               	movwf	_f+1
  1612  1707  082A               	movf	?___ftdiv+2,w
  1613  1708  00EF               	movwf	_f+2
  1614  1709  3000               	movlw	0
  1615                           
  1616                           ;dotansodungCCP.c: 38: lcd_gotoxy(0,0);
  1617  170A  01A5               	clrf	?_lcd_gotoxy
  1618  170B  120A  118A  23CE   	fcall	_lcd_gotoxy
      +       160A  118A         
  1619                           
  1620                           ;dotansodungCCP.c: 39: printf("xung: %05u",xung);
  1621  1710  086C               	movf	_xung+3,w
  1622  1711  00E3               	movwf	?_printf+3
  1623  1712  086B               	movf	_xung+2,w
  1624  1713  00E2               	movwf	?_printf+2
  1625  1714  086A               	movf	_xung+1,w
  1626  1715  00E1               	movwf	?_printf+1
  1627  1716  0869               	movf	_xung,w
  1628  1717  00E0               	movwf	?_printf
  1629  1718  3077               	movlw	(STR_1-__stringbase)& (0+255)
  1630  1719  120A  158A  2006   	fcall	_printf
      +       160A  118A         
  1631                           
  1632                           ;dotansodungCCP.c: 40: lcd_gotoxy(0,1);
  1633  171E  1283               	bcf	3,5	;RP0=0, select bank0
  1634  171F  3000               	movlw	0
  1635  1720  01A5               	clrf	?_lcd_gotoxy
  1636  1721  0AA5               	incf	?_lcd_gotoxy,f
  1637  1722  120A  118A  23CE   	fcall	_lcd_gotoxy
      +       160A  118A         
  1638                           
  1639                           ;dotansodungCCP.c: 41: printf("f: %3.2f",f);
  1640  1727  086D               	movf	_f,w
  1641  1728  00E0               	movwf	?_printf
  1642  1729  086E               	movf	_f+1,w
  1643  172A  00E1               	movwf	?_printf+1
  1644  172B  086F               	movf	_f+2,w
  1645  172C  00E2               	movwf	?_printf+2
  1646  172D  3082               	movlw	(STR_2-__stringbase)& (0+255)
  1647  172E  120A  158A  2006   	fcall	_printf
      +       160A  118A         
  1648  1733  2EC4               	goto	l8074
  1649  1734                     __end_of_main:	
  1650                           
  1651                           	psect	text757
  1652  0806                     __ptext757:	
  1653 ;; =============== function _main ends ============
  1654                           
  1655                           
  1656 ;; *************** function _printf *****************
  1657 ;; Defined at:
  1658 ;;		line 461 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\lib\doprnt.c"
  1659 ;; Parameters:    Size  Location     Type
  1660 ;;  f               1    wreg     PTR const unsigned char 
  1661 ;;		 -> STR_2(9), STR_1(11), 
  1662 ;; Auto vars:     Size  Location     Type
  1663 ;;  f               1   12[BANK1 ] PTR const unsigned char 
  1664 ;;		 -> STR_2(9), STR_1(11), 
  1665 ;;  _val            4    8[BANK1 ] struct .
  1666 ;;  fval            3   19[BANK1 ] struct .
  1667 ;;  integ           3    5[BANK1 ] struct .
  1668 ;;  ival            3    0        struct .
  1669 ;;  prec            2   22[BANK1 ] int 
  1670 ;;  width           2   17[BANK1 ] int 
  1671 ;;  exp             2   15[BANK1 ] int 
  1672 ;;  flag            2   13[BANK1 ] unsigned short 
  1673 ;;  c               1   24[BANK1 ] char 
  1674 ;;  ap              1    4[BANK1 ] PTR void [1]
  1675 ;;		 -> ?_printf(2), 
  1676 ;;  d               1    0        unsigned char 
  1677 ;; Return value:  Size  Location     Type
  1678 ;;                  2   64[BANK0 ] int 
  1679 ;; Registers used:
  1680 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1681 ;; Tracked objects:
  1682 ;;		On entry : 60/0
  1683 ;;		On exit  : 60/20
  1684 ;;		Unchanged: 0/0
  1685 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1686 ;;      Params:         0       4       0       0       0
  1687 ;;      Locals:         0       0      25       0       0
  1688 ;;      Temps:          0       5       0       0       0
  1689 ;;      Totals:         0       9      25       0       0
  1690 ;;Total ram usage:       34 bytes
  1691 ;; Hardware stack levels used:    1
  1692 ;; Hardware stack levels required when called:    6
  1693 ;; This function calls:
  1694 ;;		_putch
  1695 ;;		_isdigit
  1696 ;;		___wmul
  1697 ;;		___ftge
  1698 ;;		___ftneg
  1699 ;;		___awdiv
  1700 ;;		_scale
  1701 ;;		___ftmul
  1702 ;;		_fround
  1703 ;;		___ftadd
  1704 ;;		___fttol
  1705 ;;		__div_to_l_
  1706 ;;		__tdiv_to_l_
  1707 ;;		___lltoft
  1708 ;;		___ftsub
  1709 ;;		___lldiv
  1710 ;;		___llmod
  1711 ;; This function is called by:
  1712 ;;		_main
  1713 ;; This function uses a non-reentrant model
  1714 ;;
  1715  0806                     _printf:	
  1716                           
  1717                           ; Regs used in _printf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1718                           ;printf@f stored from wreg
  1719  0806  1683               	bsf	3,5	;RP0=1, select bank1
  1720  0807  00AC               	movwf	printf@f^(0+128)
  1721  0808  3060               	movlw	?_printf& (0+255)
  1722  0809  00A4               	movwf	printf@ap^(0+128)
  1723  080A                     l8034:	
  1724  080A  1683               	bsf	3,5	;RP0=1, select bank1
  1725  080B  082C               	movf	printf@f^(0+128),w
  1726  080C  0AAC               	incf	printf@f^(0+128),f
  1727  080D  0084               	movwf	4
  1728  080E  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  1729  0813  00B8               	movwf	printf@c^(0+128)
  1730  0814  08B8               	movf	printf@c^(0+128),f
  1731  0815  1903               	btfsc	3,2
  1732  0816  0008               	return
  1733  0817  3A25               	xorlw	37
  1734  0818  1903               	skipnz
  1735  0819  281F               	goto	l7762
  1736  081A  0838               	movf	printf@c^(0+128),w
  1737  081B  257F  120A  158A   	fcall	_putch
  1738  081E  280A               	goto	l8034
  1739  081F                     l7762:	
  1740  081F  01B1               	clrf	printf@width^(0+128)
  1741  0820  01B2               	clrf	(printf@width+1)^(0+128)
  1742  0821  01AD               	clrf	printf@flag^(0+128)
  1743  0822  01AE               	clrf	(printf@flag+1)^(0+128)
  1744  0823  2826               	goto	l7768
  1745  0824                     l2197:	
  1746  0824  152D               	bsf	printf@flag^(0+128),2
  1747  0825  0AAC               	incf	printf@f^(0+128),f
  1748  0826                     l7768:	
  1749  0826  082C               	movf	printf@f^(0+128),w
  1750  0827  0084               	movwf	4
  1751  0828  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  1752                           
  1753                           ; Switch size 1, requested type "space"
  1754                           ; Number of cases is 1, Range of values is 48 to 48
  1755                           ; switch strategies available:
  1756                           ; Name         Instructions Cycles
  1757                           ; simple_byte            4     3 (average)
  1758                           ; direct_byte           14    11 (fixed)
  1759                           ; jumptable            263     9 (fixed)
  1760                           ;	Chosen strategy is simple_byte
  1761  082D  3A30               	xorlw	48	; case 48
  1762  082E  1903               	skipnz
  1763  082F  2824               	goto	l2197
  1764  0830  2831               	goto	l7770
  1765  0831                     l7770:	
  1766  0831  082C               	movf	printf@f^(0+128),w
  1767  0832  0084               	movwf	4
  1768  0833  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  1769  0838  25EF  120A  158A   	fcall	_isdigit
  1770  083B  1C03               	btfss	3,0
  1771  083C  2865               	goto	l7780
  1772  083D  1683               	bsf	3,5	;RP0=1, select bank1
  1773  083E  01B1               	clrf	printf@width^(0+128)
  1774  083F  01B2               	clrf	(printf@width+1)^(0+128)
  1775  0840                     l7774:	
  1776  0840  1683               	bsf	3,5	;RP0=1, select bank1
  1777  0841  0832               	movf	(printf@width+1)^(0+128),w
  1778  0842  1283               	bcf	3,5	;RP0=0, select bank0
  1779  0843  00A1               	movwf	?___wmul+1
  1780  0844  1683               	bsf	3,5	;RP0=1, select bank1
  1781  0845  0831               	movf	printf@width^(0+128),w
  1782  0846  2780  120A  158A   	fcall	PL33	;call to abstracted procedure
  1783  0849  25FE               	fcall	___wmul
  1784  084A  1683               	bsf	3,5	;RP0=1, select bank1
  1785  084B  082C               	movf	printf@f^(0+128),w
  1786  084C  0084               	movwf	4
  1787  084D  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  1788  0852  2737  120A  158A   	fcall	PL14	;call to abstracted procedure
  1789  0855  00B1               	movwf	printf@width^(0+128)
  1790  0856  276B               	fcall	PL28	;call to abstracted procedure
  1791  0857  00B2               	movwf	(printf@width+1)^(0+128)
  1792  0858  0AAC               	incf	printf@f^(0+128),f
  1793  0859  082C               	movf	printf@f^(0+128),w
  1794  085A  0084               	movwf	4
  1795  085B  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  1796  0860  25EF  120A  158A   	fcall	_isdigit
  1797  0863  1803               	btfsc	3,0
  1798  0864  2840               	goto	l7774
  1799  0865                     l7780:	
  1800  0865  1683               	bsf	3,5	;RP0=1, select bank1
  1801  0866  082C               	movf	printf@f^(0+128),w
  1802  0867  0084               	movwf	4
  1803  0868  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  1804  086D  3A2E               	xorlw	46
  1805  086E  1D03               	skipz
  1806  086F  289C               	goto	l7794
  1807  0870  172E               	bsf	(printf@flag^(0+128)+1),6
  1808  0871  0AAC               	incf	printf@f^(0+128),f
  1809  0872  01B6               	clrf	printf@prec^(0+128)
  1810  0873  01B7               	clrf	(printf@prec+1)^(0+128)
  1811  0874                     l7792:	
  1812  0874  082C               	movf	printf@f^(0+128),w
  1813  0875  0084               	movwf	4
  1814  0876  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  1815  087B  25EF  120A  158A   	fcall	_isdigit
  1816  087E  1C03               	btfss	3,0
  1817  087F  28A5               	goto	l7802
  1818  0880  1683               	bsf	3,5	;RP0=1, select bank1
  1819  0881  0837               	movf	(printf@prec+1)^(0+128),w
  1820  0882  1283               	bcf	3,5	;RP0=0, select bank0
  1821  0883  00A1               	movwf	?___wmul+1
  1822  0884  1683               	bsf	3,5	;RP0=1, select bank1
  1823  0885  0836               	movf	printf@prec^(0+128),w
  1824  0886  2780  120A  158A   	fcall	PL33	;call to abstracted procedure
  1825  0889  25FE               	fcall	___wmul
  1826  088A  1683               	bsf	3,5	;RP0=1, select bank1
  1827  088B  082C               	movf	printf@f^(0+128),w
  1828  088C  0084               	movwf	4
  1829  088D  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  1830  0892  2737  120A  158A   	fcall	PL14	;call to abstracted procedure
  1831  0895  00B6               	movwf	printf@prec^(0+128)
  1832  0896  276B  120A  158A   	fcall	PL28	;call to abstracted procedure
  1833  0899  00B7               	movwf	(printf@prec+1)^(0+128)
  1834  089A  0AAC               	incf	printf@f^(0+128),f
  1835  089B  2874               	goto	l7792
  1836  089C                     l7794:	
  1837  089C  01B6               	clrf	printf@prec^(0+128)
  1838  089D  01B7               	clrf	(printf@prec+1)^(0+128)
  1839  089E  162E               	bsf	(printf@flag^(0+128)+1),4
  1840  089F  28A5               	goto	l7802
  1841  08A0                     l2212:	
  1842  08A0  152E               	bsf	(printf@flag^(0+128)+1),2
  1843  08A1  28B9               	goto	l7804
  1844  08A2                     l7798:	
  1845  08A2  30C0               	movlw	192
  1846  08A3  04AD               	iorwf	printf@flag^(0+128),f
  1847  08A4  28B9               	goto	l7804
  1848  08A5                     l7802:	
  1849  08A5  1683               	bsf	3,5	;RP0=1, select bank1
  1850  08A6  082C               	movf	printf@f^(0+128),w
  1851  08A7  0AAC               	incf	printf@f^(0+128),f
  1852  08A8  0084               	movwf	4
  1853  08A9  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  1854  08AE  00B8               	movwf	printf@c^(0+128)
  1855                           
  1856                           ; Switch size 1, requested type "space"
  1857                           ; Number of cases is 3, Range of values is 0 to 117
  1858                           ; switch strategies available:
  1859                           ; Name         Instructions Cycles
  1860                           ; simple_byte           10     6 (average)
  1861                           ; jumptable            260     6 (fixed)
  1862                           ; rangetable           122     6 (fixed)
  1863                           ; spacedrange          242     9 (fixed)
  1864                           ; locatedrange         118     3 (fixed)
  1865                           ;	Chosen strategy is simple_byte
  1866  08AF  3A00               	xorlw	0	; case 0
  1867  08B0  1903               	skipnz
  1868  08B1  2D7E               	goto	l2291
  1869  08B2  3A66               	xorlw	102	; case 102
  1870  08B3  1903               	skipnz
  1871  08B4  28A0               	goto	l2212
  1872  08B5  3A13               	xorlw	19	; case 117
  1873  08B6  1903               	skipnz
  1874  08B7  28A2               	goto	l7798
  1875  08B8  280A               	goto	l8034
  1876  08B9                     l7804:	
  1877  08B9  1283               	bcf	3,5	;RP0=0, select bank0
  1878  08BA  3007               	movlw	7
  1879  08BB  01E4               	clrf	??_printf
  1880  08BC  1683               	bsf	3,5	;RP0=1, select bank1
  1881  08BD  052E               	andwf	(printf@flag+1)^(0+128),w
  1882  08BE  1283               	bcf	3,5	;RP0=0, select bank0
  1883  08BF  00E5               	movwf	??_printf+1
  1884  08C0  0464               	iorwf	??_printf,w
  1885  08C1  1903               	skipnz
  1886  08C2  2C41               	goto	l7956
  1887  08C3  1683               	bsf	3,5	;RP0=1, select bank1
  1888  08C4  1E2E               	btfss	(printf@flag+1)^(0+128),4
  1889  08C5  28C9               	goto	l7810
  1890  08C6  3006               	movlw	6
  1891  08C7  00B6               	movwf	printf@prec^(0+128)
  1892  08C8  01B7               	clrf	(printf@prec+1)^(0+128)
  1893  08C9                     l7810:	
  1894  08C9  0824               	movf	printf@ap^(0+128),w
  1895  08CA  0084               	movwf	4
  1896  08CB  1383               	bcf	3,7	;select IRP bank0
  1897  08CC  0800               	movf	0,w
  1898  08CD  00B3               	movwf	printf@fval^(0+128)
  1899  08CE  0A84               	incf	4,f
  1900  08CF  0800               	movf	0,w
  1901  08D0  00B4               	movwf	(printf@fval+1)^(0+128)
  1902  08D1  0A84               	incf	4,f
  1903  08D2  0800               	movf	0,w
  1904  08D3  00B5               	movwf	(printf@fval+2)^(0+128)
  1905  08D4  3003               	movlw	3
  1906  08D5  07A4               	addwf	printf@ap^(0+128),f
  1907  08D6  0833               	movf	printf@fval^(0+128),w
  1908  08D7  1283               	bcf	3,5	;RP0=0, select bank0
  1909  08D8  00A0               	movwf	?___ftge
  1910  08D9  1683               	bsf	3,5	;RP0=1, select bank1
  1911  08DA  0834               	movf	(printf@fval+1)^(0+128),w
  1912  08DB  1283               	bcf	3,5	;RP0=0, select bank0
  1913  08DC  00A1               	movwf	?___ftge+1
  1914  08DD  1683               	bsf	3,5	;RP0=1, select bank1
  1915  08DE  0835               	movf	(printf@fval+2)^(0+128),w
  1916  08DF  1283               	bcf	3,5	;RP0=0, select bank0
  1917  08E0  00A2               	movwf	?___ftge+2
  1918  08E1  01A3               	clrf	?___ftge+3
  1919  08E2  01A4               	clrf	?___ftge+4
  1920  08E3  01A5               	clrf	?___ftge+5
  1921  08E4  25C3  120A  158A   	fcall	___ftge
  1922  08E7  1803               	btfsc	3,0
  1923  08E8  2905               	goto	l7820
  1924  08E9  1683               	bsf	3,5	;RP0=1, select bank1
  1925  08EA  0833               	movf	printf@fval^(0+128),w
  1926  08EB  1283               	bcf	3,5	;RP0=0, select bank0
  1927  08EC  00A0               	movwf	?___ftneg
  1928  08ED  1683               	bsf	3,5	;RP0=1, select bank1
  1929  08EE  0834               	movf	(printf@fval+1)^(0+128),w
  1930  08EF  1283               	bcf	3,5	;RP0=0, select bank0
  1931  08F0  00A1               	movwf	?___ftneg+1
  1932  08F1  1683               	bsf	3,5	;RP0=1, select bank1
  1933  08F2  0835               	movf	(printf@fval+2)^(0+128),w
  1934  08F3  1283               	bcf	3,5	;RP0=0, select bank0
  1935  08F4  00A2               	movwf	?___ftneg+2
  1936  08F5  26BA  120A  158A   	fcall	___ftneg
  1937  08F8  0820               	movf	?___ftneg,w
  1938  08F9  1683               	bsf	3,5	;RP0=1, select bank1
  1939  08FA  00B3               	movwf	printf@fval^(0+128)
  1940  08FB  1283               	bcf	3,5	;RP0=0, select bank0
  1941  08FC  0821               	movf	?___ftneg+1,w
  1942  08FD  1683               	bsf	3,5	;RP0=1, select bank1
  1943  08FE  00B4               	movwf	(printf@fval+1)^(0+128)
  1944  08FF  1283               	bcf	3,5	;RP0=0, select bank0
  1945  0900  0822               	movf	?___ftneg+2,w
  1946  0901  1683               	bsf	3,5	;RP0=1, select bank1
  1947  0902  00B5               	movwf	(printf@fval+2)^(0+128)
  1948  0903  3003               	movlw	3
  1949  0904  04AD               	iorwf	printf@flag^(0+128),f
  1950  0905                     l7820:	
  1951  0905  1683               	bsf	3,5	;RP0=1, select bank1
  1952  0906  01AF               	clrf	printf@exp^(0+128)
  1953  0907  01B0               	clrf	(printf@exp+1)^(0+128)
  1954  0908  0835               	movf	(printf@fval+2)^(0+128),w
  1955  0909  0434               	iorwf	(printf@fval+1)^(0+128),w
  1956  090A  0433               	iorwf	printf@fval^(0+128),w
  1957  090B  1903               	skipnz
  1958  090C  29AF               	goto	l7852
  1959  090D  30B3               	movlw	low printf@fval
  1960  090E  0084               	movwf	4
  1961  090F  2779  120A  158A   	fcall	PL31	;call to abstracted procedure
  1962  0912  0A84               	incf	4,f
  1963  0913  0800               	movf	0,w
  1964  0914  00E6               	movwf	??_printf+2
  1965  0915  0A84               	incf	4,f
  1966  0916  0800               	movf	0,w
  1967  0917  00E7               	movwf	??_printf+3
  1968  0918  300F               	movlw	15
  1969  0919                     u4635:	
  1970  0919  1003               	clrc
  1971  091A  0CE7               	rrf	??_printf+3,f
  1972  091B  0CE6               	rrf	??_printf+2,f
  1973  091C  0CE5               	rrf	??_printf+1,f
  1974  091D  0CE4               	rrf	??_printf,f
  1975  091E  3EFF               	addlw	-1
  1976  091F  1D03               	skipz
  1977  0920  2919               	goto	u4635
  1978  0921  0865               	movf	??_printf+1,w
  1979  0922  1683               	bsf	3,5	;RP0=1, select bank1
  1980  0923  00B0               	movwf	(printf@exp+1)^(0+128)
  1981  0924  1283               	bcf	3,5	;RP0=0, select bank0
  1982  0925  0864               	movf	??_printf,w
  1983  0926  1683               	bsf	3,5	;RP0=1, select bank1
  1984  0927  00AF               	movwf	printf@exp^(0+128)
  1985  0928  3082               	movlw	-126
  1986  0929  01B0               	clrf	(printf@exp+1)^(0+128)
  1987  092A  07AF               	addwf	printf@exp^(0+128),f
  1988  092B  1C03               	skipc
  1989  092C  03B0               	decf	(printf@exp+1)^(0+128),f
  1990  092D  30FF               	movlw	-1
  1991  092E  07AF               	addwf	printf@exp^(0+128),f
  1992  092F  1C03               	skipc
  1993  0930  03B0               	decf	(printf@exp+1)^(0+128),f
  1994  0931  3003               	movlw	3
  1995  0932  1283               	bcf	3,5	;RP0=0, select bank0
  1996  0933  00A0               	movwf	?___wmul
  1997  0934  01A1               	clrf	?___wmul+1
  1998  0935  1683               	bsf	3,5	;RP0=1, select bank1
  1999  0936  0830               	movf	(printf@exp+1)^(0+128),w
  2000  0937  1283               	bcf	3,5	;RP0=0, select bank0
  2001  0938  00A3               	movwf	?___wmul+3
  2002  0939  1683               	bsf	3,5	;RP0=1, select bank1
  2003  093A  082F               	movf	printf@exp^(0+128),w
  2004  093B  1283               	bcf	3,5	;RP0=0, select bank0
  2005  093C  00A2               	movwf	?___wmul+2
  2006  093D  25FE               	fcall	___wmul
  2007  093E  0821               	movf	?___wmul+1,w
  2008  093F  1683               	bsf	3,5	;RP0=1, select bank1
  2009  0940  00B0               	movwf	(printf@exp+1)^(0+128)
  2010  0941  1283               	bcf	3,5	;RP0=0, select bank0
  2011  0942  0820               	movf	?___wmul,w
  2012  0943  1683               	bsf	3,5	;RP0=1, select bank1
  2013  0944  00AF               	movwf	printf@exp^(0+128)
  2014  0945  300A               	movlw	10
  2015  0946  1283               	bcf	3,5	;RP0=0, select bank0
  2016  0947  00A6               	movwf	?___awdiv
  2017  0948  01A7               	clrf	?___awdiv+1
  2018  0949  1683               	bsf	3,5	;RP0=1, select bank1
  2019  094A  0830               	movf	(printf@exp+1)^(0+128),w
  2020  094B  1283               	bcf	3,5	;RP0=0, select bank0
  2021  094C  00A9               	movwf	?___awdiv+3
  2022  094D  1683               	bsf	3,5	;RP0=1, select bank1
  2023  094E  082F               	movf	printf@exp^(0+128),w
  2024  094F  1283               	bcf	3,5	;RP0=0, select bank0
  2025  0950  00A8               	movwf	?___awdiv+2
  2026  0951  120A  118A  2238   	fcall	___awdiv
      +       120A  158A         
  2027  0956  0827               	movf	?___awdiv+1,w
  2028  0957  1683               	bsf	3,5	;RP0=1, select bank1
  2029  0958  00B0               	movwf	(printf@exp+1)^(0+128)
  2030  0959  1283               	bcf	3,5	;RP0=0, select bank0
  2031  095A  0826               	movf	?___awdiv,w
  2032  095B  1683               	bsf	3,5	;RP0=1, select bank1
  2033  095C  00AF               	movwf	printf@exp^(0+128)
  2034  095D  1FB0               	btfss	(printf@exp+1)^(0+128),7
  2035  095E  2963               	goto	l7840
  2036  095F  30FF               	movlw	-1
  2037  0960  07AF               	addwf	printf@exp^(0+128),f
  2038  0961  1C03               	skipc
  2039  0962  03B0               	decf	(printf@exp+1)^(0+128),f
  2040  0963                     l7840:	
  2041  0963  032F               	decf	printf@exp^(0+128),w
  2042  0964  3AFF               	xorlw	255
  2043  0965  120A  118A  20A6   	fcall	_scale
      +       120A  158A         
  2044  096A  2712  120A  158A   	fcall	PL7	;call to abstracted procedure
  2045  096D  2758               	fcall	PL19	;call to abstracted procedure
  2046  096E  1683               	bsf	3,5	;RP0=1, select bank1
  2047  096F  0825               	movf	printf@integ^(0+128),w
  2048  0970  1283               	bcf	3,5	;RP0=0, select bank0
  2049  0971  00BE               	movwf	?___ftmul+3
  2050  0972  1683               	bsf	3,5	;RP0=1, select bank1
  2051  0973  0826               	movf	(printf@integ+1)^(0+128),w
  2052  0974  1283               	bcf	3,5	;RP0=0, select bank0
  2053  0975  00BF               	movwf	?___ftmul+4
  2054  0976  1683               	bsf	3,5	;RP0=1, select bank1
  2055  0977  0827               	movf	(printf@integ+2)^(0+128),w
  2056  0978  1283               	bcf	3,5	;RP0=0, select bank0
  2057  0979  00C0               	movwf	?___ftmul+5
  2058  097A  120A  118A  22BA   	fcall	___ftmul
      +       120A  158A         
  2059  097F  083B               	movf	?___ftmul,w
  2060  0980  1683               	bsf	3,5	;RP0=1, select bank1
  2061  0981  00A5               	movwf	printf@integ^(0+128)
  2062  0982  1283               	bcf	3,5	;RP0=0, select bank0
  2063  0983  083C               	movf	?___ftmul+1,w
  2064  0984  1683               	bsf	3,5	;RP0=1, select bank1
  2065  0985  00A6               	movwf	(printf@integ+1)^(0+128)
  2066  0986  1283               	bcf	3,5	;RP0=0, select bank0
  2067  0987  083D               	movf	?___ftmul+2,w
  2068  0988  1683               	bsf	3,5	;RP0=1, select bank1
  2069  0989  00A7               	movwf	(printf@integ+2)^(0+128)
  2070  098A  26FE  120A  158A   	fcall	PL5	;call to abstracted procedure
  2071  098D  3080               	movlw	128
  2072  098E  01A3               	clrf	?___ftge+3
  2073  098F  00A4               	movwf	?___ftge+4
  2074  0990  303F               	movlw	63
  2075  0991  00A5               	movwf	?___ftge+5
  2076  0992  25C3  120A  158A   	fcall	___ftge
  2077  0995  1803               	btfsc	3,0
  2078  0996  299D               	goto	l7848
  2079  0997  30FF               	movlw	-1
  2080  0998  1683               	bsf	3,5	;RP0=1, select bank1
  2081  0999  07AF               	addwf	printf@exp^(0+128),f
  2082  099A  1C03               	skipc
  2083  099B  03B0               	decf	(printf@exp+1)^(0+128),f
  2084  099C  29AF               	goto	l7852
  2085  099D                     l7848:	
  2086  099D  1683               	bsf	3,5	;RP0=1, select bank1
  2087  099E  26FE  120A  158A   	fcall	PL5	;call to abstracted procedure
  2088  09A1  3020               	movlw	32
  2089  09A2  01A3               	clrf	?___ftge+3
  2090  09A3  00A4               	movwf	?___ftge+4
  2091  09A4  3041               	movlw	65
  2092  09A5  00A5               	movwf	?___ftge+5
  2093  09A6  25C3  120A  158A   	fcall	___ftge
  2094  09A9  1C03               	btfss	3,0
  2095  09AA  29AF               	goto	l7852
  2096  09AB  1683               	bsf	3,5	;RP0=1, select bank1
  2097  09AC  0AAF               	incf	printf@exp^(0+128),f
  2098  09AD  1903               	skipnz
  2099  09AE  0AB0               	incf	(printf@exp+1)^(0+128),f
  2100  09AF                     l7852:	
  2101  09AF  1683               	bsf	3,5	;RP0=1, select bank1
  2102  09B0  0837               	movf	(printf@prec+1)^(0+128),w
  2103  09B1  3A80               	xorlw	128
  2104  09B2  00FF               	movwf	127
  2105  09B3  3080               	movlw	128
  2106  09B4  027F               	subwf	127,w
  2107  09B5  1D03               	skipz
  2108  09B6  29B9               	goto	u4675
  2109  09B7  300D               	movlw	13
  2110  09B8  0236               	subwf	printf@prec^(0+128),w
  2111  09B9                     u4675:	
  2112  09B9  1803               	skipnc
  2113  09BA  29E4               	goto	l7856
  2114  09BB  2786               	call	PL34	;select bank 1
  2115  09BC  0836               	movf	printf@prec^(0+128),w
  2116  09BD  120A  118A  25A6   	fcall	_fround
      +       120A  158A         
  2117  09C2  0856               	movf	?_fround,w
  2118  09C3  00CA               	movwf	?___ftadd
  2119  09C4  0857               	movf	?_fround+1,w
  2120  09C5  00CB               	movwf	?___ftadd+1
  2121  09C6  0858               	movf	?_fround+2,w
  2122  09C7  00CC               	movwf	?___ftadd+2
  2123  09C8  1683               	bsf	3,5	;RP0=1, select bank1
  2124  09C9  0833               	movf	printf@fval^(0+128),w
  2125  09CA  1283               	bcf	3,5	;RP0=0, select bank0
  2126  09CB  00CD               	movwf	?___ftadd+3
  2127  09CC  1683               	bsf	3,5	;RP0=1, select bank1
  2128  09CD  0834               	movf	(printf@fval+1)^(0+128),w
  2129  09CE  1283               	bcf	3,5	;RP0=0, select bank0
  2130  09CF  00CE               	movwf	?___ftadd+4
  2131  09D0  1683               	bsf	3,5	;RP0=1, select bank1
  2132  09D1  0835               	movf	(printf@fval+2)^(0+128),w
  2133  09D2  1283               	bcf	3,5	;RP0=0, select bank0
  2134  09D3  00CF               	movwf	?___ftadd+5
  2135  09D4  120A  118A  270E   	fcall	___ftadd
      +       120A  158A         
  2136  09D9  084A               	movf	?___ftadd,w
  2137  09DA  1683               	bsf	3,5	;RP0=1, select bank1
  2138  09DB  00B3               	movwf	printf@fval^(0+128)
  2139  09DC  1283               	bcf	3,5	;RP0=0, select bank0
  2140  09DD  084B               	movf	?___ftadd+1,w
  2141  09DE  1683               	bsf	3,5	;RP0=1, select bank1
  2142  09DF  00B4               	movwf	(printf@fval+1)^(0+128)
  2143  09E0  1283               	bcf	3,5	;RP0=0, select bank0
  2144  09E1  084C               	movf	?___ftadd+2,w
  2145  09E2  1683               	bsf	3,5	;RP0=1, select bank1
  2146  09E3  00B5               	movwf	(printf@fval+2)^(0+128)
  2147  09E4                     l7856:	
  2148  09E4  2786               	call	PL34	;select bank 1
  2149  09E5  0830               	movf	(printf@exp+1)^(0+128),w
  2150  09E6  3A80               	xorlw	128
  2151  09E7  00FF               	movwf	127
  2152  09E8  3080               	movlw	128
  2153  09E9  027F               	subwf	127,w
  2154  09EA  1D03               	skipz
  2155  09EB  29EE               	goto	u4685
  2156  09EC  300A               	movlw	10
  2157  09ED  022F               	subwf	printf@exp^(0+128),w
  2158  09EE                     u4685:	
  2159  09EE  1803               	skipnc
  2160  09EF  2A0F               	goto	l7864
  2161  09F0  2786               	call	PL34	;select bank 1
  2162  09F1  0835               	movf	(printf@fval+2)^(0+128),w
  2163  09F2  0434               	iorwf	(printf@fval+1)^(0+128),w
  2164  09F3  0433               	iorwf	printf@fval^(0+128),w
  2165  09F4  1903               	skipnz
  2166  09F5  2A61               	goto	l7880
  2167  09F6  0833               	movf	printf@fval^(0+128),w
  2168  09F7  2743  120A  158A   	fcall	PL15	;call to abstracted procedure
  2169  09FA  2617  120A  158A   	fcall	___fttol
  2170  09FD  0831               	movf	?___fttol+3,w
  2171  09FE  0430               	iorwf	?___fttol+2,w
  2172  09FF  042F               	iorwf	?___fttol+1,w
  2173  0A00  042E               	iorwf	?___fttol,w
  2174  0A01  1D03               	skipz
  2175  0A02  2A61               	goto	l7880
  2176  0A03  1683               	bsf	3,5	;RP0=1, select bank1
  2177  0A04  0830               	movf	(printf@exp+1)^(0+128),w
  2178  0A05  3A80               	xorlw	128
  2179  0A06  00FF               	movwf	127
  2180  0A07  3080               	movlw	128
  2181  0A08  027F               	subwf	127,w
  2182  0A09  1D03               	skipz
  2183  0A0A  2A0D               	goto	u4715
  2184  0A0B  3002               	movlw	2
  2185  0A0C  022F               	subwf	printf@exp^(0+128),w
  2186  0A0D                     u4715:	
  2187  0A0D  1C03               	skipc
  2188  0A0E  2A61               	goto	l7880
  2189  0A0F                     l7864:	
  2190  0A0F  2786               	call	PL34	;select bank 1
  2191  0A10  26FE  120A  158A   	fcall	PL5	;call to abstracted procedure
  2192  0A13  3070               	movlw	112
  2193  0A14  00A3               	movwf	?___ftge+3
  2194  0A15  3089               	movlw	137
  2195  0A16  00A4               	movwf	?___ftge+4
  2196  0A17  3040               	movlw	64
  2197  0A18  00A5               	movwf	?___ftge+5
  2198  0A19  25C3  120A  158A   	fcall	___ftge
  2199  0A1C  1803               	btfsc	3,0
  2200  0A1D  2A20               	goto	l7868
  2201  0A1E  30F7               	movlw	-9
  2202  0A1F  2A21               	goto	L1
  2203  0A20                     l7868:	
  2204  0A20  30F8               	movlw	-8
  2205  0A21                     L1:	
  2206  0A21  1683               	bsf	3,5	;RP0=1, select bank1
  2207  0A22  07AF               	addwf	printf@exp^(0+128),f
  2208  0A23  1C03               	skipc
  2209  0A24  03B0               	decf	(printf@exp+1)^(0+128),f
  2210  0A25  082F               	movf	printf@exp^(0+128),w
  2211  0A26  120A  118A  20A6   	fcall	_scale
      +       120A  158A         
  2212  0A2B  2712  120A  158A   	fcall	PL7	;call to abstracted procedure
  2213  0A2E  00A0               	movwf	?__tdiv_to_l_
  2214  0A2F  1683               	bsf	3,5	;RP0=1, select bank1
  2215  0A30  0834               	movf	(printf@fval+1)^(0+128),w
  2216  0A31  1283               	bcf	3,5	;RP0=0, select bank0
  2217  0A32  00A1               	movwf	?__tdiv_to_l_+1
  2218  0A33  1683               	bsf	3,5	;RP0=1, select bank1
  2219  0A34  0835               	movf	(printf@fval+2)^(0+128),w
  2220  0A35  1283               	bcf	3,5	;RP0=0, select bank0
  2221  0A36  00A2               	movwf	?__tdiv_to_l_+2
  2222  0A37  1683               	bsf	3,5	;RP0=1, select bank1
  2223  0A38  0825               	movf	printf@integ^(0+128),w
  2224  0A39  1283               	bcf	3,5	;RP0=0, select bank0
  2225  0A3A  00A3               	movwf	?__tdiv_to_l_+3
  2226  0A3B  1683               	bsf	3,5	;RP0=1, select bank1
  2227  0A3C  0826               	movf	(printf@integ+1)^(0+128),w
  2228  0A3D  1283               	bcf	3,5	;RP0=0, select bank0
  2229  0A3E  00A4               	movwf	?__tdiv_to_l_+4
  2230  0A3F  1683               	bsf	3,5	;RP0=1, select bank1
  2231  0A40  0827               	movf	(printf@integ+2)^(0+128),w
  2232  0A41  1283               	bcf	3,5	;RP0=0, select bank0
  2233  0A42  00A5               	movwf	?__tdiv_to_l_+5
  2234  0A43  2789  120A  158A   	fcall	__tdiv_to_l_
  2235  0A46  0823               	movf	?__tdiv_to_l_+3,w
  2236  0A47  1683               	bsf	3,5	;RP0=1, select bank1
  2237  0A48  00A3               	movwf	(_printf$3160+3)^(0+128)
  2238  0A49  1283               	bcf	3,5	;RP0=0, select bank0
  2239  0A4A  0822               	movf	?__tdiv_to_l_+2,w
  2240  0A4B  1683               	bsf	3,5	;RP0=1, select bank1
  2241  0A4C  00A2               	movwf	(_printf$3160+2)^(0+128)
  2242  0A4D  1283               	bcf	3,5	;RP0=0, select bank0
  2243  0A4E  0821               	movf	?__tdiv_to_l_+1,w
  2244  0A4F  1683               	bsf	3,5	;RP0=1, select bank1
  2245  0A50  00A1               	movwf	(_printf$3160+1)^(0+128)
  2246  0A51  1283               	bcf	3,5	;RP0=0, select bank0
  2247  0A52  0820               	movf	?__tdiv_to_l_,w
  2248  0A53  1683               	bsf	3,5	;RP0=1, select bank1
  2249  0A54  00A0               	movwf	_printf$3160^(0+128)
  2250  0A55  0823               	movf	(_printf$3160+3)^(0+128),w
  2251  0A56  00AB               	movwf	(printf@_val+3)^(0+128)
  2252  0A57  0822               	movf	(_printf$3160+2)^(0+128),w
  2253  0A58  00AA               	movwf	(printf@_val+2)^(0+128)
  2254  0A59  0821               	movf	(_printf$3160+1)^(0+128),w
  2255  0A5A  00A9               	movwf	(printf@_val+1)^(0+128)
  2256  0A5B  0820               	movf	_printf$3160^(0+128),w
  2257  0A5C  00A8               	movwf	printf@_val^(0+128)
  2258  0A5D  01B3               	clrf	printf@fval^(0+128)
  2259  0A5E  01B4               	clrf	(printf@fval+1)^(0+128)
  2260  0A5F  01B5               	clrf	(printf@fval+2)^(0+128)
  2261  0A60  2AA2               	goto	l7884
  2262  0A61                     l7880:	
  2263  0A61  2786               	call	PL34	;select bank 1
  2264  0A62  0833               	movf	printf@fval^(0+128),w
  2265  0A63  2743  120A  158A   	fcall	PL15	;call to abstracted procedure
  2266  0A66  2617  120A  158A   	fcall	___fttol
  2267  0A69  2720  120A  158A   	fcall	PL8	;call to abstracted procedure
  2268  0A6C  1683               	bsf	3,5	;RP0=1, select bank1
  2269  0A6D  00A8               	movwf	printf@_val^(0+128)
  2270  0A6E  082B               	movf	(printf@_val+3)^(0+128),w
  2271  0A6F  1283               	bcf	3,5	;RP0=0, select bank0
  2272  0A70  00AB               	movwf	?___lltoft+3
  2273  0A71  1683               	bsf	3,5	;RP0=1, select bank1
  2274  0A72  082A               	movf	(printf@_val+2)^(0+128),w
  2275  0A73  1283               	bcf	3,5	;RP0=0, select bank0
  2276  0A74  00AA               	movwf	?___lltoft+2
  2277  0A75  1683               	bsf	3,5	;RP0=1, select bank1
  2278  0A76  0829               	movf	(printf@_val+1)^(0+128),w
  2279  0A77  1283               	bcf	3,5	;RP0=0, select bank0
  2280  0A78  00A9               	movwf	?___lltoft+1
  2281  0A79  1683               	bsf	3,5	;RP0=1, select bank1
  2282  0A7A  0828               	movf	printf@_val^(0+128),w
  2283  0A7B  1283               	bcf	3,5	;RP0=0, select bank0
  2284  0A7C  00A8               	movwf	?___lltoft
  2285  0A7D  26C2               	fcall	___lltoft
  2286  0A7E  0828               	movf	?___lltoft,w
  2287  0A7F  00D6               	movwf	?___ftsub
  2288  0A80  0829               	movf	?___lltoft+1,w
  2289  0A81  00D7               	movwf	?___ftsub+1
  2290  0A82  082A               	movf	?___lltoft+2,w
  2291  0A83  00D8               	movwf	?___ftsub+2
  2292  0A84  1683               	bsf	3,5	;RP0=1, select bank1
  2293  0A85  0833               	movf	printf@fval^(0+128),w
  2294  0A86  1283               	bcf	3,5	;RP0=0, select bank0
  2295  0A87  00D9               	movwf	?___ftsub+3
  2296  0A88  1683               	bsf	3,5	;RP0=1, select bank1
  2297  0A89  0834               	movf	(printf@fval+1)^(0+128),w
  2298  0A8A  1283               	bcf	3,5	;RP0=0, select bank0
  2299  0A8B  00DA               	movwf	?___ftsub+4
  2300  0A8C  1683               	bsf	3,5	;RP0=1, select bank1
  2301  0A8D  0835               	movf	(printf@fval+2)^(0+128),w
  2302  0A8E  1283               	bcf	3,5	;RP0=0, select bank0
  2303  0A8F  00DB               	movwf	?___ftsub+5
  2304  0A90  120A  118A  26F8   	fcall	___ftsub
      +       120A  158A         
  2305  0A95  0856               	movf	?___ftsub,w
  2306  0A96  1683               	bsf	3,5	;RP0=1, select bank1
  2307  0A97  00B3               	movwf	printf@fval^(0+128)
  2308  0A98  1283               	bcf	3,5	;RP0=0, select bank0
  2309  0A99  0857               	movf	?___ftsub+1,w
  2310  0A9A  1683               	bsf	3,5	;RP0=1, select bank1
  2311  0A9B  00B4               	movwf	(printf@fval+1)^(0+128)
  2312  0A9C  1283               	bcf	3,5	;RP0=0, select bank0
  2313  0A9D  0858               	movf	?___ftsub+2,w
  2314  0A9E  1683               	bsf	3,5	;RP0=1, select bank1
  2315  0A9F  00B5               	movwf	(printf@fval+2)^(0+128)
  2316  0AA0  01AF               	clrf	printf@exp^(0+128)
  2317  0AA1  01B0               	clrf	(printf@exp+1)^(0+128)
  2318  0AA2                     l7884:	
  2319  0AA2  01B8               	clrf	printf@c^(0+128)
  2320  0AA3  0AB8               	incf	printf@c^(0+128),f
  2321  0AA4                     l7890:	
  2322  0AA4  26F4               	fcall	PL3	;call to abstracted procedure
  2323  0AA5  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  2324  0AAA  00E5               	movwf	??_printf+1
  2325  0AAB  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  2326  0AB0  00E6               	movwf	??_printf+2
  2327  0AB1  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  2328  0AB6  00E7               	movwf	??_printf+3
  2329  0AB7  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  2330  0ABC  00E8               	movwf	??_printf+4
  2331  0ABD  1683               	bsf	3,5	;RP0=1, select bank1
  2332  0ABE  022B               	subwf	(printf@_val+3)^(0+128),w
  2333  0ABF  1D03               	skipz
  2334  0AC0  2AD1               	goto	u4735
  2335  0AC1  1283               	bcf	3,5	;RP0=0, select bank0
  2336  0AC2  0867               	movf	??_printf+3,w
  2337  0AC3  1683               	bsf	3,5	;RP0=1, select bank1
  2338  0AC4  022A               	subwf	(printf@_val+2)^(0+128),w
  2339  0AC5  1D03               	skipz
  2340  0AC6  2AD1               	goto	u4735
  2341  0AC7  1283               	bcf	3,5	;RP0=0, select bank0
  2342  0AC8  0866               	movf	??_printf+2,w
  2343  0AC9  1683               	bsf	3,5	;RP0=1, select bank1
  2344  0ACA  0229               	subwf	(printf@_val+1)^(0+128),w
  2345  0ACB  1D03               	skipz
  2346  0ACC  2AD1               	goto	u4735
  2347  0ACD  1283               	bcf	3,5	;RP0=0, select bank0
  2348  0ACE  0865               	movf	??_printf+1,w
  2349  0ACF  1683               	bsf	3,5	;RP0=1, select bank1
  2350  0AD0  0228               	subwf	printf@_val^(0+128),w
  2351  0AD1                     u4735:	
  2352  0AD1  1C03               	btfss	3,0
  2353  0AD2  2AD8               	goto	l7898
  2354  0AD3  0AB8               	incf	printf@c^(0+128),f
  2355  0AD4  0838               	movf	printf@c^(0+128),w
  2356  0AD5  3A0A               	xorlw	10
  2357  0AD6  1D03               	skipz
  2358  0AD7  2AA4               	goto	l7890
  2359  0AD8                     l7898:	
  2360  0AD8  0836               	movf	printf@prec^(0+128),w
  2361  0AD9  0738               	addwf	printf@c^(0+128),w
  2362  0ADA  1283               	bcf	3,5	;RP0=0, select bank0
  2363  0ADB  00E4               	movwf	??_printf
  2364  0ADC  1683               	bsf	3,5	;RP0=1, select bank1
  2365  0ADD  0837               	movf	(printf@prec+1)^(0+128),w
  2366  0ADE  1803               	skipnc
  2367  0ADF  0A37               	incf	(printf@prec+1)^(0+128),w
  2368  0AE0  1BB8               	btfsc	printf@c^(0+128),7
  2369  0AE1  3EFF               	addlw	255
  2370  0AE2  1283               	bcf	3,5	;RP0=0, select bank0
  2371  0AE3  00E5               	movwf	??_printf+1
  2372  0AE4  1683               	bsf	3,5	;RP0=1, select bank1
  2373  0AE5  082F               	movf	printf@exp^(0+128),w
  2374  0AE6  1283               	bcf	3,5	;RP0=0, select bank0
  2375  0AE7  0764               	addwf	??_printf,w
  2376  0AE8  00E6               	movwf	??_printf+2
  2377  0AE9  1683               	bsf	3,5	;RP0=1, select bank1
  2378  0AEA  0830               	movf	(printf@exp+1)^(0+128),w
  2379  0AEB  1803               	skipnc
  2380  0AEC  0A30               	incf	(printf@exp+1)^(0+128),w
  2381  0AED  1283               	bcf	3,5	;RP0=0, select bank0
  2382  0AEE  0765               	addwf	??_printf+1,w
  2383  0AEF  00E7               	movwf	??_printf+3
  2384  0AF0  0866               	movf	??_printf+2,w
  2385  0AF1  1683               	bsf	3,5	;RP0=1, select bank1
  2386  0AF2  02B1               	subwf	printf@width^(0+128),f
  2387  0AF3  1283               	bcf	3,5	;RP0=0, select bank0
  2388  0AF4  0867               	movf	??_printf+3,w
  2389  0AF5  1683               	bsf	3,5	;RP0=1, select bank1
  2390  0AF6  1C03               	skipc
  2391  0AF7  03B2               	decf	(printf@width+1)^(0+128),f
  2392  0AF8  02B2               	subwf	(printf@width+1)^(0+128),f
  2393  0AF9  0837               	movf	(printf@prec+1)^(0+128),w
  2394  0AFA  0436               	iorwf	printf@prec^(0+128),w
  2395  0AFB  1903               	skipnz
  2396  0AFC  2B01               	goto	l7904
  2397  0AFD  30FF               	movlw	-1
  2398  0AFE  07B1               	addwf	printf@width^(0+128),f
  2399  0AFF  1C03               	skipc
  2400  0B00  03B2               	decf	(printf@width+1)^(0+128),f
  2401  0B01                     l7904:	
  2402  0B01  082D               	movf	printf@flag^(0+128),w
  2403  0B02  3903               	andlw	3
  2404  0B03  1903               	btfsc	3,2
  2405  0B04  2B09               	goto	l7908
  2406  0B05  30FF               	movlw	-1
  2407  0B06  07B1               	addwf	printf@width^(0+128),f
  2408  0B07  1C03               	skipc
  2409  0B08  03B2               	decf	(printf@width+1)^(0+128),f
  2410  0B09                     l7908:	
  2411  0B09  192D               	btfsc	printf@flag^(0+128),2
  2412  0B0A  2B15               	goto	l7916
  2413  0B0B  2B2A               	goto	l7922
  2414  0B0C                     l7912:	
  2415  0B0C  3030               	movlw	48
  2416  0B0D  257F  120A  158A   	fcall	_putch
  2417  0B10  30FF               	movlw	-1
  2418  0B11  1683               	bsf	3,5	;RP0=1, select bank1
  2419  0B12  07B1               	addwf	printf@width^(0+128),f
  2420  0B13  1C03               	skipc
  2421  0B14  03B2               	decf	(printf@width+1)^(0+128),f
  2422  0B15                     l7916:	
  2423  0B15  0832               	movf	(printf@width+1)^(0+128),w
  2424  0B16  3A80               	xorlw	128
  2425  0B17  00FF               	movwf	127
  2426  0B18  3080               	movlw	128
  2427  0B19  027F               	subwf	127,w
  2428  0B1A  1D03               	skipz
  2429  0B1B  2B1E               	goto	u4785
  2430  0B1C  3001               	movlw	1
  2431  0B1D  0231               	subwf	printf@width^(0+128),w
  2432  0B1E                     u4785:	
  2433  0B1E  1C03               	btfss	3,0
  2434  0B1F  2B68               	goto	l7930
  2435  0B20  2B0C               	goto	l7912
  2436  0B21                     l7918:	
  2437  0B21  3020               	movlw	32
  2438  0B22  257F  120A  158A   	fcall	_putch
  2439  0B25  30FF               	movlw	-1
  2440  0B26  1683               	bsf	3,5	;RP0=1, select bank1
  2441  0B27  07B1               	addwf	printf@width^(0+128),f
  2442  0B28  1C03               	skipc
  2443  0B29  03B2               	decf	(printf@width+1)^(0+128),f
  2444  0B2A                     l7922:	
  2445  0B2A  0832               	movf	(printf@width+1)^(0+128),w
  2446  0B2B  3A80               	xorlw	128
  2447  0B2C  00FF               	movwf	127
  2448  0B2D  3080               	movlw	128
  2449  0B2E  027F               	subwf	127,w
  2450  0B2F  1D03               	skipz
  2451  0B30  2B33               	goto	u4795
  2452  0B31  3001               	movlw	1
  2453  0B32  0231               	subwf	printf@width^(0+128),w
  2454  0B33                     u4795:	
  2455  0B33  1803               	skipnc
  2456  0B34  2B21               	goto	l7918
  2457  0B35  2786               	call	PL34	;select bank 1
  2458  0B36  082D               	movf	printf@flag^(0+128),w
  2459  0B37  3903               	andlw	3
  2460  0B38  1903               	btfsc	3,2
  2461  0B39  2B68               	goto	l7930
  2462  0B3A  302D               	movlw	45
  2463  0B3B  2B65               	goto	L2
  2464  0B3C                     l7928:	
  2465  0B3C  270A  120A  158A   	fcall	PL6	;call to abstracted procedure
  2466  0B3F  26F4               	fcall	PL3	;call to abstracted procedure
  2467  0B40  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  2468  0B45  00A0               	movwf	?___lldiv
  2469  0B46  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  2470  0B4B  00A1               	movwf	?___lldiv+1
  2471  0B4C  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  2472  0B51  00A2               	movwf	?___lldiv+2
  2473  0B52  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  2474  0B57  26E2  120A  158A   	fcall	PL2	;call to abstracted procedure
  2475  0B5A  2672  120A  158A   	fcall	___lldiv
  2476  0B5D  272E  120A  158A   	fcall	PL13	;call to abstracted procedure
  2477  0B60  2585  120A  158A   	fcall	___llmod
  2478  0B63  082D               	movf	?___llmod,w
  2479  0B64  3E30               	addlw	48
  2480  0B65                     L2:	
  2481  0B65  257F  120A  158A   	fcall	_putch
  2482  0B68                     l7930:	
  2483  0B68  2786               	call	PL34	;select bank 1
  2484  0B69  03B8               	decf	printf@c^(0+128),f
  2485  0B6A  0F38               	incfsz	printf@c^(0+128),w
  2486  0B6B  2B3C               	goto	l7928
  2487  0B6C                     l7936:	
  2488  0B6C  0830               	movf	(printf@exp+1)^(0+128),w
  2489  0B6D  3A80               	xorlw	128
  2490  0B6E  00FF               	movwf	127
  2491  0B6F  3080               	movlw	128
  2492  0B70  027F               	subwf	127,w
  2493  0B71  1D03               	skipz
  2494  0B72  2B75               	goto	u4825
  2495  0B73  3001               	movlw	1
  2496  0B74  022F               	subwf	printf@exp^(0+128),w
  2497  0B75                     u4825:	
  2498  0B75  1C03               	btfss	3,0
  2499  0B76  2B81               	goto	l7938
  2500  0B77  3030               	movlw	48
  2501  0B78  257F  120A  158A   	fcall	_putch
  2502  0B7B  30FF               	movlw	-1
  2503  0B7C  1683               	bsf	3,5	;RP0=1, select bank1
  2504  0B7D  07AF               	addwf	printf@exp^(0+128),f
  2505  0B7E  1C03               	skipc
  2506  0B7F  03B0               	decf	(printf@exp+1)^(0+128),f
  2507  0B80  2B6C               	goto	l7936
  2508  0B81                     l7938:	
  2509  0B81  2786               	call	PL34	;select bank 1
  2510  0B82  0837               	movf	(printf@prec+1)^(0+128),w
  2511  0B83  3A80               	xorlw	128
  2512  0B84  00FF               	movwf	127
  2513  0B85  3080               	movlw	128
  2514  0B86  027F               	subwf	127,w
  2515  0B87  1D03               	skipz
  2516  0B88  2B8B               	goto	u4835
  2517  0B89  3009               	movlw	9
  2518  0B8A  0236               	subwf	printf@prec^(0+128),w
  2519  0B8B                     u4835:	
  2520  0B8B  1C03               	skipc
  2521  0B8C  2B90               	goto	l7942
  2522  0B8D  3008               	movlw	8
  2523  0B8E  2786               	call	PL34	;select bank 1
  2524  0B8F  2B92               	goto	L3
  2525  0B90                     l7942:	
  2526  0B90  2786               	call	PL34	;select bank 1
  2527  0B91  0836               	movf	printf@prec^(0+128),w
  2528  0B92                     L3:	
  2529  0B92  00B8               	movwf	printf@c^(0+128)
  2530  0B93  1283               	bcf	3,5	;RP0=0, select bank0
  2531  0B94  00E4               	movwf	??_printf
  2532  0B95  01E5               	clrf	??_printf+1
  2533  0B96  1BE4               	btfsc	??_printf,7
  2534  0B97  03E5               	decf	??_printf+1,f
  2535  0B98  1683               	bsf	3,5	;RP0=1, select bank1
  2536  0B99  02B6               	subwf	printf@prec^(0+128),f
  2537  0B9A  1283               	bcf	3,5	;RP0=0, select bank0
  2538  0B9B  0865               	movf	??_printf+1,w
  2539  0B9C  1683               	bsf	3,5	;RP0=1, select bank1
  2540  0B9D  1C03               	skipc
  2541  0B9E  03B7               	decf	(printf@prec+1)^(0+128),f
  2542  0B9F  02B7               	subwf	(printf@prec+1)^(0+128),f
  2543  0BA0  0838               	movf	printf@c^(0+128),w
  2544  0BA1  1903               	btfsc	3,2
  2545  0BA2  2BA5               	goto	l2257
  2546  0BA3  302E               	movlw	46
  2547  0BA4  257F               	fcall	_putch
  2548  0BA5                     l2257:	
  2549  0BA5  1683               	bsf	3,5	;RP0=1, select bank1
  2550  0BA6  0838               	movf	printf@c^(0+128),w
  2551  0BA7  120A  118A  20A6   	fcall	_scale
      +       120A  158A         
  2552  0BAC  084A               	movf	?_scale,w
  2553  0BAD  00BE               	movwf	?___ftmul+3
  2554  0BAE  084B               	movf	?_scale+1,w
  2555  0BAF  00BF               	movwf	?___ftmul+4
  2556  0BB0  084C               	movf	?_scale+2,w
  2557  0BB1  00C0               	movwf	?___ftmul+5
  2558  0BB2  1683               	bsf	3,5	;RP0=1, select bank1
  2559  0BB3  0833               	movf	printf@fval^(0+128),w
  2560  0BB4  1283               	bcf	3,5	;RP0=0, select bank0
  2561  0BB5  2758               	fcall	PL19	;call to abstracted procedure
  2562  0BB6  120A  118A  22BA   	fcall	___ftmul
      +       120A  158A         
  2563  0BBB  083B               	movf	?___ftmul,w
  2564  0BBC  00AE               	movwf	?___fttol
  2565  0BBD  083C               	movf	?___ftmul+1,w
  2566  0BBE  00AF               	movwf	?___fttol+1
  2567  0BBF  083D               	movf	?___ftmul+2,w
  2568  0BC0  00B0               	movwf	?___fttol+2
  2569  0BC1  2617  120A  158A   	fcall	___fttol
  2570  0BC4  2720  120A  158A   	fcall	PL8	;call to abstracted procedure
  2571  0BC7  2C2E               	goto	L4
  2572  0BC8                     l7946:	
  2573  0BC8  270A  120A  158A   	fcall	PL6	;call to abstracted procedure
  2574  0BCB  26F4               	fcall	PL3	;call to abstracted procedure
  2575  0BCC  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  2576  0BD1  00A0               	movwf	?___lldiv
  2577  0BD2  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  2578  0BD7  00A1               	movwf	?___lldiv+1
  2579  0BD8  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  2580  0BDD  00A2               	movwf	?___lldiv+2
  2581  0BDE  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  2582  0BE3  26E2  120A  158A   	fcall	PL2	;call to abstracted procedure
  2583  0BE6  2672  120A  158A   	fcall	___lldiv
  2584  0BE9  272E  120A  158A   	fcall	PL13	;call to abstracted procedure
  2585  0BEC  2585  120A  158A   	fcall	___llmod
  2586  0BEF  082D               	movf	?___llmod,w
  2587  0BF0  3E30               	addlw	48
  2588  0BF1  257F  120A  158A   	fcall	_putch
  2589  0BF4  1683               	bsf	3,5	;RP0=1, select bank1
  2590  0BF5  26F4               	fcall	PL3	;call to abstracted procedure
  2591  0BF6  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  2592  0BFB  00AD               	movwf	?___llmod
  2593  0BFC  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  2594  0C01  00AE               	movwf	?___llmod+1
  2595  0C02  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  2596  0C07  00AF               	movwf	?___llmod+2
  2597  0C08  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  2598  0C0D  00B0               	movwf	?___llmod+3
  2599  0C0E  1683               	bsf	3,5	;RP0=1, select bank1
  2600  0C0F  082B               	movf	(printf@_val+3)^(0+128),w
  2601  0C10  1283               	bcf	3,5	;RP0=0, select bank0
  2602  0C11  00B4               	movwf	?___llmod+7
  2603  0C12  1683               	bsf	3,5	;RP0=1, select bank1
  2604  0C13  082A               	movf	(printf@_val+2)^(0+128),w
  2605  0C14  1283               	bcf	3,5	;RP0=0, select bank0
  2606  0C15  00B3               	movwf	?___llmod+6
  2607  0C16  1683               	bsf	3,5	;RP0=1, select bank1
  2608  0C17  0829               	movf	(printf@_val+1)^(0+128),w
  2609  0C18  1283               	bcf	3,5	;RP0=0, select bank0
  2610  0C19  00B2               	movwf	?___llmod+5
  2611  0C1A  1683               	bsf	3,5	;RP0=1, select bank1
  2612  0C1B  0828               	movf	printf@_val^(0+128),w
  2613  0C1C  1283               	bcf	3,5	;RP0=0, select bank0
  2614  0C1D  00B1               	movwf	?___llmod+4
  2615  0C1E  2585  120A  158A   	fcall	___llmod
  2616  0C21  0830               	movf	?___llmod+3,w
  2617  0C22  1683               	bsf	3,5	;RP0=1, select bank1
  2618  0C23  00AB               	movwf	(printf@_val+3)^(0+128)
  2619  0C24  1283               	bcf	3,5	;RP0=0, select bank0
  2620  0C25  082F               	movf	?___llmod+2,w
  2621  0C26  1683               	bsf	3,5	;RP0=1, select bank1
  2622  0C27  00AA               	movwf	(printf@_val+2)^(0+128)
  2623  0C28  1283               	bcf	3,5	;RP0=0, select bank0
  2624  0C29  082E               	movf	?___llmod+1,w
  2625  0C2A  1683               	bsf	3,5	;RP0=1, select bank1
  2626  0C2B  00A9               	movwf	(printf@_val+1)^(0+128)
  2627  0C2C  1283               	bcf	3,5	;RP0=0, select bank0
  2628  0C2D  082D               	movf	?___llmod,w
  2629  0C2E                     L4:	
  2630  0C2E  1683               	bsf	3,5	;RP0=1, select bank1
  2631  0C2F  00A8               	movwf	printf@_val^(0+128)
  2632  0C30  03B8               	decf	printf@c^(0+128),f
  2633  0C31  0F38               	incfsz	printf@c^(0+128),w
  2634  0C32  2BC8               	goto	l7946
  2635  0C33                     l7954:	
  2636  0C33  0837               	movf	(printf@prec+1)^(0+128),w
  2637  0C34  0436               	iorwf	printf@prec^(0+128),w
  2638  0C35  1903               	btfsc	3,2
  2639  0C36  280A               	goto	l8034
  2640  0C37  3030               	movlw	48
  2641  0C38  257F  120A  158A   	fcall	_putch
  2642  0C3B  30FF               	movlw	-1
  2643  0C3C  1683               	bsf	3,5	;RP0=1, select bank1
  2644  0C3D  07B6               	addwf	printf@prec^(0+128),f
  2645  0C3E  1C03               	skipc
  2646  0C3F  03B7               	decf	(printf@prec+1)^(0+128),f
  2647  0C40  2C33               	goto	l7954
  2648  0C41                     l7956:	
  2649  0C41  1683               	bsf	3,5	;RP0=1, select bank1
  2650  0C42  0824               	movf	printf@ap^(0+128),w
  2651  0C43  0084               	movwf	4
  2652  0C44  1383               	bcf	3,7	;select IRP bank0
  2653  0C45  2779  120A  158A   	fcall	PL31	;call to abstracted procedure
  2654  0C48  0864               	movf	??_printf,w
  2655  0C49  1683               	bsf	3,5	;RP0=1, select bank1
  2656  0C4A  00A8               	movwf	printf@_val^(0+128)
  2657  0C4B  1283               	bcf	3,5	;RP0=0, select bank0
  2658  0C4C  0865               	movf	??_printf+1,w
  2659  0C4D  1683               	bsf	3,5	;RP0=1, select bank1
  2660  0C4E  00A9               	movwf	(printf@_val^(0+128)+1)
  2661  0C4F  01AA               	clrf	(printf@_val^(0+128)+2)
  2662  0C50  01AB               	clrf	(printf@_val^(0+128)+3)
  2663  0C51  0AA4               	incf	printf@ap^(0+128),f
  2664  0C52  0AA4               	incf	printf@ap^(0+128),f
  2665  0C53  0837               	movf	(printf@prec+1)^(0+128),w
  2666  0C54  0436               	iorwf	printf@prec^(0+128),w
  2667  0C55  1D03               	skipz
  2668  0C56  2C5F               	goto	l7966
  2669  0C57  082B               	movf	(printf@_val+3)^(0+128),w
  2670  0C58  042A               	iorwf	(printf@_val+2)^(0+128),w
  2671  0C59  0429               	iorwf	(printf@_val+1)^(0+128),w
  2672  0C5A  0428               	iorwf	printf@_val^(0+128),w
  2673  0C5B  1903               	btfsc	3,2
  2674  0C5C  0AB6               	incf	printf@prec^(0+128),f
  2675  0C5D  1903               	skipnz
  2676  0C5E  0AB7               	incf	(printf@prec+1)^(0+128),f
  2677  0C5F                     l7966:	
  2678  0C5F  01B8               	clrf	printf@c^(0+128)
  2679  0C60  0AB8               	incf	printf@c^(0+128),f
  2680  0C61                     l7972:	
  2681  0C61  26F4               	fcall	PL3	;call to abstracted procedure
  2682  0C62  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  2683  0C67  00E5               	movwf	??_printf+1
  2684  0C68  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  2685  0C6D  00E6               	movwf	??_printf+2
  2686  0C6E  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  2687  0C73  00E7               	movwf	??_printf+3
  2688  0C74  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  2689  0C79  00E8               	movwf	??_printf+4
  2690  0C7A  1683               	bsf	3,5	;RP0=1, select bank1
  2691  0C7B  022B               	subwf	(printf@_val+3)^(0+128),w
  2692  0C7C  1D03               	skipz
  2693  0C7D  2C8E               	goto	u4895
  2694  0C7E  1283               	bcf	3,5	;RP0=0, select bank0
  2695  0C7F  0867               	movf	??_printf+3,w
  2696  0C80  1683               	bsf	3,5	;RP0=1, select bank1
  2697  0C81  022A               	subwf	(printf@_val+2)^(0+128),w
  2698  0C82  1D03               	skipz
  2699  0C83  2C8E               	goto	u4895
  2700  0C84  1283               	bcf	3,5	;RP0=0, select bank0
  2701  0C85  0866               	movf	??_printf+2,w
  2702  0C86  1683               	bsf	3,5	;RP0=1, select bank1
  2703  0C87  0229               	subwf	(printf@_val+1)^(0+128),w
  2704  0C88  1D03               	skipz
  2705  0C89  2C8E               	goto	u4895
  2706  0C8A  1283               	bcf	3,5	;RP0=0, select bank0
  2707  0C8B  0865               	movf	??_printf+1,w
  2708  0C8C  1683               	bsf	3,5	;RP0=1, select bank1
  2709  0C8D  0228               	subwf	printf@_val^(0+128),w
  2710  0C8E                     u4895:	
  2711  0C8E  1C03               	btfss	3,0
  2712  0C8F  2C95               	goto	l7980
  2713  0C90  0AB8               	incf	printf@c^(0+128),f
  2714  0C91  0838               	movf	printf@c^(0+128),w
  2715  0C92  3A0A               	xorlw	10
  2716  0C93  1D03               	skipz
  2717  0C94  2C61               	goto	l7972
  2718  0C95                     l7980:	
  2719  0C95  0838               	movf	printf@c^(0+128),w
  2720  0C96  274E  120A  158A   	fcall	PL18	;call to abstracted procedure
  2721  0C99  0837               	movf	(printf@prec+1)^(0+128),w
  2722  0C9A  3A80               	xorlw	128
  2723  0C9B  1283               	bcf	3,5	;RP0=0, select bank0
  2724  0C9C  0266               	subwf	??_printf+2,w
  2725  0C9D  1D03               	skipz
  2726  0C9E  2CA3               	goto	u4915
  2727  0C9F  1683               	bsf	3,5	;RP0=1, select bank1
  2728  0CA0  0836               	movf	printf@prec^(0+128),w
  2729  0CA1  1283               	bcf	3,5	;RP0=0, select bank0
  2730  0CA2  0264               	subwf	??_printf,w
  2731  0CA3                     u4915:	
  2732  0CA3  1803               	skipnc
  2733  0CA4  2CA9               	goto	l7984
  2734  0CA5  2786               	call	PL34	;select bank 1
  2735  0CA6  0836               	movf	printf@prec^(0+128),w
  2736  0CA7  00B8               	movwf	printf@c^(0+128)
  2737  0CA8  2CC1               	goto	l7988
  2738  0CA9                     l7984:	
  2739  0CA9  1683               	bsf	3,5	;RP0=1, select bank1
  2740  0CAA  2762  120A  158A   	fcall	PL21	;call to abstracted procedure
  2741  0CAD  0837               	movf	(printf@prec+1)^(0+128),w
  2742  0CAE  3A80               	xorlw	128
  2743  0CAF  1283               	bcf	3,5	;RP0=0, select bank0
  2744  0CB0  00E6               	movwf	??_printf+2
  2745  0CB1  0865               	movf	??_printf+1,w
  2746  0CB2  3A80               	xorlw	128
  2747  0CB3  0266               	subwf	??_printf+2,w
  2748  0CB4  1D03               	skipz
  2749  0CB5  2CB9               	goto	u4925
  2750  0CB6  0864               	movf	??_printf,w
  2751  0CB7  1683               	bsf	3,5	;RP0=1, select bank1
  2752  0CB8  0236               	subwf	printf@prec^(0+128),w
  2753  0CB9                     u4925:	
  2754  0CB9  1803               	skipnc
  2755  0CBA  2CC1               	goto	l7988
  2756  0CBB  2786               	call	PL34	;select bank 1
  2757  0CBC  0838               	movf	printf@c^(0+128),w
  2758  0CBD  00B6               	movwf	printf@prec^(0+128)
  2759  0CBE  01B7               	clrf	(printf@prec+1)^(0+128)
  2760  0CBF  1BB6               	btfsc	printf@prec^(0+128),7
  2761  0CC0  03B7               	decf	(printf@prec+1)^(0+128),f
  2762  0CC1                     l7988:	
  2763  0CC1  2786               	call	PL34	;select bank 1
  2764  0CC2  0832               	movf	(printf@width+1)^(0+128),w
  2765  0CC3  0431               	iorwf	printf@width^(0+128),w
  2766  0CC4  1903               	skipnz
  2767  0CC5  2CCE               	goto	l7994
  2768  0CC6  082D               	movf	printf@flag^(0+128),w
  2769  0CC7  3903               	andlw	3
  2770  0CC8  1903               	btfsc	3,2
  2771  0CC9  2CCE               	goto	l7994
  2772  0CCA  30FF               	movlw	-1
  2773  0CCB  07B1               	addwf	printf@width^(0+128),f
  2774  0CCC  1C03               	skipc
  2775  0CCD  03B2               	decf	(printf@width+1)^(0+128),f
  2776  0CCE                     l7994:	
  2777  0CCE  1F2E               	btfss	(printf@flag+1)^(0+128),6
  2778  0CCF  2CEB               	goto	l8002
  2779  0CD0  0837               	movf	(printf@prec+1)^(0+128),w
  2780  0CD1  3A80               	xorlw	128
  2781  0CD2  1283               	bcf	3,5	;RP0=0, select bank0
  2782  0CD3  00E4               	movwf	??_printf
  2783  0CD4  1683               	bsf	3,5	;RP0=1, select bank1
  2784  0CD5  0832               	movf	(printf@width+1)^(0+128),w
  2785  0CD6  3A80               	xorlw	128
  2786  0CD7  1283               	bcf	3,5	;RP0=0, select bank0
  2787  0CD8  0264               	subwf	??_printf,w
  2788  0CD9  1D03               	skipz
  2789  0CDA  2CDE               	goto	u4965
  2790  0CDB  1683               	bsf	3,5	;RP0=1, select bank1
  2791  0CDC  0831               	movf	printf@width^(0+128),w
  2792  0CDD  0236               	subwf	printf@prec^(0+128),w
  2793  0CDE                     u4965:	
  2794  0CDE  1803               	skipnc
  2795  0CDF  2CE8               	goto	l8000
  2796  0CE0  2786               	call	PL34	;select bank 1
  2797  0CE1  0836               	movf	printf@prec^(0+128),w
  2798  0CE2  02B1               	subwf	printf@width^(0+128),f
  2799  0CE3  0837               	movf	(printf@prec+1)^(0+128),w
  2800  0CE4  1C03               	skipc
  2801  0CE5  03B2               	decf	(printf@width+1)^(0+128),f
  2802  0CE6  02B2               	subwf	(printf@width+1)^(0+128),f
  2803  0CE7  2CEB               	goto	l8002
  2804  0CE8                     l8000:	
  2805  0CE8  2786               	call	PL34	;select bank 1
  2806  0CE9  01B1               	clrf	printf@width^(0+128)
  2807  0CEA  01B2               	clrf	(printf@width+1)^(0+128)
  2808  0CEB                     l8002:	
  2809  0CEB  0838               	movf	printf@c^(0+128),w
  2810  0CEC  274E  120A  158A   	fcall	PL18	;call to abstracted procedure
  2811  0CEF  0832               	movf	(printf@width+1)^(0+128),w
  2812  0CF0  3A80               	xorlw	128
  2813  0CF1  1283               	bcf	3,5	;RP0=0, select bank0
  2814  0CF2  0266               	subwf	??_printf+2,w
  2815  0CF3  1D03               	skipz
  2816  0CF4  2CF9               	goto	u4975
  2817  0CF5  1683               	bsf	3,5	;RP0=1, select bank1
  2818  0CF6  0831               	movf	printf@width^(0+128),w
  2819  0CF7  1283               	bcf	3,5	;RP0=0, select bank0
  2820  0CF8  0264               	subwf	??_printf,w
  2821  0CF9                     u4975:	
  2822  0CF9  1803               	skipnc
  2823  0CFA  2D07               	goto	l8006
  2824  0CFB  1683               	bsf	3,5	;RP0=1, select bank1
  2825  0CFC  2762  120A  158A   	fcall	PL21	;call to abstracted procedure
  2826  0CFF  02B1               	subwf	printf@width^(0+128),f
  2827  0D00  1283               	bcf	3,5	;RP0=0, select bank0
  2828  0D01  0865               	movf	??_printf+1,w
  2829  0D02  1683               	bsf	3,5	;RP0=1, select bank1
  2830  0D03  1C03               	skipc
  2831  0D04  03B2               	decf	(printf@width+1)^(0+128),f
  2832  0D05  02B2               	subwf	(printf@width+1)^(0+128),f
  2833  0D06  2D0A               	goto	l8008
  2834  0D07                     l8006:	
  2835  0D07  2786               	call	PL34	;select bank 1
  2836  0D08  01B1               	clrf	printf@width^(0+128)
  2837  0D09  01B2               	clrf	(printf@width+1)^(0+128)
  2838  0D0A                     l8008:	
  2839  0D0A  1D2D               	btfss	printf@flag^(0+128),2
  2840  0D0B  2D23               	goto	l8020
  2841  0D0C  082D               	movf	printf@flag^(0+128),w
  2842  0D0D  3903               	andlw	3
  2843  0D0E  1903               	btfsc	3,2
  2844  0D0F  2D14               	goto	l8014
  2845  0D10  302D               	movlw	45
  2846  0D11  257F  120A  158A   	fcall	_putch
  2847  0D14                     l8014:	
  2848  0D14  1683               	bsf	3,5	;RP0=1, select bank1
  2849  0D15                     L6:	
  2850  0D15  0832               	movf	(printf@width+1)^(0+128),w
  2851  0D16  0431               	iorwf	printf@width^(0+128),w
  2852  0D17  1903               	skipnz
  2853  0D18  2D3C               	goto	l8032
  2854  0D19  3030               	movlw	48
  2855  0D1A  257F  120A  158A   	fcall	_putch
  2856  0D1D  30FF               	movlw	-1
  2857  0D1E  1683               	bsf	3,5	;RP0=1, select bank1
  2858  0D1F  07B1               	addwf	printf@width^(0+128),f
  2859  0D20  1C03               	skipc
  2860  0D21  03B2               	decf	(printf@width+1)^(0+128),f
  2861  0D22  2D15               	goto	L6
  2862  0D23                     l8020:	
  2863  0D23  0832               	movf	(printf@width+1)^(0+128),w
  2864  0D24  0431               	iorwf	printf@width^(0+128),w
  2865  0D25  1903               	skipnz
  2866  0D26  2D34               	goto	l8026
  2867  0D27                     l8022:	
  2868  0D27  3020               	movlw	32
  2869  0D28  257F  120A  158A   	fcall	_putch
  2870  0D2B  30FF               	movlw	-1
  2871  0D2C  1683               	bsf	3,5	;RP0=1, select bank1
  2872  0D2D  07B1               	addwf	printf@width^(0+128),f
  2873  0D2E  1C03               	skipc
  2874  0D2F  03B2               	decf	(printf@width+1)^(0+128),f
  2875  0D30  0832               	movf	(printf@width+1)^(0+128),w
  2876  0D31  0431               	iorwf	printf@width^(0+128),w
  2877  0D32  1D03               	skipz
  2878  0D33  2D27               	goto	l8022
  2879  0D34                     l8026:	
  2880  0D34  082D               	movf	printf@flag^(0+128),w
  2881  0D35  3903               	andlw	3
  2882  0D36  1903               	btfsc	3,2
  2883  0D37  2D3C               	goto	l8032
  2884  0D38  302D               	movlw	45
  2885  0D39                     L5:	
  2886  0D39  257F  120A  158A   	fcall	_putch
  2887  0D3C                     l8032:	
  2888  0D3C  30FF               	movlw	-1
  2889  0D3D  1683               	bsf	3,5	;RP0=1, select bank1
  2890  0D3E  07B6               	addwf	printf@prec^(0+128),f
  2891  0D3F  1C03               	skipc
  2892  0D40  03B7               	decf	(printf@prec+1)^(0+128),f
  2893  0D41  0A36               	incf	printf@prec^(0+128),w
  2894  0D42  1903               	skipnz
  2895  0D43  0A37               	incf	(printf@prec+1)^(0+128),w
  2896  0D44  1903               	btfsc	3,2
  2897  0D45  280A               	goto	l8034
  2898  0D46  300A               	movlw	10
  2899  0D47  1283               	bcf	3,5	;RP0=0, select bank0
  2900  0D48  00AD               	movwf	?___llmod
  2901  0D49  01AE               	clrf	?___llmod+1
  2902  0D4A  01AF               	clrf	?___llmod+2
  2903  0D4B  01B0               	clrf	?___llmod+3
  2904  0D4C  1683               	bsf	3,5	;RP0=1, select bank1
  2905  0D4D  0836               	movf	printf@prec^(0+128),w
  2906  0D4E  1283               	bcf	3,5	;RP0=0, select bank0
  2907  0D4F  00E4               	movwf	??_printf
  2908  0D50  1003               	clrc
  2909  0D51  0DE4               	rlf	??_printf,f
  2910  0D52  1003               	clrc
  2911  0D53  0D64               	rlf	??_printf,w
  2912  0D54  3E4F               	addlw	low (_dpowers-__stringbase)
  2913  0D55  0084               	movwf	4
  2914  0D56  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  2915  0D5B  00A0               	movwf	?___lldiv
  2916  0D5C  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  2917  0D61  00A1               	movwf	?___lldiv+1
  2918  0D62  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  2919  0D67  00A2               	movwf	?___lldiv+2
  2920  0D68  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  2921  0D6D  26E2  120A  158A   	fcall	PL2	;call to abstracted procedure
  2922  0D70  2672  120A  158A   	fcall	___lldiv
  2923  0D73  272E  120A  158A   	fcall	PL13	;call to abstracted procedure
  2924  0D76  2585  120A  158A   	fcall	___llmod
  2925  0D79  082D               	movf	?___llmod,w
  2926  0D7A  3E30               	addlw	48
  2927  0D7B  1683               	bsf	3,5	;RP0=1, select bank1
  2928  0D7C  00B8               	movwf	printf@c^(0+128)
  2929  0D7D  2D39               	goto	L5
  2930  0D7E                     l2291:	
  2931  0D7E  0008               	return
  2932  0D7F                     __end_of_printf:	
  2933  0D7F                     __ptext758:	
  2934 ;; =============== function _printf ends ============
  2935                           
  2936                           
  2937 ;; *************** function _putch *****************
  2938 ;; Defined at:
  2939 ;;		line 55 in file "C:\Users\DELL\Desktop\baitap_ttvxl\dotanso_dungCCP\dotansodungCCP.c"
  2940 ;; Parameters:    Size  Location     Type
  2941 ;;  c               1    wreg     unsigned char 
  2942 ;; Auto vars:     Size  Location     Type
  2943 ;;  c               1    9[BANK0 ] unsigned char 
  2944 ;; Return value:  Size  Location     Type
  2945 ;;		None               void
  2946 ;; Registers used:
  2947 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2948 ;; Tracked objects:
  2949 ;;		On entry : 0/20
  2950 ;;		On exit  : 60/0
  2951 ;;		Unchanged: 0/0
  2952 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2953 ;;      Params:         0       0       0       0       0
  2954 ;;      Locals:         0       1       0       0       0
  2955 ;;      Temps:          0       0       0       0       0
  2956 ;;      Totals:         0       1       0       0       0
  2957 ;;Total ram usage:        1 bytes
  2958 ;; Hardware stack levels used:    1
  2959 ;; Hardware stack levels required when called:    5
  2960 ;; This function calls:
  2961 ;;		_lcd_putc
  2962 ;; This function is called by:
  2963 ;;		_printf
  2964 ;; This function uses a non-reentrant model
  2965 ;;
  2966  0D7F                     _putch:	
  2967                           
  2968                           ; Regs used in _putch: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2969                           ;putch@c stored from wreg
  2970  0D7F  1283               	bcf	3,5	;RP0=0, select bank0
  2971  0D80  1303               	bcf	3,6	;RP1=0, select bank0
  2972  0D81  00A9               	movwf	putch@c
  2973                           
  2974                           ;dotansodungCCP.c: 56: lcd_putc(c);
  2975  0D82  120A  118A  2BE6   	ljmp	_lcd_putc
  2976  0D85                     __end_of_putch:	
  2977  0D85                     __ptext776:	
  2978 ;; =============== function ___ftneg ends ============
  2979                           
  2980                           
  2981 ;; *************** function ___llmod *****************
  2982 ;; Defined at:
  2983 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\llmod.c"
  2984 ;; Parameters:    Size  Location     Type
  2985 ;;  divisor         4   13[BANK0 ] unsigned long 
  2986 ;;  dividend        4   17[BANK0 ] unsigned long 
  2987 ;; Auto vars:     Size  Location     Type
  2988 ;;  counter         1   21[BANK0 ] unsigned char 
  2989 ;; Return value:  Size  Location     Type
  2990 ;;                  4   13[BANK0 ] unsigned long 
  2991 ;; Registers used:
  2992 ;;		wreg, status,2, status,0
  2993 ;; Tracked objects:
  2994 ;;		On entry : 60/0
  2995 ;;		On exit  : 60/0
  2996 ;;		Unchanged: FFF9F/0
  2997 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2998 ;;      Params:         0       8       0       0       0
  2999 ;;      Locals:         0       1       0       0       0
  3000 ;;      Temps:          0       0       0       0       0
  3001 ;;      Totals:         0       9       0       0       0
  3002 ;;Total ram usage:        9 bytes
  3003 ;; Hardware stack levels used:    1
  3004 ;; Hardware stack levels required when called:    2
  3005 ;; This function calls:
  3006 ;;		Nothing
  3007 ;; This function is called by:
  3008 ;;		_printf
  3009 ;; This function uses a non-reentrant model
  3010 ;;
  3011  0D85                     ___llmod:	
  3012                           
  3013                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  3014  0D85  0830               	movf	___llmod@divisor+3,w
  3015  0D86  042F               	iorwf	___llmod@divisor+2,w
  3016  0D87  042E               	iorwf	___llmod@divisor+1,w
  3017  0D88  042D               	iorwf	___llmod@divisor,w
  3018  0D89  1903               	skipnz
  3019  0D8A  2DBA               	goto	l7536
  3020  0D8B  01B5               	clrf	___llmod@counter
  3021  0D8C                     L14:	
  3022  0D8C  0AB5               	incf	___llmod@counter,f
  3023  0D8D  1BB0               	btfsc	___llmod@divisor+3,7
  3024  0D8E  2D95               	goto	l7528
  3025  0D8F  1003               	clrc
  3026  0D90  0DAD               	rlf	___llmod@divisor,f
  3027  0D91  0DAE               	rlf	___llmod@divisor+1,f
  3028  0D92  0DAF               	rlf	___llmod@divisor+2,f
  3029  0D93  0DB0               	rlf	___llmod@divisor+3,f
  3030  0D94  2D8C               	goto	L14
  3031  0D95                     l7528:	
  3032  0D95  0830               	movf	___llmod@divisor+3,w
  3033  0D96  0234               	subwf	___llmod@dividend+3,w
  3034  0D97  1D03               	skipz
  3035  0D98  2DA3               	goto	u4225
  3036  0D99  082F               	movf	___llmod@divisor+2,w
  3037  0D9A  0233               	subwf	___llmod@dividend+2,w
  3038  0D9B  1D03               	skipz
  3039  0D9C  2DA3               	goto	u4225
  3040  0D9D  082E               	movf	___llmod@divisor+1,w
  3041  0D9E  0232               	subwf	___llmod@dividend+1,w
  3042  0D9F  1D03               	skipz
  3043  0DA0  2DA3               	goto	u4225
  3044  0DA1  082D               	movf	___llmod@divisor,w
  3045  0DA2  0231               	subwf	___llmod@dividend,w
  3046  0DA3                     u4225:	
  3047  0DA3  1C03               	skipc
  3048  0DA4  2DB4               	goto	L15
  3049  0DA5  082D               	movf	___llmod@divisor,w
  3050  0DA6  02B1               	subwf	___llmod@dividend,f
  3051  0DA7  082E               	movf	___llmod@divisor+1,w
  3052  0DA8  1C03               	skipc
  3053  0DA9  0F2E               	incfsz	___llmod@divisor+1,w
  3054  0DAA  02B2               	subwf	___llmod@dividend+1,f
  3055  0DAB  082F               	movf	___llmod@divisor+2,w
  3056  0DAC  1C03               	skipc
  3057  0DAD  0F2F               	incfsz	___llmod@divisor+2,w
  3058  0DAE  02B3               	subwf	___llmod@dividend+2,f
  3059  0DAF  0830               	movf	___llmod@divisor+3,w
  3060  0DB0  1C03               	skipc
  3061  0DB1  0F30               	incfsz	___llmod@divisor+3,w
  3062  0DB2  02B4               	subwf	___llmod@dividend+3,f
  3063  0DB3  1003               	clrc
  3064  0DB4                     L15:	
  3065  0DB4  0CB0               	rrf	___llmod@divisor+3,f
  3066  0DB5  0CAF               	rrf	___llmod@divisor+2,f
  3067  0DB6  0CAE               	rrf	___llmod@divisor+1,f
  3068  0DB7  0CAD               	rrf	___llmod@divisor,f
  3069  0DB8  0BB5               	decfsz	___llmod@counter,f
  3070  0DB9  2D95               	goto	l7528
  3071  0DBA                     l7536:	
  3072  0DBA  0834               	movf	___llmod@dividend+3,w
  3073  0DBB  00B0               	movwf	?___llmod+3
  3074  0DBC  0833               	movf	___llmod@dividend+2,w
  3075  0DBD  00AF               	movwf	?___llmod+2
  3076  0DBE  0832               	movf	___llmod@dividend+1,w
  3077  0DBF  00AE               	movwf	?___llmod+1
  3078  0DC0  0831               	movf	___llmod@dividend,w
  3079  0DC1  00AD               	movwf	?___llmod
  3080  0DC2  0008               	return
  3081  0DC3                     __end_of___llmod:	
  3082  0DC3                     __ptext774:	
  3083 ;; =============== function ___lldiv ends ============
  3084                           
  3085                           
  3086 ;; *************** function ___ftge *****************
  3087 ;; Defined at:
  3088 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\ftge.c"
  3089 ;; Parameters:    Size  Location     Type
  3090 ;;  ff1             3    0[BANK0 ] float 
  3091 ;;  ff2             3    3[BANK0 ] float 
  3092 ;; Auto vars:     Size  Location     Type
  3093 ;;		None
  3094 ;; Return value:  Size  Location     Type
  3095 ;;		None               void
  3096 ;; Registers used:
  3097 ;;		wreg, status,2, status,0
  3098 ;; Tracked objects:
  3099 ;;		On entry : 60/0
  3100 ;;		On exit  : 60/0
  3101 ;;		Unchanged: FFF9F/0
  3102 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3103 ;;      Params:         0       6       0       0       0
  3104 ;;      Locals:         0       0       0       0       0
  3105 ;;      Temps:          0       0       0       0       0
  3106 ;;      Totals:         0       6       0       0       0
  3107 ;;Total ram usage:        6 bytes
  3108 ;; Hardware stack levels used:    1
  3109 ;; Hardware stack levels required when called:    2
  3110 ;; This function calls:
  3111 ;;		Nothing
  3112 ;; This function is called by:
  3113 ;;		_printf
  3114 ;; This function uses a non-reentrant model
  3115 ;;
  3116  0DC3                     ___ftge:	
  3117                           
  3118                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  3119  0DC3  1FA2               	btfss	___ftge@ff1+2,7
  3120  0DC4  2DD2               	goto	l7552
  3121  0DC5  0820               	movf	___ftge@ff1,w
  3122  0DC6  3C00               	sublw	0
  3123  0DC7  00A0               	movwf	___ftge@ff1
  3124  0DC8  0821               	movf	___ftge@ff1+1,w
  3125  0DC9  1C03               	skipc
  3126  0DCA  0F21               	incfsz	___ftge@ff1+1,w
  3127  0DCB  3C00               	sublw	0
  3128  0DCC  00A1               	movwf	___ftge@ff1+1
  3129  0DCD  0822               	movf	___ftge@ff1+2,w
  3130  0DCE  1C03               	skipc
  3131  0DCF  0F22               	incfsz	___ftge@ff1+2,w
  3132  0DD0  3C80               	sublw	128
  3133  0DD1  00A2               	movwf	___ftge@ff1+2
  3134  0DD2                     l7552:	
  3135  0DD2  1FA5               	btfss	___ftge@ff2+2,7
  3136  0DD3  2DE1               	goto	l7556
  3137  0DD4  0823               	movf	___ftge@ff2,w
  3138  0DD5  3C00               	sublw	0
  3139  0DD6  00A3               	movwf	___ftge@ff2
  3140  0DD7  0824               	movf	___ftge@ff2+1,w
  3141  0DD8  1C03               	skipc
  3142  0DD9  0F24               	incfsz	___ftge@ff2+1,w
  3143  0DDA  3C00               	sublw	0
  3144  0DDB  00A4               	movwf	___ftge@ff2+1
  3145  0DDC  0825               	movf	___ftge@ff2+2,w
  3146  0DDD  1C03               	skipc
  3147  0DDE  0F25               	incfsz	___ftge@ff2+2,w
  3148  0DDF  3C80               	sublw	128
  3149  0DE0  00A5               	movwf	___ftge@ff2+2
  3150  0DE1                     l7556:	
  3151  0DE1  3080               	movlw	128
  3152  0DE2  06A2               	xorwf	___ftge@ff1+2,f
  3153  0DE3  06A5               	xorwf	___ftge@ff2+2,f
  3154  0DE4  0825               	movf	___ftge@ff2+2,w
  3155  0DE5  0222               	subwf	___ftge@ff1+2,w
  3156  0DE6  1D03               	skipz
  3157  0DE7  0008               	return
  3158  0DE8  0824               	movf	___ftge@ff2+1,w
  3159  0DE9  0221               	subwf	___ftge@ff1+1,w
  3160  0DEA  1D03               	skipz
  3161  0DEB  0008               	return
  3162  0DEC  0823               	movf	___ftge@ff2,w
  3163  0DED  0220               	subwf	___ftge@ff1,w
  3164  0DEE  0008               	return
  3165  0DEF                     __end_of___ftge:	
  3166  0DEF                     __ptext786:	
  3167 ;; =============== function __tdiv_to_l_ ends ============
  3168                           
  3169                           
  3170 ;; *************** function _isdigit *****************
  3171 ;; Defined at:
  3172 ;;		line 13 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\isdigit.c"
  3173 ;; Parameters:    Size  Location     Type
  3174 ;;  c               1    wreg     unsigned char 
  3175 ;; Auto vars:     Size  Location     Type
  3176 ;;  c               1    1[BANK0 ] unsigned char 
  3177 ;; Return value:  Size  Location     Type
  3178 ;;		None               void
  3179 ;; Registers used:
  3180 ;;		wreg, status,2, status,0
  3181 ;; Tracked objects:
  3182 ;;		On entry : 60/20
  3183 ;;		On exit  : 60/0
  3184 ;;		Unchanged: FFF9F/0
  3185 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3186 ;;      Params:         0       0       0       0       0
  3187 ;;      Locals:         0       2       0       0       0
  3188 ;;      Temps:          0       0       0       0       0
  3189 ;;      Totals:         0       2       0       0       0
  3190 ;;Total ram usage:        2 bytes
  3191 ;; Hardware stack levels used:    1
  3192 ;; Hardware stack levels required when called:    2
  3193 ;; This function calls:
  3194 ;;		Nothing
  3195 ;; This function is called by:
  3196 ;;		_printf
  3197 ;; This function uses a non-reentrant model
  3198 ;;
  3199  0DEF                     _isdigit:	
  3200                           
  3201                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  3202                           ;isdigit@c stored from wreg
  3203  0DEF  1283               	bcf	3,5	;RP0=0, select bank0
  3204  0DF0  00A1               	movwf	isdigit@c
  3205  0DF1  303A               	movlw	58
  3206  0DF2  01A0               	clrf	_isdigit$3670
  3207  0DF3  0221               	subwf	isdigit@c,w
  3208  0DF4  1803               	skipnc
  3209  0DF5  2DFC               	goto	l7416
  3210  0DF6  3030               	movlw	48
  3211  0DF7  0221               	subwf	isdigit@c,w
  3212  0DF8  1C03               	skipc
  3213  0DF9  2DFC               	goto	l7416
  3214  0DFA  01A0               	clrf	_isdigit$3670
  3215  0DFB  0AA0               	incf	_isdigit$3670,f
  3216  0DFC                     l7416:	
  3217  0DFC  0C20               	rrf	_isdigit$3670,w
  3218  0DFD  0008               	return
  3219  0DFE                     __end_of_isdigit:	
  3220  0DFE                     __ptext782:	
  3221 ;; =============== function ___lbdiv ends ============
  3222                           
  3223                           
  3224 ;; *************** function ___wmul *****************
  3225 ;; Defined at:
  3226 ;;		line 3 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\wmul.c"
  3227 ;; Parameters:    Size  Location     Type
  3228 ;;  multiplier      2    0[BANK0 ] unsigned int 
  3229 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  3230 ;; Auto vars:     Size  Location     Type
  3231 ;;  product         2    4[BANK0 ] unsigned int 
  3232 ;; Return value:  Size  Location     Type
  3233 ;;                  2    0[BANK0 ] unsigned int 
  3234 ;; Registers used:
  3235 ;;		wreg, status,2, status,0
  3236 ;; Tracked objects:
  3237 ;;		On entry : 60/0
  3238 ;;		On exit  : 60/0
  3239 ;;		Unchanged: FFF9F/0
  3240 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3241 ;;      Params:         0       4       0       0       0
  3242 ;;      Locals:         0       2       0       0       0
  3243 ;;      Temps:          0       0       0       0       0
  3244 ;;      Totals:         0       6       0       0       0
  3245 ;;Total ram usage:        6 bytes
  3246 ;; Hardware stack levels used:    1
  3247 ;; Hardware stack levels required when called:    2
  3248 ;; This function calls:
  3249 ;;		Nothing
  3250 ;; This function is called by:
  3251 ;;		_fround
  3252 ;;		_scale
  3253 ;;		_printf
  3254 ;; This function uses a non-reentrant model
  3255 ;;
  3256  0DFE                     ___wmul:	
  3257                           
  3258                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  3259  0DFE  01A4               	clrf	___wmul@product
  3260  0DFF  01A5               	clrf	___wmul@product+1
  3261  0E00                     l7438:	
  3262  0E00  1C20               	btfss	___wmul@multiplier,0
  3263  0E01  2E08               	goto	l7442
  3264  0E02  0822               	movf	___wmul@multiplicand,w
  3265  0E03  07A4               	addwf	___wmul@product,f
  3266  0E04  1803               	skipnc
  3267  0E05  0AA5               	incf	___wmul@product+1,f
  3268  0E06  0823               	movf	___wmul@multiplicand+1,w
  3269  0E07  07A5               	addwf	___wmul@product+1,f
  3270  0E08                     l7442:	
  3271  0E08  1003               	clrc
  3272  0E09  0DA2               	rlf	___wmul@multiplicand,f
  3273  0E0A  0DA3               	rlf	___wmul@multiplicand+1,f
  3274  0E0B  1003               	clrc
  3275  0E0C  0CA1               	rrf	___wmul@multiplier+1,f
  3276  0E0D  0CA0               	rrf	___wmul@multiplier,f
  3277  0E0E  0821               	movf	___wmul@multiplier+1,w
  3278  0E0F  0420               	iorwf	___wmul@multiplier,w
  3279  0E10  1D03               	skipz
  3280  0E11  2E00               	goto	l7438
  3281  0E12  0825               	movf	___wmul@product+1,w
  3282  0E13  00A1               	movwf	?___wmul+1
  3283  0E14  0824               	movf	___wmul@product,w
  3284  0E15  00A0               	movwf	?___wmul
  3285  0E16  0008               	return
  3286  0E17                     __end_of___wmul:	
  3287  0E17                     __ptext778:	
  3288 ;; =============== function ___awdiv ends ============
  3289                           
  3290                           
  3291 ;; *************** function ___fttol *****************
  3292 ;; Defined at:
  3293 ;;		line 45 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\fttol.c"
  3294 ;; Parameters:    Size  Location     Type
  3295 ;;  f1              3   14[BANK0 ] float 
  3296 ;; Auto vars:     Size  Location     Type
  3297 ;;  lval            4   22[BANK0 ] unsigned long 
  3298 ;;  exp1            1   26[BANK0 ] unsigned char 
  3299 ;;  sign1           1   21[BANK0 ] unsigned char 
  3300 ;; Return value:  Size  Location     Type
  3301 ;;                  4   14[BANK0 ] long 
  3302 ;; Registers used:
  3303 ;;		wreg, status,2, status,0
  3304 ;; Tracked objects:
  3305 ;;		On entry : 60/0
  3306 ;;		On exit  : 60/0
  3307 ;;		Unchanged: FFF9F/0
  3308 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3309 ;;      Params:         0       4       0       0       0
  3310 ;;      Locals:         0       6       0       0       0
  3311 ;;      Temps:          0       3       0       0       0
  3312 ;;      Totals:         0      13       0       0       0
  3313 ;;Total ram usage:       13 bytes
  3314 ;; Hardware stack levels used:    1
  3315 ;; Hardware stack levels required when called:    2
  3316 ;; This function calls:
  3317 ;;		Nothing
  3318 ;; This function is called by:
  3319 ;;		_printf
  3320 ;; This function uses a non-reentrant model
  3321 ;;
  3322  0E17                     ___fttol:	
  3323                           
  3324                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  3325  0E17  2772  120A  158A   	fcall	PL29	;call to abstracted procedure
  3326  0E1A  1003               	clrc
  3327  0E1B  0D33               	rlf	??___fttol+1,w
  3328  0E1C  0D34               	rlf	??___fttol+2,w
  3329  0E1D  00BA               	movwf	___fttol@exp1
  3330  0E1E  08BA               	movf	___fttol@exp1,f
  3331  0E1F  1D03               	skipz
  3332  0E20  2E26               	goto	l6352
  3333  0E21                     l6350:	
  3334  0E21  01AE               	clrf	?___fttol
  3335  0E22  01AF               	clrf	?___fttol+1
  3336  0E23  01B0               	clrf	?___fttol+2
  3337  0E24  01B1               	clrf	?___fttol+3
  3338  0E25  0008               	return
  3339  0E26                     l6352:	
  3340  0E26  2772  120A  158A   	fcall	PL29	;call to abstracted procedure
  3341  0E29  3017               	movlw	23
  3342  0E2A                     u2445:	
  3343  0E2A  1003               	clrc
  3344  0E2B  0CB4               	rrf	??___fttol+2,f
  3345  0E2C  0CB3               	rrf	??___fttol+1,f
  3346  0E2D  0CB2               	rrf	??___fttol,f
  3347  0E2E  3EFF               	addlw	-1
  3348  0E2F  1D03               	skipz
  3349  0E30  2E2A               	goto	u2445
  3350  0E31  0832               	movf	??___fttol,w
  3351  0E32  00B5               	movwf	___fttol@sign1
  3352  0E33  17AF               	bsf	___fttol@f1+1,7
  3353  0E34  01B0               	clrf	___fttol@f1+2
  3354  0E35  082E               	movf	___fttol@f1,w
  3355  0E36  00B6               	movwf	___fttol@lval
  3356  0E37  082F               	movf	___fttol@f1+1,w
  3357  0E38  00B7               	movwf	___fttol@lval+1
  3358  0E39  0830               	movf	___fttol@f1+2,w
  3359  0E3A  00B8               	movwf	___fttol@lval+2
  3360  0E3B  308E               	movlw	142
  3361  0E3C  01B9               	clrf	___fttol@lval+3
  3362  0E3D  02BA               	subwf	___fttol@exp1,f
  3363  0E3E  1FBA               	btfss	___fttol@exp1,7
  3364  0E3F  2E4D               	goto	l6372
  3365  0E40  083A               	movf	___fttol@exp1,w
  3366  0E41  3A80               	xorlw	128
  3367  0E42  3E8F               	addlw	143
  3368  0E43  1C03               	btfss	3,0
  3369  0E44  2E21               	goto	l6350
  3370  0E45                     l6368:	
  3371  0E45  1003               	clrc
  3372  0E46  0CB9               	rrf	___fttol@lval+3,f
  3373  0E47  0CB8               	rrf	___fttol@lval+2,f
  3374  0E48  0CB7               	rrf	___fttol@lval+1,f
  3375  0E49  0CB6               	rrf	___fttol@lval,f
  3376  0E4A  0FBA               	incfsz	___fttol@exp1,f
  3377  0E4B  2E45               	goto	l6368
  3378  0E4C  2E5B               	goto	l6378
  3379  0E4D                     l6372:	
  3380  0E4D  3018               	movlw	24
  3381  0E4E  023A               	subwf	___fttol@exp1,w
  3382  0E4F  1803               	btfsc	3,0
  3383  0E50  2E21               	goto	l6350
  3384  0E51                     l3415:	
  3385  0E51  08BA               	movf	___fttol@exp1,f
  3386  0E52  1903               	btfsc	3,2
  3387  0E53  2E5B               	goto	l6378
  3388  0E54  1003               	clrc
  3389  0E55  0DB6               	rlf	___fttol@lval,f
  3390  0E56  0DB7               	rlf	___fttol@lval+1,f
  3391  0E57  0DB8               	rlf	___fttol@lval+2,f
  3392  0E58  0DB9               	rlf	___fttol@lval+3,f
  3393  0E59  03BA               	decf	___fttol@exp1,f
  3394  0E5A  2E51               	goto	l3415
  3395  0E5B                     l6378:	
  3396  0E5B  0835               	movf	___fttol@sign1,w
  3397  0E5C  1903               	btfsc	3,2
  3398  0E5D  2E69               	goto	l6382
  3399  0E5E  09B6               	comf	___fttol@lval,f
  3400  0E5F  09B7               	comf	___fttol@lval+1,f
  3401  0E60  09B8               	comf	___fttol@lval+2,f
  3402  0E61  09B9               	comf	___fttol@lval+3,f
  3403  0E62  0AB6               	incf	___fttol@lval,f
  3404  0E63  1903               	skipnz
  3405  0E64  0AB7               	incf	___fttol@lval+1,f
  3406  0E65  1903               	skipnz
  3407  0E66  0AB8               	incf	___fttol@lval+2,f
  3408  0E67  1903               	skipnz
  3409  0E68  0AB9               	incf	___fttol@lval+3,f
  3410  0E69                     l6382:	
  3411  0E69  0839               	movf	___fttol@lval+3,w
  3412  0E6A  00B1               	movwf	?___fttol+3
  3413  0E6B  0838               	movf	___fttol@lval+2,w
  3414  0E6C  00B0               	movwf	?___fttol+2
  3415  0E6D  0837               	movf	___fttol@lval+1,w
  3416  0E6E  00AF               	movwf	?___fttol+1
  3417  0E6F  0836               	movf	___fttol@lval,w
  3418  0E70  00AE               	movwf	?___fttol
  3419  0E71  0008               	return
  3420  0E72                     __end_of___fttol:	
  3421  0E72                     __ptext773:	
  3422 ;; =============== function ___awmod ends ============
  3423                           
  3424                           
  3425 ;; *************** function ___lldiv *****************
  3426 ;; Defined at:
  3427 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\lldiv.c"
  3428 ;; Parameters:    Size  Location     Type
  3429 ;;  divisor         4    0[BANK0 ] unsigned long 
  3430 ;;  dividend        4    4[BANK0 ] unsigned long 
  3431 ;; Auto vars:     Size  Location     Type
  3432 ;;  quotient        4    8[BANK0 ] unsigned long 
  3433 ;;  counter         1   12[BANK0 ] unsigned char 
  3434 ;; Return value:  Size  Location     Type
  3435 ;;                  4    0[BANK0 ] unsigned long 
  3436 ;; Registers used:
  3437 ;;		wreg, status,2, status,0
  3438 ;; Tracked objects:
  3439 ;;		On entry : 60/0
  3440 ;;		On exit  : 60/0
  3441 ;;		Unchanged: FFF9F/0
  3442 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3443 ;;      Params:         0       8       0       0       0
  3444 ;;      Locals:         0       5       0       0       0
  3445 ;;      Temps:          0       0       0       0       0
  3446 ;;      Totals:         0      13       0       0       0
  3447 ;;Total ram usage:       13 bytes
  3448 ;; Hardware stack levels used:    1
  3449 ;; Hardware stack levels required when called:    2
  3450 ;; This function calls:
  3451 ;;		Nothing
  3452 ;; This function is called by:
  3453 ;;		_printf
  3454 ;; This function uses a non-reentrant model
  3455 ;;
  3456  0E72                     ___lldiv:	
  3457                           
  3458                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  3459  0E72  01A8               	clrf	___lldiv@quotient
  3460  0E73  01A9               	clrf	___lldiv@quotient+1
  3461  0E74  01AA               	clrf	___lldiv@quotient+2
  3462  0E75  01AB               	clrf	___lldiv@quotient+3
  3463  0E76  0823               	movf	___lldiv@divisor+3,w
  3464  0E77  0422               	iorwf	___lldiv@divisor+2,w
  3465  0E78  0421               	iorwf	___lldiv@divisor+1,w
  3466  0E79  0420               	iorwf	___lldiv@divisor,w
  3467  0E7A  1903               	skipnz
  3468  0E7B  2EB1               	goto	l7590
  3469  0E7C  01AC               	clrf	___lldiv@counter
  3470  0E7D                     L11:	
  3471  0E7D  0AAC               	incf	___lldiv@counter,f
  3472  0E7E  1BA3               	btfsc	___lldiv@divisor+3,7
  3473  0E7F  2E86               	goto	l7578
  3474  0E80  1003               	clrc
  3475  0E81  0DA0               	rlf	___lldiv@divisor,f
  3476  0E82  0DA1               	rlf	___lldiv@divisor+1,f
  3477  0E83  0DA2               	rlf	___lldiv@divisor+2,f
  3478  0E84  0DA3               	rlf	___lldiv@divisor+3,f
  3479  0E85  2E7D               	goto	L11
  3480  0E86                     l7578:	
  3481  0E86  1003               	clrc
  3482  0E87  0DA8               	rlf	___lldiv@quotient,f
  3483  0E88  0DA9               	rlf	___lldiv@quotient+1,f
  3484  0E89  0DAA               	rlf	___lldiv@quotient+2,f
  3485  0E8A  0DAB               	rlf	___lldiv@quotient+3,f
  3486  0E8B  0823               	movf	___lldiv@divisor+3,w
  3487  0E8C  0227               	subwf	___lldiv@dividend+3,w
  3488  0E8D  1D03               	skipz
  3489  0E8E  2E99               	goto	u4305
  3490  0E8F  0822               	movf	___lldiv@divisor+2,w
  3491  0E90  0226               	subwf	___lldiv@dividend+2,w
  3492  0E91  1D03               	skipz
  3493  0E92  2E99               	goto	u4305
  3494  0E93  0821               	movf	___lldiv@divisor+1,w
  3495  0E94  0225               	subwf	___lldiv@dividend+1,w
  3496  0E95  1D03               	skipz
  3497  0E96  2E99               	goto	u4305
  3498  0E97  0820               	movf	___lldiv@divisor,w
  3499  0E98  0224               	subwf	___lldiv@dividend,w
  3500  0E99                     u4305:	
  3501  0E99  1C03               	skipc
  3502  0E9A  2EAB               	goto	L12
  3503  0E9B  0820               	movf	___lldiv@divisor,w
  3504  0E9C  02A4               	subwf	___lldiv@dividend,f
  3505  0E9D  0821               	movf	___lldiv@divisor+1,w
  3506  0E9E  1C03               	skipc
  3507  0E9F  0F21               	incfsz	___lldiv@divisor+1,w
  3508  0EA0  02A5               	subwf	___lldiv@dividend+1,f
  3509  0EA1  0822               	movf	___lldiv@divisor+2,w
  3510  0EA2  1C03               	skipc
  3511  0EA3  0F22               	incfsz	___lldiv@divisor+2,w
  3512  0EA4  02A6               	subwf	___lldiv@dividend+2,f
  3513  0EA5  0823               	movf	___lldiv@divisor+3,w
  3514  0EA6  1C03               	skipc
  3515  0EA7  0F23               	incfsz	___lldiv@divisor+3,w
  3516  0EA8  02A7               	subwf	___lldiv@dividend+3,f
  3517  0EA9  1428               	bsf	___lldiv@quotient,0
  3518  0EAA  1003               	clrc
  3519  0EAB                     L12:	
  3520  0EAB  0CA3               	rrf	___lldiv@divisor+3,f
  3521  0EAC  0CA2               	rrf	___lldiv@divisor+2,f
  3522  0EAD  0CA1               	rrf	___lldiv@divisor+1,f
  3523  0EAE  0CA0               	rrf	___lldiv@divisor,f
  3524  0EAF  0BAC               	decfsz	___lldiv@counter,f
  3525  0EB0  2E86               	goto	l7578
  3526  0EB1                     l7590:	
  3527  0EB1  082B               	movf	___lldiv@quotient+3,w
  3528  0EB2  00A3               	movwf	?___lldiv+3
  3529  0EB3  082A               	movf	___lldiv@quotient+2,w
  3530  0EB4  00A2               	movwf	?___lldiv+2
  3531  0EB5  0829               	movf	___lldiv@quotient+1,w
  3532  0EB6  00A1               	movwf	?___lldiv+1
  3533  0EB7  0828               	movf	___lldiv@quotient,w
  3534  0EB8  00A0               	movwf	?___lldiv
  3535  0EB9  0008               	return
  3536  0EBA                     __end_of___lldiv:	
  3537  0EBA                     __ptext775:	
  3538 ;; =============== function ___ftge ends ============
  3539                           
  3540                           
  3541 ;; *************** function ___ftneg *****************
  3542 ;; Defined at:
  3543 ;;		line 16 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\ftneg.c"
  3544 ;; Parameters:    Size  Location     Type
  3545 ;;  f1              3    0[BANK0 ] float 
  3546 ;; Auto vars:     Size  Location     Type
  3547 ;;		None
  3548 ;; Return value:  Size  Location     Type
  3549 ;;                  3    0[BANK0 ] float 
  3550 ;; Registers used:
  3551 ;;		wreg
  3552 ;; Tracked objects:
  3553 ;;		On entry : 160/0
  3554 ;;		On exit  : 160/0
  3555 ;;		Unchanged: FFE9F/0
  3556 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3557 ;;      Params:         0       3       0       0       0
  3558 ;;      Locals:         0       0       0       0       0
  3559 ;;      Temps:          0       0       0       0       0
  3560 ;;      Totals:         0       3       0       0       0
  3561 ;;Total ram usage:        3 bytes
  3562 ;; Hardware stack levels used:    1
  3563 ;; Hardware stack levels required when called:    2
  3564 ;; This function calls:
  3565 ;;		Nothing
  3566 ;; This function is called by:
  3567 ;;		_printf
  3568 ;; This function uses a non-reentrant model
  3569 ;;
  3570  0EBA                     ___ftneg:	
  3571                           
  3572                           ; Regs used in ___ftneg: [wreg]
  3573  0EBA  0822               	movf	___ftneg@f1+2,w
  3574  0EBB  0421               	iorwf	___ftneg@f1+1,w
  3575  0EBC  0420               	iorwf	___ftneg@f1,w
  3576  0EBD  1903               	skipnz
  3577  0EBE  0008               	return
  3578  0EBF  3080               	movlw	128
  3579  0EC0  06A2               	xorwf	___ftneg@f1+2,f
  3580  0EC1  0008               	return
  3581  0EC2                     __end_of___ftneg:	
  3582  0EC2                     __ptext765:	
  3583 ;; =============== function _lcd_init ends ============
  3584                           
  3585                           
  3586 ;; *************** function ___lltoft *****************
  3587 ;; Defined at:
  3588 ;;		line 36 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\lltoft.c"
  3589 ;; Parameters:    Size  Location     Type
  3590 ;;  c               4    8[BANK0 ] unsigned long 
  3591 ;; Auto vars:     Size  Location     Type
  3592 ;;  exp             1   12[BANK0 ] unsigned char 
  3593 ;; Return value:  Size  Location     Type
  3594 ;;                  3    8[BANK0 ] float 
  3595 ;; Registers used:
  3596 ;;		wreg, status,2, status,0, pclath, cstack
  3597 ;; Tracked objects:
  3598 ;;		On entry : 60/0
  3599 ;;		On exit  : 60/0
  3600 ;;		Unchanged: FFF9F/0
  3601 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3602 ;;      Params:         0       4       0       0       0
  3603 ;;      Locals:         0       1       0       0       0
  3604 ;;      Temps:          0       0       0       0       0
  3605 ;;      Totals:         0       5       0       0       0
  3606 ;;Total ram usage:        5 bytes
  3607 ;; Hardware stack levels used:    1
  3608 ;; Hardware stack levels required when called:    3
  3609 ;; This function calls:
  3610 ;;		___ftpack
  3611 ;; This function is called by:
  3612 ;;		_printf
  3613 ;; This function uses a non-reentrant model
  3614 ;;
  3615  0EC2                     ___lltoft:	
  3616                           
  3617                           ; Regs used in ___lltoft: [wreg+status,2+status,0+pclath+cstack]
  3618  0EC2  308E               	movlw	142
  3619  0EC3  00AC               	movwf	___lltoft@exp
  3620  0EC4                     l7650:	
  3621  0EC4  30FF               	movlw	255
  3622  0EC5  052B               	andwf	___lltoft@c+3,w
  3623  0EC6  1903               	btfsc	3,2
  3624  0EC7  2ECF               	goto	l7652
  3625  0EC8  1003               	clrc
  3626  0EC9  0CAB               	rrf	___lltoft@c+3,f
  3627  0ECA  0CAA               	rrf	___lltoft@c+2,f
  3628  0ECB  0CA9               	rrf	___lltoft@c+1,f
  3629  0ECC  0CA8               	rrf	___lltoft@c,f
  3630  0ECD  0AAC               	incf	___lltoft@exp,f
  3631  0ECE  2EC4               	goto	l7650
  3632  0ECF                     l7652:	
  3633  0ECF  0828               	movf	___lltoft@c,w
  3634  0ED0  00A0               	movwf	?___ftpack
  3635  0ED1  0829               	movf	___lltoft@c+1,w
  3636  0ED2  00A1               	movwf	?___ftpack+1
  3637  0ED3  082A               	movf	___lltoft@c+2,w
  3638  0ED4  00A2               	movwf	?___ftpack+2
  3639  0ED5  082C               	movf	___lltoft@exp,w
  3640  0ED6  00A3               	movwf	?___ftpack+3
  3641  0ED7  01A4               	clrf	?___ftpack+4
  3642  0ED8  120A  118A  2337   	fcall	___ftpack
  3643  0EDB  0820               	movf	?___ftpack,w
  3644  0EDC  00A8               	movwf	?___lltoft
  3645  0EDD  0821               	movf	?___ftpack+1,w
  3646  0EDE  00A9               	movwf	?___lltoft+1
  3647  0EDF  0822               	movf	?___ftpack+2,w
  3648  0EE0  00AA               	movwf	?___lltoft+2
  3649  0EE1  0008               	return
  3650  0EE2                     __end_of___lltoft:	
  3651  0EE2                     PL2:	
  3652  0EE2  00A3               	movwf	?___lldiv+3
  3653  0EE3  1683               	bsf	3,5	;RP0=1, select bank1
  3654  0EE4  082B               	movf	(printf@_val+3)^(0+128),w
  3655  0EE5  1283               	bcf	3,5	;RP0=0, select bank0
  3656  0EE6  00A7               	movwf	?___lldiv+7
  3657  0EE7  1683               	bsf	3,5	;RP0=1, select bank1
  3658  0EE8  082A               	movf	(printf@_val+2)^(0+128),w
  3659  0EE9  1283               	bcf	3,5	;RP0=0, select bank0
  3660  0EEA  00A6               	movwf	?___lldiv+6
  3661  0EEB  1683               	bsf	3,5	;RP0=1, select bank1
  3662  0EEC  0829               	movf	(printf@_val+1)^(0+128),w
  3663  0EED  1283               	bcf	3,5	;RP0=0, select bank0
  3664  0EEE  00A5               	movwf	?___lldiv+5
  3665  0EEF  1683               	bsf	3,5	;RP0=1, select bank1
  3666  0EF0  0828               	movf	printf@_val^(0+128),w
  3667  0EF1  1283               	bcf	3,5	;RP0=0, select bank0
  3668  0EF2  00A4               	movwf	?___lldiv+4
  3669  0EF3  0008               	return
  3670  0EF4                     PL3:	
  3671  0EF4  0838               	movf	printf@c^(0+128),w
  3672  0EF5  1283               	bcf	3,5	;RP0=0, select bank0
  3673  0EF6  00E4               	movwf	??_printf
  3674  0EF7  1003               	clrc
  3675  0EF8  0DE4               	rlf	??_printf,f
  3676  0EF9  1003               	clrc
  3677  0EFA  0D64               	rlf	??_printf,w
  3678  0EFB  3E4F               	addlw	low (_dpowers-__stringbase)
  3679  0EFC  0084               	movwf	4
  3680  0EFD  0008               	return
  3681  0EFE                     PL5:	
  3682  0EFE  0825               	movf	printf@integ^(0+128),w
  3683  0EFF  1283               	bcf	3,5	;RP0=0, select bank0
  3684  0F00  00A0               	movwf	?___ftge
  3685  0F01  1683               	bsf	3,5	;RP0=1, select bank1
  3686  0F02  0826               	movf	(printf@integ+1)^(0+128),w
  3687  0F03  1283               	bcf	3,5	;RP0=0, select bank0
  3688  0F04  00A1               	movwf	?___ftge+1
  3689  0F05  1683               	bsf	3,5	;RP0=1, select bank1
  3690  0F06  0827               	movf	(printf@integ+2)^(0+128),w
  3691  0F07  1283               	bcf	3,5	;RP0=0, select bank0
  3692  0F08  00A2               	movwf	?___ftge+2
  3693  0F09  0008               	return
  3694  0F0A                     PL6:	
  3695  0F0A  300A               	movlw	10
  3696  0F0B  1283               	bcf	3,5	;RP0=0, select bank0
  3697  0F0C  00AD               	movwf	?___llmod
  3698  0F0D  01AE               	clrf	?___llmod+1
  3699  0F0E  01AF               	clrf	?___llmod+2
  3700  0F0F  01B0               	clrf	?___llmod+3
  3701  0F10  1683               	bsf	3,5	;RP0=1, select bank1
  3702  0F11  0008               	return
  3703  0F12                     PL7:	
  3704  0F12  084A               	movf	?_scale,w
  3705  0F13  1683               	bsf	3,5	;RP0=1, select bank1
  3706  0F14  00A5               	movwf	printf@integ^(0+128)
  3707  0F15  1283               	bcf	3,5	;RP0=0, select bank0
  3708  0F16  084B               	movf	?_scale+1,w
  3709  0F17  1683               	bsf	3,5	;RP0=1, select bank1
  3710  0F18  00A6               	movwf	(printf@integ+1)^(0+128)
  3711  0F19  1283               	bcf	3,5	;RP0=0, select bank0
  3712  0F1A  084C               	movf	?_scale+2,w
  3713  0F1B  1683               	bsf	3,5	;RP0=1, select bank1
  3714  0F1C  00A7               	movwf	(printf@integ+2)^(0+128)
  3715  0F1D  0833               	movf	printf@fval^(0+128),w
  3716  0F1E  1283               	bcf	3,5	;RP0=0, select bank0
  3717  0F1F  0008               	return
  3718  0F20                     PL8:	
  3719  0F20  0831               	movf	?___fttol+3,w
  3720  0F21  1683               	bsf	3,5	;RP0=1, select bank1
  3721  0F22  00AB               	movwf	(printf@_val+3)^(0+128)
  3722  0F23  1283               	bcf	3,5	;RP0=0, select bank0
  3723  0F24  0830               	movf	?___fttol+2,w
  3724  0F25  1683               	bsf	3,5	;RP0=1, select bank1
  3725  0F26  00AA               	movwf	(printf@_val+2)^(0+128)
  3726  0F27  1283               	bcf	3,5	;RP0=0, select bank0
  3727  0F28  082F               	movf	?___fttol+1,w
  3728  0F29  1683               	bsf	3,5	;RP0=1, select bank1
  3729  0F2A  00A9               	movwf	(printf@_val+1)^(0+128)
  3730  0F2B  1283               	bcf	3,5	;RP0=0, select bank0
  3731  0F2C  082E               	movf	?___fttol,w
  3732  0F2D  0008               	return
  3733  0F2E                     PL13:	
  3734  0F2E  0823               	movf	?___lldiv+3,w
  3735  0F2F  00B4               	movwf	?___llmod+7
  3736  0F30  0822               	movf	?___lldiv+2,w
  3737  0F31  00B3               	movwf	?___llmod+6
  3738  0F32  0821               	movf	?___lldiv+1,w
  3739  0F33  00B2               	movwf	?___llmod+5
  3740  0F34  0820               	movf	?___lldiv,w
  3741  0F35  00B1               	movwf	?___llmod+4
  3742  0F36  0008               	return
  3743  0F37                     PL14:	
  3744  0F37  1283               	bcf	3,5	;RP0=0, select bank0
  3745  0F38  0720               	addwf	?___wmul,w
  3746  0F39  00E4               	movwf	??_printf
  3747  0F3A  3000               	movlw	0
  3748  0F3B  1803               	skipnc
  3749  0F3C  3001               	movlw	1
  3750  0F3D  0721               	addwf	?___wmul+1,w
  3751  0F3E  00E5               	movwf	??_printf+1
  3752  0F3F  0864               	movf	??_printf,w
  3753  0F40  3ED0               	addlw	208
  3754  0F41  1683               	bsf	3,5	;RP0=1, select bank1
  3755  0F42  0008               	return
  3756  0F43                     PL15:	
  3757  0F43  1283               	bcf	3,5	;RP0=0, select bank0
  3758  0F44  00AE               	movwf	?___fttol
  3759  0F45  1683               	bsf	3,5	;RP0=1, select bank1
  3760  0F46  0834               	movf	(printf@fval+1)^(0+128),w
  3761  0F47  1283               	bcf	3,5	;RP0=0, select bank0
  3762  0F48  00AF               	movwf	?___fttol+1
  3763  0F49  1683               	bsf	3,5	;RP0=1, select bank1
  3764  0F4A  0835               	movf	(printf@fval+2)^(0+128),w
  3765  0F4B  1283               	bcf	3,5	;RP0=0, select bank0
  3766  0F4C  00B0               	movwf	?___fttol+2
  3767  0F4D  0008               	return
  3768  0F4E                     PL18:	
  3769  0F4E  1283               	bcf	3,5	;RP0=0, select bank0
  3770  0F4F  00E4               	movwf	??_printf
  3771  0F50  01E5               	clrf	??_printf+1
  3772  0F51  1BE4               	btfsc	??_printf,7
  3773  0F52  03E5               	decf	??_printf+1,f
  3774  0F53  0865               	movf	??_printf+1,w
  3775  0F54  3A80               	xorlw	128
  3776  0F55  00E6               	movwf	??_printf+2
  3777  0F56  1683               	bsf	3,5	;RP0=1, select bank1
  3778  0F57  0008               	return
  3779  0F58                     PL19:	
  3780  0F58  00BB               	movwf	?___ftmul
  3781  0F59  1683               	bsf	3,5	;RP0=1, select bank1
  3782  0F5A  0834               	movf	(printf@fval+1)^(0+128),w
  3783  0F5B  1283               	bcf	3,5	;RP0=0, select bank0
  3784  0F5C  00BC               	movwf	?___ftmul+1
  3785  0F5D  1683               	bsf	3,5	;RP0=1, select bank1
  3786  0F5E  0835               	movf	(printf@fval+2)^(0+128),w
  3787  0F5F  1283               	bcf	3,5	;RP0=0, select bank0
  3788  0F60  00BD               	movwf	?___ftmul+2
  3789  0F61  0008               	return
  3790  0F62                     PL21:	
  3791  0F62  1303               	bcf	3,6	;RP1=0, select bank1
  3792  0F63  0838               	movf	printf@c^(0+128),w
  3793  0F64  1283               	bcf	3,5	;RP0=0, select bank0
  3794  0F65  00E4               	movwf	??_printf
  3795  0F66  01E5               	clrf	??_printf+1
  3796  0F67  1BE4               	btfsc	??_printf,7
  3797  0F68  03E5               	decf	??_printf+1,f
  3798  0F69  1683               	bsf	3,5	;RP0=1, select bank1
  3799  0F6A  0008               	return
  3800  0F6B                     PL28:	
  3801  0F6B  1283               	bcf	3,5	;RP0=0, select bank0
  3802  0F6C  0865               	movf	??_printf+1,w
  3803  0F6D  1803               	skipnc
  3804  0F6E  3E01               	addlw	1
  3805  0F6F  3EFF               	addlw	255
  3806  0F70  1683               	bsf	3,5	;RP0=1, select bank1
  3807  0F71  0008               	return
  3808  0F72                     PL29:	
  3809  0F72  082E               	movf	___fttol@f1,w
  3810  0F73  00B2               	movwf	??___fttol
  3811  0F74  082F               	movf	___fttol@f1+1,w
  3812  0F75  00B3               	movwf	??___fttol+1
  3813  0F76  0830               	movf	___fttol@f1+2,w
  3814  0F77  00B4               	movwf	??___fttol+2
  3815  0F78  0008               	return
  3816  0F79                     PL31:	
  3817  0F79  0800               	movf	0,w
  3818  0F7A  1283               	bcf	3,5	;RP0=0, select bank0
  3819  0F7B  00E4               	movwf	??_printf
  3820  0F7C  0A84               	incf	4,f
  3821  0F7D  0800               	movf	0,w
  3822  0F7E  00E5               	movwf	??_printf+1
  3823  0F7F  0008               	return
  3824  0F80                     PL33:	
  3825  0F80  1283               	bcf	3,5	;RP0=0, select bank0
  3826  0F81  00A0               	movwf	?___wmul
  3827  0F82  300A               	movlw	10
  3828  0F83  00A2               	movwf	?___wmul+2
  3829  0F84  01A3               	clrf	?___wmul+3
  3830  0F85  0008               	return
  3831  0F86                     PL34:	
  3832  0F86  1683               	bsf	3,5	;RP0=1, select bank1
  3833  0F87  1303               	bcf	3,6	;RP1=0, select bank1
  3834  0F88  0008               	return
  3835  0F89                     __ptext785:	
  3836 ;; =============== function __div_to_l_ ends ============
  3837                           
  3838                           
  3839 ;; *************** function __tdiv_to_l_ *****************
  3840 ;; Defined at:
  3841 ;;		line 61 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\ftdivl.c"
  3842 ;; Parameters:    Size  Location     Type
  3843 ;;  f1              3    0[BANK0 ] float 
  3844 ;;  f2              3    3[BANK0 ] float 
  3845 ;; Auto vars:     Size  Location     Type
  3846 ;;  quot            4    9[BANK0 ] unsigned long 
  3847 ;;  exp1            1   14[BANK0 ] unsigned char 
  3848 ;;  cntr            1   13[BANK0 ] unsigned char 
  3849 ;; Return value:  Size  Location     Type
  3850 ;;                  4    0[BANK0 ] unsigned long 
  3851 ;; Registers used:
  3852 ;;		wreg, status,2, status,0
  3853 ;; Tracked objects:
  3854 ;;		On entry : 60/0
  3855 ;;		On exit  : 60/0
  3856 ;;		Unchanged: FFF9F/0
  3857 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3858 ;;      Params:         0       6       0       0       0
  3859 ;;      Locals:         0       6       0       0       0
  3860 ;;      Temps:          0       3       0       0       0
  3861 ;;      Totals:         0      15       0       0       0
  3862 ;;Total ram usage:       15 bytes
  3863 ;; Hardware stack levels used:    1
  3864 ;; Hardware stack levels required when called:    2
  3865 ;; This function calls:
  3866 ;;		Nothing
  3867 ;; This function is called by:
  3868 ;;		_printf
  3869 ;; This function uses a non-reentrant model
  3870 ;;
  3871  0F89                     __tdiv_to_l_:	
  3872                           
  3873                           ; Regs used in __tdiv_to_l_: [wreg+status,2+status,0]
  3874  0F89  0820               	movf	__tdiv_to_l_@f1,w
  3875  0F8A  00A6               	movwf	??__tdiv_to_l_
  3876  0F8B  0821               	movf	__tdiv_to_l_@f1+1,w
  3877  0F8C  00A7               	movwf	??__tdiv_to_l_+1
  3878  0F8D  0822               	movf	__tdiv_to_l_@f1+2,w
  3879  0F8E  00A8               	movwf	??__tdiv_to_l_+2
  3880  0F8F  1003               	clrc
  3881  0F90  0D27               	rlf	??__tdiv_to_l_+1,w
  3882  0F91  0D28               	rlf	??__tdiv_to_l_+2,w
  3883  0F92  00AE               	movwf	__tdiv_to_l_@exp1
  3884  0F93  08AE               	movf	__tdiv_to_l_@exp1,f
  3885  0F94  1D03               	skipz
  3886  0F95  2F9B               	goto	l6156
  3887  0F96                     l6154:	
  3888  0F96  01A0               	clrf	?__tdiv_to_l_
  3889  0F97  01A1               	clrf	?__tdiv_to_l_+1
  3890  0F98  01A2               	clrf	?__tdiv_to_l_+2
  3891  0F99  01A3               	clrf	?__tdiv_to_l_+3
  3892  0F9A  0008               	return
  3893  0F9B                     l6156:	
  3894  0F9B  0823               	movf	__tdiv_to_l_@f2,w
  3895  0F9C  00A6               	movwf	??__tdiv_to_l_
  3896  0F9D  0824               	movf	__tdiv_to_l_@f2+1,w
  3897  0F9E  00A7               	movwf	??__tdiv_to_l_+1
  3898  0F9F  0825               	movf	__tdiv_to_l_@f2+2,w
  3899  0FA0  00A8               	movwf	??__tdiv_to_l_+2
  3900  0FA1  1003               	clrc
  3901  0FA2  0D27               	rlf	??__tdiv_to_l_+1,w
  3902  0FA3  0D28               	rlf	??__tdiv_to_l_+2,w
  3903  0FA4  00AD               	movwf	__tdiv_to_l_@cntr
  3904  0FA5  08AD               	movf	__tdiv_to_l_@cntr,f
  3905  0FA6  1903               	btfsc	3,2
  3906  0FA7  2F96               	goto	l6154
  3907  0FA8  307F               	movlw	127
  3908  0FA9  17A1               	bsf	__tdiv_to_l_@f1+1,7
  3909  0FAA  01A2               	clrf	__tdiv_to_l_@f1+2
  3910  0FAB  17A4               	bsf	__tdiv_to_l_@f2+1,7
  3911  0FAC  01A5               	clrf	__tdiv_to_l_@f2+2
  3912  0FAD  01A9               	clrf	__tdiv_to_l_@quot
  3913  0FAE  01AA               	clrf	__tdiv_to_l_@quot+1
  3914  0FAF  01AB               	clrf	__tdiv_to_l_@quot+2
  3915  0FB0  01AC               	clrf	__tdiv_to_l_@quot+3
  3916  0FB1  02AE               	subwf	__tdiv_to_l_@exp1,f
  3917  0FB2  3098               	movlw	152
  3918  0FB3  072D               	addwf	__tdiv_to_l_@cntr,w
  3919  0FB4  00A6               	movwf	??__tdiv_to_l_
  3920  0FB5  02AE               	subwf	__tdiv_to_l_@exp1,f
  3921  0FB6  3018               	movlw	24
  3922  0FB7  00AD               	movwf	__tdiv_to_l_@cntr
  3923  0FB8                     l6170:	
  3924  0FB8  1003               	clrc
  3925  0FB9  0DA9               	rlf	__tdiv_to_l_@quot,f
  3926  0FBA  0DAA               	rlf	__tdiv_to_l_@quot+1,f
  3927  0FBB  0DAB               	rlf	__tdiv_to_l_@quot+2,f
  3928  0FBC  0DAC               	rlf	__tdiv_to_l_@quot+3,f
  3929  0FBD  0825               	movf	__tdiv_to_l_@f2+2,w
  3930  0FBE  0222               	subwf	__tdiv_to_l_@f1+2,w
  3931  0FBF  1D03               	skipz
  3932  0FC0  2FC7               	goto	u2095
  3933  0FC1  0824               	movf	__tdiv_to_l_@f2+1,w
  3934  0FC2  0221               	subwf	__tdiv_to_l_@f1+1,w
  3935  0FC3  1D03               	skipz
  3936  0FC4  2FC7               	goto	u2095
  3937  0FC5  0823               	movf	__tdiv_to_l_@f2,w
  3938  0FC6  0220               	subwf	__tdiv_to_l_@f1,w
  3939  0FC7                     u2095:	
  3940  0FC7  1C03               	skipc
  3941  0FC8  2FD5               	goto	L20
  3942  0FC9  0823               	movf	__tdiv_to_l_@f2,w
  3943  0FCA  02A0               	subwf	__tdiv_to_l_@f1,f
  3944  0FCB  0824               	movf	__tdiv_to_l_@f2+1,w
  3945  0FCC  1C03               	skipc
  3946  0FCD  0F24               	incfsz	__tdiv_to_l_@f2+1,w
  3947  0FCE  02A1               	subwf	__tdiv_to_l_@f1+1,f
  3948  0FCF  0825               	movf	__tdiv_to_l_@f2+2,w
  3949  0FD0  1C03               	skipc
  3950  0FD1  0A25               	incf	__tdiv_to_l_@f2+2,w
  3951  0FD2  02A2               	subwf	__tdiv_to_l_@f1+2,f
  3952  0FD3  1429               	bsf	__tdiv_to_l_@quot,0
  3953  0FD4  1003               	clrc
  3954  0FD5                     L20:	
  3955  0FD5  0DA0               	rlf	__tdiv_to_l_@f1,f
  3956  0FD6  0DA1               	rlf	__tdiv_to_l_@f1+1,f
  3957  0FD7  0DA2               	rlf	__tdiv_to_l_@f1+2,f
  3958  0FD8  0BAD               	decfsz	__tdiv_to_l_@cntr,f
  3959  0FD9  2FB8               	goto	l6170
  3960  0FDA  1FAE               	btfss	__tdiv_to_l_@exp1,7
  3961  0FDB  2FE9               	goto	l6190
  3962  0FDC  082E               	movf	__tdiv_to_l_@exp1,w
  3963  0FDD  3A80               	xorlw	128
  3964  0FDE  3E97               	addlw	151
  3965  0FDF  1C03               	btfss	3,0
  3966  0FE0  2F96               	goto	l6154
  3967  0FE1                     l6186:	
  3968  0FE1  1003               	clrc
  3969  0FE2  0CAC               	rrf	__tdiv_to_l_@quot+3,f
  3970  0FE3  0CAB               	rrf	__tdiv_to_l_@quot+2,f
  3971  0FE4  0CAA               	rrf	__tdiv_to_l_@quot+1,f
  3972  0FE5  0CA9               	rrf	__tdiv_to_l_@quot,f
  3973  0FE6  0FAE               	incfsz	__tdiv_to_l_@exp1,f
  3974  0FE7  2FE1               	goto	l6186
  3975  0FE8  2FF7               	goto	l6196
  3976  0FE9                     l6190:	
  3977  0FE9  3018               	movlw	24
  3978  0FEA  022E               	subwf	__tdiv_to_l_@exp1,w
  3979  0FEB  1803               	btfsc	3,0
  3980  0FEC  2F96               	goto	l6154
  3981  0FED                     l3553:	
  3982  0FED  08AE               	movf	__tdiv_to_l_@exp1,f
  3983  0FEE  1903               	btfsc	3,2
  3984  0FEF  2FF7               	goto	l6196
  3985  0FF0  1003               	clrc
  3986  0FF1  0DA9               	rlf	__tdiv_to_l_@quot,f
  3987  0FF2  0DAA               	rlf	__tdiv_to_l_@quot+1,f
  3988  0FF3  0DAB               	rlf	__tdiv_to_l_@quot+2,f
  3989  0FF4  0DAC               	rlf	__tdiv_to_l_@quot+3,f
  3990  0FF5  03AE               	decf	__tdiv_to_l_@exp1,f
  3991  0FF6  2FED               	goto	l3553
  3992  0FF7                     l6196:	
  3993  0FF7  082C               	movf	__tdiv_to_l_@quot+3,w
  3994  0FF8  00A3               	movwf	?__tdiv_to_l_+3
  3995  0FF9  082B               	movf	__tdiv_to_l_@quot+2,w
  3996  0FFA  00A2               	movwf	?__tdiv_to_l_+2
  3997  0FFB  082A               	movf	__tdiv_to_l_@quot+1,w
  3998  0FFC  00A1               	movwf	?__tdiv_to_l_+1
  3999  0FFD  0829               	movf	__tdiv_to_l_@quot,w
  4000  0FFE  00A0               	movwf	?__tdiv_to_l_
  4001  0FFF  0008               	return
  4002  1000                     __end_of__tdiv_to_l_:	
  4003                           
  4004                           	psect	text760
  4005  06F8                     __ptext760:	
  4006 ;; =============== function _lcd_putc ends ============
  4007                           
  4008                           
  4009 ;; *************** function ___ftsub *****************
  4010 ;; Defined at:
  4011 ;;		line 17 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\ftsub.c"
  4012 ;; Parameters:    Size  Location     Type
  4013 ;;  f2              3   54[BANK0 ] float 
  4014 ;;  f1              3   57[BANK0 ] float 
  4015 ;; Auto vars:     Size  Location     Type
  4016 ;;		None
  4017 ;; Return value:  Size  Location     Type
  4018 ;;                  3   54[BANK0 ] float 
  4019 ;; Registers used:
  4020 ;;		wreg, status,2, status,0, pclath, cstack
  4021 ;; Tracked objects:
  4022 ;;		On entry : 60/0
  4023 ;;		On exit  : 60/0
  4024 ;;		Unchanged: FFF9F/0
  4025 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4026 ;;      Params:         0       6       0       0       0
  4027 ;;      Locals:         0       0       0       0       0
  4028 ;;      Temps:          0       0       0       0       0
  4029 ;;      Totals:         0       6       0       0       0
  4030 ;;Total ram usage:        6 bytes
  4031 ;; Hardware stack levels used:    1
  4032 ;; Hardware stack levels required when called:    4
  4033 ;; This function calls:
  4034 ;;		___ftadd
  4035 ;; This function is called by:
  4036 ;;		_printf
  4037 ;; This function uses a non-reentrant model
  4038 ;;
  4039  06F8                     ___ftsub:	
  4040                           
  4041                           ; Regs used in ___ftsub: [wreg+status,2+status,0+pclath+cstack]
  4042  06F8  3080               	movlw	128
  4043  06F9  06D8               	xorwf	___ftsub@f2+2,f
  4044  06FA  0859               	movf	___ftsub@f1,w
  4045  06FB  00CA               	movwf	?___ftadd
  4046  06FC  085A               	movf	___ftsub@f1+1,w
  4047  06FD  00CB               	movwf	?___ftadd+1
  4048  06FE  085B               	movf	___ftsub@f1+2,w
  4049  06FF  00CC               	movwf	?___ftadd+2
  4050  0700  0856               	movf	___ftsub@f2,w
  4051  0701  00CD               	movwf	?___ftadd+3
  4052  0702  0857               	movf	___ftsub@f2+1,w
  4053  0703  00CE               	movwf	?___ftadd+4
  4054  0704  0858               	movf	___ftsub@f2+2,w
  4055  0705  00CF               	movwf	?___ftadd+5
  4056  0706  270E               	fcall	___ftadd
  4057  0707  084A               	movf	?___ftadd,w
  4058  0708  00D6               	movwf	?___ftsub
  4059  0709  084B               	movf	?___ftadd+1,w
  4060  070A  00D7               	movwf	?___ftsub+1
  4061  070B  084C               	movf	?___ftadd+2,w
  4062  070C  00D8               	movwf	?___ftsub+2
  4063  070D  0008               	return
  4064  070E                     __end_of___ftsub:	
  4065  070E                     __ptext769:	
  4066 ;; =============== function ___ftdiv ends ============
  4067                           
  4068                           
  4069 ;; *************** function ___ftadd *****************
  4070 ;; Defined at:
  4071 ;;		line 87 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\ftadd.c"
  4072 ;; Parameters:    Size  Location     Type
  4073 ;;  f1              3   42[BANK0 ] float 
  4074 ;;  f2              3   45[BANK0 ] float 
  4075 ;; Auto vars:     Size  Location     Type
  4076 ;;  exp1            1   53[BANK0 ] unsigned char 
  4077 ;;  exp2            1   52[BANK0 ] unsigned char 
  4078 ;;  sign            1   51[BANK0 ] unsigned char 
  4079 ;; Return value:  Size  Location     Type
  4080 ;;                  3   42[BANK0 ] float 
  4081 ;; Registers used:
  4082 ;;		wreg, status,2, status,0, pclath, cstack
  4083 ;; Tracked objects:
  4084 ;;		On entry : 60/0
  4085 ;;		On exit  : 60/0
  4086 ;;		Unchanged: FFF9F/0
  4087 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4088 ;;      Params:         0       6       0       0       0
  4089 ;;      Locals:         0       3       0       0       0
  4090 ;;      Temps:          0       3       0       0       0
  4091 ;;      Totals:         0      12       0       0       0
  4092 ;;Total ram usage:       12 bytes
  4093 ;; Hardware stack levels used:    1
  4094 ;; Hardware stack levels required when called:    3
  4095 ;; This function calls:
  4096 ;;		___ftpack
  4097 ;; This function is called by:
  4098 ;;		_printf
  4099 ;;		___ftsub
  4100 ;; This function uses a non-reentrant model
  4101 ;;
  4102  070E                     ___ftadd:	
  4103                           
  4104                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  4105  070E  084A               	movf	___ftadd@f1,w
  4106  070F  00D0               	movwf	??___ftadd
  4107  0710  084B               	movf	___ftadd@f1+1,w
  4108  0711  00D1               	movwf	??___ftadd+1
  4109  0712  084C               	movf	___ftadd@f1+2,w
  4110  0713  00D2               	movwf	??___ftadd+2
  4111  0714  1003               	clrc
  4112  0715  0D51               	rlf	??___ftadd+1,w
  4113  0716  0D52               	rlf	??___ftadd+2,w
  4114  0717  00D5               	movwf	___ftadd@exp1
  4115  0718  084D               	movf	___ftadd@f2,w
  4116  0719  00D0               	movwf	??___ftadd
  4117  071A  084E               	movf	___ftadd@f2+1,w
  4118  071B  00D1               	movwf	??___ftadd+1
  4119  071C  084F               	movf	___ftadd@f2+2,w
  4120  071D  00D2               	movwf	??___ftadd+2
  4121  071E  1003               	clrc
  4122  071F  0D51               	rlf	??___ftadd+1,w
  4123  0720  0D52               	rlf	??___ftadd+2,w
  4124  0721  00D4               	movwf	___ftadd@exp2
  4125  0722  0855               	movf	___ftadd@exp1,w
  4126  0723  1903               	btfsc	3,2
  4127  0724  2F31               	goto	l6598
  4128  0725  0854               	movf	___ftadd@exp2,w
  4129  0726  0255               	subwf	___ftadd@exp1,w
  4130  0727  0854               	movf	___ftadd@exp2,w
  4131  0728  1803               	skipnc
  4132  0729  2F39               	goto	L8
  4133  072A  00D0               	movwf	??___ftadd
  4134  072B  0855               	movf	___ftadd@exp1,w
  4135  072C  02D0               	subwf	??___ftadd,f
  4136  072D  3019               	movlw	25
  4137  072E  0250               	subwf	??___ftadd,w
  4138  072F  1C03               	skipc
  4139  0730  2F38               	goto	l6602
  4140  0731                     l6598:	
  4141  0731  084D               	movf	___ftadd@f2,w
  4142  0732  00CA               	movwf	?___ftadd
  4143  0733  084E               	movf	___ftadd@f2+1,w
  4144  0734  00CB               	movwf	?___ftadd+1
  4145  0735  084F               	movf	___ftadd@f2+2,w
  4146  0736  00CC               	movwf	?___ftadd+2
  4147  0737  0008               	return
  4148  0738                     l6602:	
  4149  0738  0854               	movf	___ftadd@exp2,w
  4150  0739                     L8:	
  4151  0739  1903               	btfsc	3,2
  4152  073A  0008               	return
  4153  073B  0855               	movf	___ftadd@exp1,w
  4154  073C  0254               	subwf	___ftadd@exp2,w
  4155  073D  1803               	skipnc
  4156  073E  2F47               	goto	l6608
  4157  073F  0855               	movf	___ftadd@exp1,w
  4158  0740  00D0               	movwf	??___ftadd
  4159  0741  0854               	movf	___ftadd@exp2,w
  4160  0742  02D0               	subwf	??___ftadd,f
  4161  0743  3019               	movlw	25
  4162  0744  0250               	subwf	??___ftadd,w
  4163  0745  1803               	btfsc	3,0
  4164  0746  0008               	return
  4165  0747                     l6608:	
  4166  0747  3006               	movlw	6
  4167  0748  00D3               	movwf	___ftadd@sign
  4168  0749  1BCC               	btfsc	___ftadd@f1+2,7
  4169  074A  17D3               	bsf	___ftadd@sign,7
  4170  074B  1BCF               	btfsc	___ftadd@f2+2,7
  4171  074C  1753               	bsf	___ftadd@sign,6
  4172  074D  17CB               	bsf	___ftadd@f1+1,7
  4173  074E  01CC               	clrf	___ftadd@f1+2
  4174  074F  17CE               	bsf	___ftadd@f2+1,7
  4175  0750  01CF               	clrf	___ftadd@f2+2
  4176  0751  0854               	movf	___ftadd@exp2,w
  4177  0752  0255               	subwf	___ftadd@exp1,w
  4178  0753  1803               	skipnc
  4179  0754  2F6E               	goto	l6630
  4180  0755                     l6620:	
  4181  0755  1003               	clrc
  4182  0756  0DCD               	rlf	___ftadd@f2,f
  4183  0757  0DCE               	rlf	___ftadd@f2+1,f
  4184  0758  0DCF               	rlf	___ftadd@f2+2,f
  4185  0759  03D4               	decf	___ftadd@exp2,f
  4186  075A  0854               	movf	___ftadd@exp2,w
  4187  075B  0655               	xorwf	___ftadd@exp1,w
  4188  075C  1903               	skipnz
  4189  075D  2F69               	goto	l6628
  4190  075E  03D3               	decf	___ftadd@sign,f
  4191  075F  0853               	movf	___ftadd@sign,w
  4192  0760  3907               	andlw	7
  4193  0761  1903               	btfsc	3,2
  4194  0762  2F69               	goto	l6628
  4195  0763  2F55               	goto	l6620
  4196  0764                     l6626:	
  4197  0764  1003               	clrc
  4198  0765  0CCC               	rrf	___ftadd@f1+2,f
  4199  0766  0CCB               	rrf	___ftadd@f1+1,f
  4200  0767  0CCA               	rrf	___ftadd@f1,f
  4201  0768  0AD5               	incf	___ftadd@exp1,f
  4202  0769                     l6628:	
  4203  0769  0855               	movf	___ftadd@exp1,w
  4204  076A  0654               	xorwf	___ftadd@exp2,w
  4205  076B  1903               	btfsc	3,2
  4206  076C  2F8A               	goto	l3359
  4207  076D  2F64               	goto	l6626
  4208  076E                     l6630:	
  4209  076E  0855               	movf	___ftadd@exp1,w
  4210  076F  0254               	subwf	___ftadd@exp2,w
  4211  0770  1803               	skipnc
  4212  0771  2F8A               	goto	l3359
  4213  0772                     l6632:	
  4214  0772  1003               	clrc
  4215  0773  0DCA               	rlf	___ftadd@f1,f
  4216  0774  0DCB               	rlf	___ftadd@f1+1,f
  4217  0775  0DCC               	rlf	___ftadd@f1+2,f
  4218  0776  03D5               	decf	___ftadd@exp1,f
  4219  0777  0854               	movf	___ftadd@exp2,w
  4220  0778  0655               	xorwf	___ftadd@exp1,w
  4221  0779  1903               	skipnz
  4222  077A  2F86               	goto	l6640
  4223  077B  03D3               	decf	___ftadd@sign,f
  4224  077C  0853               	movf	___ftadd@sign,w
  4225  077D  3907               	andlw	7
  4226  077E  1903               	btfsc	3,2
  4227  077F  2F86               	goto	l6640
  4228  0780  2F72               	goto	l6632
  4229  0781                     l6638:	
  4230  0781  1003               	clrc
  4231  0782  0CCF               	rrf	___ftadd@f2+2,f
  4232  0783  0CCE               	rrf	___ftadd@f2+1,f
  4233  0784  0CCD               	rrf	___ftadd@f2,f
  4234  0785  0AD4               	incf	___ftadd@exp2,f
  4235  0786                     l6640:	
  4236  0786  0855               	movf	___ftadd@exp1,w
  4237  0787  0654               	xorwf	___ftadd@exp2,w
  4238  0788  1D03               	skipz
  4239  0789  2F81               	goto	l6638
  4240  078A                     l3359:	
  4241  078A  1FD3               	btfss	___ftadd@sign,7
  4242  078B  2F95               	goto	l6646
  4243  078C  30FF               	movlw	255
  4244  078D  06CA               	xorwf	___ftadd@f1,f
  4245  078E  06CB               	xorwf	___ftadd@f1+1,f
  4246  078F  06CC               	xorwf	___ftadd@f1+2,f
  4247  0790  0ACA               	incf	___ftadd@f1,f
  4248  0791  1903               	skipnz
  4249  0792  0ACB               	incf	___ftadd@f1+1,f
  4250  0793  1903               	skipnz
  4251  0794  0ACC               	incf	___ftadd@f1+2,f
  4252  0795                     l6646:	
  4253  0795  1F53               	btfss	___ftadd@sign,6
  4254  0796  2FA0               	goto	l6652
  4255  0797  30FF               	movlw	255
  4256  0798  06CD               	xorwf	___ftadd@f2,f
  4257  0799  06CE               	xorwf	___ftadd@f2+1,f
  4258  079A  06CF               	xorwf	___ftadd@f2+2,f
  4259  079B  0ACD               	incf	___ftadd@f2,f
  4260  079C  1903               	skipnz
  4261  079D  0ACE               	incf	___ftadd@f2+1,f
  4262  079E  1903               	skipnz
  4263  079F  0ACF               	incf	___ftadd@f2+2,f
  4264  07A0                     l6652:	
  4265  07A0  01D3               	clrf	___ftadd@sign
  4266  07A1  084A               	movf	___ftadd@f1,w
  4267  07A2  07CD               	addwf	___ftadd@f2,f
  4268  07A3  084B               	movf	___ftadd@f1+1,w
  4269  07A4  1103               	clrz
  4270  07A5  1803               	skipnc
  4271  07A6  0A4B               	incf	___ftadd@f1+1,w
  4272  07A7  1D03               	btfss	3,2
  4273  07A8  07CE               	addwf	___ftadd@f2+1,f
  4274  07A9  084C               	movf	___ftadd@f1+2,w
  4275  07AA  1103               	clrz
  4276  07AB  1803               	skipnc
  4277  07AC  0A4C               	incf	___ftadd@f1+2,w
  4278  07AD  1D03               	btfss	3,2
  4279  07AE  07CF               	addwf	___ftadd@f2+2,f
  4280  07AF  1FCF               	btfss	___ftadd@f2+2,7
  4281  07B0  2FBC               	goto	l6664
  4282  07B1  30FF               	movlw	255
  4283  07B2  06CD               	xorwf	___ftadd@f2,f
  4284  07B3  06CE               	xorwf	___ftadd@f2+1,f
  4285  07B4  06CF               	xorwf	___ftadd@f2+2,f
  4286  07B5  0ACD               	incf	___ftadd@f2,f
  4287  07B6  1903               	skipnz
  4288  07B7  0ACE               	incf	___ftadd@f2+1,f
  4289  07B8  1903               	skipnz
  4290  07B9  0ACF               	incf	___ftadd@f2+2,f
  4291  07BA  01D3               	clrf	___ftadd@sign
  4292  07BB  0AD3               	incf	___ftadd@sign,f
  4293  07BC                     l6664:	
  4294  07BC  084D               	movf	___ftadd@f2,w
  4295  07BD  00A0               	movwf	?___ftpack
  4296  07BE  084E               	movf	___ftadd@f2+1,w
  4297  07BF  00A1               	movwf	?___ftpack+1
  4298  07C0  084F               	movf	___ftadd@f2+2,w
  4299  07C1  00A2               	movwf	?___ftpack+2
  4300  07C2  0855               	movf	___ftadd@exp1,w
  4301  07C3  00A3               	movwf	?___ftpack+3
  4302  07C4  0853               	movf	___ftadd@sign,w
  4303  07C5  00A4               	movwf	?___ftpack+4
  4304  07C6  120A  118A  2337   	fcall	___ftpack
  4305  07C9  0820               	movf	?___ftpack,w
  4306  07CA  00CA               	movwf	?___ftadd
  4307  07CB  0821               	movf	?___ftpack+1,w
  4308  07CC  00CB               	movwf	?___ftadd+1
  4309  07CD  0822               	movf	?___ftpack+2,w
  4310  07CE  00CC               	movwf	?___ftadd+2
  4311  07CF  0008               	return
  4312  07D0                     __end_of___ftadd:	
  4313                           
  4314                           	psect	text762
  4315  05A6                     __ptext762:	
  4316 ;; =============== function _scale ends ============
  4317                           
  4318                           
  4319 ;; *************** function _fround *****************
  4320 ;; Defined at:
  4321 ;;		line 406 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\lib\doprnt.c"
  4322 ;; Parameters:    Size  Location     Type
  4323 ;;  prec            1    wreg     unsigned char 
  4324 ;; Auto vars:     Size  Location     Type
  4325 ;;  prec            1   63[BANK0 ] unsigned char 
  4326 ;; Return value:  Size  Location     Type
  4327 ;;                  3   54[BANK0 ] unsigned char 
  4328 ;; Registers used:
  4329 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4330 ;; Tracked objects:
  4331 ;;		On entry : 60/20
  4332 ;;		On exit  : 60/0
  4333 ;;		Unchanged: FFF9F/0
  4334 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4335 ;;      Params:         0       3       0       0       0
  4336 ;;      Locals:         0       7       0       0       0
  4337 ;;      Temps:          0       0       0       0       0
  4338 ;;      Totals:         0      10       0       0       0
  4339 ;;Total ram usage:       10 bytes
  4340 ;; Hardware stack levels used:    1
  4341 ;; Hardware stack levels required when called:    4
  4342 ;; This function calls:
  4343 ;;		___lbmod
  4344 ;;		___bmul
  4345 ;;		___lbdiv
  4346 ;;		___ftmul
  4347 ;; This function is called by:
  4348 ;;		_printf
  4349 ;; This function uses a non-reentrant model
  4350 ;;
  4351  05A6                     _fround:	
  4352                           
  4353                           ; Regs used in _fround: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4354                           ;fround@prec stored from wreg
  4355  05A6  1283               	bcf	3,5	;RP0=0, select bank0
  4356  05A7  00DF               	movwf	fround@prec
  4357  05A8  306E               	movlw	110
  4358  05A9  025F               	subwf	fround@prec,w
  4359  05AA  1C03               	skipc
  4360  05AB  2E31               	goto	l7678
  4361  05AC  3003               	movlw	3
  4362  05AD  00A9               	movwf	?___bmul
  4363  05AE  300A               	movlw	10
  4364  05AF  00A5               	movwf	?___lbdiv
  4365  05B0  3064               	movlw	100
  4366  05B1  00A0               	movwf	?___lbmod
  4367  05B2  085F               	movf	fround@prec,w
  4368  05B3  26C6  120A  118A   	fcall	___lbmod
  4369  05B6  26AB               	fcall	___lbdiv
  4370  05B7  120A  118A  2329   	fcall	___bmul
      +       120A  118A         
  4371  05BC  3E1C               	addlw	low ((__npowers_-__stringbase+27))
  4372  05BD  0084               	movwf	4
  4373  05BE  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  4374  05C3  00BB               	movwf	?___ftmul
  4375  05C4  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  4376  05C9  00BC               	movwf	?___ftmul+1
  4377  05CA  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  4378  05CF  00BD               	movwf	?___ftmul+2
  4379  05D0  3003               	movlw	3
  4380  05D1  00A9               	movwf	?___bmul
  4381  05D2  3064               	movlw	100
  4382  05D3  00A5               	movwf	?___lbdiv
  4383  05D4  085F               	movf	fround@prec,w
  4384  05D5  26AB               	fcall	___lbdiv
  4385  05D6  120A  118A  2329   	fcall	___bmul
      +       120A  118A         
  4386  05DB  3E37               	addlw	low ((__npowers_-__stringbase+54))
  4387  05DC  0084               	movwf	4
  4388  05DD  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  4389  05E2  00BE               	movwf	?___ftmul+3
  4390  05E3  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  4391  05E8  00BF               	movwf	?___ftmul+4
  4392  05E9  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  4393  05EE  00C0               	movwf	?___ftmul+5
  4394  05EF  120A  118A  22BA   	fcall	___ftmul
      +       120A  118A         
  4395  05F4  26F1  120A  118A   	fcall	PL27	;call to abstracted procedure
  4396  05F7  3003               	movlw	3
  4397  05F8  00A9               	movwf	?___bmul
  4398  05F9  300A               	movlw	10
  4399  05FA  00A0               	movwf	?___lbmod
  4400  05FB  085F               	movf	fround@prec,w
  4401  05FC  26C6               	fcall	___lbmod
  4402  05FD  120A  118A  2329   	fcall	___bmul
      +       120A  118A         
  4403  0602  3E01               	addlw	low (__npowers_-__stringbase)
  4404  0603  0084               	movwf	4
  4405  0604  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  4406  0609  00BB               	movwf	?___ftmul
  4407  060A  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  4408  060F  00BC               	movwf	?___ftmul+1
  4409  0610  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  4410  0615  26E9               	fcall	PL23	;call to abstracted procedure
  4411  0616  120A  118A  22BA   	fcall	___ftmul
      +       120A  118A         
  4412  061B  083B               	movf	?___ftmul,w
  4413  061C  00D9               	movwf	_fround$4113
  4414  061D  083C               	movf	?___ftmul+1,w
  4415  061E  00DA               	movwf	_fround$4113+1
  4416  061F  083D               	movf	?___ftmul+2,w
  4417  0620  00DB               	movwf	_fround$4113+2
  4418  0621  303F               	movlw	63
  4419  0622  01BB               	clrf	?___ftmul
  4420  0623  01BC               	clrf	?___ftmul+1
  4421  0624  00BD               	movwf	?___ftmul+2
  4422  0625  0859               	movf	_fround$4113,w
  4423  0626  00BE               	movwf	?___ftmul+3
  4424  0627  085A               	movf	_fround$4113+1,w
  4425  0628  00BF               	movwf	?___ftmul+4
  4426  0629  085B               	movf	_fround$4113+2,w
  4427  062A  00C0               	movwf	?___ftmul+5
  4428  062B  120A  118A  22BA   	fcall	___ftmul
      +       120A  118A         
  4429  0630  2EE2               	ljmp	PL17	;call to abstracted procedure
  4430  0631                     l7678:	
  4431  0631  300B               	movlw	11
  4432  0632  025F               	subwf	fround@prec,w
  4433  0633  1C03               	skipc
  4434  0634  2E85               	goto	l7686
  4435  0635  3003               	movlw	3
  4436  0636  00A9               	movwf	?___bmul
  4437  0637  300A               	movlw	10
  4438  0638  00A0               	movwf	?___lbmod
  4439  0639  085F               	movf	fround@prec,w
  4440  063A  26C6               	fcall	___lbmod
  4441  063B  120A  118A  2329   	fcall	___bmul
      +       120A  118A         
  4442  0640  3E01               	addlw	low (__npowers_-__stringbase)
  4443  0641  0084               	movwf	4
  4444  0642  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  4445  0647  00BB               	movwf	?___ftmul
  4446  0648  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  4447  064D  00BC               	movwf	?___ftmul+1
  4448  064E  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  4449  0653  00BD               	movwf	?___ftmul+2
  4450  0654  3003               	movlw	3
  4451  0655  00A9               	movwf	?___bmul
  4452  0656  300A               	movlw	10
  4453  0657  00A5               	movwf	?___lbdiv
  4454  0658  085F               	movf	fround@prec,w
  4455  0659  26AB               	fcall	___lbdiv
  4456  065A  120A  118A  2329   	fcall	___bmul
      +       120A  118A         
  4457  065F  3E1C               	addlw	low ((__npowers_-__stringbase+27))
  4458  0660  0084               	movwf	4
  4459  0661  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  4460  0666  00BE               	movwf	?___ftmul+3
  4461  0667  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  4462  066C  00BF               	movwf	?___ftmul+4
  4463  066D  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  4464  0672  00C0               	movwf	?___ftmul+5
  4465  0673  120A  118A  22BA   	fcall	___ftmul
      +       120A  118A         
  4466  0678  26F1  120A  118A   	fcall	PL27	;call to abstracted procedure
  4467  067B  303F               	movlw	63
  4468  067C  01BB               	clrf	?___ftmul
  4469  067D  01BC               	clrf	?___ftmul+1
  4470  067E  26E9               	fcall	PL23	;call to abstracted procedure
  4471  067F  120A  118A  22BA   	fcall	___ftmul
      +       120A  118A         
  4472  0684  2EE2               	ljmp	PL17	;call to abstracted procedure
  4473  0685                     l7686:	
  4474  0685  303F               	movlw	63
  4475  0686  01BB               	clrf	?___ftmul
  4476  0687  01BC               	clrf	?___ftmul+1
  4477  0688  00BD               	movwf	?___ftmul+2
  4478  0689  3003               	movlw	3
  4479  068A  00A9               	movwf	?___bmul
  4480  068B  085F               	movf	fround@prec,w
  4481  068C  120A  118A  2329   	fcall	___bmul
      +       120A  118A         
  4482  0691  3E01               	addlw	low (__npowers_-__stringbase)
  4483  0692  0084               	movwf	4
  4484  0693  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  4485  0698  00BE               	movwf	?___ftmul+3
  4486  0699  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  4487  069E  00BF               	movwf	?___ftmul+4
  4488  069F  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  4489  06A4  00C0               	movwf	?___ftmul+5
  4490  06A5  120A  118A  22BA   	fcall	___ftmul
      +       120A  118A         
  4491  06AA  2EE2               	ljmp	PL17	;call to abstracted procedure
  4492  06AB                     __end_of_fround:	
  4493  06AB                     __ptext781:	
  4494 ;; =============== function ___lbmod ends ============
  4495                           
  4496                           
  4497 ;; *************** function ___lbdiv *****************
  4498 ;; Defined at:
  4499 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\lbdiv.c"
  4500 ;; Parameters:    Size  Location     Type
  4501 ;;  dividend        1    wreg     unsigned char 
  4502 ;;  divisor         1    5[BANK0 ] unsigned char 
  4503 ;; Auto vars:     Size  Location     Type
  4504 ;;  dividend        1    6[BANK0 ] unsigned char 
  4505 ;;  quotient        1    8[BANK0 ] unsigned char 
  4506 ;;  counter         1    7[BANK0 ] unsigned char 
  4507 ;; Return value:  Size  Location     Type
  4508 ;;                  1    wreg      unsigned char 
  4509 ;; Registers used:
  4510 ;;		wreg, status,2, status,0
  4511 ;; Tracked objects:
  4512 ;;		On entry : 60/0
  4513 ;;		On exit  : 60/0
  4514 ;;		Unchanged: FFF9F/0
  4515 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4516 ;;      Params:         0       1       0       0       0
  4517 ;;      Locals:         0       3       0       0       0
  4518 ;;      Temps:          0       0       0       0       0
  4519 ;;      Totals:         0       4       0       0       0
  4520 ;;Total ram usage:        4 bytes
  4521 ;; Hardware stack levels used:    1
  4522 ;; Hardware stack levels required when called:    2
  4523 ;; This function calls:
  4524 ;;		Nothing
  4525 ;; This function is called by:
  4526 ;;		_fround
  4527 ;; This function uses a non-reentrant model
  4528 ;;
  4529  06AB                     ___lbdiv:	
  4530                           
  4531                           ; Regs used in ___lbdiv: [wreg+status,2+status,0]
  4532                           ;___lbdiv@dividend stored from wreg
  4533  06AB  00A6               	movwf	___lbdiv@dividend
  4534  06AC  01A8               	clrf	___lbdiv@quotient
  4535  06AD  0825               	movf	___lbdiv@divisor,w
  4536  06AE  1903               	btfsc	3,2
  4537  06AF  2EC4               	goto	l7472
  4538  06B0  01A7               	clrf	___lbdiv@counter
  4539  06B1                     l7458:	
  4540  06B1  0AA7               	incf	___lbdiv@counter,f
  4541  06B2  1BA5               	btfsc	___lbdiv@divisor,7
  4542  06B3  2EB7               	goto	l3328
  4543  06B4  1003               	clrc
  4544  06B5  0DA5               	rlf	___lbdiv@divisor,f
  4545  06B6  2EB1               	goto	l7458
  4546  06B7                     l3328:	
  4547  06B7  1003               	clrc
  4548  06B8  0DA8               	rlf	___lbdiv@quotient,f
  4549  06B9  0825               	movf	___lbdiv@divisor,w
  4550  06BA  0226               	subwf	___lbdiv@dividend,w
  4551  06BB  1C03               	skipc
  4552  06BC  2EC1               	goto	L19
  4553  06BD  0825               	movf	___lbdiv@divisor,w
  4554  06BE  02A6               	subwf	___lbdiv@dividend,f
  4555  06BF  1428               	bsf	___lbdiv@quotient,0
  4556  06C0  1003               	clrc
  4557  06C1                     L19:	
  4558  06C1  0CA5               	rrf	___lbdiv@divisor,f
  4559  06C2  0BA7               	decfsz	___lbdiv@counter,f
  4560  06C3  2EB7               	goto	l3328
  4561  06C4                     l7472:	
  4562  06C4  0828               	movf	___lbdiv@quotient,w
  4563  06C5  0008               	return
  4564  06C6                     __end_of___lbdiv:	
  4565  06C6                     __ptext780:	
  4566 ;; =============== function ___ftpack ends ============
  4567                           
  4568                           
  4569 ;; *************** function ___lbmod *****************
  4570 ;; Defined at:
  4571 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\lbmod.c"
  4572 ;; Parameters:    Size  Location     Type
  4573 ;;  dividend        1    wreg     unsigned char 
  4574 ;;  divisor         1    0[BANK0 ] unsigned char 
  4575 ;; Auto vars:     Size  Location     Type
  4576 ;;  dividend        1    2[BANK0 ] unsigned char 
  4577 ;;  rem             1    4[BANK0 ] unsigned char 
  4578 ;;  counter         1    3[BANK0 ] unsigned char 
  4579 ;; Return value:  Size  Location     Type
  4580 ;;                  1    wreg      unsigned char 
  4581 ;; Registers used:
  4582 ;;		wreg, status,2, status,0
  4583 ;; Tracked objects:
  4584 ;;		On entry : 60/0
  4585 ;;		On exit  : 60/0
  4586 ;;		Unchanged: FFF9F/0
  4587 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4588 ;;      Params:         0       1       0       0       0
  4589 ;;      Locals:         0       3       0       0       0
  4590 ;;      Temps:          0       1       0       0       0
  4591 ;;      Totals:         0       5       0       0       0
  4592 ;;Total ram usage:        5 bytes
  4593 ;; Hardware stack levels used:    1
  4594 ;; Hardware stack levels required when called:    2
  4595 ;; This function calls:
  4596 ;;		Nothing
  4597 ;; This function is called by:
  4598 ;;		_fround
  4599 ;; This function uses a non-reentrant model
  4600 ;;
  4601  06C6                     ___lbmod:	
  4602                           
  4603                           ; Regs used in ___lbmod: [wreg+status,2+status,0]
  4604                           ;___lbmod@dividend stored from wreg
  4605  06C6  00A2               	movwf	___lbmod@dividend
  4606  06C7  3008               	movlw	8
  4607  06C8  00A3               	movwf	___lbmod@counter
  4608  06C9  01A4               	clrf	___lbmod@rem
  4609  06CA                     l6306:	
  4610  06CA  0822               	movf	___lbmod@dividend,w
  4611  06CB  00A1               	movwf	??___lbmod
  4612  06CC  3007               	movlw	7
  4613  06CD  1003               	clrc
  4614  06CE                     L18:	
  4615  06CE  0CA1               	rrf	??___lbmod,f
  4616  06CF  3EFF               	addlw	-1
  4617  06D0  1003               	clrc
  4618  06D1  1D03               	skipz
  4619  06D2  2ECE               	goto	L18
  4620  06D3  0D24               	rlf	___lbmod@rem,w
  4621  06D4  0421               	iorwf	??___lbmod,w
  4622  06D5  00A4               	movwf	___lbmod@rem
  4623  06D6  1003               	clrc
  4624  06D7  0DA2               	rlf	___lbmod@dividend,f
  4625  06D8  0820               	movf	___lbmod@divisor,w
  4626  06D9  0224               	subwf	___lbmod@rem,w
  4627  06DA  1C03               	skipc
  4628  06DB  2EDE               	goto	l6314
  4629  06DC  0820               	movf	___lbmod@divisor,w
  4630  06DD  02A4               	subwf	___lbmod@rem,f
  4631  06DE                     l6314:	
  4632  06DE  0BA3               	decfsz	___lbmod@counter,f
  4633  06DF  2ECA               	goto	l6306
  4634  06E0  0824               	movf	___lbmod@rem,w
  4635  06E1  0008               	return
  4636  06E2                     __end_of___lbmod:	
  4637  06E2                     PL17:	
  4638  06E2  083B               	movf	?___ftmul,w
  4639  06E3  00D6               	movwf	?_fround
  4640  06E4  083C               	movf	?___ftmul+1,w
  4641  06E5  00D7               	movwf	?_fround+1
  4642  06E6  083D               	movf	?___ftmul+2,w
  4643  06E7  00D8               	movwf	?_fround+2
  4644  06E8  0008               	return
  4645  06E9                     PL23:	
  4646  06E9  00BD               	movwf	?___ftmul+2
  4647  06EA  085C               	movf	_fround$4112,w
  4648  06EB  00BE               	movwf	?___ftmul+3
  4649  06EC  085D               	movf	_fround$4112+1,w
  4650  06ED  00BF               	movwf	?___ftmul+4
  4651  06EE  085E               	movf	_fround$4112+2,w
  4652  06EF  00C0               	movwf	?___ftmul+5
  4653  06F0  0008               	return
  4654  06F1                     PL27:	
  4655  06F1  083B               	movf	?___ftmul,w
  4656  06F2  00DC               	movwf	_fround$4112
  4657  06F3  083C               	movf	?___ftmul+1,w
  4658  06F4  00DD               	movwf	_fround$4112+1
  4659  06F5  083D               	movf	?___ftmul+2,w
  4660  06F6  00DE               	movwf	_fround$4112+2
  4661  06F7  0008               	return
  4662                           
  4663                           	psect	text763
  4664  03CE                     __ptext763:	
  4665 ;; =============== function _fround ends ============
  4666                           
  4667                           
  4668 ;; *************** function _lcd_gotoxy *****************
  4669 ;; Defined at:
  4670 ;;		line 162 in file "C:\Users\DELL\Desktop\baitap_ttvxl\dotanso_dungCCP\lcd(16).c"
  4671 ;; Parameters:    Size  Location     Type
  4672 ;;  col             1    wreg     unsigned char 
  4673 ;;  row             1    5[BANK0 ] unsigned char 
  4674 ;; Auto vars:     Size  Location     Type
  4675 ;;  col             1    6[BANK0 ] unsigned char 
  4676 ;;  address         1    7[BANK0 ] unsigned char 
  4677 ;; Return value:  Size  Location     Type
  4678 ;;		None               void
  4679 ;; Registers used:
  4680 ;;		wreg, status,2, status,0, pclath, cstack
  4681 ;; Tracked objects:
  4682 ;;		On entry : 60/0
  4683 ;;		On exit  : 60/0
  4684 ;;		Unchanged: 0/0
  4685 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4686 ;;      Params:         0       1       0       0       0
  4687 ;;      Locals:         0       2       0       0       0
  4688 ;;      Temps:          0       0       0       0       0
  4689 ;;      Totals:         0       3       0       0       0
  4690 ;;Total ram usage:        3 bytes
  4691 ;; Hardware stack levels used:    1
  4692 ;; Hardware stack levels required when called:    3
  4693 ;; This function calls:
  4694 ;;		_lcd_put_byte
  4695 ;;		_lcd_busy
  4696 ;; This function is called by:
  4697 ;;		_lcd_putc
  4698 ;;		_main
  4699 ;; This function uses a non-reentrant model
  4700 ;;
  4701  03CE                     _lcd_gotoxy:	
  4702                           
  4703                           ; Regs used in _lcd_gotoxy: [wreg+status,2+status,0+pclath+cstack]
  4704                           ;lcd_gotoxy@col stored from wreg
  4705  03CE  00A6               	movwf	lcd_gotoxy@col
  4706                           
  4707                           ;lcd(16).c: 163: unsigned char address;
  4708                           ;lcd(16).c: 165: if(row!=0)
  4709  03CF  0825               	movf	lcd_gotoxy@row,w
  4710  03D0  1903               	btfsc	3,2
  4711  03D1  2BD5               	goto	l7660
  4712                           
  4713                           ;lcd(16).c: 166: address=0x40;
  4714  03D2  3040               	movlw	64
  4715  03D3  00A7               	movwf	lcd_gotoxy@address
  4716  03D4  2BD6               	goto	l7662
  4717  03D5                     l7660:	
  4718                           
  4719                           ;lcd(16).c: 167: else
  4720                           ;lcd(16).c: 168: address=0;
  4721  03D5  01A7               	clrf	lcd_gotoxy@address
  4722  03D6                     l7662:	
  4723                           
  4724                           ;lcd(16).c: 170: address += col;
  4725  03D6  0826               	movf	lcd_gotoxy@col,w
  4726  03D7  07A7               	addwf	lcd_gotoxy@address,f
  4727                           
  4728                           ;lcd(16).c: 171: lcd_put_byte(0,0x80|address);
  4729  03D8  0827               	movf	lcd_gotoxy@address,w
  4730  03D9  3880               	iorlw	128
  4731  03DA  00A0               	movwf	?_lcd_put_byte
  4732  03DB  3000               	movlw	0
  4733  03DC  24D3  120A  118A   	fcall	_lcd_put_byte
  4734  03DF                     l7666:	
  4735                           ;lcd(16).c: 172: while(lcd_busy());
  4736                           
  4737  03DF  2562  120A  118A   	fcall	_lcd_busy
  4738  03E2  3800               	iorlw	0
  4739  03E3  1903               	btfsc	3,2
  4740  03E4  0008               	return
  4741  03E5  2BDF               	goto	l7666
  4742  03E6                     __end_of_lcd_gotoxy:	
  4743  03E6                     __ptext759:	
  4744 ;; =============== function _putch ends ============
  4745                           
  4746                           
  4747 ;; *************** function _lcd_putc *****************
  4748 ;; Defined at:
  4749 ;;		line 143 in file "C:\Users\DELL\Desktop\baitap_ttvxl\dotanso_dungCCP\lcd(16).c"
  4750 ;; Parameters:    Size  Location     Type
  4751 ;;  c               1    wreg     unsigned char 
  4752 ;; Auto vars:     Size  Location     Type
  4753 ;;  c               1    8[BANK0 ] unsigned char 
  4754 ;; Return value:  Size  Location     Type
  4755 ;;		None               void
  4756 ;; Registers used:
  4757 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4758 ;; Tracked objects:
  4759 ;;		On entry : 60/0
  4760 ;;		On exit  : 60/0
  4761 ;;		Unchanged: 0/0
  4762 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4763 ;;      Params:         0       0       0       0       0
  4764 ;;      Locals:         0       1       0       0       0
  4765 ;;      Temps:          0       0       0       0       0
  4766 ;;      Totals:         0       1       0       0       0
  4767 ;;Total ram usage:        1 bytes
  4768 ;; Hardware stack levels used:    1
  4769 ;; Hardware stack levels required when called:    4
  4770 ;; This function calls:
  4771 ;;		_lcd_put_byte
  4772 ;;		_lcd_busy
  4773 ;;		_lcd_gotoxy
  4774 ;;		_isprint
  4775 ;; This function is called by:
  4776 ;;		_putch
  4777 ;; This function uses a non-reentrant model
  4778 ;;
  4779  03E6                     _lcd_putc:	
  4780                           
  4781                           ; Regs used in _lcd_putc: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4782                           ;lcd_putc@c stored from wreg
  4783  03E6  00A8               	movwf	lcd_putc@c
  4784                           
  4785                           ;lcd(16).c: 144: switch(c){
  4786  03E7  2C0C               	goto	l7752
  4787  03E8                     l7738:	
  4788  03E8  3000               	movlw	0
  4789                           
  4790                           ;lcd(16).c: 146: lcd_put_byte(0, 1);
  4791  03E9  01A0               	clrf	?_lcd_put_byte
  4792  03EA  0AA0               	incf	?_lcd_put_byte,f
  4793  03EB  24D3  120A  118A   	fcall	_lcd_put_byte
  4794  03EE                     l7740:	
  4795                           ;lcd(16).c: 147: while(lcd_busy());
  4796                           
  4797  03EE  2562  120A  118A   	fcall	_lcd_busy
  4798  03F1  3800               	iorlw	0
  4799  03F2  1903               	btfsc	3,2
  4800  03F3  0008               	return
  4801  03F4  2BEE               	goto	l7740
  4802  03F5                     l7742:	
  4803  03F5  3000               	movlw	0
  4804                           
  4805                           ;lcd(16).c: 150: lcd_gotoxy(0, 1);
  4806  03F6  01A5               	clrf	?_lcd_gotoxy
  4807  03F7  0AA5               	incf	?_lcd_gotoxy,f
  4808  03F8  2BCE               	ljmp	_lcd_gotoxy
  4809  03F9                     l7744:	
  4810                           ;lcd(16).c: 151: break;
  4811                           
  4812                           
  4813                           ;lcd(16).c: 153: if(isprint(c)){
  4814  03F9  0828               	movf	lcd_putc@c,w
  4815  03FA  2589  120A  118A   	fcall	_isprint
  4816  03FD  1C03               	btfss	3,0
  4817  03FE  0008               	return
  4818                           
  4819                           ;lcd(16).c: 154: lcd_put_byte(1, c);
  4820  03FF  0828               	movf	lcd_putc@c,w
  4821  0400  00A0               	movwf	?_lcd_put_byte
  4822  0401  3001               	movlw	1
  4823  0402  24D3  120A  118A   	fcall	_lcd_put_byte
  4824  0405                     l7748:	
  4825                           ;lcd(16).c: 155: while(lcd_busy());
  4826                           
  4827  0405  2562  120A  118A   	fcall	_lcd_busy
  4828  0408  3800               	iorlw	0
  4829  0409  1903               	btfsc	3,2
  4830  040A  0008               	return
  4831  040B  2C05               	goto	l7748
  4832  040C                     l7752:	
  4833  040C  0828               	movf	lcd_putc@c,w
  4834                           
  4835                           ; Switch size 1, requested type "space"
  4836                           ; Number of cases is 2, Range of values is 10 to 12
  4837                           ; switch strategies available:
  4838                           ; Name         Instructions Cycles
  4839                           ; simple_byte            7     4 (average)
  4840                           ; direct_byte           20    11 (fixed)
  4841                           ; jumptable            263     9 (fixed)
  4842                           ;	Chosen strategy is simple_byte
  4843  040D  3A0A               	xorlw	10	; case 10
  4844  040E  1903               	skipnz
  4845  040F  2BF5               	goto	l7742
  4846  0410  3A06               	xorlw	6	; case 12
  4847  0411  1903               	skipnz
  4848  0412  2BE8               	goto	l7738
  4849  0413  2BF9               	goto	l7744
  4850  0414  0008               	return
  4851  0415                     __end_of_lcd_putc:	
  4852  0415                     __ptext764:	
  4853 ;; =============== function _lcd_gotoxy ends ============
  4854                           
  4855                           
  4856 ;; *************** function _lcd_init *****************
  4857 ;; Defined at:
  4858 ;;		line 5 in file "C:\Users\DELL\Desktop\baitap_ttvxl\dotanso_dungCCP\lcd(16).c"
  4859 ;; Parameters:    Size  Location     Type
  4860 ;;		None
  4861 ;; Auto vars:     Size  Location     Type
  4862 ;;  i               1    0        unsigned char 
  4863 ;; Return value:  Size  Location     Type
  4864 ;;		None               void
  4865 ;; Registers used:
  4866 ;;		wreg, status,2, status,0, pclath, cstack
  4867 ;; Tracked objects:
  4868 ;;		On entry : 17F/60
  4869 ;;		On exit  : 60/0
  4870 ;;		Unchanged: 0/0
  4871 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4872 ;;      Params:         0       0       0       0       0
  4873 ;;      Locals:         0       0       0       0       0
  4874 ;;      Temps:          0       3       0       0       0
  4875 ;;      Totals:         0       3       0       0       0
  4876 ;;Total ram usage:        3 bytes
  4877 ;; Hardware stack levels used:    1
  4878 ;; Hardware stack levels required when called:    3
  4879 ;; This function calls:
  4880 ;;		_lcd_put_byte
  4881 ;;		_lcd_busy
  4882 ;; This function is called by:
  4883 ;;		_main
  4884 ;; This function uses a non-reentrant model
  4885 ;;
  4886  0415                     _lcd_init:	
  4887                           
  4888                           ;lcd(16).c: 6: unsigned char i;
  4889                           ;lcd(16).c: 7: TRISD3 = 0;
  4890                           
  4891                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
  4892  0415  1303               	bcf	3,6	;RP1=0, select bank1
  4893  0416  1188               	bcf	8,3
  4894                           
  4895                           ;lcd(16).c: 8: TRISD1 = 0;
  4896  0417  1088               	bcf	8,1
  4897                           
  4898                           ;lcd(16).c: 9: TRISD2 = 0;
  4899  0418  1108               	bcf	8,2
  4900                           
  4901                           ;lcd(16).c: 10: TRISD4 = 0;
  4902  0419  1208               	bcf	8,4
  4903                           
  4904                           ;lcd(16).c: 11: TRISD5 = 0;
  4905  041A  1288               	bcf	8,5
  4906                           
  4907                           ;lcd(16).c: 12: TRISD6 = 0;
  4908  041B  1308               	bcf	8,6
  4909                           
  4910                           ;lcd(16).c: 13: TRISD7 = 0;
  4911  041C  1388               	bcf	8,7
  4912                           
  4913                           ;lcd(16).c: 14: RD3 = 0;
  4914  041D  1283               	bcf	3,5	;RP0=0, select bank0
  4915  041E  3003               	movlw	3
  4916  041F  1188               	bcf	8,3
  4917                           
  4918                           ;lcd(16).c: 15: RD1 = 0;
  4919  0420  1088               	bcf	8,1
  4920                           
  4921                           ;lcd(16).c: 16: RD2 = 0;
  4922  0421  1108               	bcf	8,2
  4923                           
  4924                           ;lcd(16).c: 18: _delay((unsigned long)((100)*(20000000/4000.0)));
  4925  0422  00A7               	movwf	??_lcd_init+2
  4926  0423  308A               	movlw	138
  4927  0424  00A6               	movwf	??_lcd_init+1
  4928  0425  3056               	movlw	86
  4929  0426  00A5               	movwf	??_lcd_init
  4930  0427                     u5077:	
  4931  0427  0BA5               	decfsz	??_lcd_init,f
  4932  0428  2C27               	goto	u5077
  4933  0429  0BA6               	decfsz	??_lcd_init+1,f
  4934  042A  2C27               	goto	u5077
  4935  042B  0BA7               	decfsz	??_lcd_init+2,f
  4936  042C  2C27               	goto	u5077
  4937  042D  2C2E               	nop2
  4938                           
  4939                           ;lcd(16).c: 21: lcd_put_byte(0,0x30);
  4940  042E  259E  120A  118A   	fcall	PL32	;call to abstracted procedure
  4941  0431  24D3  120A  118A   	fcall	_lcd_put_byte
  4942                           
  4943                           ;lcd(16).c: 22: _delay((unsigned long)((50)*(20000000/4000.0)));
  4944  0434  3002               	movlw	2
  4945  0435  00A7               	movwf	??_lcd_init+2
  4946  0436  3045               	movlw	69
  4947  0437  00A6               	movwf	??_lcd_init+1
  4948  0438  30A9               	movlw	169
  4949  0439  00A5               	movwf	??_lcd_init
  4950  043A                     u5087:	
  4951  043A  0BA5               	decfsz	??_lcd_init,f
  4952  043B  2C3A               	goto	u5087
  4953  043C  0BA6               	decfsz	??_lcd_init+1,f
  4954  043D  2C3A               	goto	u5087
  4955  043E  0BA7               	decfsz	??_lcd_init+2,f
  4956  043F  2C3A               	goto	u5087
  4957  0440  2C41               	nop2
  4958                           
  4959                           ;lcd(16).c: 23: lcd_put_byte(0,0x30);
  4960  0441  259E  120A  118A   	fcall	PL32	;call to abstracted procedure
  4961  0444  24D3  120A  118A   	fcall	_lcd_put_byte
  4962                           
  4963                           ;lcd(16).c: 24: _delay((unsigned long)((50)*(20000000/4000.0)));
  4964  0447  3002               	movlw	2
  4965  0448  00A7               	movwf	??_lcd_init+2
  4966  0449  3045               	movlw	69
  4967  044A  00A6               	movwf	??_lcd_init+1
  4968  044B  30A9               	movlw	169
  4969  044C  00A5               	movwf	??_lcd_init
  4970  044D                     u5097:	
  4971  044D  0BA5               	decfsz	??_lcd_init,f
  4972  044E  2C4D               	goto	u5097
  4973  044F  0BA6               	decfsz	??_lcd_init+1,f
  4974  0450  2C4D               	goto	u5097
  4975  0451  0BA7               	decfsz	??_lcd_init+2,f
  4976  0452  2C4D               	goto	u5097
  4977  0453  2C54               	nop2
  4978                           
  4979                           ;lcd(16).c: 25: lcd_put_byte(0,0x32);
  4980  0454  3032               	movlw	50
  4981  0455  25A3               	call	PL35	;select bank 0
  4982  0456  00A0               	movwf	?_lcd_put_byte
  4983  0457  3000               	movlw	0
  4984  0458  24D3  120A  118A   	fcall	_lcd_put_byte
  4985                           
  4986                           ;lcd(16).c: 26: _delay((unsigned long)((100)*(20000000/4000.0)));
  4987  045B  3003               	movlw	3
  4988  045C  00A7               	movwf	??_lcd_init+2
  4989  045D  308A               	movlw	138
  4990  045E  00A6               	movwf	??_lcd_init+1
  4991  045F  3056               	movlw	86
  4992  0460  00A5               	movwf	??_lcd_init
  4993  0461                     u5107:	
  4994  0461  0BA5               	decfsz	??_lcd_init,f
  4995  0462  2C61               	goto	u5107
  4996  0463  0BA6               	decfsz	??_lcd_init+1,f
  4997  0464  2C61               	goto	u5107
  4998  0465  0BA7               	decfsz	??_lcd_init+2,f
  4999  0466  2C61               	goto	u5107
  5000  0467  2C68               	nop2
  5001                           
  5002                           ;lcd(16).c: 27: _delay((unsigned long)((100)*(20000000/4000.0)));
  5003  0468  3003               	movlw	3
  5004  0469  25A3               	call	PL35	;select bank 0
  5005  046A  00A7               	movwf	??_lcd_init+2
  5006  046B  308A               	movlw	138
  5007  046C  00A6               	movwf	??_lcd_init+1
  5008  046D  3056               	movlw	86
  5009  046E  00A5               	movwf	??_lcd_init
  5010  046F                     u5117:	
  5011  046F  0BA5               	decfsz	??_lcd_init,f
  5012  0470  2C6F               	goto	u5117
  5013  0471  0BA6               	decfsz	??_lcd_init+1,f
  5014  0472  2C6F               	goto	u5117
  5015  0473  0BA7               	decfsz	??_lcd_init+2,f
  5016  0474  2C6F               	goto	u5117
  5017  0475  2C76               	nop2
  5018                           
  5019                           ;lcd(16).c: 28: _delay((unsigned long)((100)*(20000000/4000.0)));
  5020  0476  3003               	movlw	3
  5021  0477  25A3               	call	PL35	;select bank 0
  5022  0478  00A7               	movwf	??_lcd_init+2
  5023  0479  308A               	movlw	138
  5024  047A  00A6               	movwf	??_lcd_init+1
  5025  047B  3056               	movlw	86
  5026  047C  00A5               	movwf	??_lcd_init
  5027  047D                     u5127:	
  5028  047D  0BA5               	decfsz	??_lcd_init,f
  5029  047E  2C7D               	goto	u5127
  5030  047F  0BA6               	decfsz	??_lcd_init+1,f
  5031  0480  2C7D               	goto	u5127
  5032  0481  0BA7               	decfsz	??_lcd_init+2,f
  5033  0482  2C7D               	goto	u5127
  5034  0483  2C84               	nop2
  5035  0484                     l6806:	
  5036                           ;lcd(16).c: 30: while(lcd_busy());
  5037                           
  5038  0484  2562  120A  118A   	fcall	_lcd_busy
  5039  0487  3800               	iorlw	0
  5040  0488  1D03               	skipz
  5041  0489  2C84               	goto	l6806
  5042                           
  5043                           ;lcd(16).c: 31: lcd_put_byte(0,0b00101100 & 0b00111000);
  5044  048A  3028               	movlw	40
  5045  048B  00A0               	movwf	?_lcd_put_byte
  5046  048C  3000               	movlw	0
  5047  048D  24D3  120A  118A   	fcall	_lcd_put_byte
  5048  0490                     l6810:	
  5049                           ;lcd(16).c: 32: while(lcd_busy());
  5050                           
  5051  0490  2562  120A  118A   	fcall	_lcd_busy
  5052  0493  3800               	iorlw	0
  5053  0494  1D03               	skipz
  5054  0495  2C90               	goto	l6810
  5055                           
  5056                           ;lcd(16).c: 34: lcd_put_byte(0,0b00001011&0b00001101&0b00001110);
  5057  0496  3008               	movlw	8
  5058  0497  00A0               	movwf	?_lcd_put_byte
  5059  0498  3000               	movlw	0
  5060  0499  24D3  120A  118A   	fcall	_lcd_put_byte
  5061  049C                     l6814:	
  5062                           ;lcd(16).c: 35: while(lcd_busy());
  5063                           
  5064  049C  2562  120A  118A   	fcall	_lcd_busy
  5065  049F  3800               	iorlw	0
  5066  04A0  1D03               	skipz
  5067  04A1  2C9C               	goto	l6814
  5068                           
  5069                           ;lcd(16).c: 36: lcd_put_byte(0,0b00001111&0b00001101&0b00001110);
  5070  04A2  300C               	movlw	12
  5071  04A3  00A0               	movwf	?_lcd_put_byte
  5072  04A4  3000               	movlw	0
  5073  04A5  24D3  120A  118A   	fcall	_lcd_put_byte
  5074  04A8                     l6818:	
  5075                           ;lcd(16).c: 37: while(lcd_busy());
  5076                           
  5077  04A8  2562  120A  118A   	fcall	_lcd_busy
  5078  04AB  3800               	iorlw	0
  5079  04AC  1D03               	skipz
  5080  04AD  2CA8               	goto	l6818
  5081  04AE  3000               	movlw	0
  5082                           
  5083                           ;lcd(16).c: 39: lcd_put_byte(0,0x01);
  5084  04AF  01A0               	clrf	?_lcd_put_byte
  5085  04B0  0AA0               	incf	?_lcd_put_byte,f
  5086  04B1  24D3  120A  118A   	fcall	_lcd_put_byte
  5087  04B4                     l6822:	
  5088                           ;lcd(16).c: 40: while(lcd_busy());
  5089                           
  5090  04B4  2562  120A  118A   	fcall	_lcd_busy
  5091  04B7  3800               	iorlw	0
  5092  04B8  1D03               	skipz
  5093  04B9  2CB4               	goto	l6822
  5094                           
  5095                           ;lcd(16).c: 41: lcd_put_byte(0,0b00000100);
  5096  04BA  3004               	movlw	4
  5097  04BB  00A0               	movwf	?_lcd_put_byte
  5098  04BC  3000               	movlw	0
  5099  04BD  24D3  120A  118A   	fcall	_lcd_put_byte
  5100  04C0                     l6826:	
  5101                           ;lcd(16).c: 42: while(lcd_busy());
  5102                           
  5103  04C0  2562  120A  118A   	fcall	_lcd_busy
  5104  04C3  3800               	iorlw	0
  5105  04C4  1D03               	skipz
  5106  04C5  2CC0               	goto	l6826
  5107  04C6  3000               	movlw	0
  5108                           
  5109                           ;lcd(16).c: 43: lcd_put_byte(0,0x01);
  5110  04C7  01A0               	clrf	?_lcd_put_byte
  5111  04C8  0AA0               	incf	?_lcd_put_byte,f
  5112  04C9  24D3  120A  118A   	fcall	_lcd_put_byte
  5113  04CC                     l6830:	
  5114                           ;lcd(16).c: 44: while(lcd_busy());
  5115                           
  5116  04CC  2562  120A  118A   	fcall	_lcd_busy
  5117  04CF  3800               	iorlw	0
  5118  04D0  1903               	btfsc	3,2
  5119  04D1  0008               	return
  5120  04D2  2CCC               	goto	l6830
  5121  04D3                     __end_of_lcd_init:	
  5122  04D3                     __ptext771:	
  5123 ;; =============== function _lcd_busy ends ============
  5124                           
  5125                           
  5126 ;; *************** function _lcd_put_byte *****************
  5127 ;; Defined at:
  5128 ;;		line 106 in file "C:\Users\DELL\Desktop\baitap_ttvxl\dotanso_dungCCP\lcd(16).c"
  5129 ;; Parameters:    Size  Location     Type
  5130 ;;  rs              1    wreg     unsigned char 
  5131 ;;  b               1    0[BANK0 ] unsigned char 
  5132 ;; Auto vars:     Size  Location     Type
  5133 ;;  rs              1    3[BANK0 ] unsigned char 
  5134 ;;  temp            1    4[BANK0 ] struct _BYTE_VAL
  5135 ;; Return value:  Size  Location     Type
  5136 ;;		None               void
  5137 ;; Registers used:
  5138 ;;		wreg, status,2, status,0
  5139 ;; Tracked objects:
  5140 ;;		On entry : 60/0
  5141 ;;		On exit  : 60/0
  5142 ;;		Unchanged: 0/0
  5143 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5144 ;;      Params:         0       1       0       0       0
  5145 ;;      Locals:         0       2       0       0       0
  5146 ;;      Temps:          0       2       0       0       0
  5147 ;;      Totals:         0       5       0       0       0
  5148 ;;Total ram usage:        5 bytes
  5149 ;; Hardware stack levels used:    1
  5150 ;; Hardware stack levels required when called:    2
  5151 ;; This function calls:
  5152 ;;		Nothing
  5153 ;; This function is called by:
  5154 ;;		_lcd_init
  5155 ;;		_lcd_putc
  5156 ;;		_lcd_gotoxy
  5157 ;; This function uses a non-reentrant model
  5158 ;;
  5159  04D3                     _lcd_put_byte:	
  5160                           
  5161                           ; Regs used in _lcd_put_byte: [wreg+status,2+status,0]
  5162                           ;lcd_put_byte@rs stored from wreg
  5163  04D3  00A3               	movwf	lcd_put_byte@rs
  5164                           
  5165                           ;lcd(16).c: 107: BYTE_VAL temp;
  5166                           ;lcd(16).c: 109: TRISD4 = 0;
  5167  04D4  1683               	bsf	3,5	;RP0=1, select bank1
  5168  04D5  1208               	bcf	8,4
  5169                           
  5170                           ;lcd(16).c: 110: TRISD5 = 0;
  5171  04D6  1288               	bcf	8,5
  5172                           
  5173                           ;lcd(16).c: 111: TRISD6 = 0;
  5174  04D7  1308               	bcf	8,6
  5175                           
  5176                           ;lcd(16).c: 112: TRISD7 = 0;
  5177  04D8  1388               	bcf	8,7
  5178                           
  5179                           ;lcd(16).c: 114: RD1 = 0;
  5180  04D9  1283               	bcf	3,5	;RP0=0, select bank0
  5181  04DA  1088               	bcf	8,1
  5182                           
  5183                           ;lcd(16).c: 115: if(rs) RD1 = 1;
  5184  04DB  0823               	movf	lcd_put_byte@rs,w
  5185  04DC  1D03               	skipz
  5186  04DD  1488               	bsf	8,1
  5187                           
  5188                           ;lcd(16).c: 117: _delay((unsigned long)((20)*(20000000/4000000.0)));
  5189  04DE  3021               	movlw	33
  5190  04DF  00A1               	movwf	??_lcd_put_byte
  5191  04E0                     u5177:	
  5192  04E0  0BA1               	decfsz	??_lcd_put_byte,f
  5193  04E1  2CE0               	goto	u5177
  5194  04E2  25A3               	call	PL35	;select bank 0
  5195                           
  5196                           ;lcd(16).c: 118: RD2 = 0;
  5197  04E3  3021               	movlw	33
  5198  04E4  1108               	bcf	8,2
  5199                           
  5200                           ;lcd(16).c: 119: _delay((unsigned long)((20)*(20000000/4000000.0)));
  5201  04E5  00A1               	movwf	??_lcd_put_byte
  5202  04E6                     u5187:	
  5203  04E6  0BA1               	decfsz	??_lcd_put_byte,f
  5204  04E7  2CE6               	goto	u5187
  5205  04E8  25A3               	call	PL35	;select bank 0
  5206                           
  5207                           ;lcd(16).c: 120: RD3 = 0;
  5208  04E9  1188               	bcf	8,3
  5209                           
  5210                           ;lcd(16).c: 122: temp.Val = b;
  5211  04EA  0820               	movf	lcd_put_byte@b,w
  5212  04EB  00A4               	movwf	lcd_put_byte@temp
  5213                           
  5214                           ;lcd(16).c: 125: RD4 = temp.bits.b4;
  5215  04EC  0E24               	swapf	lcd_put_byte@temp,w
  5216  04ED  3901               	andlw	1
  5217  04EE  00A1               	movwf	??_lcd_put_byte
  5218  04EF  0C21               	rrf	??_lcd_put_byte,w
  5219  04F0  1C03               	btfss	3,0
  5220  04F1  2CF5               	goto	u2780
  5221  04F2  25A3               	call	PL35	;select bank 0
  5222  04F3  1608               	bsf	8,4
  5223  04F4  2CF7               	goto	l6554
  5224  04F5                     u2780:	
  5225  04F5  25A3               	call	PL35	;select bank 0
  5226  04F6  1208               	bcf	8,4
  5227  04F7                     l6554:	
  5228                           
  5229                           ;lcd(16).c: 126: RD5 = temp.bits.b5;
  5230  04F7  0E24               	swapf	lcd_put_byte@temp,w
  5231  04F8  00A1               	movwf	??_lcd_put_byte
  5232  04F9  0C21               	rrf	??_lcd_put_byte,w
  5233  04FA  3901               	andlw	1
  5234  04FB  00A2               	movwf	??_lcd_put_byte+1
  5235  04FC  0C22               	rrf	??_lcd_put_byte+1,w
  5236  04FD  1C03               	btfss	3,0
  5237  04FE  2D02               	goto	u2800
  5238  04FF  25A3               	call	PL35	;select bank 0
  5239  0500  1688               	bsf	8,5
  5240  0501  2D04               	goto	l6556
  5241  0502                     u2800:	
  5242  0502  25A3               	call	PL35	;select bank 0
  5243  0503  1288               	bcf	8,5
  5244  0504                     l6556:	
  5245                           
  5246                           ;lcd(16).c: 127: RD6 = temp.bits.b6;
  5247  0504  0E24               	swapf	lcd_put_byte@temp,w
  5248  0505  2597  120A  118A   	fcall	PL30	;call to abstracted procedure
  5249  0508  1C03               	btfss	3,0
  5250  0509  2D0D               	goto	u2820
  5251  050A  25A3               	call	PL35	;select bank 0
  5252  050B  1708               	bsf	8,6
  5253  050C  2D0F               	goto	l6558
  5254  050D                     u2820:	
  5255  050D  25A3               	call	PL35	;select bank 0
  5256  050E  1308               	bcf	8,6
  5257  050F                     l6558:	
  5258                           
  5259                           ;lcd(16).c: 128: RD7 = temp.bits.b7;
  5260  050F  0D24               	rlf	lcd_put_byte@temp,w
  5261  0510  0D24               	rlf	lcd_put_byte@temp,w
  5262  0511  3901               	andlw	1
  5263  0512  00A1               	movwf	??_lcd_put_byte
  5264  0513  0C21               	rrf	??_lcd_put_byte,w
  5265  0514  1C03               	btfss	3,0
  5266  0515  2D19               	goto	u2840
  5267  0516  25A3               	call	PL35	;select bank 0
  5268  0517  1788               	bsf	8,7
  5269  0518  2D1B               	goto	u2854
  5270  0519                     u2840:	
  5271  0519  25A3               	call	PL35	;select bank 0
  5272  051A  1388               	bcf	8,7
  5273  051B                     u2854:	
  5274                           
  5275                           ;lcd(16).c: 129: _delay((unsigned long)((20)*(20000000/4000000.0)));
  5276  051B  3021               	movlw	33
  5277  051C  00A1               	movwf	??_lcd_put_byte
  5278  051D                     u5197:	
  5279  051D  0BA1               	decfsz	??_lcd_put_byte,f
  5280  051E  2D1D               	goto	u5197
  5281  051F  25A3               	call	PL35	;select bank 0
  5282                           
  5283                           ;lcd(16).c: 130: RD3 = 1;
  5284  0520  3021               	movlw	33
  5285  0521  1588               	bsf	8,3
  5286                           
  5287                           ;lcd(16).c: 131: _delay((unsigned long)((20)*(20000000/4000000.0)));
  5288  0522  00A1               	movwf	??_lcd_put_byte
  5289  0523                     u5207:	
  5290  0523  0BA1               	decfsz	??_lcd_put_byte,f
  5291  0524  2D23               	goto	u5207
  5292  0525  25A3               	call	PL35	;select bank 0
  5293                           
  5294                           ;lcd(16).c: 132: RD3 = 0;
  5295  0526  1188               	bcf	8,3
  5296                           
  5297                           ;lcd(16).c: 134: RD4 = temp.bits.b0;
  5298  0527  0824               	movf	lcd_put_byte@temp,w
  5299  0528  3901               	andlw	1
  5300  0529  00A1               	movwf	??_lcd_put_byte
  5301  052A  0C21               	rrf	??_lcd_put_byte,w
  5302  052B  1C03               	btfss	3,0
  5303  052C  2D30               	goto	u2860
  5304  052D  25A3               	call	PL35	;select bank 0
  5305  052E  1608               	bsf	8,4
  5306  052F  2D32               	goto	l6566
  5307  0530                     u2860:	
  5308  0530  25A3               	call	PL35	;select bank 0
  5309  0531  1208               	bcf	8,4
  5310  0532                     l6566:	
  5311                           
  5312                           ;lcd(16).c: 135: RD5 = temp.bits.b1;
  5313  0532  0C24               	rrf	lcd_put_byte@temp,w
  5314  0533  3901               	andlw	1
  5315  0534  00A1               	movwf	??_lcd_put_byte
  5316  0535  0C21               	rrf	??_lcd_put_byte,w
  5317  0536  1C03               	btfss	3,0
  5318  0537  2D3B               	goto	u2880
  5319  0538  25A3               	call	PL35	;select bank 0
  5320  0539  1688               	bsf	8,5
  5321  053A  2D3D               	goto	l6568
  5322  053B                     u2880:	
  5323  053B  25A3               	call	PL35	;select bank 0
  5324  053C  1288               	bcf	8,5
  5325  053D                     l6568:	
  5326                           
  5327                           ;lcd(16).c: 136: RD6 = temp.bits.b2;
  5328  053D  0C24               	rrf	lcd_put_byte@temp,w
  5329  053E  00A1               	movwf	??_lcd_put_byte
  5330  053F  0C21               	rrf	??_lcd_put_byte,w
  5331  0540  3901               	andlw	1
  5332  0541  00A2               	movwf	??_lcd_put_byte+1
  5333  0542  0C22               	rrf	??_lcd_put_byte+1,w
  5334  0543  1C03               	btfss	3,0
  5335  0544  2D48               	goto	u2900
  5336  0545  25A3               	call	PL35	;select bank 0
  5337  0546  1708               	bsf	8,6
  5338  0547  2D4A               	goto	l6570
  5339  0548                     u2900:	
  5340  0548  25A3               	call	PL35	;select bank 0
  5341  0549  1308               	bcf	8,6
  5342  054A                     l6570:	
  5343                           
  5344                           ;lcd(16).c: 137: RD7 = temp.bits.b3;
  5345  054A  0C24               	rrf	lcd_put_byte@temp,w
  5346  054B  2597  120A  118A   	fcall	PL30	;call to abstracted procedure
  5347  054E  1C03               	btfss	3,0
  5348  054F  2D53               	goto	u2920
  5349  0550  25A3               	call	PL35	;select bank 0
  5350  0551  1788               	bsf	8,7
  5351  0552  2D55               	goto	u2934
  5352  0553                     u2920:	
  5353  0553  25A3               	call	PL35	;select bank 0
  5354  0554  1388               	bcf	8,7
  5355  0555                     u2934:	
  5356                           
  5357                           ;lcd(16).c: 138: _delay((unsigned long)((20)*(20000000/4000000.0)));
  5358  0555  3021               	movlw	33
  5359  0556  00A1               	movwf	??_lcd_put_byte
  5360  0557                     u5217:	
  5361  0557  0BA1               	decfsz	??_lcd_put_byte,f
  5362  0558  2D57               	goto	u5217
  5363  0559  25A3               	call	PL35	;select bank 0
  5364                           
  5365                           ;lcd(16).c: 139: RD3 = 1;
  5366  055A  3021               	movlw	33
  5367  055B  1588               	bsf	8,3
  5368                           
  5369                           ;lcd(16).c: 140: _delay((unsigned long)((20)*(20000000/4000000.0)));
  5370  055C  00A1               	movwf	??_lcd_put_byte
  5371  055D                     u5227:	
  5372  055D  0BA1               	decfsz	??_lcd_put_byte,f
  5373  055E  2D5D               	goto	u5227
  5374  055F  25A3               	call	PL35	;select bank 0
  5375                           
  5376                           ;lcd(16).c: 141: RD3 = 0;
  5377  0560  1188               	bcf	8,3
  5378  0561  0008               	return
  5379  0562                     __end_of_lcd_put_byte:	
  5380  0562                     __ptext770:	
  5381 ;; =============== function ___ftadd ends ============
  5382                           
  5383                           
  5384 ;; *************** function _lcd_busy *****************
  5385 ;; Defined at:
  5386 ;;		line 47 in file "C:\Users\DELL\Desktop\baitap_ttvxl\dotanso_dungCCP\lcd(16).c"
  5387 ;; Parameters:    Size  Location     Type
  5388 ;;		None
  5389 ;; Auto vars:     Size  Location     Type
  5390 ;;  busy            1    1[BANK0 ] unsigned char 
  5391 ;; Return value:  Size  Location     Type
  5392 ;;                  1    wreg      unsigned char 
  5393 ;; Registers used:
  5394 ;;		wreg
  5395 ;; Tracked objects:
  5396 ;;		On entry : 0/0
  5397 ;;		On exit  : 60/0
  5398 ;;		Unchanged: 0/0
  5399 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5400 ;;      Params:         0       0       0       0       0
  5401 ;;      Locals:         0       1       0       0       0
  5402 ;;      Temps:          0       1       0       0       0
  5403 ;;      Totals:         0       2       0       0       0
  5404 ;;Total ram usage:        2 bytes
  5405 ;; Hardware stack levels used:    1
  5406 ;; Hardware stack levels required when called:    2
  5407 ;; This function calls:
  5408 ;;		Nothing
  5409 ;; This function is called by:
  5410 ;;		_lcd_init
  5411 ;;		_lcd_putc
  5412 ;;		_lcd_gotoxy
  5413 ;; This function uses a non-reentrant model
  5414 ;;
  5415  0562                     _lcd_busy:	
  5416                           
  5417                           ;lcd(16).c: 48: unsigned char busy;
  5418                           ;lcd(16).c: 50: TRISD4 = 1;
  5419                           
  5420                           ; Regs used in _lcd_busy: [wreg]
  5421  0562  1683               	bsf	3,5	;RP0=1, select bank1
  5422  0563  1303               	bcf	3,6	;RP1=0, select bank1
  5423  0564  1608               	bsf	8,4
  5424                           
  5425                           ;lcd(16).c: 51: TRISD5 = 1;
  5426  0565  1688               	bsf	8,5
  5427                           
  5428                           ;lcd(16).c: 52: TRISD6 = 1;
  5429  0566  1708               	bsf	8,6
  5430                           
  5431                           ;lcd(16).c: 53: TRISD7 = 1;
  5432  0567  1788               	bsf	8,7
  5433                           
  5434                           ;lcd(16).c: 55: RD2 = 1;
  5435  0568  1283               	bcf	3,5	;RP0=0, select bank0
  5436  0569  3021               	movlw	33
  5437  056A  1508               	bsf	8,2
  5438                           
  5439                           ;lcd(16).c: 56: RD1 = 0;
  5440  056B  1088               	bcf	8,1
  5441                           
  5442                           ;lcd(16).c: 57: _delay((unsigned long)((20)*(20000000/4000000.0)));
  5443  056C  00A0               	movwf	??_lcd_busy
  5444  056D                     u5137:	
  5445  056D  0BA0               	decfsz	??_lcd_busy,f
  5446  056E  2D6D               	goto	u5137
  5447  056F  25A3               	call	PL35	;select bank 0
  5448                           
  5449                           ;lcd(16).c: 58: RD3 = 1;
  5450  0570  3021               	movlw	33
  5451  0571  1588               	bsf	8,3
  5452                           
  5453                           ;lcd(16).c: 59: _delay((unsigned long)((20)*(20000000/4000000.0)));
  5454  0572  00A0               	movwf	??_lcd_busy
  5455  0573                     u5147:	
  5456  0573  0BA0               	decfsz	??_lcd_busy,f
  5457  0574  2D73               	goto	u5147
  5458                           
  5459                           ;lcd(16).c: 61: busy = RD7;
  5460  0575  3000               	movlw	0
  5461  0576  25A3               	call	PL35	;select bank 0
  5462  0577  1B88               	btfsc	8,7
  5463  0578  3001               	movlw	1
  5464  0579  00A1               	movwf	lcd_busy@busy
  5465  057A  3021               	movlw	33
  5466                           
  5467                           ;lcd(16).c: 63: RD3 = 0;
  5468  057B  1188               	bcf	8,3
  5469                           
  5470                           ;lcd(16).c: 64: _delay((unsigned long)((20)*(20000000/4000000.0)));
  5471  057C  00A0               	movwf	??_lcd_busy
  5472  057D                     u5157:	
  5473  057D  0BA0               	decfsz	??_lcd_busy,f
  5474  057E  2D7D               	goto	u5157
  5475  057F  25A3               	call	PL35	;select bank 0
  5476                           
  5477                           ;lcd(16).c: 65: RD3 = 1;
  5478  0580  3021               	movlw	33
  5479  0581  1588               	bsf	8,3
  5480                           
  5481                           ;lcd(16).c: 66: _delay((unsigned long)((20)*(20000000/4000000.0)));
  5482  0582  00A0               	movwf	??_lcd_busy
  5483  0583                     u5167:	
  5484  0583  0BA0               	decfsz	??_lcd_busy,f
  5485  0584  2D83               	goto	u5167
  5486  0585  25A3               	call	PL35	;select bank 0
  5487                           
  5488                           ;lcd(16).c: 67: RD3 = 0;
  5489  0586  1188               	bcf	8,3
  5490                           
  5491                           ;lcd(16).c: 70: return busy;
  5492  0587  0821               	movf	lcd_busy@busy,w
  5493  0588  0008               	return
  5494  0589                     __end_of_lcd_busy:	
  5495  0589                     __ptext787:	
  5496 ;; =============== function _isdigit ends ============
  5497                           
  5498                           
  5499 ;; *************** function _isprint *****************
  5500 ;; Defined at:
  5501 ;;		line 13 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\isprint.c"
  5502 ;; Parameters:    Size  Location     Type
  5503 ;;  c               1    wreg     unsigned char 
  5504 ;; Auto vars:     Size  Location     Type
  5505 ;;  c               1    1[BANK0 ] unsigned char 
  5506 ;; Return value:  Size  Location     Type
  5507 ;;		None               void
  5508 ;; Registers used:
  5509 ;;		wreg, status,2, status,0
  5510 ;; Tracked objects:
  5511 ;;		On entry : 60/0
  5512 ;;		On exit  : 60/0
  5513 ;;		Unchanged: FFF9F/0
  5514 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5515 ;;      Params:         0       0       0       0       0
  5516 ;;      Locals:         0       2       0       0       0
  5517 ;;      Temps:          0       0       0       0       0
  5518 ;;      Totals:         0       2       0       0       0
  5519 ;;Total ram usage:        2 bytes
  5520 ;; Hardware stack levels used:    1
  5521 ;; Hardware stack levels required when called:    2
  5522 ;; This function calls:
  5523 ;;		Nothing
  5524 ;; This function is called by:
  5525 ;;		_lcd_putc
  5526 ;; This function uses a non-reentrant model
  5527 ;;
  5528  0589                     _isprint:	
  5529                           
  5530                           ; Regs used in _isprint: [wreg+status,2+status,0]
  5531                           ;isprint@c stored from wreg
  5532  0589  00A1               	movwf	isprint@c
  5533  058A  307F               	movlw	127
  5534  058B  01A0               	clrf	_isprint$3673
  5535  058C  0221               	subwf	isprint@c,w
  5536  058D  1803               	skipnc
  5537  058E  2D95               	goto	l7404
  5538  058F  3020               	movlw	32
  5539  0590  0221               	subwf	isprint@c,w
  5540  0591  1C03               	skipc
  5541  0592  2D95               	goto	l7404
  5542  0593  01A0               	clrf	_isprint$3673
  5543  0594  0AA0               	incf	_isprint$3673,f
  5544  0595                     l7404:	
  5545  0595  0C20               	rrf	_isprint$3673,w
  5546  0596  0008               	return
  5547  0597                     __end_of_isprint:	
  5548  0597                     PL30:	
  5549  0597  00A1               	movwf	??_lcd_put_byte
  5550  0598  0CA1               	rrf	??_lcd_put_byte,f
  5551  0599  0C21               	rrf	??_lcd_put_byte,w
  5552  059A  3901               	andlw	1
  5553  059B  00A2               	movwf	??_lcd_put_byte+1
  5554  059C  0C22               	rrf	??_lcd_put_byte+1,w
  5555  059D  0008               	return
  5556  059E                     PL32:	
  5557  059E  3030               	movlw	48
  5558  059F  1283               	bcf	3,5	;RP0=0, select bank0
  5559  05A0  1303               	bcf	3,6	;RP1=0, select bank0
  5560  05A1  00A0               	movwf	?_lcd_put_byte
  5561  05A2  3400               	retlw	0
  5562  05A3                     PL35:	
  5563  05A3  1283               	bcf	3,5	;RP0=0, select bank0
  5564  05A4  1303               	bcf	3,6	;RP1=0, select bank0
  5565  05A5  0008               	return
  5566                           
  5567                           	psect	text766
  5568  000F                     __ptext766:	
  5569 ;; =============== function ___lltoft ends ============
  5570                           
  5571                           
  5572 ;; *************** function ___altoft *****************
  5573 ;; Defined at:
  5574 ;;		line 43 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\altoft.c"
  5575 ;; Parameters:    Size  Location     Type
  5576 ;;  c               4    8[BANK0 ] long 
  5577 ;; Auto vars:     Size  Location     Type
  5578 ;;  sign            1   13[BANK0 ] unsigned char 
  5579 ;;  exp             1   12[BANK0 ] unsigned char 
  5580 ;; Return value:  Size  Location     Type
  5581 ;;                  3    8[BANK0 ] float 
  5582 ;; Registers used:
  5583 ;;		wreg, status,2, status,0, pclath, cstack
  5584 ;; Tracked objects:
  5585 ;;		On entry : 60/0
  5586 ;;		On exit  : 60/0
  5587 ;;		Unchanged: FFF9F/0
  5588 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5589 ;;      Params:         0       4       0       0       0
  5590 ;;      Locals:         0       2       0       0       0
  5591 ;;      Temps:          0       0       0       0       0
  5592 ;;      Totals:         0       6       0       0       0
  5593 ;;Total ram usage:        6 bytes
  5594 ;; Hardware stack levels used:    1
  5595 ;; Hardware stack levels required when called:    3
  5596 ;; This function calls:
  5597 ;;		___ftpack
  5598 ;; This function is called by:
  5599 ;;		_main
  5600 ;; This function uses a non-reentrant model
  5601 ;;
  5602  000F                     ___altoft:	
  5603  000F  308E               	movlw	142
  5604                           
  5605                           ; Regs used in ___altoft: [wreg+status,2+status,0+pclath+cstack]
  5606  0010  01AD               	clrf	___altoft@sign
  5607  0011  00AC               	movwf	___altoft@exp
  5608  0012  1FAB               	btfss	___altoft@c+3,7
  5609  0013  2821               	goto	l7640
  5610  0014  09A8               	comf	___altoft@c,f
  5611  0015  09A9               	comf	___altoft@c+1,f
  5612  0016  09AA               	comf	___altoft@c+2,f
  5613  0017  09AB               	comf	___altoft@c+3,f
  5614  0018  0AA8               	incf	___altoft@c,f
  5615  0019  1903               	skipnz
  5616  001A  0AA9               	incf	___altoft@c+1,f
  5617  001B  1903               	skipnz
  5618  001C  0AAA               	incf	___altoft@c+2,f
  5619  001D  1903               	skipnz
  5620  001E  0AAB               	incf	___altoft@c+3,f
  5621  001F  01AD               	clrf	___altoft@sign
  5622  0020  0AAD               	incf	___altoft@sign,f
  5623  0021                     l7640:	
  5624  0021  30FF               	movlw	255
  5625  0022  052B               	andwf	___altoft@c+3,w
  5626  0023  1903               	btfsc	3,2
  5627  0024  282C               	goto	l7642
  5628  0025  1003               	clrc
  5629  0026  0CAB               	rrf	___altoft@c+3,f
  5630  0027  0CAA               	rrf	___altoft@c+2,f
  5631  0028  0CA9               	rrf	___altoft@c+1,f
  5632  0029  0CA8               	rrf	___altoft@c,f
  5633  002A  0AAC               	incf	___altoft@exp,f
  5634  002B  2821               	goto	l7640
  5635  002C                     l7642:	
  5636  002C  0828               	movf	___altoft@c,w
  5637  002D  00A0               	movwf	?___ftpack
  5638  002E  0829               	movf	___altoft@c+1,w
  5639  002F  00A1               	movwf	?___ftpack+1
  5640  0030  082A               	movf	___altoft@c+2,w
  5641  0031  00A2               	movwf	?___ftpack+2
  5642  0032  082C               	movf	___altoft@exp,w
  5643  0033  00A3               	movwf	?___ftpack+3
  5644  0034  082D               	movf	___altoft@sign,w
  5645  0035  00A4               	movwf	?___ftpack+4
  5646  0036  2337               	fcall	___ftpack
  5647  0037  0820               	movf	?___ftpack,w
  5648  0038  00A8               	movwf	?___altoft
  5649  0039  0821               	movf	?___ftpack+1,w
  5650  003A  00A9               	movwf	?___altoft+1
  5651  003B  0822               	movf	?___ftpack+2,w
  5652  003C  00AA               	movwf	?___altoft+2
  5653  003D  0008               	return
  5654  003E                     __end_of___altoft:	
  5655  003E                     __ptext768:	
  5656 ;; =============== function ___ftmul ends ============
  5657                           
  5658                           
  5659 ;; *************** function ___ftdiv *****************
  5660 ;; Defined at:
  5661 ;;		line 50 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\ftdiv.c"
  5662 ;; Parameters:    Size  Location     Type
  5663 ;;  f2              3    8[BANK0 ] float 
  5664 ;;  f1              3   11[BANK0 ] float 
  5665 ;; Auto vars:     Size  Location     Type
  5666 ;;  f3              3   18[BANK0 ] float 
  5667 ;;  sign            1   22[BANK0 ] unsigned char 
  5668 ;;  exp             1   21[BANK0 ] unsigned char 
  5669 ;;  cntr            1   17[BANK0 ] unsigned char 
  5670 ;; Return value:  Size  Location     Type
  5671 ;;                  3    8[BANK0 ] float 
  5672 ;; Registers used:
  5673 ;;		wreg, status,2, status,0, pclath, cstack
  5674 ;; Tracked objects:
  5675 ;;		On entry : 60/0
  5676 ;;		On exit  : 60/0
  5677 ;;		Unchanged: FFF9F/0
  5678 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5679 ;;      Params:         0       6       0       0       0
  5680 ;;      Locals:         0       6       0       0       0
  5681 ;;      Temps:          0       3       0       0       0
  5682 ;;      Totals:         0      15       0       0       0
  5683 ;;Total ram usage:       15 bytes
  5684 ;; Hardware stack levels used:    1
  5685 ;; Hardware stack levels required when called:    3
  5686 ;; This function calls:
  5687 ;;		___ftpack
  5688 ;; This function is called by:
  5689 ;;		_main
  5690 ;; This function uses a non-reentrant model
  5691 ;;
  5692  003E                     ___ftdiv:	
  5693                           
  5694                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  5695  003E  082B               	movf	___ftdiv@f1,w
  5696  003F  00AE               	movwf	??___ftdiv
  5697  0040  082C               	movf	___ftdiv@f1+1,w
  5698  0041  00AF               	movwf	??___ftdiv+1
  5699  0042  082D               	movf	___ftdiv@f1+2,w
  5700  0043  00B0               	movwf	??___ftdiv+2
  5701  0044  1003               	clrc
  5702  0045  0D2F               	rlf	??___ftdiv+1,w
  5703  0046  0D30               	rlf	??___ftdiv+2,w
  5704  0047  00B5               	movwf	___ftdiv@exp
  5705  0048  08B5               	movf	___ftdiv@exp,f
  5706  0049  1D03               	skipz
  5707  004A  284F               	goto	l6674
  5708  004B  01A8               	clrf	?___ftdiv
  5709  004C  01A9               	clrf	?___ftdiv+1
  5710  004D  01AA               	clrf	?___ftdiv+2
  5711  004E  0008               	return
  5712  004F                     l6674:	
  5713  004F  0828               	movf	___ftdiv@f2,w
  5714  0050  00AE               	movwf	??___ftdiv
  5715  0051  0829               	movf	___ftdiv@f2+1,w
  5716  0052  00AF               	movwf	??___ftdiv+1
  5717  0053  082A               	movf	___ftdiv@f2+2,w
  5718  0054  00B0               	movwf	??___ftdiv+2
  5719  0055  1003               	clrc
  5720  0056  0D2F               	rlf	??___ftdiv+1,w
  5721  0057  0D30               	rlf	??___ftdiv+2,w
  5722  0058  00B6               	movwf	___ftdiv@sign
  5723  0059  08B6               	movf	___ftdiv@sign,f
  5724  005A  1D03               	skipz
  5725  005B  2860               	goto	l3388
  5726  005C  01A8               	clrf	?___ftdiv
  5727  005D  01A9               	clrf	?___ftdiv+1
  5728  005E  01AA               	clrf	?___ftdiv+2
  5729  005F  0008               	return
  5730  0060                     l3388:	
  5731  0060  3089               	movlw	137
  5732  0061  01B2               	clrf	___ftdiv@f3
  5733  0062  01B3               	clrf	___ftdiv@f3+1
  5734  0063  01B4               	clrf	___ftdiv@f3+2
  5735  0064  0736               	addwf	___ftdiv@sign,w
  5736  0065  00AE               	movwf	??___ftdiv
  5737  0066  02B5               	subwf	___ftdiv@exp,f
  5738  0067  082D               	movf	___ftdiv@f1+2,w
  5739  0068  00B6               	movwf	___ftdiv@sign
  5740  0069  082A               	movf	___ftdiv@f2+2,w
  5741  006A  06B6               	xorwf	___ftdiv@sign,f
  5742  006B  3080               	movlw	128
  5743  006C  05B6               	andwf	___ftdiv@sign,f
  5744  006D  3018               	movlw	24
  5745  006E  17AC               	bsf	___ftdiv@f1+1,7
  5746  006F  01AD               	clrf	___ftdiv@f1+2
  5747  0070  17A9               	bsf	___ftdiv@f2+1,7
  5748  0071  01AA               	clrf	___ftdiv@f2+2
  5749  0072  00B1               	movwf	___ftdiv@cntr
  5750  0073                     l6698:	
  5751  0073  1003               	clrc
  5752  0074  0DB2               	rlf	___ftdiv@f3,f
  5753  0075  0DB3               	rlf	___ftdiv@f3+1,f
  5754  0076  0DB4               	rlf	___ftdiv@f3+2,f
  5755  0077  082A               	movf	___ftdiv@f2+2,w
  5756  0078  022D               	subwf	___ftdiv@f1+2,w
  5757  0079  1D03               	skipz
  5758  007A  2881               	goto	u3165
  5759  007B  0829               	movf	___ftdiv@f2+1,w
  5760  007C  022C               	subwf	___ftdiv@f1+1,w
  5761  007D  1D03               	skipz
  5762  007E  2881               	goto	u3165
  5763  007F  0828               	movf	___ftdiv@f2,w
  5764  0080  022B               	subwf	___ftdiv@f1,w
  5765  0081                     u3165:	
  5766  0081  1C03               	skipc
  5767  0082  288F               	goto	L7
  5768  0083  0828               	movf	___ftdiv@f2,w
  5769  0084  02AB               	subwf	___ftdiv@f1,f
  5770  0085  0829               	movf	___ftdiv@f2+1,w
  5771  0086  1C03               	skipc
  5772  0087  0F29               	incfsz	___ftdiv@f2+1,w
  5773  0088  02AC               	subwf	___ftdiv@f1+1,f
  5774  0089  082A               	movf	___ftdiv@f2+2,w
  5775  008A  1C03               	skipc
  5776  008B  0A2A               	incf	___ftdiv@f2+2,w
  5777  008C  02AD               	subwf	___ftdiv@f1+2,f
  5778  008D  1432               	bsf	___ftdiv@f3,0
  5779  008E  1003               	clrc
  5780  008F                     L7:	
  5781  008F  0DAB               	rlf	___ftdiv@f1,f
  5782  0090  0DAC               	rlf	___ftdiv@f1+1,f
  5783  0091  0DAD               	rlf	___ftdiv@f1+2,f
  5784  0092  0BB1               	decfsz	___ftdiv@cntr,f
  5785  0093  2873               	goto	l6698
  5786  0094  0832               	movf	___ftdiv@f3,w
  5787  0095  00A0               	movwf	?___ftpack
  5788  0096  0833               	movf	___ftdiv@f3+1,w
  5789  0097  00A1               	movwf	?___ftpack+1
  5790  0098  0834               	movf	___ftdiv@f3+2,w
  5791  0099  00A2               	movwf	?___ftpack+2
  5792  009A  0835               	movf	___ftdiv@exp,w
  5793  009B  00A3               	movwf	?___ftpack+3
  5794  009C  0836               	movf	___ftdiv@sign,w
  5795  009D  00A4               	movwf	?___ftpack+4
  5796  009E  2337               	fcall	___ftpack
  5797  009F  0820               	movf	?___ftpack,w
  5798  00A0  00A8               	movwf	?___ftdiv
  5799  00A1  0821               	movf	?___ftpack+1,w
  5800  00A2  00A9               	movwf	?___ftdiv+1
  5801  00A3  0822               	movf	?___ftpack+2,w
  5802  00A4  00AA               	movwf	?___ftdiv+2
  5803  00A5  0008               	return
  5804  00A6                     __end_of___ftdiv:	
  5805  00A6                     __ptext761:	
  5806 ;; =============== function ___ftsub ends ============
  5807                           
  5808                           
  5809 ;; *************** function _scale *****************
  5810 ;; Defined at:
  5811 ;;		line 422 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\lib\doprnt.c"
  5812 ;; Parameters:    Size  Location     Type
  5813 ;;  scl             1    wreg     char 
  5814 ;; Auto vars:     Size  Location     Type
  5815 ;;  scl             1   52[BANK0 ] char 
  5816 ;; Return value:  Size  Location     Type
  5817 ;;                  3   42[BANK0 ] char 
  5818 ;; Registers used:
  5819 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5820 ;; Tracked objects:
  5821 ;;		On entry : 60/20
  5822 ;;		On exit  : 60/0
  5823 ;;		Unchanged: FFF9F/0
  5824 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5825 ;;      Params:         0       3       0       0       0
  5826 ;;      Locals:         0       4       0       0       0
  5827 ;;      Temps:          0       4       0       0       0
  5828 ;;      Totals:         0      11       0       0       0
  5829 ;;Total ram usage:       11 bytes
  5830 ;; Hardware stack levels used:    1
  5831 ;; Hardware stack levels required when called:    4
  5832 ;; This function calls:
  5833 ;;		___awmod
  5834 ;;		___awdiv
  5835 ;;		___ftmul
  5836 ;;		___bmul
  5837 ;; This function is called by:
  5838 ;;		_printf
  5839 ;; This function uses a non-reentrant model
  5840 ;;
  5841  00A6                     _scale:	
  5842                           
  5843                           ; Regs used in _scale: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5844                           ;scale@scl stored from wreg
  5845  00A6  1283               	bcf	3,5	;RP0=0, select bank0
  5846  00A7  00D4               	movwf	scale@scl
  5847  00A8  1FD4               	btfss	scale@scl,7
  5848  00A9  2972               	goto	l7712
  5849  00AA  09D4               	comf	scale@scl,f
  5850  00AB  0AD4               	incf	scale@scl,f
  5851  00AC  0854               	movf	scale@scl,w
  5852  00AD  3A80               	xorlw	128
  5853  00AE  3E12               	addlw	-238
  5854  00AF  1C03               	skipc
  5855  00B0  2916               	goto	l7702
  5856  00B1  300A               	movlw	10
  5857  00B2  2399  120A  118A   	fcall	PL16	;call to abstracted procedure
  5858  00B5  227D  120A  118A   	fcall	___awmod
  5859  00B8  0821               	movf	?___awmod+1,w
  5860  00B9  00A9               	movwf	?___awdiv+3
  5861  00BA  0820               	movf	?___awmod,w
  5862  00BB  00A8               	movwf	?___awdiv+2
  5863  00BC  2238  120A  118A   	fcall	___awdiv
  5864  00BF  23AE               	fcall	PL22	;call to abstracted procedure
  5865  00C0  3E1C               	addlw	low ((__npowers_-__stringbase+27))
  5866  00C1  0084               	movwf	4
  5867  00C2  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  5868  00C7  00BB               	movwf	?___ftmul
  5869  00C8  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  5870  00CD  00BC               	movwf	?___ftmul+1
  5871  00CE  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  5872  00D3  23BE  120A  118A   	fcall	PL25	;call to abstracted procedure
  5873  00D6  1BA8               	btfsc	?___awdiv+2,7
  5874  00D7  03A9               	decf	?___awdiv+3,f
  5875  00D8  2238  120A  118A   	fcall	___awdiv
  5876  00DB  237D               	fcall	PL10	;call to abstracted procedure
  5877  00DC  3E37               	addlw	low ((__npowers_-__stringbase+54))
  5878  00DD  0084               	movwf	4
  5879  00DE  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  5880  00E3  00BE               	movwf	?___ftmul+3
  5881  00E4  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  5882  00E9  00BF               	movwf	?___ftmul+4
  5883  00EA  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  5884  00EF  00C0               	movwf	?___ftmul+5
  5885  00F0  22BA  120A  118A   	fcall	___ftmul
  5886  00F3  238C  120A  118A   	fcall	PL12	;call to abstracted procedure
  5887  00F6  1BA2               	btfsc	?___awmod+2,7
  5888  00F7  03A3               	decf	?___awmod+3,f
  5889  00F8  227D  120A  118A   	fcall	___awmod
  5890  00FB  2375               	fcall	PL9	;call to abstracted procedure
  5891  00FC  3E01               	addlw	low (__npowers_-__stringbase)
  5892  00FD  0084               	movwf	4
  5893  00FE  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  5894  0103  00BB               	movwf	?___ftmul
  5895  0104  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  5896  0109  00BC               	movwf	?___ftmul+1
  5897  010A  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  5898  010F  23B6  120A  118A   	fcall	PL24	;call to abstracted procedure
  5899  0112  22BA  120A  118A   	fcall	___ftmul
  5900  0115  2B85               	ljmp	PL11	;call to abstracted procedure
  5901  0116                     l7702:	
  5902  0116  0854               	movf	scale@scl,w
  5903  0117  3A80               	xorlw	128
  5904  0118  3E75               	addlw	-139
  5905  0119  1C03               	skipc
  5906  011A  295B               	goto	l7708
  5907  011B  300A               	movlw	10
  5908  011C  00A0               	movwf	?___awmod
  5909  011D  01A1               	clrf	?___awmod+1
  5910  011E  0854               	movf	scale@scl,w
  5911  011F  00A2               	movwf	?___awmod+2
  5912  0120  01A3               	clrf	?___awmod+3
  5913  0121  1BA2               	btfsc	?___awmod+2,7
  5914  0122  03A3               	decf	?___awmod+3,f
  5915  0123  227D  120A  118A   	fcall	___awmod
  5916  0126  2375               	fcall	PL9	;call to abstracted procedure
  5917  0127  3E01               	addlw	low (__npowers_-__stringbase)
  5918  0128  0084               	movwf	4
  5919  0129  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  5920  012E  00BB               	movwf	?___ftmul
  5921  012F  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  5922  0134  00BC               	movwf	?___ftmul+1
  5923  0135  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  5924  013A  23C6  120A  118A   	fcall	PL26	;call to abstracted procedure
  5925  013D  1BA8               	btfsc	?___awdiv+2,7
  5926  013E  03A9               	decf	?___awdiv+3,f
  5927  013F  2238  120A  118A   	fcall	___awdiv
  5928  0142  237D               	fcall	PL10	;call to abstracted procedure
  5929  0143  3E1C               	addlw	low ((__npowers_-__stringbase+27))
  5930  0144  0084               	movwf	4
  5931  0145  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  5932  014A  00BE               	movwf	?___ftmul+3
  5933  014B  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  5934  0150  00BF               	movwf	?___ftmul+4
  5935  0151  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  5936  0156  00C0               	movwf	?___ftmul+5
  5937  0157  22BA  120A  118A   	fcall	___ftmul
  5938  015A  2B85               	ljmp	PL11	;call to abstracted procedure
  5939  015B                     l7708:	
  5940  015B  3003               	movlw	3
  5941  015C  00A9               	movwf	?___bmul
  5942  015D  0854               	movf	scale@scl,w
  5943  015E  2329               	fcall	___bmul
  5944  015F  3E01               	addlw	low (__npowers_-__stringbase)
  5945  0160  0084               	movwf	4
  5946  0161  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  5947  0166  00CA               	movwf	?_scale
  5948  0167  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  5949  016C  00CB               	movwf	?_scale+1
  5950  016D  160A  118A  2000   	fcall	stringdir
  5951  0170  00CC               	movwf	?_scale+2
  5952  0171  0008               	return
  5953  0172                     l7712:	
  5954  0172  0854               	movf	scale@scl,w
  5955  0173  3A80               	xorlw	128
  5956  0174  3E12               	addlw	-238
  5957  0175  1C03               	skipc
  5958  0176  29DC               	goto	l7720
  5959  0177  300A               	movlw	10
  5960  0178  2399  120A  118A   	fcall	PL16	;call to abstracted procedure
  5961  017B  227D  120A  118A   	fcall	___awmod
  5962  017E  0821               	movf	?___awmod+1,w
  5963  017F  00A9               	movwf	?___awdiv+3
  5964  0180  0820               	movf	?___awmod,w
  5965  0181  00A8               	movwf	?___awdiv+2
  5966  0182  2238  120A  118A   	fcall	___awdiv
  5967  0185  23AE               	fcall	PL22	;call to abstracted procedure
  5968  0186  3E43               	addlw	low ((__powers_-__stringbase+27))
  5969  0187  0084               	movwf	4
  5970  0188  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  5971  018D  00BB               	movwf	?___ftmul
  5972  018E  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  5973  0193  00BC               	movwf	?___ftmul+1
  5974  0194  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  5975  0199  23BE  120A  118A   	fcall	PL25	;call to abstracted procedure
  5976  019C  1BA8               	btfsc	?___awdiv+2,7
  5977  019D  03A9               	decf	?___awdiv+3,f
  5978  019E  2238  120A  118A   	fcall	___awdiv
  5979  01A1  237D               	fcall	PL10	;call to abstracted procedure
  5980  01A2  3E5E               	addlw	low ((__powers_-__stringbase+54))
  5981  01A3  0084               	movwf	4
  5982  01A4  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  5983  01A9  00BE               	movwf	?___ftmul+3
  5984  01AA  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  5985  01AF  00BF               	movwf	?___ftmul+4
  5986  01B0  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  5987  01B5  00C0               	movwf	?___ftmul+5
  5988  01B6  22BA  120A  118A   	fcall	___ftmul
  5989  01B9  238C  120A  118A   	fcall	PL12	;call to abstracted procedure
  5990  01BC  1BA2               	btfsc	?___awmod+2,7
  5991  01BD  03A3               	decf	?___awmod+3,f
  5992  01BE  227D  120A  118A   	fcall	___awmod
  5993  01C1  2375               	fcall	PL9	;call to abstracted procedure
  5994  01C2  3E28               	addlw	low (__powers_-__stringbase)
  5995  01C3  0084               	movwf	4
  5996  01C4  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  5997  01C9  00BB               	movwf	?___ftmul
  5998  01CA  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  5999  01CF  00BC               	movwf	?___ftmul+1
  6000  01D0  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  6001  01D5  23B6  120A  118A   	fcall	PL24	;call to abstracted procedure
  6002  01D8  22BA  120A  118A   	fcall	___ftmul
  6003  01DB  2B85               	ljmp	PL11	;call to abstracted procedure
  6004  01DC                     l7720:	
  6005  01DC  0854               	movf	scale@scl,w
  6006  01DD  3A80               	xorlw	128
  6007  01DE  3E75               	addlw	-139
  6008  01DF  1C03               	skipc
  6009  01E0  2A21               	goto	l7726
  6010  01E1  300A               	movlw	10
  6011  01E2  00A0               	movwf	?___awmod
  6012  01E3  01A1               	clrf	?___awmod+1
  6013  01E4  0854               	movf	scale@scl,w
  6014  01E5  00A2               	movwf	?___awmod+2
  6015  01E6  01A3               	clrf	?___awmod+3
  6016  01E7  1BA2               	btfsc	?___awmod+2,7
  6017  01E8  03A3               	decf	?___awmod+3,f
  6018  01E9  227D  120A  118A   	fcall	___awmod
  6019  01EC  2375               	fcall	PL9	;call to abstracted procedure
  6020  01ED  3E28               	addlw	low (__powers_-__stringbase)
  6021  01EE  0084               	movwf	4
  6022  01EF  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  6023  01F4  00BB               	movwf	?___ftmul
  6024  01F5  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  6025  01FA  00BC               	movwf	?___ftmul+1
  6026  01FB  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  6027  0200  23C6  120A  118A   	fcall	PL26	;call to abstracted procedure
  6028  0203  1BA8               	btfsc	?___awdiv+2,7
  6029  0204  03A9               	decf	?___awdiv+3,f
  6030  0205  2238  120A  118A   	fcall	___awdiv
  6031  0208  237D               	fcall	PL10	;call to abstracted procedure
  6032  0209  3E43               	addlw	low ((__powers_-__stringbase+27))
  6033  020A  0084               	movwf	4
  6034  020B  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  6035  0210  00BE               	movwf	?___ftmul+3
  6036  0211  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  6037  0216  00BF               	movwf	?___ftmul+4
  6038  0217  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  6039  021C  00C0               	movwf	?___ftmul+5
  6040  021D  22BA  120A  118A   	fcall	___ftmul
  6041  0220  2B85               	ljmp	PL11	;call to abstracted procedure
  6042  0221                     l7726:	
  6043  0221  3003               	movlw	3
  6044  0222  00A9               	movwf	?___bmul
  6045  0223  0854               	movf	scale@scl,w
  6046  0224  2329               	fcall	___bmul
  6047  0225  3E28               	addlw	low (__powers_-__stringbase)
  6048  0226  0084               	movwf	4
  6049  0227  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  6050  022C  00CA               	movwf	?_scale
  6051  022D  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  6052  0232  00CB               	movwf	?_scale+1
  6053  0233  160A  118A  2000   	fcall	stringdir
  6054  0236  00CC               	movwf	?_scale+2
  6055  0237  0008               	return
  6056  0238                     __end_of_scale:	
  6057  0238                     __ptext777:	
  6058 ;; =============== function ___llmod ends ============
  6059                           
  6060                           
  6061 ;; *************** function ___awdiv *****************
  6062 ;; Defined at:
  6063 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\awdiv.c"
  6064 ;; Parameters:    Size  Location     Type
  6065 ;;  divisor         2    6[BANK0 ] int 
  6066 ;;  dividend        2    8[BANK0 ] int 
  6067 ;; Auto vars:     Size  Location     Type
  6068 ;;  quotient        2   12[BANK0 ] int 
  6069 ;;  sign            1   11[BANK0 ] unsigned char 
  6070 ;;  counter         1   10[BANK0 ] unsigned char 
  6071 ;; Return value:  Size  Location     Type
  6072 ;;                  2    6[BANK0 ] int 
  6073 ;; Registers used:
  6074 ;;		wreg, status,2, status,0
  6075 ;; Tracked objects:
  6076 ;;		On entry : 60/0
  6077 ;;		On exit  : 60/0
  6078 ;;		Unchanged: FFF9F/0
  6079 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6080 ;;      Params:         0       4       0       0       0
  6081 ;;      Locals:         0       4       0       0       0
  6082 ;;      Temps:          0       0       0       0       0
  6083 ;;      Totals:         0       8       0       0       0
  6084 ;;Total ram usage:        8 bytes
  6085 ;; Hardware stack levels used:    1
  6086 ;; Hardware stack levels required when called:    2
  6087 ;; This function calls:
  6088 ;;		Nothing
  6089 ;; This function is called by:
  6090 ;;		_scale
  6091 ;;		_printf
  6092 ;; This function uses a non-reentrant model
  6093 ;;
  6094  0238                     ___awdiv:	
  6095                           
  6096                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  6097  0238  01AB               	clrf	___awdiv@sign
  6098  0239  1FA7               	btfss	___awdiv@divisor+1,7
  6099  023A  2A42               	goto	l7484
  6100  023B  09A6               	comf	___awdiv@divisor,f
  6101  023C  09A7               	comf	___awdiv@divisor+1,f
  6102  023D  0AA6               	incf	___awdiv@divisor,f
  6103  023E  1903               	skipnz
  6104  023F  0AA7               	incf	___awdiv@divisor+1,f
  6105  0240  01AB               	clrf	___awdiv@sign
  6106  0241  0AAB               	incf	___awdiv@sign,f
  6107  0242                     l7484:	
  6108  0242  1FA9               	btfss	___awdiv@dividend+1,7
  6109  0243  2A4B               	goto	l7490
  6110  0244  09A8               	comf	___awdiv@dividend,f
  6111  0245  09A9               	comf	___awdiv@dividend+1,f
  6112  0246  0AA8               	incf	___awdiv@dividend,f
  6113  0247  1903               	skipnz
  6114  0248  0AA9               	incf	___awdiv@dividend+1,f
  6115  0249  3001               	movlw	1
  6116  024A  06AB               	xorwf	___awdiv@sign,f
  6117  024B                     l7490:	
  6118  024B  01AC               	clrf	___awdiv@quotient
  6119  024C  01AD               	clrf	___awdiv@quotient+1
  6120  024D  0827               	movf	___awdiv@divisor+1,w
  6121  024E  0426               	iorwf	___awdiv@divisor,w
  6122  024F  1903               	skipnz
  6123  0250  2A70               	goto	l7512
  6124  0251  01AA               	clrf	___awdiv@counter
  6125  0252                     L16:	
  6126  0252  0AAA               	incf	___awdiv@counter,f
  6127  0253  1BA7               	btfsc	___awdiv@divisor+1,7
  6128  0254  2A59               	goto	l7500
  6129  0255  1003               	clrc
  6130  0256  0DA6               	rlf	___awdiv@divisor,f
  6131  0257  0DA7               	rlf	___awdiv@divisor+1,f
  6132  0258  2A52               	goto	L16
  6133  0259                     l7500:	
  6134  0259  1003               	clrc
  6135  025A  0DAC               	rlf	___awdiv@quotient,f
  6136  025B  0DAD               	rlf	___awdiv@quotient+1,f
  6137  025C  0827               	movf	___awdiv@divisor+1,w
  6138  025D  0229               	subwf	___awdiv@dividend+1,w
  6139  025E  1D03               	skipz
  6140  025F  2A62               	goto	u4175
  6141  0260  0826               	movf	___awdiv@divisor,w
  6142  0261  0228               	subwf	___awdiv@dividend,w
  6143  0262                     u4175:	
  6144  0262  1C03               	skipc
  6145  0263  2A6C               	goto	L17
  6146  0264  0826               	movf	___awdiv@divisor,w
  6147  0265  02A8               	subwf	___awdiv@dividend,f
  6148  0266  0827               	movf	___awdiv@divisor+1,w
  6149  0267  1C03               	skipc
  6150  0268  03A9               	decf	___awdiv@dividend+1,f
  6151  0269  02A9               	subwf	___awdiv@dividend+1,f
  6152  026A  142C               	bsf	___awdiv@quotient,0
  6153  026B  1003               	clrc
  6154  026C                     L17:	
  6155  026C  0CA7               	rrf	___awdiv@divisor+1,f
  6156  026D  0CA6               	rrf	___awdiv@divisor,f
  6157  026E  0BAA               	decfsz	___awdiv@counter,f
  6158  026F  2A59               	goto	l7500
  6159  0270                     l7512:	
  6160  0270  082B               	movf	___awdiv@sign,w
  6161  0271  1903               	btfsc	3,2
  6162  0272  2A78               	goto	l7516
  6163  0273  09AC               	comf	___awdiv@quotient,f
  6164  0274  09AD               	comf	___awdiv@quotient+1,f
  6165  0275  0AAC               	incf	___awdiv@quotient,f
  6166  0276  1903               	skipnz
  6167  0277  0AAD               	incf	___awdiv@quotient+1,f
  6168  0278                     l7516:	
  6169  0278  082D               	movf	___awdiv@quotient+1,w
  6170  0279  00A7               	movwf	?___awdiv+1
  6171  027A  082C               	movf	___awdiv@quotient,w
  6172  027B  00A6               	movwf	?___awdiv
  6173  027C  0008               	return
  6174  027D                     __end_of___awdiv:	
  6175  027D                     __ptext772:	
  6176 ;; =============== function _lcd_put_byte ends ============
  6177                           
  6178                           
  6179 ;; *************** function ___awmod *****************
  6180 ;; Defined at:
  6181 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\awmod.c"
  6182 ;; Parameters:    Size  Location     Type
  6183 ;;  divisor         2    0[BANK0 ] int 
  6184 ;;  dividend        2    2[BANK0 ] int 
  6185 ;; Auto vars:     Size  Location     Type
  6186 ;;  sign            1    5[BANK0 ] unsigned char 
  6187 ;;  counter         1    4[BANK0 ] unsigned char 
  6188 ;; Return value:  Size  Location     Type
  6189 ;;                  2    0[BANK0 ] int 
  6190 ;; Registers used:
  6191 ;;		wreg, status,2, status,0
  6192 ;; Tracked objects:
  6193 ;;		On entry : 60/0
  6194 ;;		On exit  : 60/0
  6195 ;;		Unchanged: FFF9F/0
  6196 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6197 ;;      Params:         0       4       0       0       0
  6198 ;;      Locals:         0       2       0       0       0
  6199 ;;      Temps:          0       0       0       0       0
  6200 ;;      Totals:         0       6       0       0       0
  6201 ;;Total ram usage:        6 bytes
  6202 ;; Hardware stack levels used:    1
  6203 ;; Hardware stack levels required when called:    2
  6204 ;; This function calls:
  6205 ;;		Nothing
  6206 ;; This function is called by:
  6207 ;;		_scale
  6208 ;; This function uses a non-reentrant model
  6209 ;;
  6210  027D                     ___awmod:	
  6211                           
  6212                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  6213  027D  01A5               	clrf	___awmod@sign
  6214  027E  1FA3               	btfss	___awmod@dividend+1,7
  6215  027F  2A87               	goto	l7602
  6216  0280  09A2               	comf	___awmod@dividend,f
  6217  0281  09A3               	comf	___awmod@dividend+1,f
  6218  0282  0AA2               	incf	___awmod@dividend,f
  6219  0283  1903               	skipnz
  6220  0284  0AA3               	incf	___awmod@dividend+1,f
  6221  0285  01A5               	clrf	___awmod@sign
  6222  0286  0AA5               	incf	___awmod@sign,f
  6223  0287                     l7602:	
  6224  0287  1FA1               	btfss	___awmod@divisor+1,7
  6225  0288  2A8E               	goto	l7606
  6226  0289  09A0               	comf	___awmod@divisor,f
  6227  028A  09A1               	comf	___awmod@divisor+1,f
  6228  028B  0AA0               	incf	___awmod@divisor,f
  6229  028C  1903               	skipnz
  6230  028D  0AA1               	incf	___awmod@divisor+1,f
  6231  028E                     l7606:	
  6232  028E  0821               	movf	___awmod@divisor+1,w
  6233  028F  0420               	iorwf	___awmod@divisor,w
  6234  0290  1903               	skipnz
  6235  0291  2AAD               	goto	l7622
  6236  0292  01A4               	clrf	___awmod@counter
  6237  0293                     L9:	
  6238  0293  0AA4               	incf	___awmod@counter,f
  6239  0294  1BA1               	btfsc	___awmod@divisor+1,7
  6240  0295  2A9A               	goto	l7614
  6241  0296  1003               	clrc
  6242  0297  0DA0               	rlf	___awmod@divisor,f
  6243  0298  0DA1               	rlf	___awmod@divisor+1,f
  6244  0299  2A93               	goto	L9
  6245  029A                     l7614:	
  6246  029A  0821               	movf	___awmod@divisor+1,w
  6247  029B  0223               	subwf	___awmod@dividend+1,w
  6248  029C  1D03               	skipz
  6249  029D  2AA0               	goto	u4365
  6250  029E  0820               	movf	___awmod@divisor,w
  6251  029F  0222               	subwf	___awmod@dividend,w
  6252  02A0                     u4365:	
  6253  02A0  1C03               	skipc
  6254  02A1  2AA9               	goto	L10
  6255  02A2  0820               	movf	___awmod@divisor,w
  6256  02A3  02A2               	subwf	___awmod@dividend,f
  6257  02A4  0821               	movf	___awmod@divisor+1,w
  6258  02A5  1C03               	skipc
  6259  02A6  03A3               	decf	___awmod@dividend+1,f
  6260  02A7  02A3               	subwf	___awmod@dividend+1,f
  6261  02A8  1003               	clrc
  6262  02A9                     L10:	
  6263  02A9  0CA1               	rrf	___awmod@divisor+1,f
  6264  02AA  0CA0               	rrf	___awmod@divisor,f
  6265  02AB  0BA4               	decfsz	___awmod@counter,f
  6266  02AC  2A9A               	goto	l7614
  6267  02AD                     l7622:	
  6268  02AD  0825               	movf	___awmod@sign,w
  6269  02AE  1903               	btfsc	3,2
  6270  02AF  2AB5               	goto	l7626
  6271  02B0  09A2               	comf	___awmod@dividend,f
  6272  02B1  09A3               	comf	___awmod@dividend+1,f
  6273  02B2  0AA2               	incf	___awmod@dividend,f
  6274  02B3  1903               	skipnz
  6275  02B4  0AA3               	incf	___awmod@dividend+1,f
  6276  02B5                     l7626:	
  6277  02B5  0823               	movf	___awmod@dividend+1,w
  6278  02B6  00A1               	movwf	?___awmod+1
  6279  02B7  0822               	movf	___awmod@dividend,w
  6280  02B8  00A0               	movwf	?___awmod
  6281  02B9  0008               	return
  6282  02BA                     __end_of___awmod:	
  6283  02BA                     __ptext767:	
  6284 ;; =============== function ___altoft ends ============
  6285                           
  6286                           
  6287 ;; *************** function ___ftmul *****************
  6288 ;; Defined at:
  6289 ;;		line 52 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\ftmul.c"
  6290 ;; Parameters:    Size  Location     Type
  6291 ;;  f1              3   27[BANK0 ] float 
  6292 ;;  f2              3   30[BANK0 ] float 
  6293 ;; Auto vars:     Size  Location     Type
  6294 ;;  f3_as_produc    3   37[BANK0 ] unsigned um
  6295 ;;  sign            1   41[BANK0 ] unsigned char 
  6296 ;;  cntr            1   40[BANK0 ] unsigned char 
  6297 ;;  exp             1   36[BANK0 ] unsigned char 
  6298 ;; Return value:  Size  Location     Type
  6299 ;;                  3   27[BANK0 ] float 
  6300 ;; Registers used:
  6301 ;;		wreg, status,2, status,0, pclath, cstack
  6302 ;; Tracked objects:
  6303 ;;		On entry : 60/0
  6304 ;;		On exit  : 60/0
  6305 ;;		Unchanged: FFF9F/0
  6306 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6307 ;;      Params:         0       6       0       0       0
  6308 ;;      Locals:         0       6       0       0       0
  6309 ;;      Temps:          0       3       0       0       0
  6310 ;;      Totals:         0      15       0       0       0
  6311 ;;Total ram usage:       15 bytes
  6312 ;; Hardware stack levels used:    1
  6313 ;; Hardware stack levels required when called:    3
  6314 ;; This function calls:
  6315 ;;		___ftpack
  6316 ;; This function is called by:
  6317 ;;		_main
  6318 ;;		_fround
  6319 ;;		_scale
  6320 ;;		_printf
  6321 ;; This function uses a non-reentrant model
  6322 ;;
  6323  02BA                     ___ftmul:	
  6324                           
  6325                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  6326  02BA  083B               	movf	___ftmul@f1,w
  6327  02BB  00C1               	movwf	??___ftmul
  6328  02BC  083C               	movf	___ftmul@f1+1,w
  6329  02BD  00C2               	movwf	??___ftmul+1
  6330  02BE  083D               	movf	___ftmul@f1+2,w
  6331  02BF  00C3               	movwf	??___ftmul+2
  6332  02C0  1003               	clrc
  6333  02C1  0D42               	rlf	??___ftmul+1,w
  6334  02C2  0D43               	rlf	??___ftmul+2,w
  6335  02C3  00C4               	movwf	___ftmul@exp
  6336  02C4  08C4               	movf	___ftmul@exp,f
  6337  02C5  1D03               	skipz
  6338  02C6  2ACB               	goto	l6718
  6339  02C7  01BB               	clrf	?___ftmul
  6340  02C8  01BC               	clrf	?___ftmul+1
  6341  02C9  01BD               	clrf	?___ftmul+2
  6342  02CA  0008               	return
  6343  02CB                     l6718:	
  6344  02CB  083E               	movf	___ftmul@f2,w
  6345  02CC  00C1               	movwf	??___ftmul
  6346  02CD  083F               	movf	___ftmul@f2+1,w
  6347  02CE  00C2               	movwf	??___ftmul+1
  6348  02CF  0840               	movf	___ftmul@f2+2,w
  6349  02D0  00C3               	movwf	??___ftmul+2
  6350  02D1  1003               	clrc
  6351  02D2  0D42               	rlf	??___ftmul+1,w
  6352  02D3  0D43               	rlf	??___ftmul+2,w
  6353  02D4  00C9               	movwf	___ftmul@sign
  6354  02D5  08C9               	movf	___ftmul@sign,f
  6355  02D6  1D03               	skipz
  6356  02D7  2ADC               	goto	l6724
  6357  02D8  01BB               	clrf	?___ftmul
  6358  02D9  01BC               	clrf	?___ftmul+1
  6359  02DA  01BD               	clrf	?___ftmul+2
  6360  02DB  0008               	return
  6361  02DC                     l6724:	
  6362  02DC  0849               	movf	___ftmul@sign,w
  6363  02DD  3E7B               	addlw	123
  6364  02DE  07C4               	addwf	___ftmul@exp,f
  6365  02DF  083D               	movf	___ftmul@f1+2,w
  6366  02E0  00C9               	movwf	___ftmul@sign
  6367  02E1  0840               	movf	___ftmul@f2+2,w
  6368  02E2  06C9               	xorwf	___ftmul@sign,f
  6369  02E3  3080               	movlw	128
  6370  02E4  05C9               	andwf	___ftmul@sign,f
  6371  02E5  3007               	movlw	7
  6372  02E6  17BC               	bsf	___ftmul@f1+1,7
  6373  02E7  17BF               	bsf	___ftmul@f2+1,7
  6374  02E8  01C0               	clrf	___ftmul@f2+2
  6375  02E9  01C5               	clrf	___ftmul@f3_as_product
  6376  02EA  01C6               	clrf	___ftmul@f3_as_product+1
  6377  02EB  01C7               	clrf	___ftmul@f3_as_product+2
  6378  02EC  00C8               	movwf	___ftmul@cntr
  6379  02ED                     l6742:	
  6380  02ED  1C3B               	btfss	___ftmul@f1,0
  6381  02EE  2AF7               	goto	l6746
  6382  02EF  083E               	movf	___ftmul@f2,w
  6383  02F0  23A4  120A  118A   	fcall	PL20	;call to abstracted procedure
  6384  02F3  1803               	skipnc
  6385  02F4  0A40               	incf	___ftmul@f2+2,w
  6386  02F5  1D03               	btfss	3,2
  6387  02F6  07C7               	addwf	___ftmul@f3_as_product+2,f
  6388  02F7                     l6746:	
  6389  02F7  1003               	clrc
  6390  02F8  0CBD               	rrf	___ftmul@f1+2,f
  6391  02F9  0CBC               	rrf	___ftmul@f1+1,f
  6392  02FA  0CBB               	rrf	___ftmul@f1,f
  6393  02FB  1003               	clrc
  6394  02FC  0DBE               	rlf	___ftmul@f2,f
  6395  02FD  0DBF               	rlf	___ftmul@f2+1,f
  6396  02FE  0DC0               	rlf	___ftmul@f2+2,f
  6397  02FF  0BC8               	decfsz	___ftmul@cntr,f
  6398  0300  2AED               	goto	l6742
  6399  0301  3009               	movlw	9
  6400  0302  00C8               	movwf	___ftmul@cntr
  6401  0303                     l6754:	
  6402  0303  1C3B               	btfss	___ftmul@f1,0
  6403  0304  2B0D               	goto	l6758
  6404  0305  083E               	movf	___ftmul@f2,w
  6405  0306  23A4  120A  118A   	fcall	PL20	;call to abstracted procedure
  6406  0309  1803               	skipnc
  6407  030A  0A40               	incf	___ftmul@f2+2,w
  6408  030B  1D03               	btfss	3,2
  6409  030C  07C7               	addwf	___ftmul@f3_as_product+2,f
  6410  030D                     l6758:	
  6411  030D  1003               	clrc
  6412  030E  0CBD               	rrf	___ftmul@f1+2,f
  6413  030F  0CBC               	rrf	___ftmul@f1+1,f
  6414  0310  0CBB               	rrf	___ftmul@f1,f
  6415  0311  1003               	clrc
  6416  0312  0CC7               	rrf	___ftmul@f3_as_product+2,f
  6417  0313  0CC6               	rrf	___ftmul@f3_as_product+1,f
  6418  0314  0CC5               	rrf	___ftmul@f3_as_product,f
  6419  0315  0BC8               	decfsz	___ftmul@cntr,f
  6420  0316  2B03               	goto	l6754
  6421  0317  0845               	movf	___ftmul@f3_as_product,w
  6422  0318  00A0               	movwf	?___ftpack
  6423  0319  0846               	movf	___ftmul@f3_as_product+1,w
  6424  031A  00A1               	movwf	?___ftpack+1
  6425  031B  0847               	movf	___ftmul@f3_as_product+2,w
  6426  031C  00A2               	movwf	?___ftpack+2
  6427  031D  0844               	movf	___ftmul@exp,w
  6428  031E  00A3               	movwf	?___ftpack+3
  6429  031F  0849               	movf	___ftmul@sign,w
  6430  0320  00A4               	movwf	?___ftpack+4
  6431  0321  2337               	fcall	___ftpack
  6432  0322  0820               	movf	?___ftpack,w
  6433  0323  00BB               	movwf	?___ftmul
  6434  0324  0821               	movf	?___ftpack+1,w
  6435  0325  00BC               	movwf	?___ftmul+1
  6436  0326  0822               	movf	?___ftpack+2,w
  6437  0327  00BD               	movwf	?___ftmul+2
  6438  0328  0008               	return
  6439  0329                     __end_of___ftmul:	
  6440  0329                     __ptext783:	
  6441 ;; =============== function ___wmul ends ============
  6442                           
  6443                           
  6444 ;; *************** function ___bmul *****************
  6445 ;; Defined at:
  6446 ;;		line 3 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\bmul.c"
  6447 ;; Parameters:    Size  Location     Type
  6448 ;;  multiplier      1    wreg     unsigned char 
  6449 ;;  multiplicand    1    9[BANK0 ] unsigned char 
  6450 ;; Auto vars:     Size  Location     Type
  6451 ;;  multiplier      1   11[BANK0 ] unsigned char 
  6452 ;;  product         1   10[BANK0 ] unsigned char 
  6453 ;; Return value:  Size  Location     Type
  6454 ;;                  1    wreg      unsigned char 
  6455 ;; Registers used:
  6456 ;;		wreg, status,2, status,0
  6457 ;; Tracked objects:
  6458 ;;		On entry : 60/0
  6459 ;;		On exit  : 60/0
  6460 ;;		Unchanged: FFF9F/0
  6461 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6462 ;;      Params:         0       1       0       0       0
  6463 ;;      Locals:         0       2       0       0       0
  6464 ;;      Temps:          0       0       0       0       0
  6465 ;;      Totals:         0       3       0       0       0
  6466 ;;Total ram usage:        3 bytes
  6467 ;; Hardware stack levels used:    1
  6468 ;; Hardware stack levels required when called:    2
  6469 ;; This function calls:
  6470 ;;		Nothing
  6471 ;; This function is called by:
  6472 ;;		_fround
  6473 ;;		_scale
  6474 ;; This function uses a non-reentrant model
  6475 ;;
  6476  0329                     ___bmul:	
  6477                           
  6478                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  6479                           ;___bmul@multiplier stored from wreg
  6480  0329  00AB               	movwf	___bmul@multiplier
  6481  032A  01AA               	clrf	___bmul@product
  6482  032B                     l7422:	
  6483  032B  0829               	movf	___bmul@multiplicand,w
  6484  032C  182B               	btfsc	___bmul@multiplier,0
  6485  032D  07AA               	addwf	___bmul@product,f
  6486  032E  1003               	clrc
  6487  032F  0DA9               	rlf	___bmul@multiplicand,f
  6488  0330  1003               	clrc
  6489  0331  0CAB               	rrf	___bmul@multiplier,f
  6490  0332  08AB               	movf	___bmul@multiplier,f
  6491  0333  1D03               	skipz
  6492  0334  2B2B               	goto	l7422
  6493  0335  082A               	movf	___bmul@product,w
  6494  0336  0008               	return
  6495  0337                     __end_of___bmul:	
  6496  0337                     __ptext779:	
  6497 ;; =============== function ___fttol ends ============
  6498                           
  6499                           
  6500 ;; *************** function ___ftpack *****************
  6501 ;; Defined at:
  6502 ;;		line 63 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\float.c"
  6503 ;; Parameters:    Size  Location     Type
  6504 ;;  arg             3    0[BANK0 ] unsigned um
  6505 ;;  exp             1    3[BANK0 ] unsigned char 
  6506 ;;  sign            1    4[BANK0 ] unsigned char 
  6507 ;; Auto vars:     Size  Location     Type
  6508 ;;		None
  6509 ;; Return value:  Size  Location     Type
  6510 ;;                  3    0[BANK0 ] float 
  6511 ;; Registers used:
  6512 ;;		wreg, status,2, status,0
  6513 ;; Tracked objects:
  6514 ;;		On entry : 60/0
  6515 ;;		On exit  : 60/0
  6516 ;;		Unchanged: FFF9F/0
  6517 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6518 ;;      Params:         0       5       0       0       0
  6519 ;;      Locals:         0       0       0       0       0
  6520 ;;      Temps:          0       3       0       0       0
  6521 ;;      Totals:         0       8       0       0       0
  6522 ;;Total ram usage:        8 bytes
  6523 ;; Hardware stack levels used:    1
  6524 ;; Hardware stack levels required when called:    2
  6525 ;; This function calls:
  6526 ;;		Nothing
  6527 ;; This function is called by:
  6528 ;;		___ftadd
  6529 ;;		___ftdiv
  6530 ;;		___ftmul
  6531 ;;		___altoft
  6532 ;;		___lltoft
  6533 ;; This function uses a non-reentrant model
  6534 ;;
  6535  0337                     ___ftpack:	
  6536                           
  6537                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  6538  0337  0823               	movf	___ftpack@exp,w
  6539  0338  1903               	btfsc	3,2
  6540  0339  2B3F               	goto	l6324
  6541  033A  0822               	movf	___ftpack@arg+2,w
  6542  033B  0421               	iorwf	___ftpack@arg+1,w
  6543  033C  0420               	iorwf	___ftpack@arg,w
  6544  033D  1D03               	skipz
  6545  033E  2B48               	goto	l6330
  6546  033F                     l6324:	
  6547  033F  01A0               	clrf	?___ftpack
  6548  0340  01A1               	clrf	?___ftpack+1
  6549  0341  01A2               	clrf	?___ftpack+2
  6550  0342  0008               	return
  6551  0343                     l6328:	
  6552  0343  0AA3               	incf	___ftpack@exp,f
  6553  0344  1003               	clrc
  6554  0345  0CA2               	rrf	___ftpack@arg+2,f
  6555  0346  0CA1               	rrf	___ftpack@arg+1,f
  6556  0347  0CA0               	rrf	___ftpack@arg,f
  6557  0348                     l6330:	
  6558  0348  30FE               	movlw	254
  6559  0349  0522               	andwf	___ftpack@arg+2,w
  6560  034A  1903               	btfsc	3,2
  6561  034B  2B57               	goto	l6334
  6562  034C  2B43               	goto	l6328
  6563  034D                     l6332:	
  6564  034D  0AA3               	incf	___ftpack@exp,f
  6565  034E  0AA0               	incf	___ftpack@arg,f
  6566  034F  1903               	skipnz
  6567  0350  0AA1               	incf	___ftpack@arg+1,f
  6568  0351  1903               	skipnz
  6569  0352  0AA2               	incf	___ftpack@arg+2,f
  6570  0353  1003               	clrc
  6571  0354  0CA2               	rrf	___ftpack@arg+2,f
  6572  0355  0CA1               	rrf	___ftpack@arg+1,f
  6573  0356  0CA0               	rrf	___ftpack@arg,f
  6574  0357                     l6334:	
  6575  0357  30FF               	movlw	255
  6576  0358  0522               	andwf	___ftpack@arg+2,w
  6577  0359  1903               	btfsc	3,2
  6578  035A  2B61               	goto	l6338
  6579  035B  2B4D               	goto	l6332
  6580  035C                     l6336:	
  6581  035C  03A3               	decf	___ftpack@exp,f
  6582  035D  1003               	clrc
  6583  035E  0DA0               	rlf	___ftpack@arg,f
  6584  035F  0DA1               	rlf	___ftpack@arg+1,f
  6585  0360  0DA2               	rlf	___ftpack@arg+2,f
  6586  0361                     l6338:	
  6587  0361  1FA1               	btfss	___ftpack@arg+1,7
  6588  0362  2B5C               	goto	l6336
  6589  0363  1C23               	btfss	___ftpack@exp,0
  6590  0364  13A1               	bcf	___ftpack@arg+1,7
  6591  0365  1003               	clrc
  6592  0366  0CA3               	rrf	___ftpack@exp,f
  6593  0367  0823               	movf	___ftpack@exp,w
  6594  0368  00A7               	movwf	??___ftpack+2
  6595  0369  01A6               	clrf	??___ftpack+1
  6596  036A  01A5               	clrf	??___ftpack
  6597  036B  0825               	movf	??___ftpack,w
  6598  036C  04A0               	iorwf	___ftpack@arg,f
  6599  036D  0826               	movf	??___ftpack+1,w
  6600  036E  04A1               	iorwf	___ftpack@arg+1,f
  6601  036F  0827               	movf	??___ftpack+2,w
  6602  0370  04A2               	iorwf	___ftpack@arg+2,f
  6603  0371  0824               	movf	___ftpack@sign,w
  6604  0372  1D03               	skipz
  6605  0373  17A2               	bsf	___ftpack@arg+2,7
  6606  0374  0008               	return
  6607  0375                     __end_of___ftpack:	
  6608  0375                     PL9:	
  6609  0375  0820               	movf	?___awmod,w
  6610  0376  00CD               	movwf	??_scale
  6611  0377  0821               	movf	?___awmod+1,w
  6612  0378  00CE               	movwf	??_scale+1
  6613  0379  084D               	movf	??_scale,w
  6614  037A  074D               	addwf	??_scale,w
  6615  037B  074D               	addwf	??_scale,w
  6616  037C  0008               	return
  6617  037D                     PL10:	
  6618  037D  0826               	movf	?___awdiv,w
  6619  037E  00CF               	movwf	??_scale+2
  6620  037F  0827               	movf	?___awdiv+1,w
  6621  0380  00D0               	movwf	??_scale+3
  6622  0381  084F               	movf	??_scale+2,w
  6623  0382  074F               	addwf	??_scale+2,w
  6624  0383  074F               	addwf	??_scale+2,w
  6625  0384  0008               	return
  6626  0385                     PL11:	
  6627  0385  083B               	movf	?___ftmul,w
  6628  0386  00CA               	movwf	?_scale
  6629  0387  083C               	movf	?___ftmul+1,w
  6630  0388  00CB               	movwf	?_scale+1
  6631  0389  083D               	movf	?___ftmul+2,w
  6632  038A  00CC               	movwf	?_scale+2
  6633  038B  0008               	return
  6634  038C                     PL12:	
  6635  038C  083B               	movf	?___ftmul,w
  6636  038D  00D1               	movwf	_scale$4114
  6637  038E  083C               	movf	?___ftmul+1,w
  6638  038F  00D2               	movwf	_scale$4114+1
  6639  0390  083D               	movf	?___ftmul+2,w
  6640  0391  00D3               	movwf	_scale$4114+2
  6641  0392  300A               	movlw	10
  6642  0393  00A0               	movwf	?___awmod
  6643  0394  01A1               	clrf	?___awmod+1
  6644  0395  0854               	movf	scale@scl,w
  6645  0396  00A2               	movwf	?___awmod+2
  6646  0397  01A3               	clrf	?___awmod+3
  6647  0398  0008               	return
  6648  0399                     PL16:	
  6649  0399  00A6               	movwf	?___awdiv
  6650  039A  01A7               	clrf	?___awdiv+1
  6651  039B  0854               	movf	scale@scl,w
  6652  039C  00A2               	movwf	?___awmod+2
  6653  039D  01A3               	clrf	?___awmod+3
  6654  039E  1BA2               	btfsc	?___awmod+2,7
  6655  039F  03A3               	decf	?___awmod+3,f
  6656  03A0  3064               	movlw	100
  6657  03A1  00A0               	movwf	?___awmod
  6658  03A2  01A1               	clrf	?___awmod+1
  6659  03A3  0008               	return
  6660  03A4                     PL20:	
  6661  03A4  07C5               	addwf	___ftmul@f3_as_product,f
  6662  03A5  083F               	movf	___ftmul@f2+1,w
  6663  03A6  1103               	clrz
  6664  03A7  1803               	skipnc
  6665  03A8  0A3F               	incf	___ftmul@f2+1,w
  6666  03A9  1D03               	btfss	3,2
  6667  03AA  07C6               	addwf	___ftmul@f3_as_product+1,f
  6668  03AB  0840               	movf	___ftmul@f2+2,w
  6669  03AC  1103               	clrz
  6670  03AD  0008               	return
  6671  03AE                     PL22:	
  6672  03AE  0826               	movf	?___awdiv,w
  6673  03AF  00CD               	movwf	??_scale
  6674  03B0  0827               	movf	?___awdiv+1,w
  6675  03B1  00CE               	movwf	??_scale+1
  6676  03B2  084D               	movf	??_scale,w
  6677  03B3  074D               	addwf	??_scale,w
  6678  03B4  074D               	addwf	??_scale,w
  6679  03B5  0008               	return
  6680  03B6                     PL24:	
  6681  03B6  00BD               	movwf	?___ftmul+2
  6682  03B7  0851               	movf	_scale$4114,w
  6683  03B8  00BE               	movwf	?___ftmul+3
  6684  03B9  0852               	movf	_scale$4114+1,w
  6685  03BA  00BF               	movwf	?___ftmul+4
  6686  03BB  0853               	movf	_scale$4114+2,w
  6687  03BC  00C0               	movwf	?___ftmul+5
  6688  03BD  0008               	return
  6689  03BE                     PL25:	
  6690  03BE  00BD               	movwf	?___ftmul+2
  6691  03BF  3064               	movlw	100
  6692  03C0  00A6               	movwf	?___awdiv
  6693  03C1  01A7               	clrf	?___awdiv+1
  6694  03C2  0854               	movf	scale@scl,w
  6695  03C3  00A8               	movwf	?___awdiv+2
  6696  03C4  01A9               	clrf	?___awdiv+3
  6697  03C5  0008               	return
  6698  03C6                     PL26:	
  6699  03C6  00BD               	movwf	?___ftmul+2
  6700  03C7  300A               	movlw	10
  6701  03C8  00A6               	movwf	?___awdiv
  6702  03C9  01A7               	clrf	?___awdiv+1
  6703  03CA  0854               	movf	scale@scl,w
  6704  03CB  00A8               	movwf	?___awdiv+2
  6705  03CC  01A9               	clrf	?___awdiv+3
  6706  03CD  0008               	return
  6707                           
  6708                           	psect	text784
  6709  1734                     __ptext784:	
  6710 ;; =============== function ___bmul ends ============
  6711                           
  6712                           
  6713 ;; *************** function __div_to_l_ *****************
  6714 ;; Defined at:
  6715 ;;		line 61 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\fldivl.c"
  6716 ;; Parameters:    Size  Location     Type
  6717 ;;  f1              3    0[BANK0 ] unsigned char 
  6718 ;;  f2              3    3[BANK0 ] unsigned char 
  6719 ;; Auto vars:     Size  Location     Type
  6720 ;;  quot            4   14[BANK0 ] unsigned long 
  6721 ;;  exp1            1   19[BANK0 ] unsigned char 
  6722 ;;  cntr            1   18[BANK0 ] unsigned char 
  6723 ;; Return value:  Size  Location     Type
  6724 ;;                  4    0[BANK0 ] unsigned long 
  6725 ;; Registers used:
  6726 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  6727 ;; Tracked objects:
  6728 ;;		On entry : 0/0
  6729 ;;		On exit  : 60/0
  6730 ;;		Unchanged: FFE9F/0
  6731 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6732 ;;      Params:         0       6       0       0       0
  6733 ;;      Locals:         0       6       0       0       0
  6734 ;;      Temps:          0       8       0       0       0
  6735 ;;      Totals:         0      20       0       0       0
  6736 ;;Total ram usage:       20 bytes
  6737 ;; Hardware stack levels used:    1
  6738 ;; Hardware stack levels required when called:    2
  6739 ;; This function calls:
  6740 ;;		Nothing
  6741 ;; This function is called by:
  6742 ;;		_printf
  6743 ;; This function uses a non-reentrant model
  6744 ;;
  6745  1734                     __div_to_l_:	
  6746                           
  6747                           ; Regs used in __div_to_l_: [wreg-fsr0h+status,2+status,0]
  6748  1734  3020               	movlw	low __div_to_l_@f1
  6749  1735  0084               	movwf	4
  6750  1736  1383               	bcf	3,7	;select IRP bank0
  6751  1737  0800               	movf	0,w
  6752  1738  1283               	bcf	3,5	;RP0=0, select bank0
  6753  1739  1303               	bcf	3,6	;RP1=0, select bank0
  6754  173A  00A6               	movwf	??__div_to_l_
  6755  173B  0A84               	incf	4,f
  6756  173C  0800               	movf	0,w
  6757  173D  00A7               	movwf	??__div_to_l_+1
  6758  173E  0A84               	incf	4,f
  6759  173F  0800               	movf	0,w
  6760  1740  00A8               	movwf	??__div_to_l_+2
  6761  1741  0A84               	incf	4,f
  6762  1742  0800               	movf	0,w
  6763  1743  00A9               	movwf	??__div_to_l_+3
  6764  1744  1003               	clrc
  6765  1745  0D28               	rlf	??__div_to_l_+2,w
  6766  1746  0D29               	rlf	??__div_to_l_+3,w
  6767  1747  00B3               	movwf	__div_to_l_@exp1
  6768  1748  08B3               	movf	__div_to_l_@exp1,f
  6769  1749  1D03               	skipz
  6770  174A  2F50               	goto	l6204
  6771  174B                     l6202:	
  6772  174B  01A0               	clrf	?__div_to_l_
  6773  174C  01A1               	clrf	?__div_to_l_+1
  6774  174D  01A2               	clrf	?__div_to_l_+2
  6775  174E  01A3               	clrf	?__div_to_l_+3
  6776  174F  0008               	return
  6777  1750                     l6204:	
  6778  1750  3023               	movlw	low __div_to_l_@f2
  6779  1751  27F3  160A  118A   	fcall	PL4	;call to abstracted procedure
  6780  1754  1003               	clrc
  6781  1755  0D28               	rlf	??__div_to_l_+2,w
  6782  1756  0D29               	rlf	??__div_to_l_+3,w
  6783  1757  00B2               	movwf	__div_to_l_@cntr
  6784  1758  08B2               	movf	__div_to_l_@cntr,f
  6785  1759  1903               	btfsc	3,2
  6786  175A  2F4B               	goto	l6202
  6787  175B  3020               	movlw	low __div_to_l_@f1
  6788  175C  0084               	movwf	4
  6789  175D  3080               	movlw	128
  6790  175E  0A84               	incf	4,f
  6791  175F  0A84               	incf	4,f
  6792  1760  0480               	iorwf	0,f
  6793  1761  3020               	movlw	low __div_to_l_@f1
  6794  1762  0A84               	incf	4,f
  6795  1763  0084               	movwf	4
  6796  1764  3023               	movlw	low __div_to_l_@f2
  6797  1765  0A84               	incf	4,f
  6798  1766  0A84               	incf	4,f
  6799  1767  0A84               	incf	4,f
  6800  1768  0180               	clrf	0
  6801  1769  0084               	movwf	4
  6802  176A  3080               	movlw	128
  6803  176B  0A84               	incf	4,f
  6804  176C  0A84               	incf	4,f
  6805  176D  0480               	iorwf	0,f
  6806  176E  3023               	movlw	low __div_to_l_@f2
  6807  176F  0A84               	incf	4,f
  6808  1770  0084               	movwf	4
  6809  1771  307F               	movlw	127
  6810  1772  0A84               	incf	4,f
  6811  1773  0A84               	incf	4,f
  6812  1774  0A84               	incf	4,f
  6813  1775  0180               	clrf	0
  6814  1776  01AE               	clrf	__div_to_l_@quot
  6815  1777  01AF               	clrf	__div_to_l_@quot+1
  6816  1778  01B0               	clrf	__div_to_l_@quot+2
  6817  1779  01B1               	clrf	__div_to_l_@quot+3
  6818  177A  02B3               	subwf	__div_to_l_@exp1,f
  6819  177B  30A0               	movlw	160
  6820  177C  0732               	addwf	__div_to_l_@cntr,w
  6821  177D  00A6               	movwf	??__div_to_l_
  6822  177E  02B3               	subwf	__div_to_l_@exp1,f
  6823  177F  3020               	movlw	32
  6824  1780  00B2               	movwf	__div_to_l_@cntr
  6825  1781                     l6218:	
  6826  1781  3023               	movlw	low __div_to_l_@f2
  6827  1782  1003               	clrc
  6828  1783  0DAE               	rlf	__div_to_l_@quot,f
  6829  1784  0DAF               	rlf	__div_to_l_@quot+1,f
  6830  1785  0DB0               	rlf	__div_to_l_@quot+2,f
  6831  1786  0DB1               	rlf	__div_to_l_@quot+3,f
  6832  1787  27F3  160A  118A   	fcall	PL4	;call to abstracted procedure
  6833  178A  3020               	movlw	low __div_to_l_@f1
  6834  178B  0084               	movwf	4
  6835  178C  0800               	movf	0,w
  6836  178D  00AA               	movwf	??__div_to_l_+4
  6837  178E  0A84               	incf	4,f
  6838  178F  0800               	movf	0,w
  6839  1790  00AB               	movwf	??__div_to_l_+5
  6840  1791  0A84               	incf	4,f
  6841  1792  0800               	movf	0,w
  6842  1793  00AC               	movwf	??__div_to_l_+6
  6843  1794  0A84               	incf	4,f
  6844  1795  0800               	movf	0,w
  6845  1796  00AD               	movwf	??__div_to_l_+7
  6846  1797  0829               	movf	??__div_to_l_+3,w
  6847  1798  022D               	subwf	??__div_to_l_+7,w
  6848  1799  1D03               	skipz
  6849  179A  2FA5               	goto	u2185
  6850  179B  0828               	movf	??__div_to_l_+2,w
  6851  179C  022C               	subwf	??__div_to_l_+6,w
  6852  179D  1D03               	skipz
  6853  179E  2FA5               	goto	u2185
  6854  179F  0827               	movf	??__div_to_l_+1,w
  6855  17A0  022B               	subwf	??__div_to_l_+5,w
  6856  17A1  1D03               	skipz
  6857  17A2  2FA5               	goto	u2185
  6858  17A3  0826               	movf	??__div_to_l_,w
  6859  17A4  022A               	subwf	??__div_to_l_+4,w
  6860  17A5                     u2185:	
  6861  17A5  1C03               	skipc
  6862  17A6  2FC1               	goto	l3588
  6863  17A7  3023               	movlw	low __div_to_l_@f2
  6864  17A8  27F3  160A  118A   	fcall	PL4	;call to abstracted procedure
  6865  17AB  3020               	movlw	low __div_to_l_@f1
  6866  17AC  0084               	movwf	4
  6867  17AD  0826               	movf	??__div_to_l_,w
  6868  17AE  0280               	subwf	0,f
  6869  17AF  0A84               	incf	4,f
  6870  17B0  0827               	movf	??__div_to_l_+1,w
  6871  17B1  1C03               	skipc
  6872  17B2  0F27               	incfsz	??__div_to_l_+1,w
  6873  17B3  0280               	subwf	0,f
  6874  17B4  0A84               	incf	4,f
  6875  17B5  0828               	movf	??__div_to_l_+2,w
  6876  17B6  1C03               	skipc
  6877  17B7  0F28               	incfsz	??__div_to_l_+2,w
  6878  17B8  0280               	subwf	0,f
  6879  17B9  0A84               	incf	4,f
  6880  17BA  0829               	movf	??__div_to_l_+3,w
  6881  17BB  1C03               	skipc
  6882  17BC  0A29               	incf	??__div_to_l_+3,w
  6883  17BD  0280               	subwf	0,f
  6884  17BE  3003               	movlw	3
  6885  17BF  0284               	subwf	4,f
  6886  17C0  142E               	bsf	__div_to_l_@quot,0
  6887  17C1                     l3588:	
  6888  17C1  3020               	movlw	low __div_to_l_@f1
  6889  17C2  0084               	movwf	4
  6890  17C3  1003               	clrc
  6891  17C4  0D80               	rlf	0,f
  6892  17C5  0A84               	incf	4,f
  6893  17C6  0D80               	rlf	0,f
  6894  17C7  0A84               	incf	4,f
  6895  17C8  0D80               	rlf	0,f
  6896  17C9  0A84               	incf	4,f
  6897  17CA  0D80               	rlf	0,f
  6898  17CB  0BB2               	decfsz	__div_to_l_@cntr,f
  6899  17CC  2F81               	goto	l6218
  6900  17CD  1FB3               	btfss	__div_to_l_@exp1,7
  6901  17CE  2FDC               	goto	l6236
  6902  17CF  0833               	movf	__div_to_l_@exp1,w
  6903  17D0  3A80               	xorlw	128
  6904  17D1  3E9F               	addlw	159
  6905  17D2  1C03               	btfss	3,0
  6906  17D3  2F4B               	goto	l6202
  6907  17D4                     l6232:	
  6908  17D4  1003               	clrc
  6909  17D5  0CB1               	rrf	__div_to_l_@quot+3,f
  6910  17D6  0CB0               	rrf	__div_to_l_@quot+2,f
  6911  17D7  0CAF               	rrf	__div_to_l_@quot+1,f
  6912  17D8  0CAE               	rrf	__div_to_l_@quot,f
  6913  17D9  0FB3               	incfsz	__div_to_l_@exp1,f
  6914  17DA  2FD4               	goto	l6232
  6915  17DB  2FEA               	goto	l6242
  6916  17DC                     l6236:	
  6917  17DC  3020               	movlw	32
  6918  17DD  0233               	subwf	__div_to_l_@exp1,w
  6919  17DE  1803               	btfsc	3,0
  6920  17DF  2F4B               	goto	l6202
  6921  17E0                     l3596:	
  6922  17E0  08B3               	movf	__div_to_l_@exp1,f
  6923  17E1  1903               	btfsc	3,2
  6924  17E2  2FEA               	goto	l6242
  6925  17E3  1003               	clrc
  6926  17E4  0DAE               	rlf	__div_to_l_@quot,f
  6927  17E5  0DAF               	rlf	__div_to_l_@quot+1,f
  6928  17E6  0DB0               	rlf	__div_to_l_@quot+2,f
  6929  17E7  0DB1               	rlf	__div_to_l_@quot+3,f
  6930  17E8  03B3               	decf	__div_to_l_@exp1,f
  6931  17E9  2FE0               	goto	l3596
  6932  17EA                     l6242:	
  6933  17EA  0831               	movf	__div_to_l_@quot+3,w
  6934  17EB  00A3               	movwf	?__div_to_l_+3
  6935  17EC  0830               	movf	__div_to_l_@quot+2,w
  6936  17ED  00A2               	movwf	?__div_to_l_+2
  6937  17EE  082F               	movf	__div_to_l_@quot+1,w
  6938  17EF  00A1               	movwf	?__div_to_l_+1
  6939  17F0  082E               	movf	__div_to_l_@quot,w
  6940  17F1  00A0               	movwf	?__div_to_l_
  6941  17F2  0008               	return
  6942  17F3                     __end_of__div_to_l_:	
  6943  17F3                     PL4:	
  6944  17F3  0084               	movwf	4
  6945  17F4  0800               	movf	0,w
  6946  17F5  00A6               	movwf	??__div_to_l_
  6947  17F6  0A84               	incf	4,f
  6948  17F7  0800               	movf	0,w
  6949  17F8  00A7               	movwf	??__div_to_l_+1
  6950  17F9  0A84               	incf	4,f
  6951  17FA  0800               	movf	0,w
  6952  17FB  00A8               	movwf	??__div_to_l_+2
  6953  17FC  0A84               	incf	4,f
  6954  17FD  0800               	movf	0,w
  6955  17FE  00A9               	movwf	??__div_to_l_+3
  6956  17FF  0008               	return
  6957                           
  6958                           	psect	text788
  6959  1670                     __ptext788:	
  6960 ;; =============== function _isprint ends ============
  6961                           
  6962                           
  6963 ;; *************** function _ngat *****************
  6964 ;; Defined at:
  6965 ;;		line 45 in file "C:\Users\DELL\Desktop\baitap_ttvxl\dotanso_dungCCP\dotansodungCCP.c"
  6966 ;; Parameters:    Size  Location     Type
  6967 ;;		None
  6968 ;; Auto vars:     Size  Location     Type
  6969 ;;		None
  6970 ;; Return value:  Size  Location     Type
  6971 ;;		None               void
  6972 ;; Registers used:
  6973 ;;		wreg, status,2, status,0, pclath, cstack
  6974 ;; Tracked objects:
  6975 ;;		On entry : 0/0
  6976 ;;		On exit  : 60/0
  6977 ;;		Unchanged: FFF9F/0
  6978 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6979 ;;      Params:         0       0       0       0       0
  6980 ;;      Locals:         0       0       0       0       0
  6981 ;;      Temps:          2       0       0       0       0
  6982 ;;      Totals:         2       0       0       0       0
  6983 ;;Total ram usage:        2 bytes
  6984 ;; Hardware stack levels used:    1
  6985 ;; Hardware stack levels required when called:    1
  6986 ;; This function calls:
  6987 ;;		_abs
  6988 ;; This function is called by:
  6989 ;;		Interrupt level 1
  6990 ;; This function uses a non-reentrant model
  6991 ;;
  6992  1670                     _ngat:	
  6993                           
  6994                           ;dotansodungCCP.c: 46: if( CCP1IF)
  6995  1670  1283               	bcf	3,5	;RP0=0, select bank0
  6996  1671  1303               	bcf	3,6	;RP1=0, select bank0
  6997  1672  1D0C               	btfss	12,2
  6998  1673  2E8D               	goto	L21
  6999                           
  7000                           ;dotansodungCCP.c: 47: {
  7001                           ;dotansodungCCP.c: 48: xung = abs(CCPR1 - ccp1_old);
  7002  1674  0816               	movf	22,w	;volatile
  7003  1675  00F1               	movwf	?_abs+1
  7004  1676  0815               	movf	21,w	;volatile
  7005  1677  00F0               	movwf	?_abs
  7006  1678  0876               	movf	_ccp1_old,w
  7007  1679  02F0               	subwf	?_abs,f
  7008  167A  0877               	movf	_ccp1_old+1,w
  7009  167B  1C03               	skipc
  7010  167C  03F1               	decf	?_abs+1,f
  7011  167D  02F1               	subwf	?_abs+1,f
  7012  167E  2694               	fcall	_abs
  7013  167F  0870               	movf	?_abs,w
  7014  1680  00E9               	movwf	_xung
  7015  1681  0871               	movf	?_abs+1,w
  7016  1682  00EA               	movwf	_xung+1
  7017  1683  3000               	movlw	0
  7018  1684  1BEA               	btfsc	_xung+1,7
  7019  1685  30FF               	movlw	255
  7020  1686  00EB               	movwf	_xung+2
  7021  1687  00EC               	movwf	_xung+3
  7022                           
  7023                           ;dotansodungCCP.c: 49: ccp1_old = CCPR1;
  7024  1688  0816               	movf	22,w	;volatile
  7025  1689  00F7               	movwf	_ccp1_old+1	;volatile
  7026  168A  0815               	movf	21,w	;volatile
  7027  168B  00F6               	movwf	_ccp1_old	;volatile
  7028                           
  7029                           ;dotansodungCCP.c: 50: }
  7030                           ;dotansodungCCP.c: 51: CCP1IF = 0;
  7031  168C  110C               	bcf	12,2
  7032  168D                     L21:	
  7033  168D  0875               	movf	??_ngat+1,w
  7034  168E  008A               	movwf	10
  7035  168F  0E74               	swapf	??_ngat^(0+-128),w
  7036  1690  0083               	movwf	3
  7037  1691  0EFE               	swapf	126,f
  7038  1692  0E7E               	swapf	126,w
  7039  1693  0009               	retfie
  7040  1694                     __end_of_ngat:	
  7041  1694                     __ptext789:	
  7042 ;; =============== function _ngat ends ============
  7043                           
  7044                           
  7045 ;; *************** function _abs *****************
  7046 ;; Defined at:
  7047 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\abs.c"
  7048 ;; Parameters:    Size  Location     Type
  7049 ;;  a               2    0[COMMON] int 
  7050 ;; Auto vars:     Size  Location     Type
  7051 ;;		None
  7052 ;; Return value:  Size  Location     Type
  7053 ;;                  2    0[COMMON] int 
  7054 ;; Registers used:
  7055 ;;		wreg, status,2, status,0
  7056 ;; Tracked objects:
  7057 ;;		On entry : 60/0
  7058 ;;		On exit  : 60/0
  7059 ;;		Unchanged: FFF9F/0
  7060 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7061 ;;      Params:         2       0       0       0       0
  7062 ;;      Locals:         0       0       0       0       0
  7063 ;;      Temps:          2       0       0       0       0
  7064 ;;      Totals:         4       0       0       0       0
  7065 ;;Total ram usage:        4 bytes
  7066 ;; Hardware stack levels used:    1
  7067 ;; This function calls:
  7068 ;;		Nothing
  7069 ;; This function is called by:
  7070 ;;		_ngat
  7071 ;; This function uses a non-reentrant model
  7072 ;;
  7073  1694                     _abs:	
  7074                           
  7075                           ; Regs used in _abs: [wreg+status,2+status,0]
  7076  1694  1FF1               	btfss	abs@a+1,7
  7077  1695  0008               	return
  7078  1696  0970               	comf	abs@a,w
  7079  1697  00F2               	movwf	??_abs
  7080  1698  0971               	comf	abs@a+1,w
  7081  1699  00F3               	movwf	??_abs+1
  7082  169A  0AF2               	incf	??_abs,f
  7083  169B  1903               	skipnz
  7084  169C  0AF3               	incf	??_abs+1,f
  7085  169D  0872               	movf	??_abs,w
  7086  169E  00F0               	movwf	?_abs
  7087  169F  0873               	movf	??_abs+1,w
  7088  16A0  00F1               	movwf	?_abs+1
  7089  16A1  0008               	return
  7090  16A2                     __end_of_abs:	
  7091                           
  7092                           	psect	intentry
  7093  0004                     __pintentry:	
  7094                           ; Regs used in _ngat: [wreg+status,2+status,0+pclath+cstack]
  7095                           
  7096  0004                     interrupt_function:	
  7097  007E                     saved_w	set	btemp
  7098  0004  00FE               	movwf	btemp
  7099  0005  0E03               	swapf	3,w
  7100  0006  00F4               	movwf	??_ngat
  7101  0007  080A               	movf	10,w
  7102  0008  00F5               	movwf	??_ngat+1
  7103  0009  160A  118A  2E70   	ljmp	_ngat
  7104                           
  7105                           	psect	text790
  7106  0000                     __ptext790:	
  7107 ;; =============== function _abs ends ============
  7108                           
  7109  007E                     btemp	set	126	;btemp
  7110  007E                     wtemp0	set	126


HI-TECH Software PICC Macro Assembler V9.83 build 10920 
Symbol Table                                                                                   Tue Dec 06 10:48:29 2022

         ___altoft@exp 002C                      _f 006D                      _t 00B9                      pc 0002  
       ___bmul@product 002A          ___altoft@sign 002D           ___awdiv@sign 002B                     fsr 0004  
  ___wmul@multiplicand 0022           ___ftadd@exp1 0055           ___ftadd@exp2 0054          ?_lcd_put_byte 0020  
         ___ftadd@sign 0053                    _GIE 005F                    _RD1 0041                    _RE0 0048  
                  _RD2 0042                    _RD3 0043                    _RD4 0044                    _RD5 0045  
                  _RD6 0046                    _RD7 0047                    _abs 1694                    fsr0 0004  
                  indf 0000           ___awmod@sign 0025           ___ftdiv@cntr 0031           ___ftdiv@sign 0036  
                 ?_abs 0070                   l1056 0000                   l1090 0000                   l1067 0000  
                 l1059 0000                   l2212 08A0                   l2155 0000                   l3301 0000  
                 l2257 0BA5                   l3331 0000                   l2291 0D7E                   l2197 0824  
                 l3415 0E51                   l3280 0000                   l3328 06B7                   l3337 0000  
                 l3530 0000                   l3516 0000                   l3285 0000                   l3381 0000  
                 l3462 0000                   l3295 0000                   l3359 078A                   l6200 0000  
                 l3448 0000                   l3553 0FED                   l3546 0000                   l6210 0000  
                 l6202 174B                   l3458 0000                   l3538 0000                   l6220 0000  
                 l6212 0000                   l6204 1750                   l3388 0060                   l3477 0000  
                 l6214 0000                   l6310 0000                   l6302 0000                   l6160 0000  
                 l6152 0000                   l6232 17D4                   l6224 0000                   l6216 0000  
                 l6304 0000                   l6320 0000                   l8000 0CE8                   l6170 0FB8  
                 l6162 0000                   l6154 0F96                   l6242 17EA                   l6234 0000  
                 l6226 0000                   l6218 1781                   l6314 06DE                   l6306 06CA  
                 l6330 0348                   l6322 0000                   l8002 0CEB                   l6180 0000  
                 l6172 0000                   l6164 0000                   l6156 0F9B                   l3596 17E0  
                 l6236 17DC                   l3588 17C1                   l6316 0000                   l6308 0000  
                 l6332 034D                   l6324 033F                   l8020 0D23                   l3589 0000  
                 l6190 0FE9                   l6166 0000                   l6342 0000                   l6334 0357  
                 l6350 0E21                   l8022 0D27                   l8014 0D14                   l8006 0D07  
                 l6176 0000                   l6168 0000                   l6344 0000                   l6336 035C  
                 l6328 0343                   l6360 0000                   l6352 0E26                   l8024 0000  
                 l8032 0D3C                   l8008 0D0A                   l8040 0000                   l7410 0000  
                 l6186 0FE1                   l6346 0000                   l6338 0361                   l6370 0000  
                 l6362 0000                   l6354 0000                   l6610 0000                   l6602 0738  
                 l8026 0D34                   l8018 0000                   l8034 080A                   l8050 0000  
                 l8042 0000                   l7404 0595                   l6196 0FF7                   l6188 0000  
                 l7420 0000                   l6380 0000                   l6372 0E4D                   l6356 0000  
                 l6348 0000                   l7500 0259                   l6540 0000                   l6620 0755  
                 l6604 0000                   l8060 0000                   l8052 0000                   l8044 0000  
                 l8036 0000                   l7430 0000                   l7422 032B                   l6382 0E69  
                 l6358 0000                   l7510 0000                   l7502 0000                   l6550 0000  
                 l6542 0000                   l6622 0000                   l6630 076E                   l6702 0000  
                 l8070 0000                   l8062 0000                   l8054 0000                   l8046 0000  
                 l8038 0000                   l7416 0DFC                   l7408 0000                   l6368 0E45  
                 l7512 0270                   l7520 0000                   l7600 0000                   l6560 0000  
                 l6552 0000                   l6544 0000                   l6640 0786                   l6632 0772  
                 l6616 0000                   l6608 0747                   l6712 0000                   l6800 0000  
                 l8080 0000                   l8072 0000                   l8064 0000                   l8056 0000  
                 l8048 0000                   l7442 0E08                   l6378 0E5B                   l7514 0000  
                 l7506 0000                   l7602 0287                   l6570 054A                   l6562 0000  
                 l6554 04F7                   l6650 0000                   l6634 0000                   l6626 0764  
                 l6618 0000                   l6706 0000                   l6730 0000                   l6810 0490  
                 l6802 0000                   l8082 0000                   l8074 16C4                   l8066 0000  
                 l8058 0000                   l7428 0000                   l7444 0000                   l7436 0000  
                 l7452 0000                   l7516 0278                   l7540 0000                   l7620 0000  
                 l6572 0000                   l6564 0000                   l6556 0504                   l6548 0000  
                 l6580 0000                   l6660 0000                   l6652 07A0                   l6644 0000  
                 l6628 0769                   l6708 0000                   l6740 0000                   l6732 0000  
                 l6724 02DC                   l6804 0000                   l8084 0000                   l8076 0000  
                 l8068 0000                   l7446 0000                   l7438 0E00                   l7470 0000  
                 l7462 0000                   l7454 0000                   l7534 0000                   l7614 029A  
                 l7622 02AD                   l7606 028E                   l6574 0000                   l6566 0532  
                 l6558 050F                   l6582 0000                   l6662 0000                   l6654 0000  
                 l6646 0795                   l6638 0781                   l6590 0000                   l6750 0000  
                 l6742 02ED                   l6734 0000                   l6726 0000                   l6718 02CB  
                 l7630 0000                   l6830 04CC                   l6822 04B4                   l6814 049C  
                 l6806 0484                   l7702 0116                   l8078 0000                   l7456 0000  
                 l7472 06C4                   l7528 0D95                   l7536 0DBA                   l7560 0000  
                 l7552 0DD2                   l7624 0000                   l6568 053D                   l6584 0000  
                 l6576 0000                   l6664 07BC                   l6656 0000                   l6592 0000  
                 l6680 0000                   l6760 0000                   l6752 0000                   l6736 0000  
                 l6728 0000                   l7640 0021                   l7632 0000                   l7720 01DC  
                 l7712 0172                   l7466 0000                   l7458 06B1                   l7490 024B  
                 l7482 0000                   l7570 0000                   l7626 02B5                   l6586 0000  
                 l6578 0000                   l6594 0000                   l6690 0000                   l6682 0000  
                 l6674 004F                   l6762 0000                   l6754 0303                   l6746 02F7  
                 l6738 0000                   l7642 002C                   l7634 0000                   l7650 0EC4  
                 l6826 04C0                   l6818 04A8                   l7730 0000                   l7810 08C9  
                 l7802 08A5                   l7396 0000                   l7492 0000                   l7484 0242  
                 l7476 0000                   l7556 0DE1                   l7548 0000                   l7580 0000  
                 l6692 0000                   l6684 0000                   l6668 0000                   l6764 0000  
                 l6748 0000                   l7652 0ECF                   l7660 03D5                   l7708 015B  
                 l7732 0000                   l7740 03EE                   l7900 0000                   l7820 0905  
                 l7812 0000                   l7804 08B9                   l7398 0000                   l7478 0000  
                 l7558 0000                   l7590 0EB1                   l6598 0731                   l6694 0000  
                 l6686 0000                   l6758 030D                   l7646 0000                   l7662 03D6  
                 l7726 0221                   l7742 03F5                   l7830 0000                   l7822 0000  
                 l7814 0000                   l7488 0000                   l7584 0000                   l7568 0000  
                 l6696 0000                   l6688 0000                   l7664 0000                   l7656 0000  
                 l7672 0000                   l7744 03F9                   l7752 040C                   l7736 0000  
                 l7920 0000                   l7912 0B0C                   l7904 0B01                   l7840 0963  
                 l7832 0000                   l7578 0E86                   l7594 0000                   l6698 0073  
                 l6794 0000                   l7666 03DF                   l7658 0000                   l7682 0000  
                 l7690 0000                   l7738 03E8                   l7754 0000                   l7930 0B68  
                 l7914 0000                   l7922 0B2A                   l7842 0000                   l7834 0000  
                 l7826 0000                   l7818 0000                   l7770 0831                   l7762 081F  
                 l7588 0000                   l7596 0000                   l6796 0000                   l7668 0000  
                 l7748 0405                   l7916 0B15                   l7908 0B09                   l7844 0000  
                 l7836 0000                   l7828 0000                   l7852 09AF                   l7780 0865  
                 l7764 0000                   l7756 0000                   l6798 0000                   l7686 0685  
                 l7678 0631                   l7694 0000                   l7942 0B90                   l7934 0000  
                 l7918 0B21                   l7790 0000                   l7774 0840                   l7960 0000  
                 l7952 0000                   l7944 0000                   l7936 0B6C                   l7928 0B3C  
                 l7880 0A61                   l7864 0A0F                   l7856 09E4                   l7848 099D  
                 l7792 0874                   l7784 0000                   l7776 0000                   l7768 0826  
                 l7954 0C33                   l7946 0BC8                   l7938 0B81                   l7890 0AA4  
                 l7882 0000                   l7874 0000                   l7786 0000                   l7794 089C  
                 l7778 0000                   l7980 0C95                   l7972 0C61                   l7884 0AA2  
                 l7876 0000                   l7868 0A20                   l7956 0C41                   l7796 0000  
                 l7966 0C5F                   l7958 0000                   l7878 0000                   l7798 08A2  
                 l7984 0CA9                   l7896 0000                   l7994 0CCE                   l7978 0000  
                 l7898 0AD8                   l7988 0CC1                   STR_1 107C                   STR_2 1087  
                 u2095 0FC7                   u2440 0000                   u2185 17A5                   u2445 0E2A  
                 u3165 0081                   u2800 0502                   u4225 0DA3                   u4305 0E99  
                 u5107 0461                   u2900 0548                   u2820 050D                   u5117 046F  
                 u4175 0262                   u5207 0523                   u5127 047D                   u2920 0553  
                 u2840 0519                   u5217 0557                   u5137 056D                   u5227 055D  
                 u5147 0573                   _PEIE 005E                   u2860 0530                   u2780 04F5  
                 u4365 02A0                   u5157 057D                   u5077 0427                   u2934 0555  
                 u2854 051B                   u4630 0000                   u5167 0583                   u5087 043A  
                 u2880 053B                   u5177 04E0                   u5097 044D                   u5187 04E6  
                 u4715 0A0D                   u4635 0919                   u5197 051D                   u4735 0AD1  
                 u4825 0B75                   u4915 0CA3                   u4835 0B8B                   u4675 09B9  
                 u4925 0CB9                   u4685 09EE                   u4785 0B1E                   u4795 0B33  
                 u4965 0CDE                   u4975 0CF9                   u4895 0C8E                   abs@a 0070  
                 _main 16A2                   _ngat 1670           ___ftpack@arg 0020           ___ftpack@exp 0023  
         lcd_busy@busy 0021                   btemp 007E                   _xung 0069                   start 000C  
    ___bmul@multiplier 002B           ___ftmul@cntr 0048           ___ftmul@sign 0049           ___fttol@exp1 003A  
                ??_abs 0072           ___fttol@lval 0036         ??_lcd_put_byte 0021                  ?_main 0070  
                ?_ngat 0070        __end_of___awdiv 027D        __end_of___lbdiv 06C6        __end_of___ftadd 07D0  
                _CCPR1 0015        __end_of___awmod 02BA        __end_of___lbmod 06E2        __end_of___ftdiv 00A6  
      __end_of___ftneg 0EC2                  _ANSEL 0188        __end_of___lldiv 0EBA        __end_of___ftmul 0329  
      ___awdiv@divisor 0026        __end_of___llmod 0DC3        __end_of___ftsub 070E        __end_of___fttol 0E72  
      ___awdiv@counter 002A                  _TMR1H 000F                  _TMR1L 000E           ___lltoft@exp 002C  
                _scale 00A6        __end_of_isdigit 0DFE          ___ftpack@sign 0024                  _putch 0D7F  
      __end_of_isprint 0597                  pclath 000A                  status 0003                  wtemp0 007E  
      ___lbdiv@divisor 0025        ___lbdiv@counter 0027           __end_of_main 1734           __end_of_ngat 1694  
        lcd_gotoxy@col 0026          lcd_gotoxy@row 0025                 ??_main 0076          ___fttol@sign1 0035  
               ??_ngat 0074   __size_of__tdiv_to_l_ 0077                 _CCP1IE 0462                 _CCP1IF 0062  
     __end_of___altoft 003E       ___llmod@dividend 0031                 ?_scale 004A                 _CCPR1H 0016  
               _CCPR1L 0015       ___awdiv@dividend 0028                 ?_putch 0070       __end_of___ftpack 0375  
               _ANSELH 0189       __end_of___lltoft 0EE2                 i1l2152 0000                 i1l6130 0000  
               _T1SYNC 0082                 i1l6134 0000                 i1l6126 0000                 _TMR1GE 0086  
               _TMR1CS 0081                 _TMR1ON 0080                 _TRISC2 043A                 _TRISD1 0441  
               _TRISE0 0448                 _TRISD2 0442                 _TRISD3 0443                 _TRISD4 0444  
               _TRISD5 0445                 _TRISD6 0446                 _TRISD7 0447       __end_of_lcd_busy 0589  
     __end_of_lcd_init 04D3       __end_of_lcd_putc 0415                 ___bmul 0329                 ___ftge 0DC3  
               ___wmul 0DFE              ??___awdiv 0076              ??___lbdiv 0076              ??___ftadd 0050  
            ??___awmod 0076              ??___lbmod 0021              ??___ftdiv 002E              ??___ftneg 0076  
            ??___lldiv 0076              ??___ftmul 0041              ??___llmod 0076              ??___ftsub 0076  
            ??___fttol 0032                 _fround 05A6       ___awdiv@quotient 002C        ___awmod@divisor 0020  
      ___awmod@counter 0024                 _printf 0806          lcd_put_byte@b 0020  ___ftmul@f3_as_product 0045  
            ??_isdigit 0076                 saved_w 007E              ??_isprint 0076                 putch@c 0029  
     ___lbdiv@dividend 0026        ___lbmod@divisor 0020             ___altoft@c 0028        ___lbmod@counter 0023  
 __end_of_lcd_put_byte 0562             ___ftadd@f1 004A             ___ftadd@f2 004D             ___ftge@ff1 0020  
           ___ftge@ff2 0023             ___ftdiv@f1 002B             ___ftdiv@f2 0028             ___ftdiv@f3 0032  
           ___ftneg@f1 0020    ___bmul@multiplicand 0029             ___ftmul@f1 003B             ___ftmul@f2 003E  
           ___ftsub@f1 0059             ___ftsub@f2 0056             ___fttol@f1 002E         __pcstackCOMMON 0070  
           ___lltoft@c 0028          __end_of_scale 0238          __end_of_putch 0D85       ___lbdiv@quotient 0028  
           __div_to_l_ 1734      lcd_gotoxy@address 0027        __div_to_l_@exp1 0033        __div_to_l_@cntr 0032  
              ??_scale 004D        __div_to_l_@quot 002E                ??_putch 0076             __pbssBANK0 0069  
           __pbssBANK1 00B9          __div_to_l_@f1 0020          __div_to_l_@f2 0023             __pmaintext 16A2  
              ?___bmul 0029                ?___ftge 0020                ?___wmul 0020             __pintentry 0004  
              _CCP1CON 0017              ?___altoft 0028                ?_fround 0056              ?___ftpack 0020  
              ?_printf 0060              ?___lltoft 0028                _T1CKPS0 0084                _T1CKPS1 0085  
           _lcd_gotoxy 03CE              ?_lcd_busy 0070              ?_lcd_init 0070              ?_lcd_putc 0070  
           _scale$4114 0051        __size_of___bmul 000E        __size_of___ftge 002C                ___awdiv 0238  
              ___lbdiv 06AB                ___ftadd 070E                ___awmod 027D                ___lbmod 06C6  
              ___ftdiv 003E                ___ftneg 0EBA                ___lldiv 0E72        __size_of___wmul 0019  
              ___ftmul 02BA                ___llmod 0D85                ___ftsub 06F8                ___fttol 0E17  
           ??___altoft 0076             ??___ftpack 0025        __size_of_fround 0105             ??___lltoft 0076  
      __size_of_printf 0579            ?__div_to_l_ 0020                _dpowers 1054           __size_of_abs 000E  
              _isdigit 0DEF       ___awmod@dividend 0022                _isprint 0589  __size_of_lcd_put_byte 008F  
           ??_lcd_busy 0020             ??_lcd_init 0025             ??_lcd_putc 0076   end_of_initialization 07DD  
       lcd_put_byte@rs 0023        ___lldiv@divisor 0020        ___lldiv@counter 002C                printf@c 00B8  
              printf@f 00AC         __tdiv_to_l_@f1 0020         __tdiv_to_l_@f2 0023          ??__tdiv_to_l_ 0026  
         _lcd_put_byte 04D3       ___lbmod@dividend 0022            ?_lcd_gotoxy 0025            ___lbmod@rem 0024  
          printf@integ 00A5            ___ftdiv@exp 0035            printf@width 00B1    __size_of__div_to_l_ 00BF  
          ___ftmul@exp 0044         __end_of___bmul 0337         __end_of___ftge 0DEF         __end_of___wmul 0E17  
       __end_of_fround 06AB         __end_of_printf 0D7F    start_initialization 07D0    __end_of__tdiv_to_l_ 1000  
          __end_of_abs 16A2        ___llmod@divisor 002D        ___llmod@counter 0035               ??___bmul 0076  
             ??___ftge 0076    __size_of_lcd_gotoxy 0018               ??___wmul 0076               ??_fround 0076  
             ??_printf 0064      __size_of___altoft 002F             fround@prec 005F      __size_of___ftpack 003E  
    __size_of___lltoft 0020            __pbssCOMMON 0076          __pcstackBANK0 0020          __pcstackBANK1 00A0  
         _isdigit$3670 0020      __size_of_lcd_busy 0027      __size_of_lcd_init 00BE      __size_of_lcd_putc 002F  
             ?___awdiv 0026               ?___lbdiv 0025               ?___ftadd 004A               ?___awmod 0020  
             ?___lbmod 0020              __ptext760 06F8              __ptext761 00A6              __ptext770 0562  
            __ptext762 05A6              __ptext771 04D3              __ptext763 03CE              __ptext780 06C6  
            __ptext772 027D              __ptext764 0415              __ptext781 06AB              __ptext773 0E72  
            __ptext765 0EC2              __ptext757 0806              __ptext790 0000              __ptext782 0DFE  
            __ptext774 0DC3              __ptext766 000F              __ptext758 0D7F              __ptext783 0329  
            __ptext775 0EBA              __ptext767 02BA              __ptext759 03E6              __ptext784 1734  
            __ptext776 0D85              __ptext768 003E              __ptext785 0F89              __ptext777 0238  
            __ptext769 070E              __ptext786 0DEF              __ptext778 0E17              __ptext787 0589  
            __ptext779 0337              __ptext788 1670              __ptext789 1694               ?___ftdiv 0028  
             ?___ftneg 0020               ?___lldiv 0020               ?___ftmul 003B               ?___llmod 002D  
             ?___ftsub 0056              __npowers_ 1006               ?___fttol 002E              __pstrings 1000  
          __tdiv_to_l_ 0F89           ??__div_to_l_ 0026               ?_isdigit 0070               ?_isprint 0070  
       __size_of_scale 0192         __size_of_putch 0006      interrupt_function 0004         ___wmul@product 0024  
   __end_of__div_to_l_ 17F3            __stringbase 1005      ___wmul@multiplier 0020             printf@_val 00A8  
           printf@flag 00AD             printf@fval 00B3             printf@prec 00B6              lcd_putc@c 0028  
         ??_lcd_gotoxy 0076       lcd_put_byte@temp 0024           _isprint$3673 0020     __end_of_lcd_gotoxy 03E6  
     __size_of___awdiv 0045       __size_of___lbdiv 001B       __size_of___ftadd 00C2       __size_of___awmod 003D  
     __size_of___lbmod 001C       __size_of___ftdiv 0068       __size_of___ftneg 0008       __size_of___lldiv 0048  
             ___altoft 000F       __size_of___ftmul 006F       __size_of___llmod 003E       __size_of___ftsub 0016  
     __size_of___fttol 005B               _ccp1_old 0076               ___ftpack 0337            _fround$4112 005C  
          _fround$4113 0059               ___lltoft 0EC2       __size_of_isdigit 000F       __size_of_isprint 000E  
             __powers_ 102D               _lcd_busy 0562               _lcd_init 0415               _lcd_putc 03E6  
        __size_of_main 0092          __size_of_ngat 0024              printf@exp 00AF               isdigit@c 0021  
             scale@scl 0054               intlevel1 0000       __tdiv_to_l_@exp1 002E       __tdiv_to_l_@cntr 002D  
     __tdiv_to_l_@quot 0029       ___lldiv@dividend 0024               isprint@c 0021              stringcode 1000  
             printf@ap 00A4           ?__tdiv_to_l_ 0020            _printf$3160 00A0       ___lldiv@quotient 0028  
             stringdir 1000               stringtab 1000  
