

HI-TECH Software PIC PRO Macro Assembler V9.83 build 10920 
                                                                                               Tue Dec 06 10:40:03 2022

HI-TECH Software Omniscient Code Generator (PRO mode) build 10920
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	config,global,class=CONFIG,delta=2
     5                           	psect	strings,global,class=STRING,delta=2
     6                           	psect	cinit,global,class=CODE,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	maintext,global,class=CODE,delta=2
    12                           	psect	text526,local,class=CODE,delta=2
    13                           	psect	text531,local,class=CODE,delta=2
    14                           	psect	text532,local,class=CODE,delta=2
    15                           	psect	text535,local,class=CODE,delta=2
    16                           	psect	text553,local,class=CODE,delta=2
    17                           	psect	text557,local,class=CODE,delta=2
    18                           	psect	intentry,global,class=CODE,delta=2
    19                           	psect	text558,local,class=CODE,delta=2
    20                           	psect	pa_nodes,global,class=CODE,delta=2
    21                           	dabs	1,0x7E,2
    22  000A                     	;#
    23                           
    24                           	psect	config
    25  2007  E3C2               	dw	58306	;#
    26                           
    27                           	psect	strings
    28  1000                     __pstrings:	
    29  1000                     stringtab:	
    30                           ;	global	stringdir,stringtab,__stringbase
    31                           
    32  1000                     stringcode:	
    33                           ;	String table - string pointers are 1 byte each
    34                           
    35  1000                     stringdir:	
    36  1000  3010               	movlw	high stringdir
    37  1001  008A               	movwf	10
    38  1002  0804               	movf	4,w
    39  1003  0A84               	incf	4,f
    40  1004  0782               	addwf	2,f
    41  1005                     __stringbase:	
    42  1005  3400               	retlw	0
    43  1006                     __npowers_:	
    44  1006  3400               	retlw	0
    45  1007  3480               	retlw	128
    46  1008  343F               	retlw	63
    47  1009  34CD               	retlw	205
    48  100A  34CC               	retlw	204
    49  100B  343D               	retlw	61
    50  100C  34D7               	retlw	215
    51  100D  3423               	retlw	35
    52  100E  343C               	retlw	60
    53  100F  3412               	retlw	18
    54  1010  3483               	retlw	131
    55  1011  343A               	retlw	58
    56  1012  34B7               	retlw	183
    57  1013  34D1               	retlw	209
    58  1014  3438               	retlw	56
    59  1015  34C6               	retlw	198
    60  1016  3427               	retlw	39
    61  1017  3437               	retlw	55
    62  1018  3438               	retlw	56
    63  1019  3486               	retlw	134
    64  101A  3435               	retlw	53
    65  101B  34C0               	retlw	192
    66  101C  34D6               	retlw	214
    67  101D  3433               	retlw	51
    68  101E  34CC               	retlw	204
    69  101F  342B               	retlw	43
    70  1020  3432               	retlw	50
    71  1021  3470               	retlw	112
    72  1022  3489               	retlw	137
    73  1023  3430               	retlw	48
    74  1024  34E7               	retlw	231
    75  1025  34DB               	retlw	219
    76  1026  342E               	retlw	46
    77  1027  34E5               	retlw	229
    78  1028  343C               	retlw	60
    79  1029  341E               	retlw	30
    80  102A  3442               	retlw	66
    81  102B  34A2               	retlw	162
    82  102C  340D               	retlw	13
    83  102D                     __powers_:	
    84  102D  3400               	retlw	0
    85  102E  3480               	retlw	128
    86  102F  343F               	retlw	63
    87  1030  3400               	retlw	0
    88  1031  3420               	retlw	32
    89  1032  3441               	retlw	65
    90  1033  3400               	retlw	0
    91  1034  34C8               	retlw	200
    92  1035  3442               	retlw	66
    93  1036  3400               	retlw	0
    94  1037  347A               	retlw	122
    95  1038  3444               	retlw	68
    96  1039  3440               	retlw	64
    97  103A  341C               	retlw	28
    98  103B  3446               	retlw	70
    99  103C  3450               	retlw	80
   100  103D  34C3               	retlw	195
   101  103E  3447               	retlw	71
   102  103F  3424               	retlw	36
   103  1040  3474               	retlw	116
   104  1041  3449               	retlw	73
   105  1042  3497               	retlw	151
   106  1043  3418               	retlw	24
   107  1044  344B               	retlw	75
   108  1045  34BC               	retlw	188
   109  1046  34BE               	retlw	190
   110  1047  344C               	retlw	76
   111  1048  346B               	retlw	107
   112  1049  346E               	retlw	110
   113  104A  344E               	retlw	78
   114  104B  3403               	retlw	3
   115  104C  3415               	retlw	21
   116  104D  3450               	retlw	80
   117  104E  3479               	retlw	121
   118  104F  34AD               	retlw	173
   119  1050  3460               	retlw	96
   120  1051  34F3               	retlw	243
   121  1052  3449               	retlw	73
   122  1053  3471               	retlw	113
   123  1054                     _dpowers:	
   124  1054  3401               	retlw	1
   125  1055  3400               	retlw	0
   126  1056  3400               	retlw	0
   127  1057  3400               	retlw	0
   128  1058  340A               	retlw	10
   129  1059  3400               	retlw	0
   130  105A  3400               	retlw	0
   131  105B  3400               	retlw	0
   132  105C  3464               	retlw	100
   133  105D  3400               	retlw	0
   134  105E  3400               	retlw	0
   135  105F  3400               	retlw	0
   136  1060  34E8               	retlw	232
   137  1061  3403               	retlw	3
   138  1062  3400               	retlw	0
   139  1063  3400               	retlw	0
   140  1064  3410               	retlw	16
   141  1065  3427               	retlw	39
   142  1066  3400               	retlw	0
   143  1067  3400               	retlw	0
   144  1068  34A0               	retlw	160
   145  1069  3486               	retlw	134
   146  106A  3401               	retlw	1
   147  106B  3400               	retlw	0
   148  106C  3440               	retlw	64
   149  106D  3442               	retlw	66
   150  106E  340F               	retlw	15
   151  106F  3400               	retlw	0
   152  1070  3480               	retlw	128
   153  1071  3496               	retlw	150
   154  1072  3498               	retlw	152
   155  1073  3400               	retlw	0
   156  1074  3400               	retlw	0
   157  1075  34E1               	retlw	225
   158  1076  34F5               	retlw	245
   159  1077  3405               	retlw	5
   160  1078  3400               	retlw	0
   161  1079  34CA               	retlw	202
   162  107A  349A               	retlw	154
   163  107B  343B               	retlw	59
   164  0001                     _TMR0	set	1
   165  005F                     _GIE	set	95
   166  0041                     _RD1	set	65
   167  0042                     _RD2	set	66
   168  0043                     _RD3	set	67
   169  0044                     _RD4	set	68
   170  0045                     _RD5	set	69
   171  0046                     _RD6	set	70
   172  0047                     _RD7	set	71
   173  005D                     _T0IE	set	93
   174  005A                     _T0IF	set	90
   175  040B                     _PSA	set	1035
   176  040D                     _T0CS	set	1037
   177  040C                     _T0SE	set	1036
   178  0441                     _TRISD1	set	1089
   179  0442                     _TRISD2	set	1090
   180  0443                     _TRISD3	set	1091
   181  0444                     _TRISD4	set	1092
   182  0445                     _TRISD5	set	1093
   183  0446                     _TRISD6	set	1094
   184  0447                     _TRISD7	set	1095
   185  0448                     _TRISE0	set	1096
   186  0188                     _ANSEL	set	392
   187  0189                     _ANSELH	set	393
   188  107C                     STR_1:	
   189  107C  3476               	retlw	118	;'v'
   190  107D  343A               	retlw	58	;':'
   191  107E  3425               	retlw	37	;'%'
   192  107F  3433               	retlw	51	;'3'
   193  1080  342E               	retlw	46	;'.'
   194  1081  3432               	retlw	50	;'2'
   195  1082  3466               	retlw	102	;'f'
   196  1083  3400               	retlw	0
   197                           
   198                           	psect	cinit
   199  07C7                     start_initialization:	
   200                           
   201                           ; Clear objects allocated to BANK0
   202  07C7  01EB               	clrf	__pbssBANK0& (0+127)
   203  07C8  01EC               	clrf	(__pbssBANK0+1)& (0+127)
   204  07C9                     end_of_initialization:	
   205                           ;End of C runtime variable initialization code
   206                           
   207  07C9  0183               	clrf	3
   208  07CA  160A  118A  2F71   	ljmp	_main	;jump to C main() function
   209                           
   210                           	psect	bssBANK0
   211  006B                     __pbssBANK0:	
   212  006B                     _dem:	
   213  006B                     	ds	2
   214                           
   215                           	psect	cstackBANK1
   216  00A0                     __pcstackBANK1:	
   217  00A0                     _printf$3162:	
   218                           
   219                           ; 4 bytes @ 0x0
   220  00A0                     	ds	4
   221  00A4                     printf@ap:	
   222                           
   223                           ; 1 bytes @ 0x4
   224  00A4                     	ds	1
   225  00A5                     printf@integ:	
   226                           
   227                           ; 3 bytes @ 0x5
   228  00A5                     	ds	3
   229  00A8                     printf@_val:	
   230                           
   231                           ; 4 bytes @ 0x8
   232  00A8                     	ds	4
   233  00AC                     printf@flag:	
   234                           
   235                           ; 2 bytes @ 0xC
   236  00AC                     	ds	2
   237  00AE                     printf@f:	
   238                           
   239                           ; 1 bytes @ 0xE
   240  00AE                     	ds	1
   241  00AF                     printf@width:	
   242                           
   243                           ; 2 bytes @ 0xF
   244  00AF                     	ds	2
   245  00B1                     printf@exp:	
   246                           
   247                           ; 2 bytes @ 0x11
   248  00B1                     	ds	2
   249  00B3                     printf@fval:	
   250                           
   251                           ; 3 bytes @ 0x13
   252  00B3                     	ds	3
   253  00B6                     printf@prec:	
   254                           
   255                           ; 2 bytes @ 0x16
   256  00B6                     	ds	2
   257  00B8                     printf@c:	
   258                           
   259                           ; 1 bytes @ 0x18
   260  00B8                     	ds	1
   261                           
   262                           	psect	cstackCOMMON
   263  0070                     __pcstackCOMMON:	
   264  0070                     ?_lcd_init:	
   265  0070                     ?_lcd_putc:	
   266                           ; 0 bytes @ 0x0
   267                           
   268  0070                     ?_isprint:	
   269                           ; 0 bytes @ 0x0
   270                           
   271  0070                     ?_isdigit:	
   272                           ; 1 bit 
   273                           
   274  0070                     ?_main:	
   275                           ; 1 bit 
   276                           
   277  0070                     ?_ngat:	
   278                           ; 0 bytes @ 0x0
   279                           
   280  0070                     ??_ngat:	
   281                           ; 0 bytes @ 0x0
   282                           
   283  0070                     ?_putch:	
   284                           ; 0 bytes @ 0x0
   285                           
   286  0070                     ?_lcd_busy:	
   287                           ; 0 bytes @ 0x0
   288                           
   289                           
   290                           ; 1 bytes @ 0x0
   291  0070                     	ds	2
   292  0072                     ?_lcd_put_byte:	
   293  0072                     ??_lcd_busy:	
   294                           ; 0 bytes @ 0x2
   295                           
   296  0072                     ??_isprint:	
   297                           ; 0 bytes @ 0x2
   298                           
   299  0072                     ??_isdigit:	
   300                           ; 0 bytes @ 0x2
   301                           
   302  0072                     ?___ftge:	
   303                           ; 0 bytes @ 0x2
   304                           
   305  0072                     ?___lbmod:	
   306                           ; 1 bit 
   307                           
   308  0072                     ?___wmul:	
   309                           ; 1 bytes @ 0x2
   310                           
   311  0072                     ?___awmod:	
   312                           ; 2 bytes @ 0x2
   313                           
   314  0072                     ?___ftpack:	
   315                           ; 2 bytes @ 0x2
   316                           
   317  0072                     ?___ftneg:	
   318                           ; 3 bytes @ 0x2
   319                           
   320  0072                     ?__tdiv_to_l_:	
   321                           ; 3 bytes @ 0x2
   322                           
   323  0072                     ?__div_to_l_:	
   324                           ; 4 bytes @ 0x2
   325                           
   326  0072                     ?___lldiv:	
   327                           ; 4 bytes @ 0x2
   328                           
   329  0072                     lcd_put_byte@b:	
   330                           ; 4 bytes @ 0x2
   331                           
   332  0072                     _isdigit$3670:	
   333                           ; 1 bytes @ 0x2
   334                           
   335  0072                     _isprint$3673:	
   336                           ; 1 bytes @ 0x2
   337                           
   338  0072                     ___lbmod@divisor:	
   339                           ; 1 bytes @ 0x2
   340                           
   341  0072                     ___wmul@multiplier:	
   342                           ; 1 bytes @ 0x2
   343                           
   344  0072                     ___awmod@divisor:	
   345                           ; 2 bytes @ 0x2
   346                           
   347  0072                     ___ftneg@f1:	
   348                           ; 2 bytes @ 0x2
   349                           
   350  0072                     ___ftge@ff1:	
   351                           ; 3 bytes @ 0x2
   352                           
   353  0072                     __tdiv_to_l_@f1:	
   354                           ; 3 bytes @ 0x2
   355                           
   356  0072                     __div_to_l_@f1:	
   357                           ; 3 bytes @ 0x2
   358                           
   359  0072                     ___ftpack@arg:	
   360                           ; 3 bytes @ 0x2
   361                           
   362  0072                     ___lldiv@divisor:	
   363                           ; 3 bytes @ 0x2
   364                           
   365                           
   366                           ; 4 bytes @ 0x2
   367  0072                     	ds	1
   368  0073                     ??_lcd_put_byte:	
   369  0073                     ??___lbmod:	
   370                           ; 0 bytes @ 0x3
   371                           
   372  0073                     lcd_busy@busy:	
   373                           ; 0 bytes @ 0x3
   374                           
   375  0073                     isdigit@c:	
   376                           ; 1 bytes @ 0x3
   377                           
   378  0073                     isprint@c:	
   379                           ; 1 bytes @ 0x3
   380                           
   381                           
   382                           ; 1 bytes @ 0x3
   383  0073                     	ds	1
   384  0074                     ___lbmod@dividend:	
   385  0074                     ___wmul@multiplicand:	
   386                           ; 1 bytes @ 0x4
   387                           
   388  0074                     ___awmod@dividend:	
   389                           ; 2 bytes @ 0x4
   390                           
   391                           
   392                           ; 2 bytes @ 0x4
   393  0074                     	ds	1
   394  0075                     ??___ftneg:	
   395  0075                     lcd_put_byte@rs:	
   396                           ; 0 bytes @ 0x5
   397                           
   398  0075                     ___lbmod@counter:	
   399                           ; 1 bytes @ 0x5
   400                           
   401  0075                     ___ftpack@exp:	
   402                           ; 1 bytes @ 0x5
   403                           
   404  0075                     ___ftge@ff2:	
   405                           ; 1 bytes @ 0x5
   406                           
   407  0075                     __tdiv_to_l_@f2:	
   408                           ; 3 bytes @ 0x5
   409                           
   410  0075                     __div_to_l_@f2:	
   411                           ; 3 bytes @ 0x5
   412                           
   413                           
   414                           ; 3 bytes @ 0x5
   415  0075                     	ds	1
   416  0076                     ??___wmul:	
   417  0076                     ??___awmod:	
   418                           ; 0 bytes @ 0x6
   419                           
   420  0076                     lcd_put_byte@temp:	
   421                           ; 0 bytes @ 0x6
   422                           
   423  0076                     ___lbmod@rem:	
   424                           ; 1 bytes @ 0x6
   425                           
   426  0076                     ___awmod@counter:	
   427                           ; 1 bytes @ 0x6
   428                           
   429  0076                     ___ftpack@sign:	
   430                           ; 1 bytes @ 0x6
   431                           
   432  0076                     ___wmul@product:	
   433                           ; 1 bytes @ 0x6
   434                           
   435  0076                     ___lldiv@dividend:	
   436                           ; 2 bytes @ 0x6
   437                           
   438                           
   439                           ; 4 bytes @ 0x6
   440  0076                     	ds	1
   441  0077                     ??_lcd_init:	
   442  0077                     ?_lcd_gotoxy:	
   443                           ; 0 bytes @ 0x7
   444                           
   445  0077                     ??___ftpack:	
   446                           ; 0 bytes @ 0x7
   447                           
   448  0077                     ?___lbdiv:	
   449                           ; 0 bytes @ 0x7
   450                           
   451  0077                     lcd_gotoxy@row:	
   452                           ; 1 bytes @ 0x7
   453                           
   454  0077                     ___lbdiv@divisor:	
   455                           ; 1 bytes @ 0x7
   456                           
   457  0077                     ___awmod@sign:	
   458                           ; 1 bytes @ 0x7
   459                           
   460                           
   461                           ; 1 bytes @ 0x7
   462  0077                     	ds	1
   463  0078                     ??_lcd_gotoxy:	
   464  0078                     ??__tdiv_to_l_:	
   465                           ; 0 bytes @ 0x8
   466                           
   467  0078                     ??___lbdiv:	
   468                           ; 0 bytes @ 0x8
   469                           
   470  0078                     ??___ftge:	
   471                           ; 0 bytes @ 0x8
   472                           
   473  0078                     ?___awdiv:	
   474                           ; 0 bytes @ 0x8
   475                           
   476  0078                     lcd_gotoxy@col:	
   477                           ; 2 bytes @ 0x8
   478                           
   479  0078                     ___lbdiv@dividend:	
   480                           ; 1 bytes @ 0x8
   481                           
   482  0078                     ___awdiv@divisor:	
   483                           ; 1 bytes @ 0x8
   484                           
   485                           
   486                           ; 2 bytes @ 0x8
   487  0078                     	ds	1
   488  0079                     lcd_gotoxy@address:	
   489  0079                     ___lbdiv@counter:	
   490                           ; 1 bytes @ 0x9
   491                           
   492                           
   493                           ; 1 bytes @ 0x9
   494  0079                     	ds	1
   495  007A                     ??_lcd_putc:	
   496  007A                     ??___awtoft:	
   497                           ; 0 bytes @ 0xA
   498                           
   499  007A                     ??___llmod:	
   500                           ; 0 bytes @ 0xA
   501                           
   502  007A                     ??___lldiv:	
   503                           ; 0 bytes @ 0xA
   504                           
   505  007A                     ??___lltoft:	
   506                           ; 0 bytes @ 0xA
   507                           
   508  007A                     lcd_putc@c:	
   509                           ; 0 bytes @ 0xA
   510                           
   511  007A                     ___lbdiv@quotient:	
   512                           ; 1 bytes @ 0xA
   513                           
   514  007A                     ___awtoft@sign:	
   515                           ; 1 bytes @ 0xA
   516                           
   517  007A                     ___llmod@counter:	
   518                           ; 1 bytes @ 0xA
   519                           
   520  007A                     ___lltoft@exp:	
   521                           ; 1 bytes @ 0xA
   522                           
   523  007A                     ___awdiv@dividend:	
   524                           ; 1 bytes @ 0xA
   525                           
   526                           
   527                           ; 2 bytes @ 0xA
   528  007A                     	ds	1
   529  007B                     ??_putch:	
   530  007B                     ?___bmul:	
   531                           ; 0 bytes @ 0xB
   532                           
   533  007B                     putch@c:	
   534                           ; 1 bytes @ 0xB
   535                           
   536  007B                     ___bmul@multiplicand:	
   537                           ; 1 bytes @ 0xB
   538                           
   539                           
   540                           ; 1 bytes @ 0xB
   541  007B                     	ds	1
   542  007C                     ??_fround:	
   543  007C                     ??___bmul:	
   544                           ; 0 bytes @ 0xC
   545                           
   546  007C                     ??___ftsub:	
   547                           ; 0 bytes @ 0xC
   548                           
   549  007C                     ??___awdiv:	
   550                           ; 0 bytes @ 0xC
   551                           
   552                           
   553                           	psect	cstackBANK0
   554  0020                     __pcstackBANK0:	
   555                           ; 0 bytes @ 0xC
   556                           
   557  0020                     ??__div_to_l_:	
   558  0020                     ?___awtoft:	
   559                           ; 0 bytes @ 0x0
   560                           
   561  0020                     ?___lltoft:	
   562                           ; 3 bytes @ 0x0
   563                           
   564  0020                     ___bmul@product:	
   565                           ; 3 bytes @ 0x0
   566                           
   567  0020                     ___awdiv@counter:	
   568                           ; 1 bytes @ 0x0
   569                           
   570  0020                     ___awtoft@c:	
   571                           ; 1 bytes @ 0x0
   572                           
   573  0020                     ___lldiv@quotient:	
   574                           ; 2 bytes @ 0x0
   575                           
   576  0020                     ___lltoft@c:	
   577                           ; 4 bytes @ 0x0
   578                           
   579  0020                     __tdiv_to_l_@quot:	
   580                           ; 4 bytes @ 0x0
   581                           
   582                           
   583                           ; 4 bytes @ 0x0
   584  0020                     	ds	1
   585  0021                     ___bmul@multiplier:	
   586  0021                     ___awdiv@sign:	
   587                           ; 1 bytes @ 0x1
   588                           
   589                           
   590                           ; 1 bytes @ 0x1
   591  0021                     	ds	1
   592  0022                     ___awdiv@quotient:	
   593                           
   594                           ; 2 bytes @ 0x2
   595  0022                     	ds	1
   596  0023                     ?___ftdiv:	
   597  0023                     ___ftdiv@f2:	
   598                           ; 3 bytes @ 0x3
   599                           
   600                           
   601                           ; 3 bytes @ 0x3
   602  0023                     	ds	1
   603  0024                     ?___fttol:	
   604  0024                     ___lldiv@counter:	
   605                           ; 4 bytes @ 0x4
   606                           
   607  0024                     __tdiv_to_l_@cntr:	
   608                           ; 1 bytes @ 0x4
   609                           
   610  0024                     ___fttol@f1:	
   611                           ; 1 bytes @ 0x4
   612                           
   613                           
   614                           ; 3 bytes @ 0x4
   615  0024                     	ds	1
   616  0025                     ?___llmod:	
   617  0025                     __tdiv_to_l_@exp1:	
   618                           ; 4 bytes @ 0x5
   619                           
   620  0025                     ___llmod@divisor:	
   621                           ; 1 bytes @ 0x5
   622                           
   623                           
   624                           ; 4 bytes @ 0x5
   625  0025                     	ds	1
   626  0026                     ___ftdiv@f1:	
   627                           
   628                           ; 3 bytes @ 0x6
   629  0026                     	ds	2
   630  0028                     ??___fttol:	
   631  0028                     __div_to_l_@quot:	
   632                           ; 0 bytes @ 0x8
   633                           
   634                           
   635                           ; 4 bytes @ 0x8
   636  0028                     	ds	1
   637  0029                     ??___ftdiv:	
   638  0029                     ___llmod@dividend:	
   639                           ; 0 bytes @ 0x9
   640                           
   641                           
   642                           ; 4 bytes @ 0x9
   643  0029                     	ds	2
   644  002B                     ___fttol@sign1:	
   645                           
   646                           ; 1 bytes @ 0xB
   647  002B                     	ds	1
   648  002C                     ___ftdiv@cntr:	
   649  002C                     __div_to_l_@cntr:	
   650                           ; 1 bytes @ 0xC
   651                           
   652  002C                     ___fttol@lval:	
   653                           ; 1 bytes @ 0xC
   654                           
   655                           
   656                           ; 4 bytes @ 0xC
   657  002C                     	ds	1
   658  002D                     __div_to_l_@exp1:	
   659  002D                     ___ftdiv@f3:	
   660                           ; 1 bytes @ 0xD
   661                           
   662                           
   663                           ; 3 bytes @ 0xD
   664  002D                     	ds	3
   665  0030                     ___ftdiv@exp:	
   666  0030                     ___fttol@exp1:	
   667                           ; 1 bytes @ 0x10
   668                           
   669                           
   670                           ; 1 bytes @ 0x10
   671  0030                     	ds	1
   672  0031                     ___ftdiv@sign:	
   673                           
   674                           ; 1 bytes @ 0x11
   675  0031                     	ds	1
   676  0032                     ?___ftmul:	
   677  0032                     ___ftmul@f1:	
   678                           ; 3 bytes @ 0x12
   679                           
   680                           
   681                           ; 3 bytes @ 0x12
   682  0032                     	ds	3
   683  0035                     ___ftmul@f2:	
   684                           
   685                           ; 3 bytes @ 0x15
   686  0035                     	ds	3
   687  0038                     ??___ftmul:	
   688                           
   689                           ; 0 bytes @ 0x18
   690  0038                     	ds	3
   691  003B                     ___ftmul@exp:	
   692                           
   693                           ; 1 bytes @ 0x1B
   694  003B                     	ds	1
   695  003C                     ___ftmul@f3_as_product:	
   696                           
   697                           ; 3 bytes @ 0x1C
   698  003C                     	ds	3
   699  003F                     ___ftmul@cntr:	
   700                           
   701                           ; 1 bytes @ 0x1F
   702  003F                     	ds	1
   703  0040                     ___ftmul@sign:	
   704                           
   705                           ; 1 bytes @ 0x20
   706  0040                     	ds	1
   707  0041                     ?_scale:	
   708  0041                     ?___ftadd:	
   709                           ; 3 bytes @ 0x21
   710                           
   711  0041                     ___ftadd@f1:	
   712                           ; 3 bytes @ 0x21
   713                           
   714                           
   715                           ; 3 bytes @ 0x21
   716  0041                     	ds	3
   717  0044                     ??_scale:	
   718  0044                     ___ftadd@f2:	
   719                           ; 0 bytes @ 0x24
   720                           
   721                           
   722                           ; 3 bytes @ 0x24
   723  0044                     	ds	3
   724  0047                     ??___ftadd:	
   725                           
   726                           ; 0 bytes @ 0x27
   727  0047                     	ds	1
   728  0048                     _scale$4106:	
   729                           
   730                           ; 3 bytes @ 0x28
   731  0048                     	ds	2
   732  004A                     ___ftadd@sign:	
   733                           
   734                           ; 1 bytes @ 0x2A
   735  004A                     	ds	1
   736  004B                     scale@scl:	
   737  004B                     ___ftadd@exp2:	
   738                           ; 1 bytes @ 0x2B
   739                           
   740                           
   741                           ; 1 bytes @ 0x2B
   742  004B                     	ds	1
   743  004C                     ___ftadd@exp1:	
   744                           
   745                           ; 1 bytes @ 0x2C
   746  004C                     	ds	1
   747  004D                     ?_fround:	
   748  004D                     ?___ftsub:	
   749                           ; 3 bytes @ 0x2D
   750                           
   751  004D                     ___ftsub@f2:	
   752                           ; 3 bytes @ 0x2D
   753                           
   754                           
   755                           ; 3 bytes @ 0x2D
   756  004D                     	ds	3
   757  0050                     ___ftsub@f1:	
   758  0050                     _fround$4105:	
   759                           ; 3 bytes @ 0x30
   760                           
   761                           
   762                           ; 3 bytes @ 0x30
   763  0050                     	ds	3
   764  0053                     _fround$4104:	
   765                           
   766                           ; 3 bytes @ 0x33
   767  0053                     	ds	3
   768  0056                     fround@prec:	
   769                           
   770                           ; 1 bytes @ 0x36
   771  0056                     	ds	1
   772  0057                     ?_printf:	
   773                           
   774                           ; 2 bytes @ 0x37
   775  0057                     	ds	3
   776  005A                     ??_printf:	
   777                           
   778                           ; 0 bytes @ 0x3A
   779  005A                     	ds	5
   780  005F                     ??_main:	
   781                           
   782                           ; 0 bytes @ 0x3F
   783  005F                     	ds	3
   784  0062                     main@v:	
   785                           
   786                           ; 3 bytes @ 0x42
   787  0062                     	ds	3
   788  0065                     main@count:	
   789                           
   790                           ; 2 bytes @ 0x45
   791  0065                     	ds	2
   792  0067                     main@count1:	
   793                           
   794                           ; 2 bytes @ 0x47
   795  0067                     	ds	2
   796  0069                     main@count2:	
   797                           
   798                           ; 2 bytes @ 0x49
   799  0069                     	ds	2
   800                           
   801                           	psect	maintext
   802  1771                     __pmaintext:	
   803 ;;Data sizes: Strings 8, constant 118, data 0, bss 2, persistent 0 stack 0
   804 ;;Auto spaces:   Size  Autos    Used
   805 ;; COMMON          14     12      12
   806 ;; BANK0           80     75      77
   807 ;; BANK1           80     25      25
   808 ;; BANK3           96      0       0
   809 ;; BANK2           96      0       0
   810 ;;
   811 ;; Pointer list with targets:
   812 ;; ?___ftpack	float  size(1) Largest target is 0
   813 ;;
   814 ;; ?___lldiv	unsigned long  size(1) Largest target is 0
   815 ;;
   816 ;; ?___llmod	unsigned long  size(1) Largest target is 0
   817 ;;
   818 ;; ?___ftsub	float  size(1) Largest target is 0
   819 ;;
   820 ;; ?___lltoft	float  size(1) Largest target is 0
   821 ;;
   822 ;; ?__tdiv_to_l_	unsigned long  size(1) Largest target is 0
   823 ;;
   824 ;; ?__div_to_l_	unsigned long  size(1) Largest target is 0
   825 ;;
   826 ;; ?___fttol	long  size(1) Largest target is 0
   827 ;;
   828 ;; ?___ftadd	float  size(1) Largest target is 0
   829 ;;
   830 ;; ?___ftneg	float  size(1) Largest target is 0
   831 ;;
   832 ;; ?___awmod	int  size(1) Largest target is 40
   833 ;;		 -> dpowers(CODE[40]), 
   834 ;;
   835 ;; ?___awdiv	int  size(1) Largest target is 0
   836 ;;
   837 ;; ?_scale	int  size(1) Largest target is 0
   838 ;;
   839 ;; ?___wmul	unsigned int  size(1) Largest target is 0
   840 ;;
   841 ;; ?_fround	unsigned int  size(1) Largest target is 0
   842 ;;
   843 ;; ?___ftdiv	float  size(1) Largest target is 0
   844 ;;
   845 ;; ?___awtoft	float  size(1) Largest target is 0
   846 ;;
   847 ;; ?___ftmul	float  size(1) Largest target is 0
   848 ;;
   849 ;; printf@f	PTR const unsigned char  size(1) Largest target is 8
   850 ;;		 -> STR_1(CODE[8]), 
   851 ;;
   852 ;; ?_printf	int  size(1) Largest target is 0
   853 ;;
   854 ;; printf@ap	PTR void [1] size(1) Largest target is 2
   855 ;;		 -> ?_printf(BANK0[2]), 
   856 ;;
   857 ;; S3151$_cp	PTR const unsigned char  size(1) Largest target is 0
   858 ;;
   859 ;; _val._str._cp	PTR const unsigned char  size(1) Largest target is 0
   860 ;;
   861 ;;
   862 ;; Critical Paths under _main in COMMON
   863 ;;
   864 ;;   _printf->_putch
   865 ;;   _printf->___awdiv
   866 ;;   _putch->_lcd_putc
   867 ;;   _lcd_putc->_lcd_gotoxy
   868 ;;   _scale->___awdiv
   869 ;;   _scale->___bmul
   870 ;;   _fround->___bmul
   871 ;;   _lcd_gotoxy->_lcd_put_byte
   872 ;;   _lcd_init->_lcd_put_byte
   873 ;;   ___lltoft->___ftpack
   874 ;;   ___awtoft->___ftpack
   875 ;;   ___ftmul->___awdiv
   876 ;;   ___ftmul->___bmul
   877 ;;   ___ftdiv->___awtoft
   878 ;;   ___ftadd->___bmul
   879 ;;   ___llmod->___lldiv
   880 ;;   ___awdiv->___awmod
   881 ;;   ___fttol->___awdiv
   882 ;;   ___fttol->___bmul
   883 ;;   ___lbdiv->___lbmod
   884 ;;   ___bmul->___lbdiv
   885 ;;
   886 ;; Critical Paths under _ngat in COMMON
   887 ;;
   888 ;;   None.
   889 ;;
   890 ;; Critical Paths under _main in BANK0
   891 ;;
   892 ;;   _main->_printf
   893 ;;   _printf->_fround
   894 ;;   ___ftsub->___ftadd
   895 ;;   _scale->___ftmul
   896 ;;   _fround->___ftadd
   897 ;;   ___ftmul->___ftdiv
   898 ;;   ___ftdiv->___awtoft
   899 ;;   ___ftadd->___ftmul
   900 ;;   ___llmod->___lldiv
   901 ;;   ___fttol->___awdiv
   902 ;;
   903 ;; Critical Paths under _ngat in BANK0
   904 ;;
   905 ;;   None.
   906 ;;
   907 ;; Critical Paths under _main in BANK1
   908 ;;
   909 ;;   _main->_printf
   910 ;;
   911 ;; Critical Paths under _ngat in BANK1
   912 ;;
   913 ;;   None.
   914 ;;
   915 ;; Critical Paths under _main in BANK3
   916 ;;
   917 ;;   None.
   918 ;;
   919 ;; Critical Paths under _ngat in BANK3
   920 ;;
   921 ;;   None.
   922 ;;
   923 ;; Critical Paths under _main in BANK2
   924 ;;
   925 ;;   None.
   926 ;;
   927 ;; Critical Paths under _ngat in BANK2
   928 ;;
   929 ;;   None.
   930 ;;
   931 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   932 ;;
   933 ;;
   934 ;;Call Graph Tables:
   935 ;;
   936 ;; ---------------------------------------------------------------------------------
   937 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   938 ;; ---------------------------------------------------------------------------------
   939 ;; (0) _main                                                12    12      0   12579
   940 ;;                                             63 BANK0     12    12      0
   941 ;;                           _lcd_init
   942 ;;                           ___awtoft
   943 ;;                            ___ftdiv
   944 ;;                            ___ftmul
   945 ;;                         _lcd_gotoxy
   946 ;;                             _printf
   947 ;; ---------------------------------------------------------------------------------
   948 ;; (1) _printf                                              37    34      3   10603
   949 ;;                                             55 BANK0      8     5      3
   950 ;;                                              0 BANK1     25    25      0
   951 ;;                              _putch
   952 ;;                            _isdigit
   953 ;;                             ___wmul
   954 ;;                             ___ftge
   955 ;;                            ___ftneg
   956 ;;                            ___awdiv
   957 ;;                              _scale
   958 ;;                            ___ftmul
   959 ;;                             _fround
   960 ;;                            ___ftadd
   961 ;;                            ___fttol
   962 ;;                         __div_to_l_
   963 ;;                        __tdiv_to_l_
   964 ;;                           ___lltoft
   965 ;;                            ___ftsub
   966 ;;                            ___lldiv
   967 ;;                            ___llmod
   968 ;; ---------------------------------------------------------------------------------
   969 ;; (2) _putch                                                1     1      0     713
   970 ;;                                             11 COMMON     1     1      0
   971 ;;                           _lcd_putc
   972 ;; ---------------------------------------------------------------------------------
   973 ;; (3) _lcd_putc                                             1     1      0     691
   974 ;;                                             10 COMMON     1     1      0
   975 ;;                       _lcd_put_byte
   976 ;;                           _lcd_busy
   977 ;;                         _lcd_gotoxy
   978 ;;                            _isprint
   979 ;; ---------------------------------------------------------------------------------
   980 ;; (2) ___ftsub                                              6     0      6    1094
   981 ;;                                             45 BANK0      6     0      6
   982 ;;                            ___ftadd
   983 ;;                           ___lltoft (ARG)
   984 ;; ---------------------------------------------------------------------------------
   985 ;; (2) _scale                                               14    11      3    1688
   986 ;;                                             33 BANK0     11     8      3
   987 ;;                            ___awmod
   988 ;;                            ___awdiv
   989 ;;                            ___ftmul
   990 ;;                             ___bmul
   991 ;;                            ___fttol (ARG)
   992 ;; ---------------------------------------------------------------------------------
   993 ;; (2) _fround                                              13    10      3    1215
   994 ;;                                             45 BANK0     10     7      3
   995 ;;                            ___lbmod
   996 ;;                             ___bmul
   997 ;;                            ___lbdiv
   998 ;;                            ___ftmul
   999 ;;                            ___ftadd (ARG)
  1000 ;; ---------------------------------------------------------------------------------
  1001 ;; (4) _lcd_gotoxy                                           3     2      1     313
  1002 ;;                                              7 COMMON     3     2      1
  1003 ;;                       _lcd_put_byte
  1004 ;;                           _lcd_busy
  1005 ;; ---------------------------------------------------------------------------------
  1006 ;; (1) _lcd_init                                             4     4      0     244
  1007 ;;                                              7 COMMON     3     3      0
  1008 ;;                       _lcd_put_byte
  1009 ;;                           _lcd_busy
  1010 ;; ---------------------------------------------------------------------------------
  1011 ;; (2) ___lltoft                                             5     1      4     278
  1012 ;;                                             10 COMMON     1     1      0
  1013 ;;                                              0 BANK0      4     0      4
  1014 ;;                           ___ftpack
  1015 ;; ---------------------------------------------------------------------------------
  1016 ;; (1) ___awtoft                                             4     1      3     300
  1017 ;;                                             10 COMMON     1     1      0
  1018 ;;                                              0 BANK0      3     0      3
  1019 ;;                           ___ftpack
  1020 ;; ---------------------------------------------------------------------------------
  1021 ;; (3) ___ftmul                                             15     9      6     535
  1022 ;;                                             18 BANK0     15     9      6
  1023 ;;                           ___ftpack
  1024 ;;                            ___ftdiv (ARG)
  1025 ;;                           ___awtoft (ARG)
  1026 ;;                            ___fttol (ARG)
  1027 ;;                            ___awdiv (ARG)
  1028 ;;                            ___awmod (ARG)
  1029 ;;                             ___bmul (ARG)
  1030 ;;                            ___lbdiv (ARG)
  1031 ;;                            ___lbmod (ARG)
  1032 ;; ---------------------------------------------------------------------------------
  1033 ;; (1) ___ftdiv                                             15     9      6     489
  1034 ;;                                              3 BANK0     15     9      6
  1035 ;;                           ___ftpack
  1036 ;;                           ___awtoft (ARG)
  1037 ;; ---------------------------------------------------------------------------------
  1038 ;; (3) ___ftadd                                             12     6      6    1049
  1039 ;;                                             33 BANK0     12     6      6
  1040 ;;                           ___ftpack
  1041 ;;                            ___lbmod (ARG)
  1042 ;;                             ___bmul (ARG)
  1043 ;;                            ___lbdiv (ARG)
  1044 ;;                            ___ftmul (ARG)
  1045 ;; ---------------------------------------------------------------------------------
  1046 ;; (5) _lcd_busy                                             2     2      0      23
  1047 ;;                                              2 COMMON     2     2      0
  1048 ;; ---------------------------------------------------------------------------------
  1049 ;; (5) _lcd_put_byte                                         5     4      1     221
  1050 ;;                                              2 COMMON     5     4      1
  1051 ;; ---------------------------------------------------------------------------------
  1052 ;; (3) ___awmod                                              6     2      4     296
  1053 ;;                                              2 COMMON     6     2      4
  1054 ;; ---------------------------------------------------------------------------------
  1055 ;; (2) ___lldiv                                             13     5      8     162
  1056 ;;                                              2 COMMON     8     0      8
  1057 ;;                                              0 BANK0      5     5      0
  1058 ;; ---------------------------------------------------------------------------------
  1059 ;; (2) ___ftge                                               6     0      6     136
  1060 ;;                                              2 COMMON     6     0      6
  1061 ;; ---------------------------------------------------------------------------------
  1062 ;; (2) ___ftneg                                              3     0      3      45
  1063 ;;                                              2 COMMON     3     0      3
  1064 ;; ---------------------------------------------------------------------------------
  1065 ;; (2) ___llmod                                              9     1      8     159
  1066 ;;                                             10 COMMON     1     1      0
  1067 ;;                                              5 BANK0      8     0      8
  1068 ;;                            ___lldiv (ARG)
  1069 ;; ---------------------------------------------------------------------------------
  1070 ;; (3) ___awdiv                                              8     4      4     300
  1071 ;;                                              8 COMMON     4     0      4
  1072 ;;                                              0 BANK0      4     4      0
  1073 ;;                            ___awmod (ARG)
  1074 ;; ---------------------------------------------------------------------------------
  1075 ;; (2) ___fttol                                             13     9      4     252
  1076 ;;                                              4 BANK0     13     9      4
  1077 ;;                           ___ftpack (ARG)
  1078 ;;                            ___awmod (ARG)
  1079 ;;                            ___awdiv (ARG)
  1080 ;;                             ___bmul (ARG)
  1081 ;; ---------------------------------------------------------------------------------
  1082 ;; (4) ___ftpack                                             8     3      5     209
  1083 ;;                                              2 COMMON     8     3      5
  1084 ;; ---------------------------------------------------------------------------------
  1085 ;; (3) ___lbmod                                              5     4      1     159
  1086 ;;                                              2 COMMON     5     4      1
  1087 ;; ---------------------------------------------------------------------------------
  1088 ;; (3) ___lbdiv                                              4     3      1     162
  1089 ;;                                              7 COMMON     4     3      1
  1090 ;;                            ___lbmod (ARG)
  1091 ;; ---------------------------------------------------------------------------------
  1092 ;; (2) ___wmul                                               6     2      4      92
  1093 ;;                                              2 COMMON     6     2      4
  1094 ;; ---------------------------------------------------------------------------------
  1095 ;; (3) ___bmul                                               3     2      1      68
  1096 ;;                                             11 COMMON     1     0      1
  1097 ;;                                              0 BANK0      2     2      0
  1098 ;;                            ___lbmod (ARG)
  1099 ;;                            ___lbdiv (ARG)
  1100 ;; ---------------------------------------------------------------------------------
  1101 ;; (2) __div_to_l_                                          20    14      6     446
  1102 ;;                                              2 COMMON     6     0      6
  1103 ;;                                              0 BANK0     14    14      0
  1104 ;; ---------------------------------------------------------------------------------
  1105 ;; (2) __tdiv_to_l_                                         15     9      6     303
  1106 ;;                                              2 COMMON     9     3      6
  1107 ;;                                              0 BANK0      6     6      0
  1108 ;; ---------------------------------------------------------------------------------
  1109 ;; (2) _isdigit                                              2     2      0      68
  1110 ;;                                              2 COMMON     2     2      0
  1111 ;; ---------------------------------------------------------------------------------
  1112 ;; (4) _isprint                                              2     2      0      68
  1113 ;;                                              2 COMMON     2     2      0
  1114 ;; ---------------------------------------------------------------------------------
  1115 ;; Estimated maximum stack depth 5
  1116 ;; ---------------------------------------------------------------------------------
  1117 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1118 ;; ---------------------------------------------------------------------------------
  1119 ;; (6) _ngat                                                 2     2      0       0
  1120 ;;                                              0 COMMON     2     2      0
  1121 ;; ---------------------------------------------------------------------------------
  1122 ;; Estimated maximum stack depth 6
  1123 ;; ---------------------------------------------------------------------------------
  1124 ;; Call Graph Graphs:
  1125 ;; _main (ROOT)
  1126 ;;   _lcd_init
  1127 ;;     _lcd_put_byte
  1128 ;;     _lcd_busy
  1129 ;;   ___awtoft
  1130 ;;     ___ftpack
  1131 ;;   ___ftdiv
  1132 ;;     ___ftpack
  1133 ;;     ___awtoft (ARG)
  1134 ;;       ___ftpack
  1135 ;;   ___ftmul
  1136 ;;     ___ftpack
  1137 ;;     ___ftdiv (ARG)
  1138 ;;       ___ftpack
  1139 ;;       ___awtoft (ARG)
  1140 ;;         ___ftpack
  1141 ;;     ___awtoft (ARG)
  1142 ;;       ___ftpack
  1143 ;;     ___fttol (ARG)
  1144 ;;       ___ftpack (ARG)
  1145 ;;       ___awmod (ARG)
  1146 ;;       ___awdiv (ARG)
  1147 ;;         ___awmod (ARG)
  1148 ;;       ___bmul (ARG)
  1149 ;;         ___lbmod (ARG)
  1150 ;;         ___lbdiv (ARG)
  1151 ;;           ___lbmod (ARG)
  1152 ;;     ___awdiv (ARG)
  1153 ;;       ___awmod (ARG)
  1154 ;;     ___awmod (ARG)
  1155 ;;     ___bmul (ARG)
  1156 ;;       ___lbmod (ARG)
  1157 ;;       ___lbdiv (ARG)
  1158 ;;         ___lbmod (ARG)
  1159 ;;     ___lbdiv (ARG)
  1160 ;;       ___lbmod (ARG)
  1161 ;;     ___lbmod (ARG)
  1162 ;;   _lcd_gotoxy
  1163 ;;     _lcd_put_byte
  1164 ;;     _lcd_busy
  1165 ;;   _printf
  1166 ;;     _putch
  1167 ;;       _lcd_putc
  1168 ;;         _lcd_put_byte
  1169 ;;         _lcd_busy
  1170 ;;         _lcd_gotoxy
  1171 ;;           _lcd_put_byte
  1172 ;;           _lcd_busy
  1173 ;;         _isprint
  1174 ;;     _isdigit
  1175 ;;     ___wmul
  1176 ;;     ___ftge
  1177 ;;     ___ftneg
  1178 ;;     ___awdiv
  1179 ;;       ___awmod (ARG)
  1180 ;;     _scale
  1181 ;;       ___awmod
  1182 ;;       ___awdiv
  1183 ;;         ___awmod (ARG)
  1184 ;;       ___ftmul
  1185 ;;         ___ftpack
  1186 ;;         ___ftdiv (ARG)
  1187 ;;           ___ftpack
  1188 ;;           ___awtoft (ARG)
  1189 ;;             ___ftpack
  1190 ;;         ___awtoft (ARG)
  1191 ;;           ___ftpack
  1192 ;;         ___fttol (ARG)
  1193 ;;           ___ftpack (ARG)
  1194 ;;           ___awmod (ARG)
  1195 ;;           ___awdiv (ARG)
  1196 ;;             ___awmod (ARG)
  1197 ;;           ___bmul (ARG)
  1198 ;;             ___lbmod (ARG)
  1199 ;;             ___lbdiv (ARG)
  1200 ;;               ___lbmod (ARG)
  1201 ;;         ___awdiv (ARG)
  1202 ;;           ___awmod (ARG)
  1203 ;;         ___awmod (ARG)
  1204 ;;         ___bmul (ARG)
  1205 ;;           ___lbmod (ARG)
  1206 ;;           ___lbdiv (ARG)
  1207 ;;             ___lbmod (ARG)
  1208 ;;         ___lbdiv (ARG)
  1209 ;;           ___lbmod (ARG)
  1210 ;;         ___lbmod (ARG)
  1211 ;;       ___bmul
  1212 ;;         ___lbmod (ARG)
  1213 ;;         ___lbdiv (ARG)
  1214 ;;           ___lbmod (ARG)
  1215 ;;       ___fttol (ARG)
  1216 ;;         ___ftpack (ARG)
  1217 ;;         ___awmod (ARG)
  1218 ;;         ___awdiv (ARG)
  1219 ;;           ___awmod (ARG)
  1220 ;;         ___bmul (ARG)
  1221 ;;           ___lbmod (ARG)
  1222 ;;           ___lbdiv (ARG)
  1223 ;;             ___lbmod (ARG)
  1224 ;;     ___ftmul
  1225 ;;       ___ftpack
  1226 ;;       ___ftdiv (ARG)
  1227 ;;         ___ftpack
  1228 ;;         ___awtoft (ARG)
  1229 ;;           ___ftpack
  1230 ;;       ___awtoft (ARG)
  1231 ;;         ___ftpack
  1232 ;;       ___fttol (ARG)
  1233 ;;         ___ftpack (ARG)
  1234 ;;         ___awmod (ARG)
  1235 ;;         ___awdiv (ARG)
  1236 ;;           ___awmod (ARG)
  1237 ;;         ___bmul (ARG)
  1238 ;;           ___lbmod (ARG)
  1239 ;;           ___lbdiv (ARG)
  1240 ;;             ___lbmod (ARG)
  1241 ;;       ___awdiv (ARG)
  1242 ;;         ___awmod (ARG)
  1243 ;;       ___awmod (ARG)
  1244 ;;       ___bmul (ARG)
  1245 ;;         ___lbmod (ARG)
  1246 ;;         ___lbdiv (ARG)
  1247 ;;           ___lbmod (ARG)
  1248 ;;       ___lbdiv (ARG)
  1249 ;;         ___lbmod (ARG)
  1250 ;;       ___lbmod (ARG)
  1251 ;;     _fround
  1252 ;;       ___lbmod
  1253 ;;       ___bmul
  1254 ;;         ___lbmod (ARG)
  1255 ;;         ___lbdiv (ARG)
  1256 ;;           ___lbmod (ARG)
  1257 ;;       ___lbdiv
  1258 ;;         ___lbmod (ARG)
  1259 ;;       ___ftmul
  1260 ;;         ___ftpack
  1261 ;;         ___ftdiv (ARG)
  1262 ;;           ___ftpack
  1263 ;;           ___awtoft (ARG)
  1264 ;;             ___ftpack
  1265 ;;         ___awtoft (ARG)
  1266 ;;           ___ftpack
  1267 ;;         ___fttol (ARG)
  1268 ;;           ___ftpack (ARG)
  1269 ;;           ___awmod (ARG)
  1270 ;;           ___awdiv (ARG)
  1271 ;;             ___awmod (ARG)
  1272 ;;           ___bmul (ARG)
  1273 ;;             ___lbmod (ARG)
  1274 ;;             ___lbdiv (ARG)
  1275 ;;               ___lbmod (ARG)
  1276 ;;         ___awdiv (ARG)
  1277 ;;           ___awmod (ARG)
  1278 ;;         ___awmod (ARG)
  1279 ;;         ___bmul (ARG)
  1280 ;;           ___lbmod (ARG)
  1281 ;;           ___lbdiv (ARG)
  1282 ;;             ___lbmod (ARG)
  1283 ;;         ___lbdiv (ARG)
  1284 ;;           ___lbmod (ARG)
  1285 ;;         ___lbmod (ARG)
  1286 ;;       ___ftadd (ARG)
  1287 ;;         ___ftpack
  1288 ;;         ___lbmod (ARG)
  1289 ;;         ___bmul (ARG)
  1290 ;;           ___lbmod (ARG)
  1291 ;;           ___lbdiv (ARG)
  1292 ;;             ___lbmod (ARG)
  1293 ;;         ___lbdiv (ARG)
  1294 ;;           ___lbmod (ARG)
  1295 ;;         ___ftmul (ARG)
  1296 ;;           ___ftpack
  1297 ;;           ___ftdiv (ARG)
  1298 ;;             ___ftpack
  1299 ;;             ___awtoft (ARG)
  1300 ;;               ___ftpack
  1301 ;;           ___awtoft (ARG)
  1302 ;;             ___ftpack
  1303 ;;           ___fttol (ARG)
  1304 ;;             ___ftpack (ARG)
  1305 ;;             ___awmod (ARG)
  1306 ;;             ___awdiv (ARG)
  1307 ;;               ___awmod (ARG)
  1308 ;;             ___bmul (ARG)
  1309 ;;               ___lbmod (ARG)
  1310 ;;               ___lbdiv (ARG)
  1311 ;;                 ___lbmod (ARG)
  1312 ;;           ___awdiv (ARG)
  1313 ;;             ___awmod (ARG)
  1314 ;;           ___awmod (ARG)
  1315 ;;           ___bmul (ARG)
  1316 ;;             ___lbmod (ARG)
  1317 ;;             ___lbdiv (ARG)
  1318 ;;               ___lbmod (ARG)
  1319 ;;           ___lbdiv (ARG)
  1320 ;;             ___lbmod (ARG)
  1321 ;;           ___lbmod (ARG)
  1322 ;;     ___ftadd
  1323 ;;       ___ftpack
  1324 ;;       ___lbmod (ARG)
  1325 ;;       ___bmul (ARG)
  1326 ;;         ___lbmod (ARG)
  1327 ;;         ___lbdiv (ARG)
  1328 ;;           ___lbmod (ARG)
  1329 ;;       ___lbdiv (ARG)
  1330 ;;         ___lbmod (ARG)
  1331 ;;       ___ftmul (ARG)
  1332 ;;         ___ftpack
  1333 ;;         ___ftdiv (ARG)
  1334 ;;           ___ftpack
  1335 ;;           ___awtoft (ARG)
  1336 ;;             ___ftpack
  1337 ;;         ___awtoft (ARG)
  1338 ;;           ___ftpack
  1339 ;;         ___fttol (ARG)
  1340 ;;           ___ftpack (ARG)
  1341 ;;           ___awmod (ARG)
  1342 ;;           ___awdiv (ARG)
  1343 ;;             ___awmod (ARG)
  1344 ;;           ___bmul (ARG)
  1345 ;;             ___lbmod (ARG)
  1346 ;;             ___lbdiv (ARG)
  1347 ;;               ___lbmod (ARG)
  1348 ;;         ___awdiv (ARG)
  1349 ;;           ___awmod (ARG)
  1350 ;;         ___awmod (ARG)
  1351 ;;         ___bmul (ARG)
  1352 ;;           ___lbmod (ARG)
  1353 ;;           ___lbdiv (ARG)
  1354 ;;             ___lbmod (ARG)
  1355 ;;         ___lbdiv (ARG)
  1356 ;;           ___lbmod (ARG)
  1357 ;;         ___lbmod (ARG)
  1358 ;;     ___fttol
  1359 ;;       ___ftpack (ARG)
  1360 ;;       ___awmod (ARG)
  1361 ;;       ___awdiv (ARG)
  1362 ;;         ___awmod (ARG)
  1363 ;;       ___bmul (ARG)
  1364 ;;         ___lbmod (ARG)
  1365 ;;         ___lbdiv (ARG)
  1366 ;;           ___lbmod (ARG)
  1367 ;;     __div_to_l_
  1368 ;;     __tdiv_to_l_
  1369 ;;     ___lltoft
  1370 ;;       ___ftpack
  1371 ;;     ___ftsub
  1372 ;;       ___ftadd
  1373 ;;         ___ftpack
  1374 ;;         ___lbmod (ARG)
  1375 ;;         ___bmul (ARG)
  1376 ;;           ___lbmod (ARG)
  1377 ;;           ___lbdiv (ARG)
  1378 ;;             ___lbmod (ARG)
  1379 ;;         ___lbdiv (ARG)
  1380 ;;           ___lbmod (ARG)
  1381 ;;         ___ftmul (ARG)
  1382 ;;           ___ftpack
  1383 ;;           ___ftdiv (ARG)
  1384 ;;             ___ftpack
  1385 ;;             ___awtoft (ARG)
  1386 ;;               ___ftpack
  1387 ;;           ___awtoft (ARG)
  1388 ;;             ___ftpack
  1389 ;;           ___fttol (ARG)
  1390 ;;             ___ftpack (ARG)
  1391 ;;             ___awmod (ARG)
  1392 ;;             ___awdiv (ARG)
  1393 ;;               ___awmod (ARG)
  1394 ;;             ___bmul (ARG)
  1395 ;;               ___lbmod (ARG)
  1396 ;;               ___lbdiv (ARG)
  1397 ;;                 ___lbmod (ARG)
  1398 ;;           ___awdiv (ARG)
  1399 ;;             ___awmod (ARG)
  1400 ;;           ___awmod (ARG)
  1401 ;;           ___bmul (ARG)
  1402 ;;             ___lbmod (ARG)
  1403 ;;             ___lbdiv (ARG)
  1404 ;;               ___lbmod (ARG)
  1405 ;;           ___lbdiv (ARG)
  1406 ;;             ___lbmod (ARG)
  1407 ;;           ___lbmod (ARG)
  1408 ;;       ___lltoft (ARG)
  1409 ;;         ___ftpack
  1410 ;;     ___lldiv
  1411 ;;     ___llmod
  1412 ;;       ___lldiv (ARG)
  1413 ;;
  1414 ;; _ngat (ROOT)
  1415 ;;
  1416 ;; Address spaces:
  1417 ;;Name               Size   Autos  Total    Cost      Usage
  1418 ;;BITCOMMON            E      0       0       0        0.0%
  1419 ;;EEDATA             100      0       0       0        0.0%
  1420 ;;NULL                 0      0       0       0        0.0%
  1421 ;;CODE                 0      0       0       0        0.0%
  1422 ;;COMMON               E      C       C       1       85.7%
  1423 ;;BITSFR0              0      0       0       1        0.0%
  1424 ;;SFR0                 0      0       0       1        0.0%
  1425 ;;BITSFR1              0      0       0       2        0.0%
  1426 ;;SFR1                 0      0       0       2        0.0%
  1427 ;;STACK                0      0       5       2        0.0%
  1428 ;;ABS                  0      0      72       3        0.0%
  1429 ;;BITBANK0            50      0       0       4        0.0%
  1430 ;;BITSFR3              0      0       0       4        0.0%
  1431 ;;SFR3                 0      0       0       4        0.0%
  1432 ;;BANK0               50     4B      4D       5       96.3%
  1433 ;;BITSFR2              0      0       0       5        0.0%
  1434 ;;SFR2                 0      0       0       5        0.0%
  1435 ;;BITBANK1            50      0       0       6        0.0%
  1436 ;;BANK1               50     19      19       7       31.3%
  1437 ;;BITBANK3            60      0       0       8        0.0%
  1438 ;;BANK3               60      0       0       9        0.0%
  1439 ;;BITBANK2            60      0       0      10        0.0%
  1440 ;;BANK2               60      0       0      11        0.0%
  1441 ;;DATA                 0      0      77      12        0.0%
  1442                           
  1443                           
  1444 ;; *************** function _main *****************
  1445 ;; Defined at:
  1446 ;;		line 13 in file "C:\Users\DELL\Desktop\baitap_ttvxl\counter\counter.c"
  1447 ;; Parameters:    Size  Location     Type
  1448 ;;		None
  1449 ;; Auto vars:     Size  Location     Type
  1450 ;;  v               3   66[BANK0 ] float 
  1451 ;;  count2          2   73[BANK0 ] int 
  1452 ;;  count1          2   71[BANK0 ] int 
  1453 ;;  count           2   69[BANK0 ] int 
  1454 ;; Return value:  Size  Location     Type
  1455 ;;		None               void
  1456 ;; Registers used:
  1457 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1458 ;; Tracked objects:
  1459 ;;		On entry : 17F/0
  1460 ;;		On exit  : 60/20
  1461 ;;		Unchanged: 0/0
  1462 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1463 ;;      Params:         0       0       0       0       0
  1464 ;;      Locals:         0       9       0       0       0
  1465 ;;      Temps:          0       3       0       0       0
  1466 ;;      Totals:         0      12       0       0       0
  1467 ;;Total ram usage:       12 bytes
  1468 ;; Hardware stack levels required when called:    6
  1469 ;; This function calls:
  1470 ;;		_lcd_init
  1471 ;;		___awtoft
  1472 ;;		___ftdiv
  1473 ;;		___ftmul
  1474 ;;		_lcd_gotoxy
  1475 ;;		_printf
  1476 ;; This function is called by:
  1477 ;;		Startup code after reset
  1478 ;; This function uses a non-reentrant model
  1479 ;;
  1480  1771                     _main:	
  1481                           
  1482                           ;counter.c: 14: ANSEL = ANSELH = 0;
  1483                           
  1484                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1485  1771  1683               	bsf	3,5	;RP0=1, select bank3
  1486  1772  1703               	bsf	3,6	;RP1=1, select bank3
  1487  1773  0189               	clrf	9	;volatile
  1488  1774  0188               	clrf	8	;volatile
  1489                           
  1490                           ;counter.c: 15: lcd_init();
  1491  1775  120A  158A  22CA   	fcall	_lcd_init
      +       160A  118A         
  1492                           
  1493                           ;counter.c: 17: TRISE0 = 0;
  1494  177A  1683               	bsf	3,5	;RP0=1, select bank1
  1495  177B  1009               	bcf	9,0
  1496                           
  1497                           ;counter.c: 18: T0CS = 1;
  1498  177C  1681               	bsf	1,5
  1499                           
  1500                           ;counter.c: 20: T0SE = 1;
  1501  177D  1601               	bsf	1,4
  1502                           
  1503                           ;counter.c: 21: PSA = 1;
  1504  177E  1581               	bsf	1,3
  1505                           
  1506                           ;counter.c: 23: TMR0 = 0;
  1507  177F  1283               	bcf	3,5	;RP0=0, select bank0
  1508  1780  0181               	clrf	1	;volatile
  1509                           
  1510                           ;counter.c: 24: T0IE = 1;
  1511  1781  168B               	bsf	11,5
  1512                           
  1513                           ;counter.c: 25: T0IF = 0;
  1514  1782  110B               	bcf	11,2
  1515                           
  1516                           ;counter.c: 26: GIE = 1;
  1517  1783  178B               	bsf	11,7
  1518  1784                     l7022:	
  1519                           
  1520                           ;counter.c: 30: {
  1521                           ;counter.c: 31: count1 = TMR0 + dem*256;
  1522  1784  1283               	bcf	3,5	;RP0=0, select bank0
  1523  1785  0801               	movf	1,w	;volatile
  1524  1786  00E7               	movwf	main@count1
  1525  1787  01E8               	clrf	main@count1+1
  1526  1788  086C               	movf	_dem+1,w
  1527  1789  00E0               	movwf	??_main+1
  1528  178A  086B               	movf	_dem,w
  1529  178B  00DF               	movwf	??_main
  1530  178C  00E0               	movwf	??_main+1
  1531  178D  01DF               	clrf	??_main
  1532  178E  085F               	movf	??_main,w
  1533  178F  07E7               	addwf	main@count1,f
  1534  1790  1803               	skipnc
  1535  1791  0AE8               	incf	main@count1+1,f
  1536  1792  0860               	movf	??_main+1,w
  1537  1793  07E8               	addwf	main@count1+1,f
  1538                           
  1539                           ;counter.c: 32: _delay((unsigned long)((500)*(20000000/4000.0)));
  1540  1794  300D               	movlw	13
  1541  1795  00E1               	movwf	??_main+2
  1542  1796  30AF               	movlw	175
  1543  1797  00E0               	movwf	??_main+1
  1544  1798  30C1               	movlw	193
  1545  1799  00DF               	movwf	??_main
  1546  179A                     u3797:	
  1547  179A  0BDF               	decfsz	??_main,f
  1548  179B  2F9A               	goto	u3797
  1549  179C  0BE0               	decfsz	??_main+1,f
  1550  179D  2F9A               	goto	u3797
  1551  179E  0BE1               	decfsz	??_main+2,f
  1552  179F  2F9A               	goto	u3797
  1553  17A0  0064               	clrwdt
  1554                           
  1555                           ;counter.c: 33: count2 = TMR0 + dem*256;
  1556  17A1  1283               	bcf	3,5	;RP0=0, select bank0
  1557  17A2  1303               	bcf	3,6	;RP1=0, select bank0
  1558  17A3  0801               	movf	1,w	;volatile
  1559  17A4  00E9               	movwf	main@count2
  1560  17A5  01EA               	clrf	main@count2+1
  1561  17A6  086C               	movf	_dem+1,w
  1562  17A7  00E0               	movwf	??_main+1
  1563  17A8  086B               	movf	_dem,w
  1564  17A9  00DF               	movwf	??_main
  1565  17AA  00E0               	movwf	??_main+1
  1566  17AB  01DF               	clrf	??_main
  1567  17AC  085F               	movf	??_main,w
  1568  17AD  07E9               	addwf	main@count2,f
  1569  17AE  1803               	skipnc
  1570  17AF  0AEA               	incf	main@count2+1,f
  1571  17B0  0860               	movf	??_main+1,w
  1572  17B1  07EA               	addwf	main@count2+1,f
  1573                           
  1574                           ;counter.c: 34: count = count2 - count1;
  1575  17B2  086A               	movf	main@count2+1,w
  1576  17B3  00E6               	movwf	main@count+1
  1577  17B4  0869               	movf	main@count2,w
  1578  17B5  00E5               	movwf	main@count
  1579  17B6  0867               	movf	main@count1,w
  1580  17B7  02E5               	subwf	main@count,f
  1581  17B8  0868               	movf	main@count1+1,w
  1582  17B9  1C03               	skipc
  1583  17BA  03E6               	decf	main@count+1,f
  1584  17BB  02E6               	subwf	main@count+1,f
  1585                           
  1586                           ;counter.c: 35: v = (count/360.0)*2.0*60.0;
  1587  17BC  30F0               	movlw	240
  1588  17BD  01B2               	clrf	?___ftmul
  1589  17BE  00B3               	movwf	?___ftmul+1
  1590  17BF  3042               	movlw	66
  1591  17C0  00B4               	movwf	?___ftmul+2
  1592  17C1  30B4               	movlw	180
  1593  17C2  01A3               	clrf	?___ftdiv
  1594  17C3  00A4               	movwf	?___ftdiv+1
  1595  17C4  3043               	movlw	67
  1596  17C5  00A5               	movwf	?___ftdiv+2
  1597  17C6  0866               	movf	main@count+1,w
  1598  17C7  00A1               	movwf	?___awtoft+1
  1599  17C8  0865               	movf	main@count,w
  1600  17C9  00A0               	movwf	?___awtoft
  1601  17CA  120A  158A  2454   	fcall	___awtoft
      +       160A  118A         
  1602  17CF  0820               	movf	?___awtoft,w
  1603  17D0  00A6               	movwf	?___ftdiv+3
  1604  17D1  0821               	movf	?___awtoft+1,w
  1605  17D2  00A7               	movwf	?___ftdiv+4
  1606  17D3  0822               	movf	?___awtoft+2,w
  1607  17D4  00A8               	movwf	?___ftdiv+5
  1608  17D5  120A  158A  246F   	fcall	___ftdiv
      +       160A  118A         
  1609  17DA  0823               	movf	?___ftdiv,w
  1610  17DB  00B5               	movwf	?___ftmul+3
  1611  17DC  0824               	movf	?___ftdiv+1,w
  1612  17DD  00B6               	movwf	?___ftmul+4
  1613  17DE  0825               	movf	?___ftdiv+2,w
  1614  17DF  00B7               	movwf	?___ftmul+5
  1615  17E0  120A  158A  26EC   	fcall	___ftmul
      +       160A  118A         
  1616  17E5  0832               	movf	?___ftmul,w
  1617  17E6  00E2               	movwf	main@v
  1618  17E7  0833               	movf	?___ftmul+1,w
  1619  17E8  00E3               	movwf	main@v+1
  1620  17E9  0834               	movf	?___ftmul+2,w
  1621  17EA  00E4               	movwf	main@v+2
  1622  17EB  3000               	movlw	0
  1623                           
  1624                           ;counter.c: 36: lcd_gotoxy(0,1);
  1625  17EC  01F7               	clrf	?_lcd_gotoxy
  1626  17ED  0AF7               	incf	?_lcd_gotoxy,f
  1627  17EE  120A  158A  2283   	fcall	_lcd_gotoxy
      +       160A  118A         
  1628                           
  1629                           ;counter.c: 37: printf("v:%3.2f",v);
  1630  17F3  0862               	movf	main@v,w
  1631  17F4  00D7               	movwf	?_printf
  1632  17F5  0863               	movf	main@v+1,w
  1633  17F6  00D8               	movwf	?_printf+1
  1634  17F7  0864               	movf	main@v+2,w
  1635  17F8  00D9               	movwf	?_printf+2
  1636  17F9  3077               	movlw	(STR_1-__stringbase)& (0+255)
  1637  17FA  120A  118A  200F   	fcall	_printf
      +       160A  118A         
  1638  17FF  2F84               	goto	l7022
  1639  1800                     __end_of_main:	
  1640                           
  1641                           	psect	text526
  1642  000F                     __ptext526:	
  1643 ;; =============== function _main ends ============
  1644                           
  1645                           
  1646 ;; *************** function _printf *****************
  1647 ;; Defined at:
  1648 ;;		line 461 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\lib\doprnt.c"
  1649 ;; Parameters:    Size  Location     Type
  1650 ;;  f               1    wreg     PTR const unsigned char 
  1651 ;;		 -> STR_1(8), 
  1652 ;; Auto vars:     Size  Location     Type
  1653 ;;  f               1   14[BANK1 ] PTR const unsigned char 
  1654 ;;		 -> STR_1(8), 
  1655 ;;  _val            4    8[BANK1 ] struct .
  1656 ;;  fval            3   19[BANK1 ] struct .
  1657 ;;  integ           3    5[BANK1 ] struct .
  1658 ;;  ival            3    0        struct .
  1659 ;;  prec            2   22[BANK1 ] int 
  1660 ;;  exp             2   17[BANK1 ] int 
  1661 ;;  width           2   15[BANK1 ] int 
  1662 ;;  flag            2   12[BANK1 ] unsigned short 
  1663 ;;  c               1   24[BANK1 ] char 
  1664 ;;  ap              1    4[BANK1 ] PTR void [1]
  1665 ;;		 -> ?_printf(2), 
  1666 ;;  d               1    0        unsigned char 
  1667 ;; Return value:  Size  Location     Type
  1668 ;;                  2   55[BANK0 ] int 
  1669 ;; Registers used:
  1670 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1671 ;; Tracked objects:
  1672 ;;		On entry : 60/0
  1673 ;;		On exit  : 60/20
  1674 ;;		Unchanged: 0/0
  1675 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1676 ;;      Params:         0       3       0       0       0
  1677 ;;      Locals:         0       0      25       0       0
  1678 ;;      Temps:          0       5       0       0       0
  1679 ;;      Totals:         0       8      25       0       0
  1680 ;;Total ram usage:       33 bytes
  1681 ;; Hardware stack levels used:    1
  1682 ;; Hardware stack levels required when called:    5
  1683 ;; This function calls:
  1684 ;;		_putch
  1685 ;;		_isdigit
  1686 ;;		___wmul
  1687 ;;		___ftge
  1688 ;;		___ftneg
  1689 ;;		___awdiv
  1690 ;;		_scale
  1691 ;;		___ftmul
  1692 ;;		_fround
  1693 ;;		___ftadd
  1694 ;;		___fttol
  1695 ;;		__div_to_l_
  1696 ;;		__tdiv_to_l_
  1697 ;;		___lltoft
  1698 ;;		___ftsub
  1699 ;;		___lldiv
  1700 ;;		___llmod
  1701 ;; This function is called by:
  1702 ;;		_main
  1703 ;; This function uses a non-reentrant model
  1704 ;;
  1705  000F                     _printf:	
  1706                           
  1707                           ; Regs used in _printf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1708                           ;printf@f stored from wreg
  1709  000F  1683               	bsf	3,5	;RP0=1, select bank1
  1710  0010  00AE               	movwf	printf@f^(0+128)
  1711  0011  3057               	movlw	?_printf& (0+255)
  1712  0012  00A4               	movwf	printf@ap^(0+128)
  1713  0013                     l7000:	
  1714  0013  27B5               	call	PL31	;select bank 1
  1715  0014  082E               	movf	printf@f^(0+128),w
  1716  0015  0AAE               	incf	printf@f^(0+128),f
  1717  0016  0084               	movwf	4
  1718  0017  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  1719  001C  00B8               	movwf	printf@c^(0+128)
  1720  001D  08B8               	movf	printf@c^(0+128),f
  1721  001E  1903               	btfsc	3,2
  1722  001F  0008               	return
  1723  0020  3A25               	xorlw	37
  1724  0021  1903               	skipnz
  1725  0022  2825               	goto	l6780
  1726  0023  0838               	movf	printf@c^(0+128),w
  1727  0024  2C74               	goto	L1
  1728  0025                     l6780:	
  1729  0025  01AF               	clrf	printf@width^(0+128)
  1730  0026  01B0               	clrf	(printf@width+1)^(0+128)
  1731  0027  01AC               	clrf	printf@flag^(0+128)
  1732  0028  01AD               	clrf	(printf@flag+1)^(0+128)
  1733  0029  082E               	movf	printf@f^(0+128),w
  1734  002A  0084               	movwf	4
  1735  002B  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  1736  0030  24A9  120A  118A   	fcall	_isdigit
  1737  0033  1C03               	btfss	3,0
  1738  0034  2859               	goto	l6792
  1739  0035  01AF               	clrf	printf@width^(0+128)
  1740  0036  01B0               	clrf	(printf@width+1)^(0+128)
  1741  0037                     l6786:	
  1742  0037  0830               	movf	(printf@width+1)^(0+128),w
  1743  0038  00F3               	movwf	?___wmul+1
  1744  0039  082F               	movf	printf@width^(0+128),w
  1745  003A  00F2               	movwf	?___wmul
  1746  003B  300A               	movlw	10
  1747  003C  00F4               	movwf	?___wmul+2
  1748  003D  01F5               	clrf	?___wmul+3
  1749  003E  24B7               	fcall	___wmul
  1750  003F  082E               	movf	printf@f^(0+128),w
  1751  0040  0084               	movwf	4
  1752  0041  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  1753  0046  2757  120A  118A   	fcall	PL11	;call to abstracted procedure
  1754  0049  00AF               	movwf	printf@width^(0+128)
  1755  004A  27A7               	fcall	PL27	;call to abstracted procedure
  1756  004B  00B0               	movwf	(printf@width+1)^(0+128)
  1757  004C  0AAE               	incf	printf@f^(0+128),f
  1758  004D  082E               	movf	printf@f^(0+128),w
  1759  004E  0084               	movwf	4
  1760  004F  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  1761  0054  24A9  120A  118A   	fcall	_isdigit
  1762  0057  1803               	btfsc	3,0
  1763  0058  2837               	goto	l6786
  1764  0059                     l6792:	
  1765  0059  082E               	movf	printf@f^(0+128),w
  1766  005A  0084               	movwf	4
  1767  005B  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  1768  0060  3A2E               	xorlw	46
  1769  0061  1D03               	skipz
  1770  0062  288C               	goto	l6806
  1771  0063  172D               	bsf	(printf@flag^(0+128)+1),6
  1772  0064  0AAE               	incf	printf@f^(0+128),f
  1773  0065  01B6               	clrf	printf@prec^(0+128)
  1774  0066  01B7               	clrf	(printf@prec+1)^(0+128)
  1775  0067                     l6804:	
  1776  0067  082E               	movf	printf@f^(0+128),w
  1777  0068  0084               	movwf	4
  1778  0069  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  1779  006E  24A9  120A  118A   	fcall	_isdigit
  1780  0071  1C03               	btfss	3,0
  1781  0072  2892               	goto	l6812
  1782  0073  0837               	movf	(printf@prec+1)^(0+128),w
  1783  0074  00F3               	movwf	?___wmul+1
  1784  0075  0836               	movf	printf@prec^(0+128),w
  1785  0076  00F2               	movwf	?___wmul
  1786  0077  300A               	movlw	10
  1787  0078  00F4               	movwf	?___wmul+2
  1788  0079  01F5               	clrf	?___wmul+3
  1789  007A  24B7               	fcall	___wmul
  1790  007B  082E               	movf	printf@f^(0+128),w
  1791  007C  0084               	movwf	4
  1792  007D  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  1793  0082  2757  120A  118A   	fcall	PL11	;call to abstracted procedure
  1794  0085  00B6               	movwf	printf@prec^(0+128)
  1795  0086  27A7  120A  118A   	fcall	PL27	;call to abstracted procedure
  1796  0089  00B7               	movwf	(printf@prec+1)^(0+128)
  1797  008A  0AAE               	incf	printf@f^(0+128),f
  1798  008B  2867               	goto	l6804
  1799  008C                     l6806:	
  1800  008C  01B6               	clrf	printf@prec^(0+128)
  1801  008D  01B7               	clrf	(printf@prec+1)^(0+128)
  1802  008E  162D               	bsf	(printf@flag^(0+128)+1),4
  1803  008F  2892               	goto	l6812
  1804  0090                     l2198:	
  1805  0090  152D               	bsf	(printf@flag^(0+128)+1),2
  1806  0091  28A2               	goto	l6814
  1807  0092                     l6812:	
  1808  0092  082E               	movf	printf@f^(0+128),w
  1809  0093  0AAE               	incf	printf@f^(0+128),f
  1810  0094  0084               	movwf	4
  1811  0095  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  1812  009A  00B8               	movwf	printf@c^(0+128)
  1813                           
  1814                           ; Switch size 1, requested type "space"
  1815                           ; Number of cases is 2, Range of values is 0 to 102
  1816                           ; switch strategies available:
  1817                           ; Name         Instructions Cycles
  1818                           ; simple_byte            7     4 (average)
  1819                           ; jumptable            260     6 (fixed)
  1820                           ; rangetable           107     6 (fixed)
  1821                           ; spacedrange          212     9 (fixed)
  1822                           ; locatedrange         103     3 (fixed)
  1823                           ;	Chosen strategy is simple_byte
  1824  009B  3A00               	xorlw	0	; case 0
  1825  009C  1903               	skipnz
  1826  009D  2C78               	goto	l2259
  1827  009E  3A66               	xorlw	102	; case 102
  1828  009F  1903               	skipnz
  1829  00A0  2890               	goto	l2198
  1830  00A1  2813               	goto	l7000
  1831  00A2                     l6814:	
  1832  00A2  1283               	bcf	3,5	;RP0=0, select bank0
  1833  00A3  3007               	movlw	7
  1834  00A4  01DA               	clrf	??_printf
  1835  00A5  1683               	bsf	3,5	;RP0=1, select bank1
  1836  00A6  052D               	andwf	(printf@flag+1)^(0+128),w
  1837  00A7  1283               	bcf	3,5	;RP0=0, select bank0
  1838  00A8  00DB               	movwf	??_printf+1
  1839  00A9  045A               	iorwf	??_printf,w
  1840  00AA  1903               	skipnz
  1841  00AB  2BDC               	goto	l6956
  1842  00AC  1683               	bsf	3,5	;RP0=1, select bank1
  1843  00AD  1E2D               	btfss	(printf@flag+1)^(0+128),4
  1844  00AE  28B2               	goto	l6820
  1845  00AF  3006               	movlw	6
  1846  00B0  00B6               	movwf	printf@prec^(0+128)
  1847  00B1  01B7               	clrf	(printf@prec+1)^(0+128)
  1848  00B2                     l6820:	
  1849  00B2  0824               	movf	printf@ap^(0+128),w
  1850  00B3  0084               	movwf	4
  1851  00B4  1383               	bcf	3,7	;select IRP bank0
  1852  00B5  0800               	movf	0,w
  1853  00B6  00B3               	movwf	printf@fval^(0+128)
  1854  00B7  0A84               	incf	4,f
  1855  00B8  0800               	movf	0,w
  1856  00B9  00B4               	movwf	(printf@fval+1)^(0+128)
  1857  00BA  0A84               	incf	4,f
  1858  00BB  0800               	movf	0,w
  1859  00BC  00B5               	movwf	(printf@fval+2)^(0+128)
  1860  00BD  3003               	movlw	3
  1861  00BE  07A4               	addwf	printf@ap^(0+128),f
  1862  00BF  0833               	movf	printf@fval^(0+128),w
  1863  00C0  00F2               	movwf	?___ftge
  1864  00C1  0834               	movf	(printf@fval+1)^(0+128),w
  1865  00C2  00F3               	movwf	?___ftge+1
  1866  00C3  0835               	movf	(printf@fval+2)^(0+128),w
  1867  00C4  00F4               	movwf	?___ftge+2
  1868  00C5  01F5               	clrf	?___ftge+3
  1869  00C6  01F6               	clrf	?___ftge+4
  1870  00C7  01F7               	clrf	?___ftge+5
  1871  00C8  247D  120A  118A   	fcall	___ftge
  1872  00CB  1803               	btfsc	3,0
  1873  00CC  28DE               	goto	l6830
  1874  00CD  0833               	movf	printf@fval^(0+128),w
  1875  00CE  00F2               	movwf	?___ftneg
  1876  00CF  0834               	movf	(printf@fval+1)^(0+128),w
  1877  00D0  00F3               	movwf	?___ftneg+1
  1878  00D1  0835               	movf	(printf@fval+2)^(0+128),w
  1879  00D2  00F4               	movwf	?___ftneg+2
  1880  00D3  262A  120A  118A   	fcall	___ftneg
  1881  00D6  0872               	movf	?___ftneg,w
  1882  00D7  00B3               	movwf	printf@fval^(0+128)
  1883  00D8  0873               	movf	?___ftneg+1,w
  1884  00D9  00B4               	movwf	(printf@fval+1)^(0+128)
  1885  00DA  0874               	movf	?___ftneg+2,w
  1886  00DB  00B5               	movwf	(printf@fval+2)^(0+128)
  1887  00DC  3003               	movlw	3
  1888  00DD  04AC               	iorwf	printf@flag^(0+128),f
  1889  00DE                     l6830:	
  1890  00DE  01B1               	clrf	printf@exp^(0+128)
  1891  00DF  01B2               	clrf	(printf@exp+1)^(0+128)
  1892  00E0  0835               	movf	(printf@fval+2)^(0+128),w
  1893  00E1  0434               	iorwf	(printf@fval+1)^(0+128),w
  1894  00E2  0433               	iorwf	printf@fval^(0+128),w
  1895  00E3  1903               	skipnz
  1896  00E4  2978               	goto	l6862
  1897  00E5  30B3               	movlw	low printf@fval
  1898  00E6  0084               	movwf	4
  1899  00E7  0800               	movf	0,w
  1900  00E8  1283               	bcf	3,5	;RP0=0, select bank0
  1901  00E9  00DA               	movwf	??_printf
  1902  00EA  0A84               	incf	4,f
  1903  00EB  0800               	movf	0,w
  1904  00EC  00DB               	movwf	??_printf+1
  1905  00ED  0A84               	incf	4,f
  1906  00EE  0800               	movf	0,w
  1907  00EF  00DC               	movwf	??_printf+2
  1908  00F0  0A84               	incf	4,f
  1909  00F1  0800               	movf	0,w
  1910  00F2  00DD               	movwf	??_printf+3
  1911  00F3  300F               	movlw	15
  1912  00F4                     u3445:	
  1913  00F4  1003               	clrc
  1914  00F5  0CDD               	rrf	??_printf+3,f
  1915  00F6  0CDC               	rrf	??_printf+2,f
  1916  00F7  0CDB               	rrf	??_printf+1,f
  1917  00F8  0CDA               	rrf	??_printf,f
  1918  00F9  3EFF               	addlw	-1
  1919  00FA  1D03               	skipz
  1920  00FB  28F4               	goto	u3445
  1921  00FC  085B               	movf	??_printf+1,w
  1922  00FD  1683               	bsf	3,5	;RP0=1, select bank1
  1923  00FE  00B2               	movwf	(printf@exp+1)^(0+128)
  1924  00FF  1283               	bcf	3,5	;RP0=0, select bank0
  1925  0100  085A               	movf	??_printf,w
  1926  0101  1683               	bsf	3,5	;RP0=1, select bank1
  1927  0102  00B1               	movwf	printf@exp^(0+128)
  1928  0103  3082               	movlw	-126
  1929  0104  01B2               	clrf	(printf@exp+1)^(0+128)
  1930  0105  07B1               	addwf	printf@exp^(0+128),f
  1931  0106  1C03               	skipc
  1932  0107  03B2               	decf	(printf@exp+1)^(0+128),f
  1933  0108  30FF               	movlw	-1
  1934  0109  07B1               	addwf	printf@exp^(0+128),f
  1935  010A  1C03               	skipc
  1936  010B  03B2               	decf	(printf@exp+1)^(0+128),f
  1937  010C  3003               	movlw	3
  1938  010D  00F2               	movwf	?___wmul
  1939  010E  01F3               	clrf	?___wmul+1
  1940  010F  0832               	movf	(printf@exp+1)^(0+128),w
  1941  0110  00F5               	movwf	?___wmul+3
  1942  0111  0831               	movf	printf@exp^(0+128),w
  1943  0112  00F4               	movwf	?___wmul+2
  1944  0113  24B7               	fcall	___wmul
  1945  0114  0873               	movf	?___wmul+1,w
  1946  0115  00B2               	movwf	(printf@exp+1)^(0+128)
  1947  0116  0872               	movf	?___wmul,w
  1948  0117  00B1               	movwf	printf@exp^(0+128)
  1949  0118  300A               	movlw	10
  1950  0119  00F8               	movwf	?___awdiv
  1951  011A  01F9               	clrf	?___awdiv+1
  1952  011B  0832               	movf	(printf@exp+1)^(0+128),w
  1953  011C  00FB               	movwf	?___awdiv+3
  1954  011D  0831               	movf	printf@exp^(0+128),w
  1955  011E  00FA               	movwf	?___awdiv+2
  1956  011F  120A  158A  2669   	fcall	___awdiv
      +       120A  118A         
  1957  0124  0879               	movf	?___awdiv+1,w
  1958  0125  1683               	bsf	3,5	;RP0=1, select bank1
  1959  0126  00B2               	movwf	(printf@exp+1)^(0+128)
  1960  0127  0878               	movf	?___awdiv,w
  1961  0128  00B1               	movwf	printf@exp^(0+128)
  1962  0129  1FB2               	btfss	(printf@exp+1)^(0+128),7
  1963  012A  292F               	goto	l6850
  1964  012B  30FF               	movlw	-1
  1965  012C  07B1               	addwf	printf@exp^(0+128),f
  1966  012D  1C03               	skipc
  1967  012E  03B2               	decf	(printf@exp+1)^(0+128),f
  1968  012F                     l6850:	
  1969  012F  0331               	decf	printf@exp^(0+128),w
  1970  0130  3AFF               	xorlw	255
  1971  0131  120A  158A  24D7   	fcall	_scale
      +       120A  118A         
  1972  0136  274A  120A  118A   	fcall	PL6	;call to abstracted procedure
  1973  0139  2779               	fcall	PL15	;call to abstracted procedure
  1974  013A  1683               	bsf	3,5	;RP0=1, select bank1
  1975  013B  0825               	movf	printf@integ^(0+128),w
  1976  013C  1283               	bcf	3,5	;RP0=0, select bank0
  1977  013D  00B5               	movwf	?___ftmul+3
  1978  013E  1683               	bsf	3,5	;RP0=1, select bank1
  1979  013F  0826               	movf	(printf@integ+1)^(0+128),w
  1980  0140  1283               	bcf	3,5	;RP0=0, select bank0
  1981  0141  00B6               	movwf	?___ftmul+4
  1982  0142  1683               	bsf	3,5	;RP0=1, select bank1
  1983  0143  0827               	movf	(printf@integ+2)^(0+128),w
  1984  0144  1283               	bcf	3,5	;RP0=0, select bank0
  1985  0145  00B7               	movwf	?___ftmul+5
  1986  0146  120A  158A  26EC   	fcall	___ftmul
      +       120A  118A         
  1987  014B  0832               	movf	?___ftmul,w
  1988  014C  1683               	bsf	3,5	;RP0=1, select bank1
  1989  014D  00A5               	movwf	printf@integ^(0+128)
  1990  014E  1283               	bcf	3,5	;RP0=0, select bank0
  1991  014F  0833               	movf	?___ftmul+1,w
  1992  0150  1683               	bsf	3,5	;RP0=1, select bank1
  1993  0151  00A6               	movwf	(printf@integ+1)^(0+128)
  1994  0152  1283               	bcf	3,5	;RP0=0, select bank0
  1995  0153  0834               	movf	?___ftmul+2,w
  1996  0154  1683               	bsf	3,5	;RP0=1, select bank1
  1997  0155  00A7               	movwf	(printf@integ+2)^(0+128)
  1998  0156  27A0  120A  118A   	fcall	PL21	;call to abstracted procedure
  1999  0159  3080               	movlw	128
  2000  015A  01F5               	clrf	?___ftge+3
  2001  015B  00F6               	movwf	?___ftge+4
  2002  015C  303F               	movlw	63
  2003  015D  00F7               	movwf	?___ftge+5
  2004  015E  247D  120A  118A   	fcall	___ftge
  2005  0161  1803               	btfsc	3,0
  2006  0162  2968               	goto	l6858
  2007  0163  30FF               	movlw	-1
  2008  0164  07B1               	addwf	printf@exp^(0+128),f
  2009  0165  1C03               	skipc
  2010  0166  03B2               	decf	(printf@exp+1)^(0+128),f
  2011  0167  2978               	goto	l6862
  2012  0168                     l6858:	
  2013  0168  27A0  120A  118A   	fcall	PL21	;call to abstracted procedure
  2014  016B  3020               	movlw	32
  2015  016C  01F5               	clrf	?___ftge+3
  2016  016D  00F6               	movwf	?___ftge+4
  2017  016E  3041               	movlw	65
  2018  016F  00F7               	movwf	?___ftge+5
  2019  0170  247D  120A  118A   	fcall	___ftge
  2020  0173  1C03               	btfss	3,0
  2021  0174  2978               	goto	l6862
  2022  0175  0AB1               	incf	printf@exp^(0+128),f
  2023  0176  1903               	skipnz
  2024  0177  0AB2               	incf	(printf@exp+1)^(0+128),f
  2025  0178                     l6862:	
  2026  0178  0837               	movf	(printf@prec+1)^(0+128),w
  2027  0179  3A80               	xorlw	128
  2028  017A  00FF               	movwf	127
  2029  017B  3080               	movlw	128
  2030  017C  027F               	subwf	127,w
  2031  017D  1D03               	skipz
  2032  017E  2981               	goto	u3485
  2033  017F  300D               	movlw	13
  2034  0180  0236               	subwf	printf@prec^(0+128),w
  2035  0181                     u3485:	
  2036  0181  1803               	skipnc
  2037  0182  29AA               	goto	l6866
  2038  0183  27B5               	call	PL31	;select bank 1
  2039  0184  0836               	movf	printf@prec^(0+128),w
  2040  0185  120A  158A  2131   	fcall	_fround
      +       120A  118A         
  2041  018A  084D               	movf	?_fround,w
  2042  018B  00C1               	movwf	?___ftadd
  2043  018C  084E               	movf	?_fround+1,w
  2044  018D  00C2               	movwf	?___ftadd+1
  2045  018E  084F               	movf	?_fround+2,w
  2046  018F  00C3               	movwf	?___ftadd+2
  2047  0190  1683               	bsf	3,5	;RP0=1, select bank1
  2048  0191  0833               	movf	printf@fval^(0+128),w
  2049  0192  1283               	bcf	3,5	;RP0=0, select bank0
  2050  0193  00C4               	movwf	?___ftadd+3
  2051  0194  1683               	bsf	3,5	;RP0=1, select bank1
  2052  0195  0834               	movf	(printf@fval+1)^(0+128),w
  2053  0196  1283               	bcf	3,5	;RP0=0, select bank0
  2054  0197  00C5               	movwf	?___ftadd+4
  2055  0198  1683               	bsf	3,5	;RP0=1, select bank1
  2056  0199  0835               	movf	(printf@fval+2)^(0+128),w
  2057  019A  1283               	bcf	3,5	;RP0=0, select bank0
  2058  019B  00C6               	movwf	?___ftadd+5
  2059  019C  2632  120A  118A   	fcall	___ftadd
  2060  019F  0841               	movf	?___ftadd,w
  2061  01A0  1683               	bsf	3,5	;RP0=1, select bank1
  2062  01A1  00B3               	movwf	printf@fval^(0+128)
  2063  01A2  1283               	bcf	3,5	;RP0=0, select bank0
  2064  01A3  0842               	movf	?___ftadd+1,w
  2065  01A4  1683               	bsf	3,5	;RP0=1, select bank1
  2066  01A5  00B4               	movwf	(printf@fval+1)^(0+128)
  2067  01A6  1283               	bcf	3,5	;RP0=0, select bank0
  2068  01A7  0843               	movf	?___ftadd+2,w
  2069  01A8  1683               	bsf	3,5	;RP0=1, select bank1
  2070  01A9  00B5               	movwf	(printf@fval+2)^(0+128)
  2071  01AA                     l6866:	
  2072  01AA  27B5               	call	PL31	;select bank 1
  2073  01AB  0832               	movf	(printf@exp+1)^(0+128),w
  2074  01AC  3A80               	xorlw	128
  2075  01AD  00FF               	movwf	127
  2076  01AE  3080               	movlw	128
  2077  01AF  027F               	subwf	127,w
  2078  01B0  1D03               	skipz
  2079  01B1  29B4               	goto	u3495
  2080  01B2  300A               	movlw	10
  2081  01B3  0231               	subwf	printf@exp^(0+128),w
  2082  01B4                     u3495:	
  2083  01B4  1803               	skipnc
  2084  01B5  29D5               	goto	l6874
  2085  01B6  27B5               	call	PL31	;select bank 1
  2086  01B7  0835               	movf	(printf@fval+2)^(0+128),w
  2087  01B8  0434               	iorwf	(printf@fval+1)^(0+128),w
  2088  01B9  0433               	iorwf	printf@fval^(0+128),w
  2089  01BA  1903               	skipnz
  2090  01BB  2A16               	goto	l6890
  2091  01BC  0833               	movf	printf@fval^(0+128),w
  2092  01BD  276E  120A  118A   	fcall	PL13	;call to abstracted procedure
  2093  01C0  24D0  120A  118A   	fcall	___fttol
  2094  01C3  0827               	movf	?___fttol+3,w
  2095  01C4  0426               	iorwf	?___fttol+2,w
  2096  01C5  0425               	iorwf	?___fttol+1,w
  2097  01C6  0424               	iorwf	?___fttol,w
  2098  01C7  1D03               	skipz
  2099  01C8  2A16               	goto	l6890
  2100  01C9  1683               	bsf	3,5	;RP0=1, select bank1
  2101  01CA  0832               	movf	(printf@exp+1)^(0+128),w
  2102  01CB  3A80               	xorlw	128
  2103  01CC  00FF               	movwf	127
  2104  01CD  3080               	movlw	128
  2105  01CE  027F               	subwf	127,w
  2106  01CF  1D03               	skipz
  2107  01D0  29D3               	goto	u3525
  2108  01D1  3002               	movlw	2
  2109  01D2  0231               	subwf	printf@exp^(0+128),w
  2110  01D3                     u3525:	
  2111  01D3  1C03               	skipc
  2112  01D4  2A16               	goto	l6890
  2113  01D5                     l6874:	
  2114  01D5  27B5               	call	PL31	;select bank 1
  2115  01D6  27A0  120A  118A   	fcall	PL21	;call to abstracted procedure
  2116  01D9  3070               	movlw	112
  2117  01DA  00F5               	movwf	?___ftge+3
  2118  01DB  3089               	movlw	137
  2119  01DC  00F6               	movwf	?___ftge+4
  2120  01DD  3040               	movlw	64
  2121  01DE  00F7               	movwf	?___ftge+5
  2122  01DF  247D  120A  118A   	fcall	___ftge
  2123  01E2  1803               	btfsc	3,0
  2124  01E3  29E6               	goto	l6878
  2125  01E4  30F7               	movlw	-9
  2126  01E5  29E7               	goto	L2
  2127  01E6                     l6878:	
  2128  01E6  30F8               	movlw	-8
  2129  01E7                     L2:	
  2130  01E7  07B1               	addwf	printf@exp^(0+128),f
  2131  01E8  1C03               	skipc
  2132  01E9  03B2               	decf	(printf@exp+1)^(0+128),f
  2133  01EA  0831               	movf	printf@exp^(0+128),w
  2134  01EB  120A  158A  24D7   	fcall	_scale
      +       120A  118A         
  2135  01F0  274A  120A  118A   	fcall	PL6	;call to abstracted procedure
  2136  01F3  00F2               	movwf	?__tdiv_to_l_
  2137  01F4  0834               	movf	(printf@fval+1)^(0+128),w
  2138  01F5  00F3               	movwf	?__tdiv_to_l_+1
  2139  01F6  0835               	movf	(printf@fval+2)^(0+128),w
  2140  01F7  00F4               	movwf	?__tdiv_to_l_+2
  2141  01F8  0825               	movf	printf@integ^(0+128),w
  2142  01F9  00F5               	movwf	?__tdiv_to_l_+3
  2143  01FA  0826               	movf	(printf@integ+1)^(0+128),w
  2144  01FB  00F6               	movwf	?__tdiv_to_l_+4
  2145  01FC  0827               	movf	(printf@integ+2)^(0+128),w
  2146  01FD  00F7               	movwf	?__tdiv_to_l_+5
  2147  01FE  25B2  120A  118A   	fcall	__tdiv_to_l_
  2148  0201  0875               	movf	?__tdiv_to_l_+3,w
  2149  0202  1683               	bsf	3,5	;RP0=1, select bank1
  2150  0203  00A3               	movwf	(_printf$3162+3)^(0+128)
  2151  0204  0874               	movf	?__tdiv_to_l_+2,w
  2152  0205  00A2               	movwf	(_printf$3162+2)^(0+128)
  2153  0206  0873               	movf	?__tdiv_to_l_+1,w
  2154  0207  00A1               	movwf	(_printf$3162+1)^(0+128)
  2155  0208  0872               	movf	?__tdiv_to_l_,w
  2156  0209  00A0               	movwf	_printf$3162^(0+128)
  2157  020A  0823               	movf	(_printf$3162+3)^(0+128),w
  2158  020B  00AB               	movwf	(printf@_val+3)^(0+128)
  2159  020C  0822               	movf	(_printf$3162+2)^(0+128),w
  2160  020D  00AA               	movwf	(printf@_val+2)^(0+128)
  2161  020E  0821               	movf	(_printf$3162+1)^(0+128),w
  2162  020F  00A9               	movwf	(printf@_val+1)^(0+128)
  2163  0210  0820               	movf	_printf$3162^(0+128),w
  2164  0211  00A8               	movwf	printf@_val^(0+128)
  2165  0212  01B3               	clrf	printf@fval^(0+128)
  2166  0213  01B4               	clrf	(printf@fval+1)^(0+128)
  2167  0214  01B5               	clrf	(printf@fval+2)^(0+128)
  2168  0215  2A57               	goto	l6894
  2169  0216                     l6890:	
  2170  0216  27B5               	call	PL31	;select bank 1
  2171  0217  0833               	movf	printf@fval^(0+128),w
  2172  0218  276E  120A  118A   	fcall	PL13	;call to abstracted procedure
  2173  021B  24D0  120A  118A   	fcall	___fttol
  2174  021E  273C  120A  118A   	fcall	PL5	;call to abstracted procedure
  2175  0221  1683               	bsf	3,5	;RP0=1, select bank1
  2176  0222  00A8               	movwf	printf@_val^(0+128)
  2177  0223  082B               	movf	(printf@_val+3)^(0+128),w
  2178  0224  1283               	bcf	3,5	;RP0=0, select bank0
  2179  0225  00A3               	movwf	?___lltoft+3
  2180  0226  1683               	bsf	3,5	;RP0=1, select bank1
  2181  0227  082A               	movf	(printf@_val+2)^(0+128),w
  2182  0228  1283               	bcf	3,5	;RP0=0, select bank0
  2183  0229  00A2               	movwf	?___lltoft+2
  2184  022A  1683               	bsf	3,5	;RP0=1, select bank1
  2185  022B  0829               	movf	(printf@_val+1)^(0+128),w
  2186  022C  1283               	bcf	3,5	;RP0=0, select bank0
  2187  022D  00A1               	movwf	?___lltoft+1
  2188  022E  1683               	bsf	3,5	;RP0=1, select bank1
  2189  022F  0828               	movf	printf@_val^(0+128),w
  2190  0230  1283               	bcf	3,5	;RP0=0, select bank0
  2191  0231  00A0               	movwf	?___lltoft
  2192  0232  26F4  120A  118A   	fcall	___lltoft
  2193  0235  0820               	movf	?___lltoft,w
  2194  0236  00CD               	movwf	?___ftsub
  2195  0237  0821               	movf	?___lltoft+1,w
  2196  0238  00CE               	movwf	?___ftsub+1
  2197  0239  0822               	movf	?___lltoft+2,w
  2198  023A  00CF               	movwf	?___ftsub+2
  2199  023B  1683               	bsf	3,5	;RP0=1, select bank1
  2200  023C  0833               	movf	printf@fval^(0+128),w
  2201  023D  1283               	bcf	3,5	;RP0=0, select bank0
  2202  023E  00D0               	movwf	?___ftsub+3
  2203  023F  1683               	bsf	3,5	;RP0=1, select bank1
  2204  0240  0834               	movf	(printf@fval+1)^(0+128),w
  2205  0241  1283               	bcf	3,5	;RP0=0, select bank0
  2206  0242  00D1               	movwf	?___ftsub+4
  2207  0243  1683               	bsf	3,5	;RP0=1, select bank1
  2208  0244  0835               	movf	(printf@fval+2)^(0+128),w
  2209  0245  1283               	bcf	3,5	;RP0=0, select bank0
  2210  0246  00D2               	movwf	?___ftsub+5
  2211  0247  2714  120A  118A   	fcall	___ftsub
  2212  024A  084D               	movf	?___ftsub,w
  2213  024B  1683               	bsf	3,5	;RP0=1, select bank1
  2214  024C  00B3               	movwf	printf@fval^(0+128)
  2215  024D  1283               	bcf	3,5	;RP0=0, select bank0
  2216  024E  084E               	movf	?___ftsub+1,w
  2217  024F  1683               	bsf	3,5	;RP0=1, select bank1
  2218  0250  00B4               	movwf	(printf@fval+1)^(0+128)
  2219  0251  1283               	bcf	3,5	;RP0=0, select bank0
  2220  0252  084F               	movf	?___ftsub+2,w
  2221  0253  1683               	bsf	3,5	;RP0=1, select bank1
  2222  0254  00B5               	movwf	(printf@fval+2)^(0+128)
  2223  0255  01B1               	clrf	printf@exp^(0+128)
  2224  0256  01B2               	clrf	(printf@exp+1)^(0+128)
  2225  0257                     l6894:	
  2226  0257  01B8               	clrf	printf@c^(0+128)
  2227  0258  0AB8               	incf	printf@c^(0+128),f
  2228  0259                     l6900:	
  2229  0259  272A               	fcall	PL3	;call to abstracted procedure
  2230  025A  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2231  025F  00DB               	movwf	??_printf+1
  2232  0260  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2233  0265  00DC               	movwf	??_printf+2
  2234  0266  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2235  026B  00DD               	movwf	??_printf+3
  2236  026C  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2237  0271  00DE               	movwf	??_printf+4
  2238  0272  1683               	bsf	3,5	;RP0=1, select bank1
  2239  0273  022B               	subwf	(printf@_val+3)^(0+128),w
  2240  0274  1D03               	skipz
  2241  0275  2A86               	goto	u3545
  2242  0276  1283               	bcf	3,5	;RP0=0, select bank0
  2243  0277  085D               	movf	??_printf+3,w
  2244  0278  1683               	bsf	3,5	;RP0=1, select bank1
  2245  0279  022A               	subwf	(printf@_val+2)^(0+128),w
  2246  027A  1D03               	skipz
  2247  027B  2A86               	goto	u3545
  2248  027C  1283               	bcf	3,5	;RP0=0, select bank0
  2249  027D  085C               	movf	??_printf+2,w
  2250  027E  1683               	bsf	3,5	;RP0=1, select bank1
  2251  027F  0229               	subwf	(printf@_val+1)^(0+128),w
  2252  0280  1D03               	skipz
  2253  0281  2A86               	goto	u3545
  2254  0282  1283               	bcf	3,5	;RP0=0, select bank0
  2255  0283  085B               	movf	??_printf+1,w
  2256  0284  1683               	bsf	3,5	;RP0=1, select bank1
  2257  0285  0228               	subwf	printf@_val^(0+128),w
  2258  0286                     u3545:	
  2259  0286  1C03               	btfss	3,0
  2260  0287  2A8D               	goto	l6908
  2261  0288  0AB8               	incf	printf@c^(0+128),f
  2262  0289  0838               	movf	printf@c^(0+128),w
  2263  028A  3A0A               	xorlw	10
  2264  028B  1D03               	skipz
  2265  028C  2A59               	goto	l6900
  2266  028D                     l6908:	
  2267  028D  0836               	movf	printf@prec^(0+128),w
  2268  028E  0738               	addwf	printf@c^(0+128),w
  2269  028F  1283               	bcf	3,5	;RP0=0, select bank0
  2270  0290  00DA               	movwf	??_printf
  2271  0291  1683               	bsf	3,5	;RP0=1, select bank1
  2272  0292  0837               	movf	(printf@prec+1)^(0+128),w
  2273  0293  1803               	skipnc
  2274  0294  0A37               	incf	(printf@prec+1)^(0+128),w
  2275  0295  1BB8               	btfsc	printf@c^(0+128),7
  2276  0296  3EFF               	addlw	255
  2277  0297  1283               	bcf	3,5	;RP0=0, select bank0
  2278  0298  00DB               	movwf	??_printf+1
  2279  0299  1683               	bsf	3,5	;RP0=1, select bank1
  2280  029A  0831               	movf	printf@exp^(0+128),w
  2281  029B  1283               	bcf	3,5	;RP0=0, select bank0
  2282  029C  075A               	addwf	??_printf,w
  2283  029D  00DC               	movwf	??_printf+2
  2284  029E  1683               	bsf	3,5	;RP0=1, select bank1
  2285  029F  0832               	movf	(printf@exp+1)^(0+128),w
  2286  02A0  1803               	skipnc
  2287  02A1  0A32               	incf	(printf@exp+1)^(0+128),w
  2288  02A2  1283               	bcf	3,5	;RP0=0, select bank0
  2289  02A3  075B               	addwf	??_printf+1,w
  2290  02A4  00DD               	movwf	??_printf+3
  2291  02A5  085C               	movf	??_printf+2,w
  2292  02A6  1683               	bsf	3,5	;RP0=1, select bank1
  2293  02A7  02AF               	subwf	printf@width^(0+128),f
  2294  02A8  1283               	bcf	3,5	;RP0=0, select bank0
  2295  02A9  085D               	movf	??_printf+3,w
  2296  02AA  1683               	bsf	3,5	;RP0=1, select bank1
  2297  02AB  1C03               	skipc
  2298  02AC  03B0               	decf	(printf@width+1)^(0+128),f
  2299  02AD  02B0               	subwf	(printf@width+1)^(0+128),f
  2300  02AE  0837               	movf	(printf@prec+1)^(0+128),w
  2301  02AF  0436               	iorwf	printf@prec^(0+128),w
  2302  02B0  1903               	skipnz
  2303  02B1  2AB6               	goto	l6914
  2304  02B2  30FF               	movlw	-1
  2305  02B3  07AF               	addwf	printf@width^(0+128),f
  2306  02B4  1C03               	skipc
  2307  02B5  03B0               	decf	(printf@width+1)^(0+128),f
  2308  02B6                     l6914:	
  2309  02B6  082C               	movf	printf@flag^(0+128),w
  2310  02B7  3903               	andlw	3
  2311  02B8  1D03               	btfss	3,2
  2312  02B9  2AC9               	goto	l6916
  2313  02BA                     l6922:	
  2314  02BA  0830               	movf	(printf@width+1)^(0+128),w
  2315  02BB  3A80               	xorlw	128
  2316  02BC  00FF               	movwf	127
  2317  02BD  3080               	movlw	128
  2318  02BE  027F               	subwf	127,w
  2319  02BF  1D03               	skipz
  2320  02C0  2AC3               	goto	u3585
  2321  02C1  3001               	movlw	1
  2322  02C2  022F               	subwf	printf@width^(0+128),w
  2323  02C3                     u3585:	
  2324  02C3  1C03               	btfss	3,0
  2325  02C4  2ACF               	goto	l6924
  2326  02C5  3020               	movlw	32
  2327  02C6  2479  120A  118A   	fcall	_putch
  2328  02C9                     l6916:	
  2329  02C9  30FF               	movlw	-1
  2330  02CA  27B5               	call	PL31	;select bank 1
  2331  02CB  07AF               	addwf	printf@width^(0+128),f
  2332  02CC  1C03               	skipc
  2333  02CD  03B0               	decf	(printf@width+1)^(0+128),f
  2334  02CE  2ABA               	goto	l6922
  2335  02CF                     l6924:	
  2336  02CF  27B5               	call	PL31	;select bank 1
  2337  02D0  082C               	movf	printf@flag^(0+128),w
  2338  02D1  3903               	andlw	3
  2339  02D2  1903               	btfsc	3,2
  2340  02D3  2B02               	goto	l6930
  2341  02D4  302D               	movlw	45
  2342  02D5  2AFF               	goto	L3
  2343  02D6                     l6928:	
  2344  02D6  2734  120A  118A   	fcall	PL4	;call to abstracted procedure
  2345  02D9  272A               	fcall	PL3	;call to abstracted procedure
  2346  02DA  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2347  02DF  00F2               	movwf	?___lldiv
  2348  02E0  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2349  02E5  00F3               	movwf	?___lldiv+1
  2350  02E6  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2351  02EB  00F4               	movwf	?___lldiv+2
  2352  02EC  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2353  02F1  2763  120A  118A   	fcall	PL12	;call to abstracted procedure
  2354  02F4  2569  120A  118A   	fcall	___lldiv
  2355  02F7  2797  120A  118A   	fcall	PL20	;call to abstracted procedure
  2356  02FA  252B  120A  118A   	fcall	___llmod
  2357  02FD  0825               	movf	?___llmod,w
  2358  02FE  3E30               	addlw	48
  2359  02FF                     L3:	
  2360  02FF  2479  120A  118A   	fcall	_putch
  2361  0302                     l6930:	
  2362  0302  27B5               	call	PL31	;select bank 1
  2363  0303  03B8               	decf	printf@c^(0+128),f
  2364  0304  0F38               	incfsz	printf@c^(0+128),w
  2365  0305  2AD6               	goto	l6928
  2366  0306                     l6936:	
  2367  0306  0832               	movf	(printf@exp+1)^(0+128),w
  2368  0307  3A80               	xorlw	128
  2369  0308  00FF               	movwf	127
  2370  0309  3080               	movlw	128
  2371  030A  027F               	subwf	127,w
  2372  030B  1D03               	skipz
  2373  030C  2B0F               	goto	u3615
  2374  030D  3001               	movlw	1
  2375  030E  0231               	subwf	printf@exp^(0+128),w
  2376  030F                     u3615:	
  2377  030F  1C03               	btfss	3,0
  2378  0310  2B1B               	goto	l6938
  2379  0311  3030               	movlw	48
  2380  0312  2479  120A  118A   	fcall	_putch
  2381  0315  30FF               	movlw	-1
  2382  0316  27B5               	call	PL31	;select bank 1
  2383  0317  07B1               	addwf	printf@exp^(0+128),f
  2384  0318  1C03               	skipc
  2385  0319  03B2               	decf	(printf@exp+1)^(0+128),f
  2386  031A  2B06               	goto	l6936
  2387  031B                     l6938:	
  2388  031B  27B5               	call	PL31	;select bank 1
  2389  031C  0837               	movf	(printf@prec+1)^(0+128),w
  2390  031D  3A80               	xorlw	128
  2391  031E  00FF               	movwf	127
  2392  031F  3080               	movlw	128
  2393  0320  027F               	subwf	127,w
  2394  0321  1D03               	skipz
  2395  0322  2B25               	goto	u3625
  2396  0323  3009               	movlw	9
  2397  0324  0236               	subwf	printf@prec^(0+128),w
  2398  0325                     u3625:	
  2399  0325  1C03               	skipc
  2400  0326  2B2A               	goto	l6942
  2401  0327  3008               	movlw	8
  2402  0328  27B5               	call	PL31	;select bank 1
  2403  0329  2B2C               	goto	L4
  2404  032A                     l6942:	
  2405  032A  27B5               	call	PL31	;select bank 1
  2406  032B  0836               	movf	printf@prec^(0+128),w
  2407  032C                     L4:	
  2408  032C  00B8               	movwf	printf@c^(0+128)
  2409  032D  1283               	bcf	3,5	;RP0=0, select bank0
  2410  032E  00DA               	movwf	??_printf
  2411  032F  01DB               	clrf	??_printf+1
  2412  0330  1BDA               	btfsc	??_printf,7
  2413  0331  03DB               	decf	??_printf+1,f
  2414  0332  1683               	bsf	3,5	;RP0=1, select bank1
  2415  0333  02B6               	subwf	printf@prec^(0+128),f
  2416  0334  1283               	bcf	3,5	;RP0=0, select bank0
  2417  0335  085B               	movf	??_printf+1,w
  2418  0336  1683               	bsf	3,5	;RP0=1, select bank1
  2419  0337  1C03               	skipc
  2420  0338  03B7               	decf	(printf@prec+1)^(0+128),f
  2421  0339  02B7               	subwf	(printf@prec+1)^(0+128),f
  2422  033A  0838               	movf	printf@c^(0+128),w
  2423  033B  1903               	btfsc	3,2
  2424  033C  2B41               	goto	l2237
  2425  033D  302E               	movlw	46
  2426  033E  2479  120A  118A   	fcall	_putch
  2427  0341                     l2237:	
  2428  0341  27B5               	call	PL31	;select bank 1
  2429  0342  0838               	movf	printf@c^(0+128),w
  2430  0343  120A  158A  24D7   	fcall	_scale
      +       120A  118A         
  2431  0348  0841               	movf	?_scale,w
  2432  0349  00B5               	movwf	?___ftmul+3
  2433  034A  0842               	movf	?_scale+1,w
  2434  034B  00B6               	movwf	?___ftmul+4
  2435  034C  0843               	movf	?_scale+2,w
  2436  034D  00B7               	movwf	?___ftmul+5
  2437  034E  1683               	bsf	3,5	;RP0=1, select bank1
  2438  034F  0833               	movf	printf@fval^(0+128),w
  2439  0350  2779               	fcall	PL15	;call to abstracted procedure
  2440  0351  120A  158A  26EC   	fcall	___ftmul
      +       120A  118A         
  2441  0356  0832               	movf	?___ftmul,w
  2442  0357  00A4               	movwf	?___fttol
  2443  0358  0833               	movf	?___ftmul+1,w
  2444  0359  00A5               	movwf	?___fttol+1
  2445  035A  0834               	movf	?___ftmul+2,w
  2446  035B  00A6               	movwf	?___fttol+2
  2447  035C  24D0  120A  118A   	fcall	___fttol
  2448  035F  273C  120A  118A   	fcall	PL5	;call to abstracted procedure
  2449  0362  2BC9               	goto	L5
  2450  0363                     l6946:	
  2451  0363  2734  120A  118A   	fcall	PL4	;call to abstracted procedure
  2452  0366  272A               	fcall	PL3	;call to abstracted procedure
  2453  0367  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2454  036C  00F2               	movwf	?___lldiv
  2455  036D  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2456  0372  00F3               	movwf	?___lldiv+1
  2457  0373  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2458  0378  00F4               	movwf	?___lldiv+2
  2459  0379  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2460  037E  2763  120A  118A   	fcall	PL12	;call to abstracted procedure
  2461  0381  2569  120A  118A   	fcall	___lldiv
  2462  0384  2797  120A  118A   	fcall	PL20	;call to abstracted procedure
  2463  0387  252B  120A  118A   	fcall	___llmod
  2464  038A  0825               	movf	?___llmod,w
  2465  038B  3E30               	addlw	48
  2466  038C  2479  120A  118A   	fcall	_putch
  2467  038F  27B5               	call	PL31	;select bank 1
  2468  0390  272A               	fcall	PL3	;call to abstracted procedure
  2469  0391  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2470  0396  00A5               	movwf	?___llmod
  2471  0397  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2472  039C  00A6               	movwf	?___llmod+1
  2473  039D  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2474  03A2  00A7               	movwf	?___llmod+2
  2475  03A3  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2476  03A8  00A8               	movwf	?___llmod+3
  2477  03A9  1683               	bsf	3,5	;RP0=1, select bank1
  2478  03AA  082B               	movf	(printf@_val+3)^(0+128),w
  2479  03AB  1283               	bcf	3,5	;RP0=0, select bank0
  2480  03AC  00AC               	movwf	?___llmod+7
  2481  03AD  1683               	bsf	3,5	;RP0=1, select bank1
  2482  03AE  082A               	movf	(printf@_val+2)^(0+128),w
  2483  03AF  1283               	bcf	3,5	;RP0=0, select bank0
  2484  03B0  00AB               	movwf	?___llmod+6
  2485  03B1  1683               	bsf	3,5	;RP0=1, select bank1
  2486  03B2  0829               	movf	(printf@_val+1)^(0+128),w
  2487  03B3  1283               	bcf	3,5	;RP0=0, select bank0
  2488  03B4  00AA               	movwf	?___llmod+5
  2489  03B5  1683               	bsf	3,5	;RP0=1, select bank1
  2490  03B6  0828               	movf	printf@_val^(0+128),w
  2491  03B7  1283               	bcf	3,5	;RP0=0, select bank0
  2492  03B8  00A9               	movwf	?___llmod+4
  2493  03B9  252B  120A  118A   	fcall	___llmod
  2494  03BC  0828               	movf	?___llmod+3,w
  2495  03BD  1683               	bsf	3,5	;RP0=1, select bank1
  2496  03BE  00AB               	movwf	(printf@_val+3)^(0+128)
  2497  03BF  1283               	bcf	3,5	;RP0=0, select bank0
  2498  03C0  0827               	movf	?___llmod+2,w
  2499  03C1  1683               	bsf	3,5	;RP0=1, select bank1
  2500  03C2  00AA               	movwf	(printf@_val+2)^(0+128)
  2501  03C3  1283               	bcf	3,5	;RP0=0, select bank0
  2502  03C4  0826               	movf	?___llmod+1,w
  2503  03C5  1683               	bsf	3,5	;RP0=1, select bank1
  2504  03C6  00A9               	movwf	(printf@_val+1)^(0+128)
  2505  03C7  1283               	bcf	3,5	;RP0=0, select bank0
  2506  03C8  0825               	movf	?___llmod,w
  2507  03C9                     L5:	
  2508  03C9  1683               	bsf	3,5	;RP0=1, select bank1
  2509  03CA  00A8               	movwf	printf@_val^(0+128)
  2510  03CB  03B8               	decf	printf@c^(0+128),f
  2511  03CC  0F38               	incfsz	printf@c^(0+128),w
  2512  03CD  2B63               	goto	l6946
  2513  03CE                     l6954:	
  2514  03CE  0837               	movf	(printf@prec+1)^(0+128),w
  2515  03CF  0436               	iorwf	printf@prec^(0+128),w
  2516  03D0  1903               	btfsc	3,2
  2517  03D1  2813               	goto	l7000
  2518  03D2  3030               	movlw	48
  2519  03D3  2479  120A  118A   	fcall	_putch
  2520  03D6  30FF               	movlw	-1
  2521  03D7  27B5               	call	PL31	;select bank 1
  2522  03D8  07B6               	addwf	printf@prec^(0+128),f
  2523  03D9  1C03               	skipc
  2524  03DA  03B7               	decf	(printf@prec+1)^(0+128),f
  2525  03DB  2BCE               	goto	l6954
  2526  03DC                     l6956:	
  2527  03DC  1683               	bsf	3,5	;RP0=1, select bank1
  2528  03DD  0837               	movf	(printf@prec+1)^(0+128),w
  2529  03DE  0436               	iorwf	printf@prec^(0+128),w
  2530  03DF  1D03               	skipz
  2531  03E0  2BE9               	goto	l6962
  2532  03E1  082B               	movf	(printf@_val+3)^(0+128),w
  2533  03E2  042A               	iorwf	(printf@_val+2)^(0+128),w
  2534  03E3  0429               	iorwf	(printf@_val+1)^(0+128),w
  2535  03E4  0428               	iorwf	printf@_val^(0+128),w
  2536  03E5  1903               	btfsc	3,2
  2537  03E6  0AB6               	incf	printf@prec^(0+128),f
  2538  03E7  1903               	skipnz
  2539  03E8  0AB7               	incf	(printf@prec+1)^(0+128),f
  2540  03E9                     l6962:	
  2541  03E9  0838               	movf	printf@c^(0+128),w
  2542  03EA  2784  120A  118A   	fcall	PL17	;call to abstracted procedure
  2543  03ED  0837               	movf	(printf@prec+1)^(0+128),w
  2544  03EE  3A80               	xorlw	128
  2545  03EF  1283               	bcf	3,5	;RP0=0, select bank0
  2546  03F0  025C               	subwf	??_printf+2,w
  2547  03F1  1D03               	skipz
  2548  03F2  2BF7               	goto	u3685
  2549  03F3  1683               	bsf	3,5	;RP0=1, select bank1
  2550  03F4  0836               	movf	printf@prec^(0+128),w
  2551  03F5  1283               	bcf	3,5	;RP0=0, select bank0
  2552  03F6  025A               	subwf	??_printf,w
  2553  03F7                     u3685:	
  2554  03F7  1803               	skipnc
  2555  03F8  2BFD               	goto	l6966
  2556  03F9  27B5               	call	PL31	;select bank 1
  2557  03FA  0836               	movf	printf@prec^(0+128),w
  2558  03FB  00B8               	movwf	printf@c^(0+128)
  2559  03FC  2C15               	goto	l6970
  2560  03FD                     l6966:	
  2561  03FD  1683               	bsf	3,5	;RP0=1, select bank1
  2562  03FE  278E  120A  118A   	fcall	PL19	;call to abstracted procedure
  2563  0401  0837               	movf	(printf@prec+1)^(0+128),w
  2564  0402  3A80               	xorlw	128
  2565  0403  1283               	bcf	3,5	;RP0=0, select bank0
  2566  0404  00DC               	movwf	??_printf+2
  2567  0405  085B               	movf	??_printf+1,w
  2568  0406  3A80               	xorlw	128
  2569  0407  025C               	subwf	??_printf+2,w
  2570  0408  1D03               	skipz
  2571  0409  2C0D               	goto	u3695
  2572  040A  085A               	movf	??_printf,w
  2573  040B  1683               	bsf	3,5	;RP0=1, select bank1
  2574  040C  0236               	subwf	printf@prec^(0+128),w
  2575  040D                     u3695:	
  2576  040D  1803               	skipnc
  2577  040E  2C15               	goto	l6970
  2578  040F  27B5               	call	PL31	;select bank 1
  2579  0410  0838               	movf	printf@c^(0+128),w
  2580  0411  00B6               	movwf	printf@prec^(0+128)
  2581  0412  01B7               	clrf	(printf@prec+1)^(0+128)
  2582  0413  1BB6               	btfsc	printf@prec^(0+128),7
  2583  0414  03B7               	decf	(printf@prec+1)^(0+128),f
  2584  0415                     l6970:	
  2585  0415  27B5               	call	PL31	;select bank 1
  2586  0416  0830               	movf	(printf@width+1)^(0+128),w
  2587  0417  042F               	iorwf	printf@width^(0+128),w
  2588  0418  1903               	skipnz
  2589  0419  2C22               	goto	l6976
  2590  041A  082C               	movf	printf@flag^(0+128),w
  2591  041B  3903               	andlw	3
  2592  041C  1903               	btfsc	3,2
  2593  041D  2C22               	goto	l6976
  2594  041E  30FF               	movlw	-1
  2595  041F  07AF               	addwf	printf@width^(0+128),f
  2596  0420  1C03               	skipc
  2597  0421  03B0               	decf	(printf@width+1)^(0+128),f
  2598  0422                     l6976:	
  2599  0422  1F2D               	btfss	(printf@flag+1)^(0+128),6
  2600  0423  2C3F               	goto	l6984
  2601  0424  0837               	movf	(printf@prec+1)^(0+128),w
  2602  0425  3A80               	xorlw	128
  2603  0426  1283               	bcf	3,5	;RP0=0, select bank0
  2604  0427  00DA               	movwf	??_printf
  2605  0428  1683               	bsf	3,5	;RP0=1, select bank1
  2606  0429  0830               	movf	(printf@width+1)^(0+128),w
  2607  042A  3A80               	xorlw	128
  2608  042B  1283               	bcf	3,5	;RP0=0, select bank0
  2609  042C  025A               	subwf	??_printf,w
  2610  042D  1D03               	skipz
  2611  042E  2C32               	goto	u3735
  2612  042F  1683               	bsf	3,5	;RP0=1, select bank1
  2613  0430  082F               	movf	printf@width^(0+128),w
  2614  0431  0236               	subwf	printf@prec^(0+128),w
  2615  0432                     u3735:	
  2616  0432  1803               	skipnc
  2617  0433  2C3C               	goto	l6982
  2618  0434  27B5               	call	PL31	;select bank 1
  2619  0435  0836               	movf	printf@prec^(0+128),w
  2620  0436  02AF               	subwf	printf@width^(0+128),f
  2621  0437  0837               	movf	(printf@prec+1)^(0+128),w
  2622  0438  1C03               	skipc
  2623  0439  03B0               	decf	(printf@width+1)^(0+128),f
  2624  043A  02B0               	subwf	(printf@width+1)^(0+128),f
  2625  043B  2C3F               	goto	l6984
  2626  043C                     l6982:	
  2627  043C  27B5               	call	PL31	;select bank 1
  2628  043D  01AF               	clrf	printf@width^(0+128)
  2629  043E  01B0               	clrf	(printf@width+1)^(0+128)
  2630  043F                     l6984:	
  2631  043F  0838               	movf	printf@c^(0+128),w
  2632  0440  2784  120A  118A   	fcall	PL17	;call to abstracted procedure
  2633  0443  0830               	movf	(printf@width+1)^(0+128),w
  2634  0444  3A80               	xorlw	128
  2635  0445  1283               	bcf	3,5	;RP0=0, select bank0
  2636  0446  025C               	subwf	??_printf+2,w
  2637  0447  1D03               	skipz
  2638  0448  2C4D               	goto	u3745
  2639  0449  1683               	bsf	3,5	;RP0=1, select bank1
  2640  044A  082F               	movf	printf@width^(0+128),w
  2641  044B  1283               	bcf	3,5	;RP0=0, select bank0
  2642  044C  025A               	subwf	??_printf,w
  2643  044D                     u3745:	
  2644  044D  1803               	skipnc
  2645  044E  2C5B               	goto	l6988
  2646  044F  1683               	bsf	3,5	;RP0=1, select bank1
  2647  0450  278E  120A  118A   	fcall	PL19	;call to abstracted procedure
  2648  0453  02AF               	subwf	printf@width^(0+128),f
  2649  0454  1283               	bcf	3,5	;RP0=0, select bank0
  2650  0455  085B               	movf	??_printf+1,w
  2651  0456  1683               	bsf	3,5	;RP0=1, select bank1
  2652  0457  1C03               	skipc
  2653  0458  03B0               	decf	(printf@width+1)^(0+128),f
  2654  0459  02B0               	subwf	(printf@width+1)^(0+128),f
  2655  045A  2C5E               	goto	l6990
  2656  045B                     l6988:	
  2657  045B  27B5               	call	PL31	;select bank 1
  2658  045C  01AF               	clrf	printf@width^(0+128)
  2659  045D  01B0               	clrf	(printf@width+1)^(0+128)
  2660  045E                     l6990:	
  2661  045E  0830               	movf	(printf@width+1)^(0+128),w
  2662  045F  042F               	iorwf	printf@width^(0+128),w
  2663  0460  1903               	skipnz
  2664  0461  2C6F               	goto	l6996
  2665  0462                     l6992:	
  2666  0462  3020               	movlw	32
  2667  0463  2479  120A  118A   	fcall	_putch
  2668  0466  30FF               	movlw	-1
  2669  0467  27B5               	call	PL31	;select bank 1
  2670  0468  07AF               	addwf	printf@width^(0+128),f
  2671  0469  1C03               	skipc
  2672  046A  03B0               	decf	(printf@width+1)^(0+128),f
  2673  046B  0830               	movf	(printf@width+1)^(0+128),w
  2674  046C  042F               	iorwf	printf@width^(0+128),w
  2675  046D  1D03               	skipz
  2676  046E  2C62               	goto	l6992
  2677  046F                     l6996:	
  2678  046F  082C               	movf	printf@flag^(0+128),w
  2679  0470  3903               	andlw	3
  2680  0471  1903               	btfsc	3,2
  2681  0472  2813               	goto	l7000
  2682  0473  302D               	movlw	45
  2683  0474                     L1:	
  2684  0474  2479  120A  118A   	fcall	_putch
  2685  0477  2813               	goto	l7000
  2686  0478                     l2259:	
  2687  0478  0008               	return
  2688  0479                     __end_of_printf:	
  2689  0479                     __ptext527:	
  2690 ;; =============== function _printf ends ============
  2691                           
  2692                           
  2693 ;; *************** function _putch *****************
  2694 ;; Defined at:
  2695 ;;		line 52 in file "C:\Users\DELL\Desktop\baitap_ttvxl\counter\counter.c"
  2696 ;; Parameters:    Size  Location     Type
  2697 ;;  c               1    wreg     unsigned char 
  2698 ;; Auto vars:     Size  Location     Type
  2699 ;;  c               1   11[COMMON] unsigned char 
  2700 ;; Return value:  Size  Location     Type
  2701 ;;		None               void
  2702 ;; Registers used:
  2703 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2704 ;; Tracked objects:
  2705 ;;		On entry : 0/20
  2706 ;;		On exit  : 0/0
  2707 ;;		Unchanged: 0/0
  2708 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2709 ;;      Params:         0       0       0       0       0
  2710 ;;      Locals:         1       0       0       0       0
  2711 ;;      Temps:          0       0       0       0       0
  2712 ;;      Totals:         1       0       0       0       0
  2713 ;;Total ram usage:        1 bytes
  2714 ;; Hardware stack levels used:    1
  2715 ;; Hardware stack levels required when called:    4
  2716 ;; This function calls:
  2717 ;;		_lcd_putc
  2718 ;; This function is called by:
  2719 ;;		_printf
  2720 ;; This function uses a non-reentrant model
  2721 ;;
  2722  0479                     _putch:	
  2723                           
  2724                           ; Regs used in _putch: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2725                           ;putch@c stored from wreg
  2726  0479  00FB               	movwf	putch@c
  2727                           
  2728                           ;counter.c: 53: lcd_putc(c);
  2729  047A  120A  158A  2A9B   	ljmp	_lcd_putc
  2730  047D                     __end_of_putch:	
  2731  047D                     __ptext543:	
  2732 ;; =============== function ___lldiv ends ============
  2733                           
  2734                           
  2735 ;; *************** function ___ftge *****************
  2736 ;; Defined at:
  2737 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\ftge.c"
  2738 ;; Parameters:    Size  Location     Type
  2739 ;;  ff1             3    2[COMMON] float 
  2740 ;;  ff2             3    5[COMMON] float 
  2741 ;; Auto vars:     Size  Location     Type
  2742 ;;		None
  2743 ;; Return value:  Size  Location     Type
  2744 ;;		None               void
  2745 ;; Registers used:
  2746 ;;		wreg, status,2, status,0
  2747 ;; Tracked objects:
  2748 ;;		On entry : 60/20
  2749 ;;		On exit  : 60/20
  2750 ;;		Unchanged: FFF9F/0
  2751 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2752 ;;      Params:         6       0       0       0       0
  2753 ;;      Locals:         0       0       0       0       0
  2754 ;;      Temps:          0       0       0       0       0
  2755 ;;      Totals:         6       0       0       0       0
  2756 ;;Total ram usage:        6 bytes
  2757 ;; Hardware stack levels used:    1
  2758 ;; Hardware stack levels required when called:    1
  2759 ;; This function calls:
  2760 ;;		Nothing
  2761 ;; This function is called by:
  2762 ;;		_printf
  2763 ;; This function uses a non-reentrant model
  2764 ;;
  2765  047D                     ___ftge:	
  2766                           
  2767                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  2768  047D  1FF4               	btfss	___ftge@ff1+2,7
  2769  047E  2C8C               	goto	l6308
  2770  047F  0872               	movf	___ftge@ff1,w
  2771  0480  3C00               	sublw	0
  2772  0481  00F2               	movwf	___ftge@ff1
  2773  0482  0873               	movf	___ftge@ff1+1,w
  2774  0483  1C03               	skipc
  2775  0484  0F73               	incfsz	___ftge@ff1+1,w
  2776  0485  3C00               	sublw	0
  2777  0486  00F3               	movwf	___ftge@ff1+1
  2778  0487  0874               	movf	___ftge@ff1+2,w
  2779  0488  1C03               	skipc
  2780  0489  0F74               	incfsz	___ftge@ff1+2,w
  2781  048A  3C80               	sublw	128
  2782  048B  00F4               	movwf	___ftge@ff1+2
  2783  048C                     l6308:	
  2784  048C  1FF7               	btfss	___ftge@ff2+2,7
  2785  048D  2C9B               	goto	l6312
  2786  048E  0875               	movf	___ftge@ff2,w
  2787  048F  3C00               	sublw	0
  2788  0490  00F5               	movwf	___ftge@ff2
  2789  0491  0876               	movf	___ftge@ff2+1,w
  2790  0492  1C03               	skipc
  2791  0493  0F76               	incfsz	___ftge@ff2+1,w
  2792  0494  3C00               	sublw	0
  2793  0495  00F6               	movwf	___ftge@ff2+1
  2794  0496  0877               	movf	___ftge@ff2+2,w
  2795  0497  1C03               	skipc
  2796  0498  0F77               	incfsz	___ftge@ff2+2,w
  2797  0499  3C80               	sublw	128
  2798  049A  00F7               	movwf	___ftge@ff2+2
  2799  049B                     l6312:	
  2800  049B  3080               	movlw	128
  2801  049C  06F4               	xorwf	___ftge@ff1+2,f
  2802  049D  06F7               	xorwf	___ftge@ff2+2,f
  2803  049E  0877               	movf	___ftge@ff2+2,w
  2804  049F  0274               	subwf	___ftge@ff1+2,w
  2805  04A0  1D03               	skipz
  2806  04A1  0008               	return
  2807  04A2  0876               	movf	___ftge@ff2+1,w
  2808  04A3  0273               	subwf	___ftge@ff1+1,w
  2809  04A4  1D03               	skipz
  2810  04A5  0008               	return
  2811  04A6  0875               	movf	___ftge@ff2,w
  2812  04A7  0272               	subwf	___ftge@ff1,w
  2813  04A8  0008               	return
  2814  04A9                     __end_of___ftge:	
  2815  04A9                     __ptext555:	
  2816 ;; =============== function __tdiv_to_l_ ends ============
  2817                           
  2818                           
  2819 ;; *************** function _isdigit *****************
  2820 ;; Defined at:
  2821 ;;		line 13 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\isdigit.c"
  2822 ;; Parameters:    Size  Location     Type
  2823 ;;  c               1    wreg     unsigned char 
  2824 ;; Auto vars:     Size  Location     Type
  2825 ;;  c               1    3[COMMON] unsigned char 
  2826 ;; Return value:  Size  Location     Type
  2827 ;;		None               void
  2828 ;; Registers used:
  2829 ;;		wreg, status,2, status,0
  2830 ;; Tracked objects:
  2831 ;;		On entry : 60/20
  2832 ;;		On exit  : 60/20
  2833 ;;		Unchanged: FFF9F/0
  2834 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2835 ;;      Params:         0       0       0       0       0
  2836 ;;      Locals:         2       0       0       0       0
  2837 ;;      Temps:          0       0       0       0       0
  2838 ;;      Totals:         2       0       0       0       0
  2839 ;;Total ram usage:        2 bytes
  2840 ;; Hardware stack levels used:    1
  2841 ;; Hardware stack levels required when called:    1
  2842 ;; This function calls:
  2843 ;;		Nothing
  2844 ;; This function is called by:
  2845 ;;		_printf
  2846 ;; This function uses a non-reentrant model
  2847 ;;
  2848  04A9                     _isdigit:	
  2849                           
  2850                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  2851                           ;isdigit@c stored from wreg
  2852  04A9  00F3               	movwf	isdigit@c
  2853  04AA  303A               	movlw	58
  2854  04AB  01F2               	clrf	_isdigit$3670
  2855  04AC  0273               	subwf	isdigit@c,w
  2856  04AD  1803               	skipnc
  2857  04AE  2CB5               	goto	l5994
  2858  04AF  3030               	movlw	48
  2859  04B0  0273               	subwf	isdigit@c,w
  2860  04B1  1C03               	skipc
  2861  04B2  2CB5               	goto	l5994
  2862  04B3  01F2               	clrf	_isdigit$3670
  2863  04B4  0AF2               	incf	_isdigit$3670,f
  2864  04B5                     l5994:	
  2865  04B5  0C72               	rrf	_isdigit$3670,w
  2866  04B6  0008               	return
  2867  04B7                     __end_of_isdigit:	
  2868  04B7                     __ptext551:	
  2869 ;; =============== function ___lbdiv ends ============
  2870                           
  2871                           
  2872 ;; *************** function ___wmul *****************
  2873 ;; Defined at:
  2874 ;;		line 3 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\wmul.c"
  2875 ;; Parameters:    Size  Location     Type
  2876 ;;  multiplier      2    2[COMMON] unsigned int 
  2877 ;;  multiplicand    2    4[COMMON] unsigned int 
  2878 ;; Auto vars:     Size  Location     Type
  2879 ;;  product         2    6[COMMON] unsigned int 
  2880 ;; Return value:  Size  Location     Type
  2881 ;;                  2    2[COMMON] unsigned int 
  2882 ;; Registers used:
  2883 ;;		wreg, status,2, status,0
  2884 ;; Tracked objects:
  2885 ;;		On entry : 60/20
  2886 ;;		On exit  : 60/20
  2887 ;;		Unchanged: FFF9F/0
  2888 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2889 ;;      Params:         4       0       0       0       0
  2890 ;;      Locals:         2       0       0       0       0
  2891 ;;      Temps:          0       0       0       0       0
  2892 ;;      Totals:         6       0       0       0       0
  2893 ;;Total ram usage:        6 bytes
  2894 ;; Hardware stack levels used:    1
  2895 ;; Hardware stack levels required when called:    1
  2896 ;; This function calls:
  2897 ;;		Nothing
  2898 ;; This function is called by:
  2899 ;;		_fround
  2900 ;;		_scale
  2901 ;;		_printf
  2902 ;; This function uses a non-reentrant model
  2903 ;;
  2904  04B7                     ___wmul:	
  2905                           
  2906                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2907  04B7  01F6               	clrf	___wmul@product
  2908  04B8  01F7               	clrf	___wmul@product+1
  2909  04B9                     l6110:	
  2910  04B9  1C72               	btfss	___wmul@multiplier,0
  2911  04BA  2CC1               	goto	l6114
  2912  04BB  0874               	movf	___wmul@multiplicand,w
  2913  04BC  07F6               	addwf	___wmul@product,f
  2914  04BD  1803               	skipnc
  2915  04BE  0AF7               	incf	___wmul@product+1,f
  2916  04BF  0875               	movf	___wmul@multiplicand+1,w
  2917  04C0  07F7               	addwf	___wmul@product+1,f
  2918  04C1                     l6114:	
  2919  04C1  1003               	clrc
  2920  04C2  0DF4               	rlf	___wmul@multiplicand,f
  2921  04C3  0DF5               	rlf	___wmul@multiplicand+1,f
  2922  04C4  1003               	clrc
  2923  04C5  0CF3               	rrf	___wmul@multiplier+1,f
  2924  04C6  0CF2               	rrf	___wmul@multiplier,f
  2925  04C7  0873               	movf	___wmul@multiplier+1,w
  2926  04C8  0472               	iorwf	___wmul@multiplier,w
  2927  04C9  1D03               	skipz
  2928  04CA  2CB9               	goto	l6110
  2929  04CB  0877               	movf	___wmul@product+1,w
  2930  04CC  00F3               	movwf	?___wmul+1
  2931  04CD  0876               	movf	___wmul@product,w
  2932  04CE  00F2               	movwf	?___wmul
  2933  04CF  0008               	return
  2934  04D0                     __end_of___wmul:	
  2935  04D0                     __ptext547:	
  2936 ;; =============== function ___awdiv ends ============
  2937                           
  2938                           
  2939 ;; *************** function ___fttol *****************
  2940 ;; Defined at:
  2941 ;;		line 45 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\fttol.c"
  2942 ;; Parameters:    Size  Location     Type
  2943 ;;  f1              3    4[BANK0 ] float 
  2944 ;; Auto vars:     Size  Location     Type
  2945 ;;  lval            4   12[BANK0 ] unsigned long 
  2946 ;;  exp1            1   16[BANK0 ] unsigned char 
  2947 ;;  sign1           1   11[BANK0 ] unsigned char 
  2948 ;; Return value:  Size  Location     Type
  2949 ;;                  4    4[BANK0 ] long 
  2950 ;; Registers used:
  2951 ;;		wreg, status,2, status,0
  2952 ;; Tracked objects:
  2953 ;;		On entry : 60/0
  2954 ;;		On exit  : 60/0
  2955 ;;		Unchanged: FFF9F/0
  2956 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2957 ;;      Params:         0       4       0       0       0
  2958 ;;      Locals:         0       6       0       0       0
  2959 ;;      Temps:          0       3       0       0       0
  2960 ;;      Totals:         0      13       0       0       0
  2961 ;;Total ram usage:       13 bytes
  2962 ;; Hardware stack levels used:    1
  2963 ;; Hardware stack levels required when called:    1
  2964 ;; This function calls:
  2965 ;;		Nothing
  2966 ;; This function is called by:
  2967 ;;		_printf
  2968 ;; This function uses a non-reentrant model
  2969 ;;
  2970  04D0                     ___fttol:	
  2971                           
  2972                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  2973  04D0  27AE  120A  118A   	fcall	PL28	;call to abstracted procedure
  2974  04D3  1003               	clrc
  2975  04D4  0D29               	rlf	??___fttol+1,w
  2976  04D5  0D2A               	rlf	??___fttol+2,w
  2977  04D6  00B0               	movwf	___fttol@exp1
  2978  04D7  08B0               	movf	___fttol@exp1,f
  2979  04D8  1D03               	skipz
  2980  04D9  2CDF               	goto	l6198
  2981  04DA                     l6196:	
  2982  04DA  01A4               	clrf	?___fttol
  2983  04DB  01A5               	clrf	?___fttol+1
  2984  04DC  01A6               	clrf	?___fttol+2
  2985  04DD  01A7               	clrf	?___fttol+3
  2986  04DE  0008               	return
  2987  04DF                     l6198:	
  2988  04DF  27AE  120A  118A   	fcall	PL28	;call to abstracted procedure
  2989  04E2  3017               	movlw	23
  2990  04E3                     u2325:	
  2991  04E3  1003               	clrc
  2992  04E4  0CAA               	rrf	??___fttol+2,f
  2993  04E5  0CA9               	rrf	??___fttol+1,f
  2994  04E6  0CA8               	rrf	??___fttol,f
  2995  04E7  3EFF               	addlw	-1
  2996  04E8  1D03               	skipz
  2997  04E9  2CE3               	goto	u2325
  2998  04EA  0828               	movf	??___fttol,w
  2999  04EB  00AB               	movwf	___fttol@sign1
  3000  04EC  17A5               	bsf	___fttol@f1+1,7
  3001  04ED  01A6               	clrf	___fttol@f1+2
  3002  04EE  0824               	movf	___fttol@f1,w
  3003  04EF  00AC               	movwf	___fttol@lval
  3004  04F0  0825               	movf	___fttol@f1+1,w
  3005  04F1  00AD               	movwf	___fttol@lval+1
  3006  04F2  0826               	movf	___fttol@f1+2,w
  3007  04F3  00AE               	movwf	___fttol@lval+2
  3008  04F4  308E               	movlw	142
  3009  04F5  01AF               	clrf	___fttol@lval+3
  3010  04F6  02B0               	subwf	___fttol@exp1,f
  3011  04F7  1FB0               	btfss	___fttol@exp1,7
  3012  04F8  2D06               	goto	l6218
  3013  04F9  0830               	movf	___fttol@exp1,w
  3014  04FA  3A80               	xorlw	128
  3015  04FB  3E8F               	addlw	143
  3016  04FC  1C03               	btfss	3,0
  3017  04FD  2CDA               	goto	l6196
  3018  04FE                     l6214:	
  3019  04FE  1003               	clrc
  3020  04FF  0CAF               	rrf	___fttol@lval+3,f
  3021  0500  0CAE               	rrf	___fttol@lval+2,f
  3022  0501  0CAD               	rrf	___fttol@lval+1,f
  3023  0502  0CAC               	rrf	___fttol@lval,f
  3024  0503  0FB0               	incfsz	___fttol@exp1,f
  3025  0504  2CFE               	goto	l6214
  3026  0505  2D14               	goto	l6224
  3027  0506                     l6218:	
  3028  0506  3018               	movlw	24
  3029  0507  0230               	subwf	___fttol@exp1,w
  3030  0508  1803               	btfsc	3,0
  3031  0509  2CDA               	goto	l6196
  3032  050A                     l3379:	
  3033  050A  08B0               	movf	___fttol@exp1,f
  3034  050B  1903               	btfsc	3,2
  3035  050C  2D14               	goto	l6224
  3036  050D  1003               	clrc
  3037  050E  0DAC               	rlf	___fttol@lval,f
  3038  050F  0DAD               	rlf	___fttol@lval+1,f
  3039  0510  0DAE               	rlf	___fttol@lval+2,f
  3040  0511  0DAF               	rlf	___fttol@lval+3,f
  3041  0512  03B0               	decf	___fttol@exp1,f
  3042  0513  2D0A               	goto	l3379
  3043  0514                     l6224:	
  3044  0514  082B               	movf	___fttol@sign1,w
  3045  0515  1903               	btfsc	3,2
  3046  0516  2D22               	goto	l6228
  3047  0517  09AC               	comf	___fttol@lval,f
  3048  0518  09AD               	comf	___fttol@lval+1,f
  3049  0519  09AE               	comf	___fttol@lval+2,f
  3050  051A  09AF               	comf	___fttol@lval+3,f
  3051  051B  0AAC               	incf	___fttol@lval,f
  3052  051C  1903               	skipnz
  3053  051D  0AAD               	incf	___fttol@lval+1,f
  3054  051E  1903               	skipnz
  3055  051F  0AAE               	incf	___fttol@lval+2,f
  3056  0520  1903               	skipnz
  3057  0521  0AAF               	incf	___fttol@lval+3,f
  3058  0522                     l6228:	
  3059  0522  082F               	movf	___fttol@lval+3,w
  3060  0523  00A7               	movwf	?___fttol+3
  3061  0524  082E               	movf	___fttol@lval+2,w
  3062  0525  00A6               	movwf	?___fttol+2
  3063  0526  082D               	movf	___fttol@lval+1,w
  3064  0527  00A5               	movwf	?___fttol+1
  3065  0528  082C               	movf	___fttol@lval,w
  3066  0529  00A4               	movwf	?___fttol
  3067  052A  0008               	return
  3068  052B                     __end_of___fttol:	
  3069  052B                     __ptext545:	
  3070 ;; =============== function ___ftneg ends ============
  3071                           
  3072                           
  3073 ;; *************** function ___llmod *****************
  3074 ;; Defined at:
  3075 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\llmod.c"
  3076 ;; Parameters:    Size  Location     Type
  3077 ;;  divisor         4    5[BANK0 ] unsigned long 
  3078 ;;  dividend        4    9[BANK0 ] unsigned long 
  3079 ;; Auto vars:     Size  Location     Type
  3080 ;;  counter         1   10[COMMON] unsigned char 
  3081 ;; Return value:  Size  Location     Type
  3082 ;;                  4    5[BANK0 ] unsigned long 
  3083 ;; Registers used:
  3084 ;;		wreg, status,2, status,0
  3085 ;; Tracked objects:
  3086 ;;		On entry : 60/0
  3087 ;;		On exit  : 60/0
  3088 ;;		Unchanged: FFF9F/0
  3089 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3090 ;;      Params:         0       8       0       0       0
  3091 ;;      Locals:         1       0       0       0       0
  3092 ;;      Temps:          0       0       0       0       0
  3093 ;;      Totals:         1       8       0       0       0
  3094 ;;Total ram usage:        9 bytes
  3095 ;; Hardware stack levels used:    1
  3096 ;; Hardware stack levels required when called:    1
  3097 ;; This function calls:
  3098 ;;		Nothing
  3099 ;; This function is called by:
  3100 ;;		_printf
  3101 ;; This function uses a non-reentrant model
  3102 ;;
  3103  052B                     ___llmod:	
  3104                           
  3105                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  3106  052B  0828               	movf	___llmod@divisor+3,w
  3107  052C  0427               	iorwf	___llmod@divisor+2,w
  3108  052D  0426               	iorwf	___llmod@divisor+1,w
  3109  052E  0425               	iorwf	___llmod@divisor,w
  3110  052F  1903               	skipnz
  3111  0530  2D60               	goto	l6292
  3112  0531  01FA               	clrf	___llmod@counter
  3113  0532                     L13:	
  3114  0532  0AFA               	incf	___llmod@counter,f
  3115  0533  1BA8               	btfsc	___llmod@divisor+3,7
  3116  0534  2D3B               	goto	l6284
  3117  0535  1003               	clrc
  3118  0536  0DA5               	rlf	___llmod@divisor,f
  3119  0537  0DA6               	rlf	___llmod@divisor+1,f
  3120  0538  0DA7               	rlf	___llmod@divisor+2,f
  3121  0539  0DA8               	rlf	___llmod@divisor+3,f
  3122  053A  2D32               	goto	L13
  3123  053B                     l6284:	
  3124  053B  0828               	movf	___llmod@divisor+3,w
  3125  053C  022C               	subwf	___llmod@dividend+3,w
  3126  053D  1D03               	skipz
  3127  053E  2D49               	goto	u2485
  3128  053F  0827               	movf	___llmod@divisor+2,w
  3129  0540  022B               	subwf	___llmod@dividend+2,w
  3130  0541  1D03               	skipz
  3131  0542  2D49               	goto	u2485
  3132  0543  0826               	movf	___llmod@divisor+1,w
  3133  0544  022A               	subwf	___llmod@dividend+1,w
  3134  0545  1D03               	skipz
  3135  0546  2D49               	goto	u2485
  3136  0547  0825               	movf	___llmod@divisor,w
  3137  0548  0229               	subwf	___llmod@dividend,w
  3138  0549                     u2485:	
  3139  0549  1C03               	skipc
  3140  054A  2D5A               	goto	L14
  3141  054B  0825               	movf	___llmod@divisor,w
  3142  054C  02A9               	subwf	___llmod@dividend,f
  3143  054D  0826               	movf	___llmod@divisor+1,w
  3144  054E  1C03               	skipc
  3145  054F  0F26               	incfsz	___llmod@divisor+1,w
  3146  0550  02AA               	subwf	___llmod@dividend+1,f
  3147  0551  0827               	movf	___llmod@divisor+2,w
  3148  0552  1C03               	skipc
  3149  0553  0F27               	incfsz	___llmod@divisor+2,w
  3150  0554  02AB               	subwf	___llmod@dividend+2,f
  3151  0555  0828               	movf	___llmod@divisor+3,w
  3152  0556  1C03               	skipc
  3153  0557  0F28               	incfsz	___llmod@divisor+3,w
  3154  0558  02AC               	subwf	___llmod@dividend+3,f
  3155  0559  1003               	clrc
  3156  055A                     L14:	
  3157  055A  0CA8               	rrf	___llmod@divisor+3,f
  3158  055B  0CA7               	rrf	___llmod@divisor+2,f
  3159  055C  0CA6               	rrf	___llmod@divisor+1,f
  3160  055D  0CA5               	rrf	___llmod@divisor,f
  3161  055E  0BFA               	decfsz	___llmod@counter,f
  3162  055F  2D3B               	goto	l6284
  3163  0560                     l6292:	
  3164  0560  082C               	movf	___llmod@dividend+3,w
  3165  0561  00A8               	movwf	?___llmod+3
  3166  0562  082B               	movf	___llmod@dividend+2,w
  3167  0563  00A7               	movwf	?___llmod+2
  3168  0564  082A               	movf	___llmod@dividend+1,w
  3169  0565  00A6               	movwf	?___llmod+1
  3170  0566  0829               	movf	___llmod@dividend,w
  3171  0567  00A5               	movwf	?___llmod
  3172  0568  0008               	return
  3173  0569                     __end_of___llmod:	
  3174  0569                     __ptext542:	
  3175 ;; =============== function ___awmod ends ============
  3176                           
  3177                           
  3178 ;; *************** function ___lldiv *****************
  3179 ;; Defined at:
  3180 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\lldiv.c"
  3181 ;; Parameters:    Size  Location     Type
  3182 ;;  divisor         4    2[COMMON] unsigned long 
  3183 ;;  dividend        4    6[COMMON] unsigned long 
  3184 ;; Auto vars:     Size  Location     Type
  3185 ;;  quotient        4    0[BANK0 ] unsigned long 
  3186 ;;  counter         1    4[BANK0 ] unsigned char 
  3187 ;; Return value:  Size  Location     Type
  3188 ;;                  4    2[COMMON] unsigned long 
  3189 ;; Registers used:
  3190 ;;		wreg, status,2, status,0
  3191 ;; Tracked objects:
  3192 ;;		On entry : 60/20
  3193 ;;		On exit  : 60/0
  3194 ;;		Unchanged: FFF9F/0
  3195 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3196 ;;      Params:         8       0       0       0       0
  3197 ;;      Locals:         0       5       0       0       0
  3198 ;;      Temps:          0       0       0       0       0
  3199 ;;      Totals:         8       5       0       0       0
  3200 ;;Total ram usage:       13 bytes
  3201 ;; Hardware stack levels used:    1
  3202 ;; Hardware stack levels required when called:    1
  3203 ;; This function calls:
  3204 ;;		Nothing
  3205 ;; This function is called by:
  3206 ;;		_printf
  3207 ;; This function uses a non-reentrant model
  3208 ;;
  3209  0569                     ___lldiv:	
  3210                           
  3211                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  3212  0569  1283               	bcf	3,5	;RP0=0, select bank0
  3213  056A  01A0               	clrf	___lldiv@quotient
  3214  056B  01A1               	clrf	___lldiv@quotient+1
  3215  056C  01A2               	clrf	___lldiv@quotient+2
  3216  056D  01A3               	clrf	___lldiv@quotient+3
  3217  056E  0875               	movf	___lldiv@divisor+3,w
  3218  056F  0474               	iorwf	___lldiv@divisor+2,w
  3219  0570  0473               	iorwf	___lldiv@divisor+1,w
  3220  0571  0472               	iorwf	___lldiv@divisor,w
  3221  0572  1903               	skipnz
  3222  0573  2DA9               	goto	l6346
  3223  0574  01A4               	clrf	___lldiv@counter
  3224  0575                     L10:	
  3225  0575  0AA4               	incf	___lldiv@counter,f
  3226  0576  1BF5               	btfsc	___lldiv@divisor+3,7
  3227  0577  2D7E               	goto	l6334
  3228  0578  1003               	clrc
  3229  0579  0DF2               	rlf	___lldiv@divisor,f
  3230  057A  0DF3               	rlf	___lldiv@divisor+1,f
  3231  057B  0DF4               	rlf	___lldiv@divisor+2,f
  3232  057C  0DF5               	rlf	___lldiv@divisor+3,f
  3233  057D  2D75               	goto	L10
  3234  057E                     l6334:	
  3235  057E  1003               	clrc
  3236  057F  0DA0               	rlf	___lldiv@quotient,f
  3237  0580  0DA1               	rlf	___lldiv@quotient+1,f
  3238  0581  0DA2               	rlf	___lldiv@quotient+2,f
  3239  0582  0DA3               	rlf	___lldiv@quotient+3,f
  3240  0583  0875               	movf	___lldiv@divisor+3,w
  3241  0584  0279               	subwf	___lldiv@dividend+3,w
  3242  0585  1D03               	skipz
  3243  0586  2D91               	goto	u2565
  3244  0587  0874               	movf	___lldiv@divisor+2,w
  3245  0588  0278               	subwf	___lldiv@dividend+2,w
  3246  0589  1D03               	skipz
  3247  058A  2D91               	goto	u2565
  3248  058B  0873               	movf	___lldiv@divisor+1,w
  3249  058C  0277               	subwf	___lldiv@dividend+1,w
  3250  058D  1D03               	skipz
  3251  058E  2D91               	goto	u2565
  3252  058F  0872               	movf	___lldiv@divisor,w
  3253  0590  0276               	subwf	___lldiv@dividend,w
  3254  0591                     u2565:	
  3255  0591  1C03               	skipc
  3256  0592  2DA3               	goto	L11
  3257  0593  0872               	movf	___lldiv@divisor,w
  3258  0594  02F6               	subwf	___lldiv@dividend,f
  3259  0595  0873               	movf	___lldiv@divisor+1,w
  3260  0596  1C03               	skipc
  3261  0597  0F73               	incfsz	___lldiv@divisor+1,w
  3262  0598  02F7               	subwf	___lldiv@dividend+1,f
  3263  0599  0874               	movf	___lldiv@divisor+2,w
  3264  059A  1C03               	skipc
  3265  059B  0F74               	incfsz	___lldiv@divisor+2,w
  3266  059C  02F8               	subwf	___lldiv@dividend+2,f
  3267  059D  0875               	movf	___lldiv@divisor+3,w
  3268  059E  1C03               	skipc
  3269  059F  0F75               	incfsz	___lldiv@divisor+3,w
  3270  05A0  02F9               	subwf	___lldiv@dividend+3,f
  3271  05A1  1420               	bsf	___lldiv@quotient,0
  3272  05A2  1003               	clrc
  3273  05A3                     L11:	
  3274  05A3  0CF5               	rrf	___lldiv@divisor+3,f
  3275  05A4  0CF4               	rrf	___lldiv@divisor+2,f
  3276  05A5  0CF3               	rrf	___lldiv@divisor+1,f
  3277  05A6  0CF2               	rrf	___lldiv@divisor,f
  3278  05A7  0BA4               	decfsz	___lldiv@counter,f
  3279  05A8  2D7E               	goto	l6334
  3280  05A9                     l6346:	
  3281  05A9  0823               	movf	___lldiv@quotient+3,w
  3282  05AA  00F5               	movwf	?___lldiv+3
  3283  05AB  0822               	movf	___lldiv@quotient+2,w
  3284  05AC  00F4               	movwf	?___lldiv+2
  3285  05AD  0821               	movf	___lldiv@quotient+1,w
  3286  05AE  00F3               	movwf	?___lldiv+1
  3287  05AF  0820               	movf	___lldiv@quotient,w
  3288  05B0  00F2               	movwf	?___lldiv
  3289  05B1  0008               	return
  3290  05B2                     __end_of___lldiv:	
  3291  05B2                     __ptext554:	
  3292 ;; =============== function __div_to_l_ ends ============
  3293                           
  3294                           
  3295 ;; *************** function __tdiv_to_l_ *****************
  3296 ;; Defined at:
  3297 ;;		line 61 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\ftdivl.c"
  3298 ;; Parameters:    Size  Location     Type
  3299 ;;  f1              3    2[COMMON] float 
  3300 ;;  f2              3    5[COMMON] float 
  3301 ;; Auto vars:     Size  Location     Type
  3302 ;;  quot            4    0[BANK0 ] unsigned long 
  3303 ;;  exp1            1    5[BANK0 ] unsigned char 
  3304 ;;  cntr            1    4[BANK0 ] unsigned char 
  3305 ;; Return value:  Size  Location     Type
  3306 ;;                  4    2[COMMON] unsigned long 
  3307 ;; Registers used:
  3308 ;;		wreg, status,2, status,0
  3309 ;; Tracked objects:
  3310 ;;		On entry : 60/20
  3311 ;;		On exit  : 60/0
  3312 ;;		Unchanged: FFF9F/0
  3313 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3314 ;;      Params:         6       0       0       0       0
  3315 ;;      Locals:         0       6       0       0       0
  3316 ;;      Temps:          3       0       0       0       0
  3317 ;;      Totals:         9       6       0       0       0
  3318 ;;Total ram usage:       15 bytes
  3319 ;; Hardware stack levels used:    1
  3320 ;; Hardware stack levels required when called:    1
  3321 ;; This function calls:
  3322 ;;		Nothing
  3323 ;; This function is called by:
  3324 ;;		_printf
  3325 ;; This function uses a non-reentrant model
  3326 ;;
  3327  05B2                     __tdiv_to_l_:	
  3328                           
  3329                           ; Regs used in __tdiv_to_l_: [wreg+status,2+status,0]
  3330  05B2  0872               	movf	__tdiv_to_l_@f1,w
  3331  05B3  00F8               	movwf	??__tdiv_to_l_
  3332  05B4  0873               	movf	__tdiv_to_l_@f1+1,w
  3333  05B5  00F9               	movwf	??__tdiv_to_l_+1
  3334  05B6  0874               	movf	__tdiv_to_l_@f1+2,w
  3335  05B7  00FA               	movwf	??__tdiv_to_l_+2
  3336  05B8  1003               	clrc
  3337  05B9  0D79               	rlf	??__tdiv_to_l_+1,w
  3338  05BA  0D7A               	rlf	??__tdiv_to_l_+2,w
  3339  05BB  1283               	bcf	3,5	;RP0=0, select bank0
  3340  05BC  00A5               	movwf	__tdiv_to_l_@exp1
  3341  05BD  08A5               	movf	__tdiv_to_l_@exp1,f
  3342  05BE  1D03               	skipz
  3343  05BF  2DC5               	goto	l6002
  3344  05C0                     l6000:	
  3345  05C0  01F2               	clrf	?__tdiv_to_l_
  3346  05C1  01F3               	clrf	?__tdiv_to_l_+1
  3347  05C2  01F4               	clrf	?__tdiv_to_l_+2
  3348  05C3  01F5               	clrf	?__tdiv_to_l_+3
  3349  05C4  0008               	return
  3350  05C5                     l6002:	
  3351  05C5  0875               	movf	__tdiv_to_l_@f2,w
  3352  05C6  00F8               	movwf	??__tdiv_to_l_
  3353  05C7  0876               	movf	__tdiv_to_l_@f2+1,w
  3354  05C8  00F9               	movwf	??__tdiv_to_l_+1
  3355  05C9  0877               	movf	__tdiv_to_l_@f2+2,w
  3356  05CA  00FA               	movwf	??__tdiv_to_l_+2
  3357  05CB  1003               	clrc
  3358  05CC  0D79               	rlf	??__tdiv_to_l_+1,w
  3359  05CD  0D7A               	rlf	??__tdiv_to_l_+2,w
  3360  05CE  00A4               	movwf	__tdiv_to_l_@cntr
  3361  05CF  08A4               	movf	__tdiv_to_l_@cntr,f
  3362  05D0  1903               	btfsc	3,2
  3363  05D1  2DC0               	goto	l6000
  3364  05D2  307F               	movlw	127
  3365  05D3  17F3               	bsf	__tdiv_to_l_@f1+1,7
  3366  05D4  01F4               	clrf	__tdiv_to_l_@f1+2
  3367  05D5  17F6               	bsf	__tdiv_to_l_@f2+1,7
  3368  05D6  01F7               	clrf	__tdiv_to_l_@f2+2
  3369  05D7  01A0               	clrf	__tdiv_to_l_@quot
  3370  05D8  01A1               	clrf	__tdiv_to_l_@quot+1
  3371  05D9  01A2               	clrf	__tdiv_to_l_@quot+2
  3372  05DA  01A3               	clrf	__tdiv_to_l_@quot+3
  3373  05DB  02A5               	subwf	__tdiv_to_l_@exp1,f
  3374  05DC  3098               	movlw	152
  3375  05DD  0724               	addwf	__tdiv_to_l_@cntr,w
  3376  05DE  00F8               	movwf	??__tdiv_to_l_
  3377  05DF  02A5               	subwf	__tdiv_to_l_@exp1,f
  3378  05E0  3018               	movlw	24
  3379  05E1  00A4               	movwf	__tdiv_to_l_@cntr
  3380  05E2                     l6016:	
  3381  05E2  1003               	clrc
  3382  05E3  0DA0               	rlf	__tdiv_to_l_@quot,f
  3383  05E4  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  3384  05E5  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  3385  05E6  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  3386  05E7  0877               	movf	__tdiv_to_l_@f2+2,w
  3387  05E8  0274               	subwf	__tdiv_to_l_@f1+2,w
  3388  05E9  1D03               	skipz
  3389  05EA  2DF1               	goto	u1975
  3390  05EB  0876               	movf	__tdiv_to_l_@f2+1,w
  3391  05EC  0273               	subwf	__tdiv_to_l_@f1+1,w
  3392  05ED  1D03               	skipz
  3393  05EE  2DF1               	goto	u1975
  3394  05EF  0875               	movf	__tdiv_to_l_@f2,w
  3395  05F0  0272               	subwf	__tdiv_to_l_@f1,w
  3396  05F1                     u1975:	
  3397  05F1  1C03               	skipc
  3398  05F2  2DFF               	goto	L19
  3399  05F3  0875               	movf	__tdiv_to_l_@f2,w
  3400  05F4  02F2               	subwf	__tdiv_to_l_@f1,f
  3401  05F5  0876               	movf	__tdiv_to_l_@f2+1,w
  3402  05F6  1C03               	skipc
  3403  05F7  0F76               	incfsz	__tdiv_to_l_@f2+1,w
  3404  05F8  02F3               	subwf	__tdiv_to_l_@f1+1,f
  3405  05F9  0877               	movf	__tdiv_to_l_@f2+2,w
  3406  05FA  1C03               	skipc
  3407  05FB  0A77               	incf	__tdiv_to_l_@f2+2,w
  3408  05FC  02F4               	subwf	__tdiv_to_l_@f1+2,f
  3409  05FD  1420               	bsf	__tdiv_to_l_@quot,0
  3410  05FE  1003               	clrc
  3411  05FF                     L19:	
  3412  05FF  0DF2               	rlf	__tdiv_to_l_@f1,f
  3413  0600  0DF3               	rlf	__tdiv_to_l_@f1+1,f
  3414  0601  0DF4               	rlf	__tdiv_to_l_@f1+2,f
  3415  0602  0BA4               	decfsz	__tdiv_to_l_@cntr,f
  3416  0603  2DE2               	goto	l6016
  3417  0604  1FA5               	btfss	__tdiv_to_l_@exp1,7
  3418  0605  2E13               	goto	l6036
  3419  0606  0825               	movf	__tdiv_to_l_@exp1,w
  3420  0607  3A80               	xorlw	128
  3421  0608  3E97               	addlw	151
  3422  0609  1C03               	btfss	3,0
  3423  060A  2DC0               	goto	l6000
  3424  060B                     l6032:	
  3425  060B  1003               	clrc
  3426  060C  0CA3               	rrf	__tdiv_to_l_@quot+3,f
  3427  060D  0CA2               	rrf	__tdiv_to_l_@quot+2,f
  3428  060E  0CA1               	rrf	__tdiv_to_l_@quot+1,f
  3429  060F  0CA0               	rrf	__tdiv_to_l_@quot,f
  3430  0610  0FA5               	incfsz	__tdiv_to_l_@exp1,f
  3431  0611  2E0B               	goto	l6032
  3432  0612  2E21               	goto	l6042
  3433  0613                     l6036:	
  3434  0613  3018               	movlw	24
  3435  0614  0225               	subwf	__tdiv_to_l_@exp1,w
  3436  0615  1803               	btfsc	3,0
  3437  0616  2DC0               	goto	l6000
  3438  0617                     l3517:	
  3439  0617  08A5               	movf	__tdiv_to_l_@exp1,f
  3440  0618  1903               	btfsc	3,2
  3441  0619  2E21               	goto	l6042
  3442  061A  1003               	clrc
  3443  061B  0DA0               	rlf	__tdiv_to_l_@quot,f
  3444  061C  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  3445  061D  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  3446  061E  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  3447  061F  03A5               	decf	__tdiv_to_l_@exp1,f
  3448  0620  2E17               	goto	l3517
  3449  0621                     l6042:	
  3450  0621  0823               	movf	__tdiv_to_l_@quot+3,w
  3451  0622  00F5               	movwf	?__tdiv_to_l_+3
  3452  0623  0822               	movf	__tdiv_to_l_@quot+2,w
  3453  0624  00F4               	movwf	?__tdiv_to_l_+2
  3454  0625  0821               	movf	__tdiv_to_l_@quot+1,w
  3455  0626  00F3               	movwf	?__tdiv_to_l_+1
  3456  0627  0820               	movf	__tdiv_to_l_@quot,w
  3457  0628  00F2               	movwf	?__tdiv_to_l_
  3458  0629  0008               	return
  3459  062A                     __end_of__tdiv_to_l_:	
  3460  062A                     __ptext544:	
  3461 ;; =============== function ___ftge ends ============
  3462                           
  3463                           
  3464 ;; *************** function ___ftneg *****************
  3465 ;; Defined at:
  3466 ;;		line 16 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\ftneg.c"
  3467 ;; Parameters:    Size  Location     Type
  3468 ;;  f1              3    2[COMMON] float 
  3469 ;; Auto vars:     Size  Location     Type
  3470 ;;		None
  3471 ;; Return value:  Size  Location     Type
  3472 ;;                  3    2[COMMON] float 
  3473 ;; Registers used:
  3474 ;;		wreg
  3475 ;; Tracked objects:
  3476 ;;		On entry : 160/20
  3477 ;;		On exit  : 160/20
  3478 ;;		Unchanged: FFE9F/0
  3479 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3480 ;;      Params:         3       0       0       0       0
  3481 ;;      Locals:         0       0       0       0       0
  3482 ;;      Temps:          0       0       0       0       0
  3483 ;;      Totals:         3       0       0       0       0
  3484 ;;Total ram usage:        3 bytes
  3485 ;; Hardware stack levels used:    1
  3486 ;; Hardware stack levels required when called:    1
  3487 ;; This function calls:
  3488 ;;		Nothing
  3489 ;; This function is called by:
  3490 ;;		_printf
  3491 ;; This function uses a non-reentrant model
  3492 ;;
  3493  062A                     ___ftneg:	
  3494                           
  3495                           ; Regs used in ___ftneg: [wreg]
  3496  062A  0874               	movf	___ftneg@f1+2,w
  3497  062B  0473               	iorwf	___ftneg@f1+1,w
  3498  062C  0472               	iorwf	___ftneg@f1,w
  3499  062D  1903               	skipnz
  3500  062E  0008               	return
  3501  062F  3080               	movlw	128
  3502  0630  06F4               	xorwf	___ftneg@f1+2,f
  3503  0631  0008               	return
  3504  0632                     __end_of___ftneg:	
  3505  0632                     __ptext538:	
  3506 ;; =============== function ___ftdiv ends ============
  3507                           
  3508                           
  3509 ;; *************** function ___ftadd *****************
  3510 ;; Defined at:
  3511 ;;		line 87 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\ftadd.c"
  3512 ;; Parameters:    Size  Location     Type
  3513 ;;  f1              3   33[BANK0 ] float 
  3514 ;;  f2              3   36[BANK0 ] float 
  3515 ;; Auto vars:     Size  Location     Type
  3516 ;;  exp1            1   44[BANK0 ] unsigned char 
  3517 ;;  exp2            1   43[BANK0 ] unsigned char 
  3518 ;;  sign            1   42[BANK0 ] unsigned char 
  3519 ;; Return value:  Size  Location     Type
  3520 ;;                  3   33[BANK0 ] float 
  3521 ;; Registers used:
  3522 ;;		wreg, status,2, status,0, pclath, cstack
  3523 ;; Tracked objects:
  3524 ;;		On entry : 60/0
  3525 ;;		On exit  : 60/0
  3526 ;;		Unchanged: FFF9F/0
  3527 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3528 ;;      Params:         0       6       0       0       0
  3529 ;;      Locals:         0       3       0       0       0
  3530 ;;      Temps:          0       3       0       0       0
  3531 ;;      Totals:         0      12       0       0       0
  3532 ;;Total ram usage:       12 bytes
  3533 ;; Hardware stack levels used:    1
  3534 ;; Hardware stack levels required when called:    2
  3535 ;; This function calls:
  3536 ;;		___ftpack
  3537 ;; This function is called by:
  3538 ;;		_printf
  3539 ;;		___ftsub
  3540 ;; This function uses a non-reentrant model
  3541 ;;
  3542  0632                     ___ftadd:	
  3543                           
  3544                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  3545  0632  0841               	movf	___ftadd@f1,w
  3546  0633  00C7               	movwf	??___ftadd
  3547  0634  0842               	movf	___ftadd@f1+1,w
  3548  0635  00C8               	movwf	??___ftadd+1
  3549  0636  0843               	movf	___ftadd@f1+2,w
  3550  0637  00C9               	movwf	??___ftadd+2
  3551  0638  1003               	clrc
  3552  0639  0D48               	rlf	??___ftadd+1,w
  3553  063A  0D49               	rlf	??___ftadd+2,w
  3554  063B  00CC               	movwf	___ftadd@exp1
  3555  063C  0844               	movf	___ftadd@f2,w
  3556  063D  00C7               	movwf	??___ftadd
  3557  063E  0845               	movf	___ftadd@f2+1,w
  3558  063F  00C8               	movwf	??___ftadd+1
  3559  0640  0846               	movf	___ftadd@f2+2,w
  3560  0641  00C9               	movwf	??___ftadd+2
  3561  0642  1003               	clrc
  3562  0643  0D48               	rlf	??___ftadd+1,w
  3563  0644  0D49               	rlf	??___ftadd+2,w
  3564  0645  00CB               	movwf	___ftadd@exp2
  3565  0646  084C               	movf	___ftadd@exp1,w
  3566  0647  1903               	btfsc	3,2
  3567  0648  2E55               	goto	l6444
  3568  0649  084B               	movf	___ftadd@exp2,w
  3569  064A  024C               	subwf	___ftadd@exp1,w
  3570  064B  084B               	movf	___ftadd@exp2,w
  3571  064C  1803               	skipnc
  3572  064D  2E5D               	goto	L7
  3573  064E  00C7               	movwf	??___ftadd
  3574  064F  084C               	movf	___ftadd@exp1,w
  3575  0650  02C7               	subwf	??___ftadd,f
  3576  0651  3019               	movlw	25
  3577  0652  0247               	subwf	??___ftadd,w
  3578  0653  1C03               	skipc
  3579  0654  2E5C               	goto	l6448
  3580  0655                     l6444:	
  3581  0655  0844               	movf	___ftadd@f2,w
  3582  0656  00C1               	movwf	?___ftadd
  3583  0657  0845               	movf	___ftadd@f2+1,w
  3584  0658  00C2               	movwf	?___ftadd+1
  3585  0659  0846               	movf	___ftadd@f2+2,w
  3586  065A  00C3               	movwf	?___ftadd+2
  3587  065B  0008               	return
  3588  065C                     l6448:	
  3589  065C  084B               	movf	___ftadd@exp2,w
  3590  065D                     L7:	
  3591  065D  1903               	btfsc	3,2
  3592  065E  0008               	return
  3593  065F  084C               	movf	___ftadd@exp1,w
  3594  0660  024B               	subwf	___ftadd@exp2,w
  3595  0661  1803               	skipnc
  3596  0662  2E6B               	goto	l6454
  3597  0663  084C               	movf	___ftadd@exp1,w
  3598  0664  00C7               	movwf	??___ftadd
  3599  0665  084B               	movf	___ftadd@exp2,w
  3600  0666  02C7               	subwf	??___ftadd,f
  3601  0667  3019               	movlw	25
  3602  0668  0247               	subwf	??___ftadd,w
  3603  0669  1803               	btfsc	3,0
  3604  066A  0008               	return
  3605  066B                     l6454:	
  3606  066B  3006               	movlw	6
  3607  066C  00CA               	movwf	___ftadd@sign
  3608  066D  1BC3               	btfsc	___ftadd@f1+2,7
  3609  066E  17CA               	bsf	___ftadd@sign,7
  3610  066F  1BC6               	btfsc	___ftadd@f2+2,7
  3611  0670  174A               	bsf	___ftadd@sign,6
  3612  0671  17C2               	bsf	___ftadd@f1+1,7
  3613  0672  01C3               	clrf	___ftadd@f1+2
  3614  0673  17C5               	bsf	___ftadd@f2+1,7
  3615  0674  01C6               	clrf	___ftadd@f2+2
  3616  0675  084B               	movf	___ftadd@exp2,w
  3617  0676  024C               	subwf	___ftadd@exp1,w
  3618  0677  1803               	skipnc
  3619  0678  2E92               	goto	l6476
  3620  0679                     l6466:	
  3621  0679  1003               	clrc
  3622  067A  0DC4               	rlf	___ftadd@f2,f
  3623  067B  0DC5               	rlf	___ftadd@f2+1,f
  3624  067C  0DC6               	rlf	___ftadd@f2+2,f
  3625  067D  03CB               	decf	___ftadd@exp2,f
  3626  067E  084B               	movf	___ftadd@exp2,w
  3627  067F  064C               	xorwf	___ftadd@exp1,w
  3628  0680  1903               	skipnz
  3629  0681  2E8D               	goto	l6474
  3630  0682  03CA               	decf	___ftadd@sign,f
  3631  0683  084A               	movf	___ftadd@sign,w
  3632  0684  3907               	andlw	7
  3633  0685  1903               	btfsc	3,2
  3634  0686  2E8D               	goto	l6474
  3635  0687  2E79               	goto	l6466
  3636  0688                     l6472:	
  3637  0688  1003               	clrc
  3638  0689  0CC3               	rrf	___ftadd@f1+2,f
  3639  068A  0CC2               	rrf	___ftadd@f1+1,f
  3640  068B  0CC1               	rrf	___ftadd@f1,f
  3641  068C  0ACC               	incf	___ftadd@exp1,f
  3642  068D                     l6474:	
  3643  068D  084C               	movf	___ftadd@exp1,w
  3644  068E  064B               	xorwf	___ftadd@exp2,w
  3645  068F  1903               	btfsc	3,2
  3646  0690  2EAE               	goto	l3323
  3647  0691  2E88               	goto	l6472
  3648  0692                     l6476:	
  3649  0692  084C               	movf	___ftadd@exp1,w
  3650  0693  024B               	subwf	___ftadd@exp2,w
  3651  0694  1803               	skipnc
  3652  0695  2EAE               	goto	l3323
  3653  0696                     l6478:	
  3654  0696  1003               	clrc
  3655  0697  0DC1               	rlf	___ftadd@f1,f
  3656  0698  0DC2               	rlf	___ftadd@f1+1,f
  3657  0699  0DC3               	rlf	___ftadd@f1+2,f
  3658  069A  03CC               	decf	___ftadd@exp1,f
  3659  069B  084B               	movf	___ftadd@exp2,w
  3660  069C  064C               	xorwf	___ftadd@exp1,w
  3661  069D  1903               	skipnz
  3662  069E  2EAA               	goto	l6486
  3663  069F  03CA               	decf	___ftadd@sign,f
  3664  06A0  084A               	movf	___ftadd@sign,w
  3665  06A1  3907               	andlw	7
  3666  06A2  1903               	btfsc	3,2
  3667  06A3  2EAA               	goto	l6486
  3668  06A4  2E96               	goto	l6478
  3669  06A5                     l6484:	
  3670  06A5  1003               	clrc
  3671  06A6  0CC6               	rrf	___ftadd@f2+2,f
  3672  06A7  0CC5               	rrf	___ftadd@f2+1,f
  3673  06A8  0CC4               	rrf	___ftadd@f2,f
  3674  06A9  0ACB               	incf	___ftadd@exp2,f
  3675  06AA                     l6486:	
  3676  06AA  084C               	movf	___ftadd@exp1,w
  3677  06AB  064B               	xorwf	___ftadd@exp2,w
  3678  06AC  1D03               	skipz
  3679  06AD  2EA5               	goto	l6484
  3680  06AE                     l3323:	
  3681  06AE  1FCA               	btfss	___ftadd@sign,7
  3682  06AF  2EB9               	goto	l6492
  3683  06B0  30FF               	movlw	255
  3684  06B1  06C1               	xorwf	___ftadd@f1,f
  3685  06B2  06C2               	xorwf	___ftadd@f1+1,f
  3686  06B3  06C3               	xorwf	___ftadd@f1+2,f
  3687  06B4  0AC1               	incf	___ftadd@f1,f
  3688  06B5  1903               	skipnz
  3689  06B6  0AC2               	incf	___ftadd@f1+1,f
  3690  06B7  1903               	skipnz
  3691  06B8  0AC3               	incf	___ftadd@f1+2,f
  3692  06B9                     l6492:	
  3693  06B9  1F4A               	btfss	___ftadd@sign,6
  3694  06BA  2EC4               	goto	l6498
  3695  06BB  30FF               	movlw	255
  3696  06BC  06C4               	xorwf	___ftadd@f2,f
  3697  06BD  06C5               	xorwf	___ftadd@f2+1,f
  3698  06BE  06C6               	xorwf	___ftadd@f2+2,f
  3699  06BF  0AC4               	incf	___ftadd@f2,f
  3700  06C0  1903               	skipnz
  3701  06C1  0AC5               	incf	___ftadd@f2+1,f
  3702  06C2  1903               	skipnz
  3703  06C3  0AC6               	incf	___ftadd@f2+2,f
  3704  06C4                     l6498:	
  3705  06C4  01CA               	clrf	___ftadd@sign
  3706  06C5  0841               	movf	___ftadd@f1,w
  3707  06C6  07C4               	addwf	___ftadd@f2,f
  3708  06C7  0842               	movf	___ftadd@f1+1,w
  3709  06C8  1103               	clrz
  3710  06C9  1803               	skipnc
  3711  06CA  0A42               	incf	___ftadd@f1+1,w
  3712  06CB  1D03               	btfss	3,2
  3713  06CC  07C5               	addwf	___ftadd@f2+1,f
  3714  06CD  0843               	movf	___ftadd@f1+2,w
  3715  06CE  1103               	clrz
  3716  06CF  1803               	skipnc
  3717  06D0  0A43               	incf	___ftadd@f1+2,w
  3718  06D1  1D03               	btfss	3,2
  3719  06D2  07C6               	addwf	___ftadd@f2+2,f
  3720  06D3  1FC6               	btfss	___ftadd@f2+2,7
  3721  06D4  2EE0               	goto	l6510
  3722  06D5  30FF               	movlw	255
  3723  06D6  06C4               	xorwf	___ftadd@f2,f
  3724  06D7  06C5               	xorwf	___ftadd@f2+1,f
  3725  06D8  06C6               	xorwf	___ftadd@f2+2,f
  3726  06D9  0AC4               	incf	___ftadd@f2,f
  3727  06DA  1903               	skipnz
  3728  06DB  0AC5               	incf	___ftadd@f2+1,f
  3729  06DC  1903               	skipnz
  3730  06DD  0AC6               	incf	___ftadd@f2+2,f
  3731  06DE  01CA               	clrf	___ftadd@sign
  3732  06DF  0ACA               	incf	___ftadd@sign,f
  3733  06E0                     l6510:	
  3734  06E0  0844               	movf	___ftadd@f2,w
  3735  06E1  00F2               	movwf	?___ftpack
  3736  06E2  0845               	movf	___ftadd@f2+1,w
  3737  06E3  00F3               	movwf	?___ftpack+1
  3738  06E4  0846               	movf	___ftadd@f2+2,w
  3739  06E5  00F4               	movwf	?___ftpack+2
  3740  06E6  084C               	movf	___ftadd@exp1,w
  3741  06E7  00F5               	movwf	?___ftpack+3
  3742  06E8  084A               	movf	___ftadd@sign,w
  3743  06E9  00F6               	movwf	?___ftpack+4
  3744  06EA  120A  158A  2769   	fcall	___ftpack
  3745  06ED  0872               	movf	?___ftpack,w
  3746  06EE  00C1               	movwf	?___ftadd
  3747  06EF  0873               	movf	?___ftpack+1,w
  3748  06F0  00C2               	movwf	?___ftadd+1
  3749  06F1  0874               	movf	?___ftpack+2,w
  3750  06F2  00C3               	movwf	?___ftadd+2
  3751  06F3  0008               	return
  3752  06F4                     __end_of___ftadd:	
  3753  06F4                     __ptext534:	
  3754 ;; =============== function _lcd_init ends ============
  3755                           
  3756                           
  3757 ;; *************** function ___lltoft *****************
  3758 ;; Defined at:
  3759 ;;		line 36 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\lltoft.c"
  3760 ;; Parameters:    Size  Location     Type
  3761 ;;  c               4    0[BANK0 ] unsigned long 
  3762 ;; Auto vars:     Size  Location     Type
  3763 ;;  exp             1   10[COMMON] unsigned char 
  3764 ;; Return value:  Size  Location     Type
  3765 ;;                  3    0[BANK0 ] float 
  3766 ;; Registers used:
  3767 ;;		wreg, status,2, status,0, pclath, cstack
  3768 ;; Tracked objects:
  3769 ;;		On entry : 60/0
  3770 ;;		On exit  : 60/0
  3771 ;;		Unchanged: FFF9F/0
  3772 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3773 ;;      Params:         0       4       0       0       0
  3774 ;;      Locals:         1       0       0       0       0
  3775 ;;      Temps:          0       0       0       0       0
  3776 ;;      Totals:         1       4       0       0       0
  3777 ;;Total ram usage:        5 bytes
  3778 ;; Hardware stack levels used:    1
  3779 ;; Hardware stack levels required when called:    2
  3780 ;; This function calls:
  3781 ;;		___ftpack
  3782 ;; This function is called by:
  3783 ;;		_printf
  3784 ;; This function uses a non-reentrant model
  3785 ;;
  3786  06F4                     ___lltoft:	
  3787                           
  3788                           ; Regs used in ___lltoft: [wreg+status,2+status,0+pclath+cstack]
  3789  06F4  308E               	movlw	142
  3790  06F5  00FA               	movwf	___lltoft@exp
  3791  06F6                     l6630:	
  3792  06F6  30FF               	movlw	255
  3793  06F7  0523               	andwf	___lltoft@c+3,w
  3794  06F8  1903               	btfsc	3,2
  3795  06F9  2F01               	goto	l6632
  3796  06FA  1003               	clrc
  3797  06FB  0CA3               	rrf	___lltoft@c+3,f
  3798  06FC  0CA2               	rrf	___lltoft@c+2,f
  3799  06FD  0CA1               	rrf	___lltoft@c+1,f
  3800  06FE  0CA0               	rrf	___lltoft@c,f
  3801  06FF  0AFA               	incf	___lltoft@exp,f
  3802  0700  2EF6               	goto	l6630
  3803  0701                     l6632:	
  3804  0701  0820               	movf	___lltoft@c,w
  3805  0702  00F2               	movwf	?___ftpack
  3806  0703  0821               	movf	___lltoft@c+1,w
  3807  0704  00F3               	movwf	?___ftpack+1
  3808  0705  0822               	movf	___lltoft@c+2,w
  3809  0706  00F4               	movwf	?___ftpack+2
  3810  0707  087A               	movf	___lltoft@exp,w
  3811  0708  00F5               	movwf	?___ftpack+3
  3812  0709  01F6               	clrf	?___ftpack+4
  3813  070A  120A  158A  2769   	fcall	___ftpack
  3814  070D  0872               	movf	?___ftpack,w
  3815  070E  00A0               	movwf	?___lltoft
  3816  070F  0873               	movf	?___ftpack+1,w
  3817  0710  00A1               	movwf	?___lltoft+1
  3818  0711  0874               	movf	?___ftpack+2,w
  3819  0712  00A2               	movwf	?___lltoft+2
  3820  0713  0008               	return
  3821  0714                     __end_of___lltoft:	
  3822  0714                     __ptext529:	
  3823 ;; =============== function _lcd_putc ends ============
  3824                           
  3825                           
  3826 ;; *************** function ___ftsub *****************
  3827 ;; Defined at:
  3828 ;;		line 17 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\ftsub.c"
  3829 ;; Parameters:    Size  Location     Type
  3830 ;;  f2              3   45[BANK0 ] float 
  3831 ;;  f1              3   48[BANK0 ] float 
  3832 ;; Auto vars:     Size  Location     Type
  3833 ;;		None
  3834 ;; Return value:  Size  Location     Type
  3835 ;;                  3   45[BANK0 ] float 
  3836 ;; Registers used:
  3837 ;;		wreg, status,2, status,0, pclath, cstack
  3838 ;; Tracked objects:
  3839 ;;		On entry : 60/0
  3840 ;;		On exit  : 60/0
  3841 ;;		Unchanged: FFF9F/0
  3842 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3843 ;;      Params:         0       6       0       0       0
  3844 ;;      Locals:         0       0       0       0       0
  3845 ;;      Temps:          0       0       0       0       0
  3846 ;;      Totals:         0       6       0       0       0
  3847 ;;Total ram usage:        6 bytes
  3848 ;; Hardware stack levels used:    1
  3849 ;; Hardware stack levels required when called:    3
  3850 ;; This function calls:
  3851 ;;		___ftadd
  3852 ;; This function is called by:
  3853 ;;		_printf
  3854 ;; This function uses a non-reentrant model
  3855 ;;
  3856  0714                     ___ftsub:	
  3857                           
  3858                           ; Regs used in ___ftsub: [wreg+status,2+status,0+pclath+cstack]
  3859  0714  3080               	movlw	128
  3860  0715  06CF               	xorwf	___ftsub@f2+2,f
  3861  0716  0850               	movf	___ftsub@f1,w
  3862  0717  00C1               	movwf	?___ftadd
  3863  0718  0851               	movf	___ftsub@f1+1,w
  3864  0719  00C2               	movwf	?___ftadd+1
  3865  071A  0852               	movf	___ftsub@f1+2,w
  3866  071B  00C3               	movwf	?___ftadd+2
  3867  071C  084D               	movf	___ftsub@f2,w
  3868  071D  00C4               	movwf	?___ftadd+3
  3869  071E  084E               	movf	___ftsub@f2+1,w
  3870  071F  00C5               	movwf	?___ftadd+4
  3871  0720  084F               	movf	___ftsub@f2+2,w
  3872  0721  00C6               	movwf	?___ftadd+5
  3873  0722  2632               	fcall	___ftadd
  3874  0723  0841               	movf	?___ftadd,w
  3875  0724  00CD               	movwf	?___ftsub
  3876  0725  0842               	movf	?___ftadd+1,w
  3877  0726  00CE               	movwf	?___ftsub+1
  3878  0727  0843               	movf	?___ftadd+2,w
  3879  0728  00CF               	movwf	?___ftsub+2
  3880  0729  0008               	return
  3881  072A                     __end_of___ftsub:	
  3882  072A                     PL3:	
  3883  072A  0838               	movf	printf@c^(0+128),w
  3884  072B  1283               	bcf	3,5	;RP0=0, select bank0
  3885  072C  00DA               	movwf	??_printf
  3886  072D  1003               	clrc
  3887  072E  0DDA               	rlf	??_printf,f
  3888  072F  1003               	clrc
  3889  0730  0D5A               	rlf	??_printf,w
  3890  0731  3E4F               	addlw	low (_dpowers-__stringbase)
  3891  0732  0084               	movwf	4
  3892  0733  0008               	return
  3893  0734                     PL4:	
  3894  0734  300A               	movlw	10
  3895  0735  1283               	bcf	3,5	;RP0=0, select bank0
  3896  0736  00A5               	movwf	?___llmod
  3897  0737  01A6               	clrf	?___llmod+1
  3898  0738  01A7               	clrf	?___llmod+2
  3899  0739  01A8               	clrf	?___llmod+3
  3900  073A  1683               	bsf	3,5	;RP0=1, select bank1
  3901  073B  0008               	return
  3902  073C                     PL5:	
  3903  073C  0827               	movf	?___fttol+3,w
  3904  073D  1683               	bsf	3,5	;RP0=1, select bank1
  3905  073E  00AB               	movwf	(printf@_val+3)^(0+128)
  3906  073F  1283               	bcf	3,5	;RP0=0, select bank0
  3907  0740  0826               	movf	?___fttol+2,w
  3908  0741  1683               	bsf	3,5	;RP0=1, select bank1
  3909  0742  00AA               	movwf	(printf@_val+2)^(0+128)
  3910  0743  1283               	bcf	3,5	;RP0=0, select bank0
  3911  0744  0825               	movf	?___fttol+1,w
  3912  0745  1683               	bsf	3,5	;RP0=1, select bank1
  3913  0746  00A9               	movwf	(printf@_val+1)^(0+128)
  3914  0747  1283               	bcf	3,5	;RP0=0, select bank0
  3915  0748  0824               	movf	?___fttol,w
  3916  0749  0008               	return
  3917  074A                     PL6:	
  3918  074A  0841               	movf	?_scale,w
  3919  074B  1683               	bsf	3,5	;RP0=1, select bank1
  3920  074C  00A5               	movwf	printf@integ^(0+128)
  3921  074D  1283               	bcf	3,5	;RP0=0, select bank0
  3922  074E  0842               	movf	?_scale+1,w
  3923  074F  1683               	bsf	3,5	;RP0=1, select bank1
  3924  0750  00A6               	movwf	(printf@integ+1)^(0+128)
  3925  0751  1283               	bcf	3,5	;RP0=0, select bank0
  3926  0752  0843               	movf	?_scale+2,w
  3927  0753  1683               	bsf	3,5	;RP0=1, select bank1
  3928  0754  00A7               	movwf	(printf@integ+2)^(0+128)
  3929  0755  0833               	movf	printf@fval^(0+128),w
  3930  0756  0008               	return
  3931  0757                     PL11:	
  3932  0757  0772               	addwf	?___wmul,w
  3933  0758  1283               	bcf	3,5	;RP0=0, select bank0
  3934  0759  00DA               	movwf	??_printf
  3935  075A  3000               	movlw	0
  3936  075B  1803               	skipnc
  3937  075C  3001               	movlw	1
  3938  075D  0773               	addwf	?___wmul+1,w
  3939  075E  00DB               	movwf	??_printf+1
  3940  075F  085A               	movf	??_printf,w
  3941  0760  3ED0               	addlw	208
  3942  0761  1683               	bsf	3,5	;RP0=1, select bank1
  3943  0762  0008               	return
  3944  0763                     PL12:	
  3945  0763  00F5               	movwf	?___lldiv+3
  3946  0764  1683               	bsf	3,5	;RP0=1, select bank1
  3947  0765  082B               	movf	(printf@_val+3)^(0+128),w
  3948  0766  00F9               	movwf	?___lldiv+7
  3949  0767  082A               	movf	(printf@_val+2)^(0+128),w
  3950  0768  00F8               	movwf	?___lldiv+6
  3951  0769  0829               	movf	(printf@_val+1)^(0+128),w
  3952  076A  00F7               	movwf	?___lldiv+5
  3953  076B  0828               	movf	printf@_val^(0+128),w
  3954  076C  00F6               	movwf	?___lldiv+4
  3955  076D  0008               	return
  3956  076E                     PL13:	
  3957  076E  1283               	bcf	3,5	;RP0=0, select bank0
  3958  076F  00A4               	movwf	?___fttol
  3959  0770  1683               	bsf	3,5	;RP0=1, select bank1
  3960  0771  0834               	movf	(printf@fval+1)^(0+128),w
  3961  0772  1283               	bcf	3,5	;RP0=0, select bank0
  3962  0773  00A5               	movwf	?___fttol+1
  3963  0774  1683               	bsf	3,5	;RP0=1, select bank1
  3964  0775  0835               	movf	(printf@fval+2)^(0+128),w
  3965  0776  1283               	bcf	3,5	;RP0=0, select bank0
  3966  0777  00A6               	movwf	?___fttol+2
  3967  0778  0008               	return
  3968  0779                     PL15:	
  3969  0779  1283               	bcf	3,5	;RP0=0, select bank0
  3970  077A  00B2               	movwf	?___ftmul
  3971  077B  1683               	bsf	3,5	;RP0=1, select bank1
  3972  077C  0834               	movf	(printf@fval+1)^(0+128),w
  3973  077D  1283               	bcf	3,5	;RP0=0, select bank0
  3974  077E  00B3               	movwf	?___ftmul+1
  3975  077F  1683               	bsf	3,5	;RP0=1, select bank1
  3976  0780  0835               	movf	(printf@fval+2)^(0+128),w
  3977  0781  1283               	bcf	3,5	;RP0=0, select bank0
  3978  0782  00B4               	movwf	?___ftmul+2
  3979  0783  0008               	return
  3980  0784                     PL17:	
  3981  0784  1283               	bcf	3,5	;RP0=0, select bank0
  3982  0785  00DA               	movwf	??_printf
  3983  0786  01DB               	clrf	??_printf+1
  3984  0787  1BDA               	btfsc	??_printf,7
  3985  0788  03DB               	decf	??_printf+1,f
  3986  0789  085B               	movf	??_printf+1,w
  3987  078A  3A80               	xorlw	128
  3988  078B  00DC               	movwf	??_printf+2
  3989  078C  1683               	bsf	3,5	;RP0=1, select bank1
  3990  078D  0008               	return
  3991  078E                     PL19:	
  3992  078E  1303               	bcf	3,6	;RP1=0, select bank1
  3993  078F  0838               	movf	printf@c^(0+128),w
  3994  0790  1283               	bcf	3,5	;RP0=0, select bank0
  3995  0791  00DA               	movwf	??_printf
  3996  0792  01DB               	clrf	??_printf+1
  3997  0793  1BDA               	btfsc	??_printf,7
  3998  0794  03DB               	decf	??_printf+1,f
  3999  0795  1683               	bsf	3,5	;RP0=1, select bank1
  4000  0796  0008               	return
  4001  0797                     PL20:	
  4002  0797  0875               	movf	?___lldiv+3,w
  4003  0798  00AC               	movwf	?___llmod+7
  4004  0799  0874               	movf	?___lldiv+2,w
  4005  079A  00AB               	movwf	?___llmod+6
  4006  079B  0873               	movf	?___lldiv+1,w
  4007  079C  00AA               	movwf	?___llmod+5
  4008  079D  0872               	movf	?___lldiv,w
  4009  079E  00A9               	movwf	?___llmod+4
  4010  079F  0008               	return
  4011  07A0                     PL21:	
  4012  07A0  0825               	movf	printf@integ^(0+128),w
  4013  07A1  00F2               	movwf	?___ftge
  4014  07A2  0826               	movf	(printf@integ+1)^(0+128),w
  4015  07A3  00F3               	movwf	?___ftge+1
  4016  07A4  0827               	movf	(printf@integ+2)^(0+128),w
  4017  07A5  00F4               	movwf	?___ftge+2
  4018  07A6  0008               	return
  4019  07A7                     PL27:	
  4020  07A7  1283               	bcf	3,5	;RP0=0, select bank0
  4021  07A8  085B               	movf	??_printf+1,w
  4022  07A9  1803               	skipnc
  4023  07AA  3E01               	addlw	1
  4024  07AB  3EFF               	addlw	255
  4025  07AC  1683               	bsf	3,5	;RP0=1, select bank1
  4026  07AD  0008               	return
  4027  07AE                     PL28:	
  4028  07AE  0824               	movf	___fttol@f1,w
  4029  07AF  00A8               	movwf	??___fttol
  4030  07B0  0825               	movf	___fttol@f1+1,w
  4031  07B1  00A9               	movwf	??___fttol+1
  4032  07B2  0826               	movf	___fttol@f1+2,w
  4033  07B3  00AA               	movwf	??___fttol+2
  4034  07B4  0008               	return
  4035  07B5                     PL31:	
  4036  07B5  1683               	bsf	3,5	;RP0=1, select bank1
  4037  07B6  1303               	bcf	3,6	;RP1=0, select bank1
  4038  07B7  0008               	return
  4039                           
  4040                           	psect	text531
  4041  0931                     __ptext531:	
  4042 ;; =============== function _scale ends ============
  4043                           
  4044                           
  4045 ;; *************** function _fround *****************
  4046 ;; Defined at:
  4047 ;;		line 406 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\lib\doprnt.c"
  4048 ;; Parameters:    Size  Location     Type
  4049 ;;  prec            1    wreg     unsigned char 
  4050 ;; Auto vars:     Size  Location     Type
  4051 ;;  prec            1   54[BANK0 ] unsigned char 
  4052 ;; Return value:  Size  Location     Type
  4053 ;;                  3   45[BANK0 ] unsigned char 
  4054 ;; Registers used:
  4055 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4056 ;; Tracked objects:
  4057 ;;		On entry : 60/20
  4058 ;;		On exit  : 60/0
  4059 ;;		Unchanged: FFF9F/0
  4060 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4061 ;;      Params:         0       3       0       0       0
  4062 ;;      Locals:         0       7       0       0       0
  4063 ;;      Temps:          0       0       0       0       0
  4064 ;;      Totals:         0      10       0       0       0
  4065 ;;Total ram usage:       10 bytes
  4066 ;; Hardware stack levels used:    1
  4067 ;; Hardware stack levels required when called:    3
  4068 ;; This function calls:
  4069 ;;		___lbmod
  4070 ;;		___bmul
  4071 ;;		___lbdiv
  4072 ;;		___ftmul
  4073 ;; This function is called by:
  4074 ;;		_printf
  4075 ;; This function uses a non-reentrant model
  4076 ;;
  4077  0931                     _fround:	
  4078                           
  4079                           ; Regs used in _fround: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4080                           ;fround@prec stored from wreg
  4081  0931  1283               	bcf	3,5	;RP0=0, select bank0
  4082  0932  00D6               	movwf	fround@prec
  4083  0933  306E               	movlw	110
  4084  0934  0256               	subwf	fround@prec,w
  4085  0935  1C03               	skipc
  4086  0936  29BC               	goto	l6696
  4087  0937  3003               	movlw	3
  4088  0938  00FB               	movwf	?___bmul
  4089  0939  300A               	movlw	10
  4090  093A  00F7               	movwf	?___lbdiv
  4091  093B  3064               	movlw	100
  4092  093C  00F2               	movwf	?___lbmod
  4093  093D  0856               	movf	fround@prec,w
  4094  093E  2251  120A  158A   	fcall	___lbmod
  4095  0941  2236               	fcall	___lbdiv
  4096  0942  120A  158A  275B   	fcall	___bmul
      +       120A  158A         
  4097  0947  3E1C               	addlw	low ((__npowers_-__stringbase+27))
  4098  0948  0084               	movwf	4
  4099  0949  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  4100  094E  00B2               	movwf	?___ftmul
  4101  094F  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  4102  0954  00B3               	movwf	?___ftmul+1
  4103  0955  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  4104  095A  00B4               	movwf	?___ftmul+2
  4105  095B  3003               	movlw	3
  4106  095C  00FB               	movwf	?___bmul
  4107  095D  3064               	movlw	100
  4108  095E  00F7               	movwf	?___lbdiv
  4109  095F  0856               	movf	fround@prec,w
  4110  0960  2236               	fcall	___lbdiv
  4111  0961  120A  158A  275B   	fcall	___bmul
      +       120A  158A         
  4112  0966  3E37               	addlw	low ((__npowers_-__stringbase+54))
  4113  0967  0084               	movwf	4
  4114  0968  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  4115  096D  00B5               	movwf	?___ftmul+3
  4116  096E  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  4117  0973  00B6               	movwf	?___ftmul+4
  4118  0974  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  4119  0979  00B7               	movwf	?___ftmul+5
  4120  097A  120A  158A  26EC   	fcall	___ftmul
      +       120A  158A         
  4121  097F  227C  120A  158A   	fcall	PL30	;call to abstracted procedure
  4122  0982  3003               	movlw	3
  4123  0983  00FB               	movwf	?___bmul
  4124  0984  300A               	movlw	10
  4125  0985  00F2               	movwf	?___lbmod
  4126  0986  0856               	movf	fround@prec,w
  4127  0987  2251               	fcall	___lbmod
  4128  0988  120A  158A  275B   	fcall	___bmul
      +       120A  158A         
  4129  098D  3E01               	addlw	low (__npowers_-__stringbase)
  4130  098E  0084               	movwf	4
  4131  098F  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  4132  0994  00B2               	movwf	?___ftmul
  4133  0995  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  4134  099A  00B3               	movwf	?___ftmul+1
  4135  099B  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  4136  09A0  2274               	fcall	PL24	;call to abstracted procedure
  4137  09A1  120A  158A  26EC   	fcall	___ftmul
      +       120A  158A         
  4138  09A6  0832               	movf	?___ftmul,w
  4139  09A7  00D0               	movwf	_fround$4105
  4140  09A8  0833               	movf	?___ftmul+1,w
  4141  09A9  00D1               	movwf	_fround$4105+1
  4142  09AA  0834               	movf	?___ftmul+2,w
  4143  09AB  00D2               	movwf	_fround$4105+2
  4144  09AC  303F               	movlw	63
  4145  09AD  01B2               	clrf	?___ftmul
  4146  09AE  01B3               	clrf	?___ftmul+1
  4147  09AF  00B4               	movwf	?___ftmul+2
  4148  09B0  0850               	movf	_fround$4105,w
  4149  09B1  00B5               	movwf	?___ftmul+3
  4150  09B2  0851               	movf	_fround$4105+1,w
  4151  09B3  00B6               	movwf	?___ftmul+4
  4152  09B4  0852               	movf	_fround$4105+2,w
  4153  09B5  00B7               	movwf	?___ftmul+5
  4154  09B6  120A  158A  26EC   	fcall	___ftmul
      +       120A  158A         
  4155  09BB  2A6D               	ljmp	PL16	;call to abstracted procedure
  4156  09BC                     l6696:	
  4157  09BC  300B               	movlw	11
  4158  09BD  0256               	subwf	fround@prec,w
  4159  09BE  1C03               	skipc
  4160  09BF  2A10               	goto	l6704
  4161  09C0  3003               	movlw	3
  4162  09C1  00FB               	movwf	?___bmul
  4163  09C2  300A               	movlw	10
  4164  09C3  00F2               	movwf	?___lbmod
  4165  09C4  0856               	movf	fround@prec,w
  4166  09C5  2251               	fcall	___lbmod
  4167  09C6  120A  158A  275B   	fcall	___bmul
      +       120A  158A         
  4168  09CB  3E01               	addlw	low (__npowers_-__stringbase)
  4169  09CC  0084               	movwf	4
  4170  09CD  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  4171  09D2  00B2               	movwf	?___ftmul
  4172  09D3  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  4173  09D8  00B3               	movwf	?___ftmul+1
  4174  09D9  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  4175  09DE  00B4               	movwf	?___ftmul+2
  4176  09DF  3003               	movlw	3
  4177  09E0  00FB               	movwf	?___bmul
  4178  09E1  300A               	movlw	10
  4179  09E2  00F7               	movwf	?___lbdiv
  4180  09E3  0856               	movf	fround@prec,w
  4181  09E4  2236               	fcall	___lbdiv
  4182  09E5  120A  158A  275B   	fcall	___bmul
      +       120A  158A         
  4183  09EA  3E1C               	addlw	low ((__npowers_-__stringbase+27))
  4184  09EB  0084               	movwf	4
  4185  09EC  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  4186  09F1  00B5               	movwf	?___ftmul+3
  4187  09F2  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  4188  09F7  00B6               	movwf	?___ftmul+4
  4189  09F8  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  4190  09FD  00B7               	movwf	?___ftmul+5
  4191  09FE  120A  158A  26EC   	fcall	___ftmul
      +       120A  158A         
  4192  0A03  227C  120A  158A   	fcall	PL30	;call to abstracted procedure
  4193  0A06  303F               	movlw	63
  4194  0A07  01B2               	clrf	?___ftmul
  4195  0A08  01B3               	clrf	?___ftmul+1
  4196  0A09  2274               	fcall	PL24	;call to abstracted procedure
  4197  0A0A  120A  158A  26EC   	fcall	___ftmul
      +       120A  158A         
  4198  0A0F  2A6D               	ljmp	PL16	;call to abstracted procedure
  4199  0A10                     l6704:	
  4200  0A10  303F               	movlw	63
  4201  0A11  01B2               	clrf	?___ftmul
  4202  0A12  01B3               	clrf	?___ftmul+1
  4203  0A13  00B4               	movwf	?___ftmul+2
  4204  0A14  3003               	movlw	3
  4205  0A15  00FB               	movwf	?___bmul
  4206  0A16  0856               	movf	fround@prec,w
  4207  0A17  120A  158A  275B   	fcall	___bmul
      +       120A  158A         
  4208  0A1C  3E01               	addlw	low (__npowers_-__stringbase)
  4209  0A1D  0084               	movwf	4
  4210  0A1E  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  4211  0A23  00B5               	movwf	?___ftmul+3
  4212  0A24  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  4213  0A29  00B6               	movwf	?___ftmul+4
  4214  0A2A  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  4215  0A2F  00B7               	movwf	?___ftmul+5
  4216  0A30  120A  158A  26EC   	fcall	___ftmul
      +       120A  158A         
  4217  0A35  2A6D               	ljmp	PL16	;call to abstracted procedure
  4218  0A36                     __end_of_fround:	
  4219  0A36                     __ptext550:	
  4220 ;; =============== function ___lbmod ends ============
  4221                           
  4222                           
  4223 ;; *************** function ___lbdiv *****************
  4224 ;; Defined at:
  4225 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\lbdiv.c"
  4226 ;; Parameters:    Size  Location     Type
  4227 ;;  dividend        1    wreg     unsigned char 
  4228 ;;  divisor         1    7[COMMON] unsigned char 
  4229 ;; Auto vars:     Size  Location     Type
  4230 ;;  dividend        1    8[COMMON] unsigned char 
  4231 ;;  quotient        1   10[COMMON] unsigned char 
  4232 ;;  counter         1    9[COMMON] unsigned char 
  4233 ;; Return value:  Size  Location     Type
  4234 ;;                  1    wreg      unsigned char 
  4235 ;; Registers used:
  4236 ;;		wreg, status,2, status,0
  4237 ;; Tracked objects:
  4238 ;;		On entry : 60/0
  4239 ;;		On exit  : 60/0
  4240 ;;		Unchanged: FFF9F/0
  4241 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4242 ;;      Params:         1       0       0       0       0
  4243 ;;      Locals:         3       0       0       0       0
  4244 ;;      Temps:          0       0       0       0       0
  4245 ;;      Totals:         4       0       0       0       0
  4246 ;;Total ram usage:        4 bytes
  4247 ;; Hardware stack levels used:    1
  4248 ;; Hardware stack levels required when called:    1
  4249 ;; This function calls:
  4250 ;;		Nothing
  4251 ;; This function is called by:
  4252 ;;		_fround
  4253 ;; This function uses a non-reentrant model
  4254 ;;
  4255  0A36                     ___lbdiv:	
  4256                           
  4257                           ; Regs used in ___lbdiv: [wreg+status,2+status,0]
  4258                           ;___lbdiv@dividend stored from wreg
  4259  0A36  00F8               	movwf	___lbdiv@dividend
  4260  0A37  01FA               	clrf	___lbdiv@quotient
  4261  0A38  0877               	movf	___lbdiv@divisor,w
  4262  0A39  1903               	btfsc	3,2
  4263  0A3A  2A4F               	goto	l6144
  4264  0A3B  01F9               	clrf	___lbdiv@counter
  4265  0A3C                     l6130:	
  4266  0A3C  0AF9               	incf	___lbdiv@counter,f
  4267  0A3D  1BF7               	btfsc	___lbdiv@divisor,7
  4268  0A3E  2A42               	goto	l3292
  4269  0A3F  1003               	clrc
  4270  0A40  0DF7               	rlf	___lbdiv@divisor,f
  4271  0A41  2A3C               	goto	l6130
  4272  0A42                     l3292:	
  4273  0A42  1003               	clrc
  4274  0A43  0DFA               	rlf	___lbdiv@quotient,f
  4275  0A44  0877               	movf	___lbdiv@divisor,w
  4276  0A45  0278               	subwf	___lbdiv@dividend,w
  4277  0A46  1C03               	skipc
  4278  0A47  2A4C               	goto	L18
  4279  0A48  0877               	movf	___lbdiv@divisor,w
  4280  0A49  02F8               	subwf	___lbdiv@dividend,f
  4281  0A4A  147A               	bsf	___lbdiv@quotient,0
  4282  0A4B  1003               	clrc
  4283  0A4C                     L18:	
  4284  0A4C  0CF7               	rrf	___lbdiv@divisor,f
  4285  0A4D  0BF9               	decfsz	___lbdiv@counter,f
  4286  0A4E  2A42               	goto	l3292
  4287  0A4F                     l6144:	
  4288  0A4F  087A               	movf	___lbdiv@quotient,w
  4289  0A50  0008               	return
  4290  0A51                     __end_of___lbdiv:	
  4291  0A51                     __ptext549:	
  4292 ;; =============== function ___ftpack ends ============
  4293                           
  4294                           
  4295 ;; *************** function ___lbmod *****************
  4296 ;; Defined at:
  4297 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\lbmod.c"
  4298 ;; Parameters:    Size  Location     Type
  4299 ;;  dividend        1    wreg     unsigned char 
  4300 ;;  divisor         1    2[COMMON] unsigned char 
  4301 ;; Auto vars:     Size  Location     Type
  4302 ;;  dividend        1    4[COMMON] unsigned char 
  4303 ;;  rem             1    6[COMMON] unsigned char 
  4304 ;;  counter         1    5[COMMON] unsigned char 
  4305 ;; Return value:  Size  Location     Type
  4306 ;;                  1    wreg      unsigned char 
  4307 ;; Registers used:
  4308 ;;		wreg, status,2, status,0
  4309 ;; Tracked objects:
  4310 ;;		On entry : 60/0
  4311 ;;		On exit  : 60/0
  4312 ;;		Unchanged: FFF9F/0
  4313 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4314 ;;      Params:         1       0       0       0       0
  4315 ;;      Locals:         3       0       0       0       0
  4316 ;;      Temps:          1       0       0       0       0
  4317 ;;      Totals:         5       0       0       0       0
  4318 ;;Total ram usage:        5 bytes
  4319 ;; Hardware stack levels used:    1
  4320 ;; Hardware stack levels required when called:    1
  4321 ;; This function calls:
  4322 ;;		Nothing
  4323 ;; This function is called by:
  4324 ;;		_fround
  4325 ;; This function uses a non-reentrant model
  4326 ;;
  4327  0A51                     ___lbmod:	
  4328                           
  4329                           ; Regs used in ___lbmod: [wreg+status,2+status,0]
  4330                           ;___lbmod@dividend stored from wreg
  4331  0A51  00F4               	movwf	___lbmod@dividend
  4332  0A52  3008               	movlw	8
  4333  0A53  00F5               	movwf	___lbmod@counter
  4334  0A54  01F6               	clrf	___lbmod@rem
  4335  0A55                     l6152:	
  4336  0A55  0874               	movf	___lbmod@dividend,w
  4337  0A56  00F3               	movwf	??___lbmod
  4338  0A57  3007               	movlw	7
  4339  0A58  1003               	clrc
  4340  0A59                     L17:	
  4341  0A59  0CF3               	rrf	??___lbmod,f
  4342  0A5A  3EFF               	addlw	-1
  4343  0A5B  1003               	clrc
  4344  0A5C  1D03               	skipz
  4345  0A5D  2A59               	goto	L17
  4346  0A5E  0D76               	rlf	___lbmod@rem,w
  4347  0A5F  0473               	iorwf	??___lbmod,w
  4348  0A60  00F6               	movwf	___lbmod@rem
  4349  0A61  1003               	clrc
  4350  0A62  0DF4               	rlf	___lbmod@dividend,f
  4351  0A63  0872               	movf	___lbmod@divisor,w
  4352  0A64  0276               	subwf	___lbmod@rem,w
  4353  0A65  1C03               	skipc
  4354  0A66  2A69               	goto	l6160
  4355  0A67  0872               	movf	___lbmod@divisor,w
  4356  0A68  02F6               	subwf	___lbmod@rem,f
  4357  0A69                     l6160:	
  4358  0A69  0BF5               	decfsz	___lbmod@counter,f
  4359  0A6A  2A55               	goto	l6152
  4360  0A6B  0876               	movf	___lbmod@rem,w
  4361  0A6C  0008               	return
  4362  0A6D                     __end_of___lbmod:	
  4363  0A6D                     PL16:	
  4364  0A6D  0832               	movf	?___ftmul,w
  4365  0A6E  00CD               	movwf	?_fround
  4366  0A6F  0833               	movf	?___ftmul+1,w
  4367  0A70  00CE               	movwf	?_fround+1
  4368  0A71  0834               	movf	?___ftmul+2,w
  4369  0A72  00CF               	movwf	?_fround+2
  4370  0A73  0008               	return
  4371  0A74                     PL24:	
  4372  0A74  00B4               	movwf	?___ftmul+2
  4373  0A75  0853               	movf	_fround$4104,w
  4374  0A76  00B5               	movwf	?___ftmul+3
  4375  0A77  0854               	movf	_fround$4104+1,w
  4376  0A78  00B6               	movwf	?___ftmul+4
  4377  0A79  0855               	movf	_fround$4104+2,w
  4378  0A7A  00B7               	movwf	?___ftmul+5
  4379  0A7B  0008               	return
  4380  0A7C                     PL30:	
  4381  0A7C  0832               	movf	?___ftmul,w
  4382  0A7D  00D3               	movwf	_fround$4104
  4383  0A7E  0833               	movf	?___ftmul+1,w
  4384  0A7F  00D4               	movwf	_fround$4104+1
  4385  0A80  0834               	movf	?___ftmul+2,w
  4386  0A81  00D5               	movwf	_fround$4104+2
  4387  0A82  0008               	return
  4388                           
  4389                           	psect	text532
  4390  0A83                     __ptext532:	
  4391 ;; =============== function _fround ends ============
  4392                           
  4393                           
  4394 ;; *************** function _lcd_gotoxy *****************
  4395 ;; Defined at:
  4396 ;;		line 162 in file "C:\Users\DELL\Desktop\baitap_ttvxl\counter\lcd(16).c"
  4397 ;; Parameters:    Size  Location     Type
  4398 ;;  col             1    wreg     unsigned char 
  4399 ;;  row             1    7[COMMON] unsigned char 
  4400 ;; Auto vars:     Size  Location     Type
  4401 ;;  col             1    8[COMMON] unsigned char 
  4402 ;;  address         1    9[COMMON] unsigned char 
  4403 ;; Return value:  Size  Location     Type
  4404 ;;		None               void
  4405 ;; Registers used:
  4406 ;;		wreg, status,2, status,0, pclath, cstack
  4407 ;; Tracked objects:
  4408 ;;		On entry : 0/0
  4409 ;;		On exit  : 60/0
  4410 ;;		Unchanged: 0/0
  4411 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4412 ;;      Params:         1       0       0       0       0
  4413 ;;      Locals:         2       0       0       0       0
  4414 ;;      Temps:          0       0       0       0       0
  4415 ;;      Totals:         3       0       0       0       0
  4416 ;;Total ram usage:        3 bytes
  4417 ;; Hardware stack levels used:    1
  4418 ;; Hardware stack levels required when called:    2
  4419 ;; This function calls:
  4420 ;;		_lcd_put_byte
  4421 ;;		_lcd_busy
  4422 ;; This function is called by:
  4423 ;;		_main
  4424 ;;		_lcd_putc
  4425 ;; This function uses a non-reentrant model
  4426 ;;
  4427  0A83                     _lcd_gotoxy:	
  4428                           
  4429                           ; Regs used in _lcd_gotoxy: [wreg+status,2+status,0+pclath+cstack]
  4430                           ;lcd_gotoxy@col stored from wreg
  4431  0A83  00F8               	movwf	lcd_gotoxy@col
  4432                           
  4433                           ;lcd(16).c: 163: unsigned char address;
  4434                           ;lcd(16).c: 165: if(row!=0)
  4435  0A84  0877               	movf	lcd_gotoxy@row,w
  4436  0A85  1903               	btfsc	3,2
  4437  0A86  2A8A               	goto	l6678
  4438                           
  4439                           ;lcd(16).c: 166: address=0x40;
  4440  0A87  3040               	movlw	64
  4441  0A88  00F9               	movwf	lcd_gotoxy@address
  4442  0A89  2A8B               	goto	l6680
  4443  0A8A                     l6678:	
  4444                           
  4445                           ;lcd(16).c: 167: else
  4446                           ;lcd(16).c: 168: address=0;
  4447  0A8A  01F9               	clrf	lcd_gotoxy@address
  4448  0A8B                     l6680:	
  4449                           
  4450                           ;lcd(16).c: 170: address += col;
  4451  0A8B  0878               	movf	lcd_gotoxy@col,w
  4452  0A8C  07F9               	addwf	lcd_gotoxy@address,f
  4453                           
  4454                           ;lcd(16).c: 171: lcd_put_byte(0,0x80|address);
  4455  0A8D  0879               	movf	lcd_gotoxy@address,w
  4456  0A8E  3880               	iorlw	128
  4457  0A8F  00F2               	movwf	?_lcd_put_byte
  4458  0A90  3000               	movlw	0
  4459  0A91  2385  120A  158A   	fcall	_lcd_put_byte
  4460  0A94                     l6684:	
  4461                           ;lcd(16).c: 172: while(lcd_busy());
  4462                           
  4463  0A94  2415  120A  158A   	fcall	_lcd_busy
  4464  0A97  3800               	iorlw	0
  4465  0A98  1903               	btfsc	3,2
  4466  0A99  0008               	return
  4467  0A9A  2A94               	goto	l6684
  4468  0A9B                     __end_of_lcd_gotoxy:	
  4469  0A9B                     __ptext528:	
  4470 ;; =============== function _putch ends ============
  4471                           
  4472                           
  4473 ;; *************** function _lcd_putc *****************
  4474 ;; Defined at:
  4475 ;;		line 143 in file "C:\Users\DELL\Desktop\baitap_ttvxl\counter\lcd(16).c"
  4476 ;; Parameters:    Size  Location     Type
  4477 ;;  c               1    wreg     unsigned char 
  4478 ;; Auto vars:     Size  Location     Type
  4479 ;;  c               1   10[COMMON] unsigned char 
  4480 ;; Return value:  Size  Location     Type
  4481 ;;		None               void
  4482 ;; Registers used:
  4483 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4484 ;; Tracked objects:
  4485 ;;		On entry : 0/20
  4486 ;;		On exit  : 0/0
  4487 ;;		Unchanged: 0/0
  4488 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4489 ;;      Params:         0       0       0       0       0
  4490 ;;      Locals:         1       0       0       0       0
  4491 ;;      Temps:          0       0       0       0       0
  4492 ;;      Totals:         1       0       0       0       0
  4493 ;;Total ram usage:        1 bytes
  4494 ;; Hardware stack levels used:    1
  4495 ;; Hardware stack levels required when called:    3
  4496 ;; This function calls:
  4497 ;;		_lcd_put_byte
  4498 ;;		_lcd_busy
  4499 ;;		_lcd_gotoxy
  4500 ;;		_isprint
  4501 ;; This function is called by:
  4502 ;;		_putch
  4503 ;; This function uses a non-reentrant model
  4504 ;;
  4505  0A9B                     _lcd_putc:	
  4506                           
  4507                           ; Regs used in _lcd_putc: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4508                           ;lcd_putc@c stored from wreg
  4509  0A9B  00FA               	movwf	lcd_putc@c
  4510                           
  4511                           ;lcd(16).c: 144: switch(c){
  4512  0A9C  2AC1               	goto	l6770
  4513  0A9D                     l6756:	
  4514  0A9D  3000               	movlw	0
  4515                           
  4516                           ;lcd(16).c: 146: lcd_put_byte(0, 1);
  4517  0A9E  01F2               	clrf	?_lcd_put_byte
  4518  0A9F  0AF2               	incf	?_lcd_put_byte,f
  4519  0AA0  2385  120A  158A   	fcall	_lcd_put_byte
  4520  0AA3                     l6758:	
  4521                           ;lcd(16).c: 147: while(lcd_busy());
  4522                           
  4523  0AA3  2415  120A  158A   	fcall	_lcd_busy
  4524  0AA6  3800               	iorlw	0
  4525  0AA7  1903               	btfsc	3,2
  4526  0AA8  0008               	return
  4527  0AA9  2AA3               	goto	l6758
  4528  0AAA                     l6760:	
  4529  0AAA  3000               	movlw	0
  4530                           
  4531                           ;lcd(16).c: 150: lcd_gotoxy(0, 1);
  4532  0AAB  01F7               	clrf	?_lcd_gotoxy
  4533  0AAC  0AF7               	incf	?_lcd_gotoxy,f
  4534  0AAD  2A83               	ljmp	_lcd_gotoxy
  4535  0AAE                     l6762:	
  4536                           ;lcd(16).c: 151: break;
  4537                           
  4538                           
  4539                           ;lcd(16).c: 153: if(isprint(c)){
  4540  0AAE  087A               	movf	lcd_putc@c,w
  4541  0AAF  243C  120A  158A   	fcall	_isprint
  4542  0AB2  1C03               	btfss	3,0
  4543  0AB3  0008               	return
  4544                           
  4545                           ;lcd(16).c: 154: lcd_put_byte(1, c);
  4546  0AB4  087A               	movf	lcd_putc@c,w
  4547  0AB5  00F2               	movwf	?_lcd_put_byte
  4548  0AB6  3001               	movlw	1
  4549  0AB7  2385  120A  158A   	fcall	_lcd_put_byte
  4550  0ABA                     l6766:	
  4551                           ;lcd(16).c: 155: while(lcd_busy());
  4552                           
  4553  0ABA  2415  120A  158A   	fcall	_lcd_busy
  4554  0ABD  3800               	iorlw	0
  4555  0ABE  1903               	btfsc	3,2
  4556  0ABF  0008               	return
  4557  0AC0  2ABA               	goto	l6766
  4558  0AC1                     l6770:	
  4559  0AC1  087A               	movf	lcd_putc@c,w
  4560                           
  4561                           ; Switch size 1, requested type "space"
  4562                           ; Number of cases is 2, Range of values is 10 to 12
  4563                           ; switch strategies available:
  4564                           ; Name         Instructions Cycles
  4565                           ; simple_byte            7     4 (average)
  4566                           ; direct_byte           20    11 (fixed)
  4567                           ; jumptable            263     9 (fixed)
  4568                           ;	Chosen strategy is simple_byte
  4569  0AC2  3A0A               	xorlw	10	; case 10
  4570  0AC3  1903               	skipnz
  4571  0AC4  2AAA               	goto	l6760
  4572  0AC5  3A06               	xorlw	6	; case 12
  4573  0AC6  1903               	skipnz
  4574  0AC7  2A9D               	goto	l6756
  4575  0AC8  2AAE               	goto	l6762
  4576  0AC9  0008               	return
  4577  0ACA                     __end_of_lcd_putc:	
  4578  0ACA                     __ptext533:	
  4579 ;; =============== function _lcd_gotoxy ends ============
  4580                           
  4581                           
  4582 ;; *************** function _lcd_init *****************
  4583 ;; Defined at:
  4584 ;;		line 5 in file "C:\Users\DELL\Desktop\baitap_ttvxl\counter\lcd(16).c"
  4585 ;; Parameters:    Size  Location     Type
  4586 ;;		None
  4587 ;; Auto vars:     Size  Location     Type
  4588 ;;  i               1    0        unsigned char 
  4589 ;; Return value:  Size  Location     Type
  4590 ;;		None               void
  4591 ;; Registers used:
  4592 ;;		wreg, status,2, status,0, pclath, cstack
  4593 ;; Tracked objects:
  4594 ;;		On entry : 17F/60
  4595 ;;		On exit  : 60/0
  4596 ;;		Unchanged: 0/0
  4597 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4598 ;;      Params:         0       0       0       0       0
  4599 ;;      Locals:         0       0       0       0       0
  4600 ;;      Temps:          3       0       0       0       0
  4601 ;;      Totals:         3       0       0       0       0
  4602 ;;Total ram usage:        3 bytes
  4603 ;; Hardware stack levels used:    1
  4604 ;; Hardware stack levels required when called:    2
  4605 ;; This function calls:
  4606 ;;		_lcd_put_byte
  4607 ;;		_lcd_busy
  4608 ;; This function is called by:
  4609 ;;		_main
  4610 ;; This function uses a non-reentrant model
  4611 ;;
  4612  0ACA                     _lcd_init:	
  4613                           
  4614                           ;lcd(16).c: 6: unsigned char i;
  4615                           ;lcd(16).c: 7: TRISD3 = 0;
  4616                           
  4617                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
  4618  0ACA  1303               	bcf	3,6	;RP1=0, select bank1
  4619  0ACB  1188               	bcf	8,3
  4620                           
  4621                           ;lcd(16).c: 8: TRISD1 = 0;
  4622  0ACC  1088               	bcf	8,1
  4623                           
  4624                           ;lcd(16).c: 9: TRISD2 = 0;
  4625  0ACD  1108               	bcf	8,2
  4626                           
  4627                           ;lcd(16).c: 10: TRISD4 = 0;
  4628  0ACE  1208               	bcf	8,4
  4629                           
  4630                           ;lcd(16).c: 11: TRISD5 = 0;
  4631  0ACF  1288               	bcf	8,5
  4632                           
  4633                           ;lcd(16).c: 12: TRISD6 = 0;
  4634  0AD0  1308               	bcf	8,6
  4635                           
  4636                           ;lcd(16).c: 13: TRISD7 = 0;
  4637  0AD1  1388               	bcf	8,7
  4638                           
  4639                           ;lcd(16).c: 14: RD3 = 0;
  4640  0AD2  1283               	bcf	3,5	;RP0=0, select bank0
  4641  0AD3  3003               	movlw	3
  4642  0AD4  1188               	bcf	8,3
  4643                           
  4644                           ;lcd(16).c: 15: RD1 = 0;
  4645  0AD5  1088               	bcf	8,1
  4646                           
  4647                           ;lcd(16).c: 16: RD2 = 0;
  4648  0AD6  1108               	bcf	8,2
  4649                           
  4650                           ;lcd(16).c: 18: _delay((unsigned long)((100)*(20000000/4000.0)));
  4651  0AD7  00F9               	movwf	??_lcd_init+2
  4652  0AD8  308A               	movlw	138
  4653  0AD9  00F8               	movwf	??_lcd_init+1
  4654  0ADA  3056               	movlw	86
  4655  0ADB  00F7               	movwf	??_lcd_init
  4656  0ADC                     u3807:	
  4657  0ADC  0BF7               	decfsz	??_lcd_init,f
  4658  0ADD  2ADC               	goto	u3807
  4659  0ADE  0BF8               	decfsz	??_lcd_init+1,f
  4660  0ADF  2ADC               	goto	u3807
  4661  0AE0  0BF9               	decfsz	??_lcd_init+2,f
  4662  0AE1  2ADC               	goto	u3807
  4663  0AE2  2AE3               	nop2
  4664                           
  4665                           ;lcd(16).c: 21: lcd_put_byte(0,0x30);
  4666  0AE3  3030               	movlw	48
  4667  0AE4  00F2               	movwf	?_lcd_put_byte
  4668  0AE5  3000               	movlw	0
  4669  0AE6  2385  120A  158A   	fcall	_lcd_put_byte
  4670                           
  4671                           ;lcd(16).c: 22: _delay((unsigned long)((50)*(20000000/4000.0)));
  4672  0AE9  3002               	movlw	2
  4673  0AEA  00F9               	movwf	??_lcd_init+2
  4674  0AEB  3045               	movlw	69
  4675  0AEC  00F8               	movwf	??_lcd_init+1
  4676  0AED  30A9               	movlw	169
  4677  0AEE  00F7               	movwf	??_lcd_init
  4678  0AEF                     u3817:	
  4679  0AEF  0BF7               	decfsz	??_lcd_init,f
  4680  0AF0  2AEF               	goto	u3817
  4681  0AF1  0BF8               	decfsz	??_lcd_init+1,f
  4682  0AF2  2AEF               	goto	u3817
  4683  0AF3  0BF9               	decfsz	??_lcd_init+2,f
  4684  0AF4  2AEF               	goto	u3817
  4685  0AF5  2AF6               	nop2
  4686                           
  4687                           ;lcd(16).c: 23: lcd_put_byte(0,0x30);
  4688  0AF6  3030               	movlw	48
  4689  0AF7  00F2               	movwf	?_lcd_put_byte
  4690  0AF8  3000               	movlw	0
  4691  0AF9  2385  120A  158A   	fcall	_lcd_put_byte
  4692                           
  4693                           ;lcd(16).c: 24: _delay((unsigned long)((50)*(20000000/4000.0)));
  4694  0AFC  3002               	movlw	2
  4695  0AFD  00F9               	movwf	??_lcd_init+2
  4696  0AFE  3045               	movlw	69
  4697  0AFF  00F8               	movwf	??_lcd_init+1
  4698  0B00  30A9               	movlw	169
  4699  0B01  00F7               	movwf	??_lcd_init
  4700  0B02                     u3827:	
  4701  0B02  0BF7               	decfsz	??_lcd_init,f
  4702  0B03  2B02               	goto	u3827
  4703  0B04  0BF8               	decfsz	??_lcd_init+1,f
  4704  0B05  2B02               	goto	u3827
  4705  0B06  0BF9               	decfsz	??_lcd_init+2,f
  4706  0B07  2B02               	goto	u3827
  4707  0B08  2B09               	nop2
  4708                           
  4709                           ;lcd(16).c: 25: lcd_put_byte(0,0x32);
  4710  0B09  3032               	movlw	50
  4711  0B0A  00F2               	movwf	?_lcd_put_byte
  4712  0B0B  3000               	movlw	0
  4713  0B0C  2385  120A  158A   	fcall	_lcd_put_byte
  4714                           
  4715                           ;lcd(16).c: 26: _delay((unsigned long)((100)*(20000000/4000.0)));
  4716  0B0F  3003               	movlw	3
  4717  0B10  00F9               	movwf	??_lcd_init+2
  4718  0B11  308A               	movlw	138
  4719  0B12  00F8               	movwf	??_lcd_init+1
  4720  0B13  3056               	movlw	86
  4721  0B14  00F7               	movwf	??_lcd_init
  4722  0B15                     u3837:	
  4723  0B15  0BF7               	decfsz	??_lcd_init,f
  4724  0B16  2B15               	goto	u3837
  4725  0B17  0BF8               	decfsz	??_lcd_init+1,f
  4726  0B18  2B15               	goto	u3837
  4727  0B19  0BF9               	decfsz	??_lcd_init+2,f
  4728  0B1A  2B15               	goto	u3837
  4729  0B1B  2B1C               	nop2
  4730                           
  4731                           ;lcd(16).c: 27: _delay((unsigned long)((100)*(20000000/4000.0)));
  4732  0B1C  3003               	movlw	3
  4733  0B1D  00F9               	movwf	??_lcd_init+2
  4734  0B1E  308A               	movlw	138
  4735  0B1F  00F8               	movwf	??_lcd_init+1
  4736  0B20  3056               	movlw	86
  4737  0B21  00F7               	movwf	??_lcd_init
  4738  0B22                     u3847:	
  4739  0B22  0BF7               	decfsz	??_lcd_init,f
  4740  0B23  2B22               	goto	u3847
  4741  0B24  0BF8               	decfsz	??_lcd_init+1,f
  4742  0B25  2B22               	goto	u3847
  4743  0B26  0BF9               	decfsz	??_lcd_init+2,f
  4744  0B27  2B22               	goto	u3847
  4745  0B28  2B29               	nop2
  4746                           
  4747                           ;lcd(16).c: 28: _delay((unsigned long)((100)*(20000000/4000.0)));
  4748  0B29  3003               	movlw	3
  4749  0B2A  00F9               	movwf	??_lcd_init+2
  4750  0B2B  308A               	movlw	138
  4751  0B2C  00F8               	movwf	??_lcd_init+1
  4752  0B2D  3056               	movlw	86
  4753  0B2E  00F7               	movwf	??_lcd_init
  4754  0B2F                     u3857:	
  4755  0B2F  0BF7               	decfsz	??_lcd_init,f
  4756  0B30  2B2F               	goto	u3857
  4757  0B31  0BF8               	decfsz	??_lcd_init+1,f
  4758  0B32  2B2F               	goto	u3857
  4759  0B33  0BF9               	decfsz	??_lcd_init+2,f
  4760  0B34  2B2F               	goto	u3857
  4761  0B35  2B36               	nop2
  4762  0B36                     l6648:	
  4763                           ;lcd(16).c: 30: while(lcd_busy());
  4764                           
  4765  0B36  2415  120A  158A   	fcall	_lcd_busy
  4766  0B39  3800               	iorlw	0
  4767  0B3A  1D03               	skipz
  4768  0B3B  2B36               	goto	l6648
  4769                           
  4770                           ;lcd(16).c: 31: lcd_put_byte(0,0b00101100 & 0b00111000);
  4771  0B3C  3028               	movlw	40
  4772  0B3D  00F2               	movwf	?_lcd_put_byte
  4773  0B3E  3000               	movlw	0
  4774  0B3F  2385  120A  158A   	fcall	_lcd_put_byte
  4775  0B42                     l6652:	
  4776                           ;lcd(16).c: 32: while(lcd_busy());
  4777                           
  4778  0B42  2415  120A  158A   	fcall	_lcd_busy
  4779  0B45  3800               	iorlw	0
  4780  0B46  1D03               	skipz
  4781  0B47  2B42               	goto	l6652
  4782                           
  4783                           ;lcd(16).c: 34: lcd_put_byte(0,0b00001011&0b00001101&0b00001110);
  4784  0B48  3008               	movlw	8
  4785  0B49  00F2               	movwf	?_lcd_put_byte
  4786  0B4A  3000               	movlw	0
  4787  0B4B  2385  120A  158A   	fcall	_lcd_put_byte
  4788  0B4E                     l6656:	
  4789                           ;lcd(16).c: 35: while(lcd_busy());
  4790                           
  4791  0B4E  2415  120A  158A   	fcall	_lcd_busy
  4792  0B51  3800               	iorlw	0
  4793  0B52  1D03               	skipz
  4794  0B53  2B4E               	goto	l6656
  4795                           
  4796                           ;lcd(16).c: 36: lcd_put_byte(0,0b00001111&0b00001101&0b00001110);
  4797  0B54  300C               	movlw	12
  4798  0B55  00F2               	movwf	?_lcd_put_byte
  4799  0B56  3000               	movlw	0
  4800  0B57  2385  120A  158A   	fcall	_lcd_put_byte
  4801  0B5A                     l6660:	
  4802                           ;lcd(16).c: 37: while(lcd_busy());
  4803                           
  4804  0B5A  2415  120A  158A   	fcall	_lcd_busy
  4805  0B5D  3800               	iorlw	0
  4806  0B5E  1D03               	skipz
  4807  0B5F  2B5A               	goto	l6660
  4808  0B60  3000               	movlw	0
  4809                           
  4810                           ;lcd(16).c: 39: lcd_put_byte(0,0x01);
  4811  0B61  01F2               	clrf	?_lcd_put_byte
  4812  0B62  0AF2               	incf	?_lcd_put_byte,f
  4813  0B63  2385  120A  158A   	fcall	_lcd_put_byte
  4814  0B66                     l6664:	
  4815                           ;lcd(16).c: 40: while(lcd_busy());
  4816                           
  4817  0B66  2415  120A  158A   	fcall	_lcd_busy
  4818  0B69  3800               	iorlw	0
  4819  0B6A  1D03               	skipz
  4820  0B6B  2B66               	goto	l6664
  4821                           
  4822                           ;lcd(16).c: 41: lcd_put_byte(0,0b00000100);
  4823  0B6C  3004               	movlw	4
  4824  0B6D  00F2               	movwf	?_lcd_put_byte
  4825  0B6E  3000               	movlw	0
  4826  0B6F  2385  120A  158A   	fcall	_lcd_put_byte
  4827  0B72                     l6668:	
  4828                           ;lcd(16).c: 42: while(lcd_busy());
  4829                           
  4830  0B72  2415  120A  158A   	fcall	_lcd_busy
  4831  0B75  3800               	iorlw	0
  4832  0B76  1D03               	skipz
  4833  0B77  2B72               	goto	l6668
  4834  0B78  3000               	movlw	0
  4835                           
  4836                           ;lcd(16).c: 43: lcd_put_byte(0,0x01);
  4837  0B79  01F2               	clrf	?_lcd_put_byte
  4838  0B7A  0AF2               	incf	?_lcd_put_byte,f
  4839  0B7B  2385  120A  158A   	fcall	_lcd_put_byte
  4840  0B7E                     l6672:	
  4841                           ;lcd(16).c: 44: while(lcd_busy());
  4842                           
  4843  0B7E  2415  120A  158A   	fcall	_lcd_busy
  4844  0B81  3800               	iorlw	0
  4845  0B82  1903               	btfsc	3,2
  4846  0B83  0008               	return
  4847  0B84  2B7E               	goto	l6672
  4848  0B85                     __end_of_lcd_init:	
  4849  0B85                     __ptext540:	
  4850 ;; =============== function _lcd_busy ends ============
  4851                           
  4852                           
  4853 ;; *************** function _lcd_put_byte *****************
  4854 ;; Defined at:
  4855 ;;		line 106 in file "C:\Users\DELL\Desktop\baitap_ttvxl\counter\lcd(16).c"
  4856 ;; Parameters:    Size  Location     Type
  4857 ;;  rs              1    wreg     unsigned char 
  4858 ;;  b               1    2[COMMON] unsigned char 
  4859 ;; Auto vars:     Size  Location     Type
  4860 ;;  rs              1    5[COMMON] unsigned char 
  4861 ;;  temp            1    6[COMMON] struct _BYTE_VAL
  4862 ;; Return value:  Size  Location     Type
  4863 ;;		None               void
  4864 ;; Registers used:
  4865 ;;		wreg, status,2, status,0
  4866 ;; Tracked objects:
  4867 ;;		On entry : 0/20
  4868 ;;		On exit  : 60/0
  4869 ;;		Unchanged: 0/0
  4870 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4871 ;;      Params:         1       0       0       0       0
  4872 ;;      Locals:         2       0       0       0       0
  4873 ;;      Temps:          2       0       0       0       0
  4874 ;;      Totals:         5       0       0       0       0
  4875 ;;Total ram usage:        5 bytes
  4876 ;; Hardware stack levels used:    1
  4877 ;; Hardware stack levels required when called:    1
  4878 ;; This function calls:
  4879 ;;		Nothing
  4880 ;; This function is called by:
  4881 ;;		_lcd_init
  4882 ;;		_lcd_putc
  4883 ;;		_lcd_gotoxy
  4884 ;; This function uses a non-reentrant model
  4885 ;;
  4886  0B85                     _lcd_put_byte:	
  4887                           
  4888                           ; Regs used in _lcd_put_byte: [wreg+status,2+status,0]
  4889                           ;lcd_put_byte@rs stored from wreg
  4890  0B85  00F5               	movwf	lcd_put_byte@rs
  4891                           
  4892                           ;lcd(16).c: 107: BYTE_VAL temp;
  4893                           ;lcd(16).c: 109: TRISD4 = 0;
  4894  0B86  1683               	bsf	3,5	;RP0=1, select bank1
  4895  0B87  1303               	bcf	3,6	;RP1=0, select bank1
  4896  0B88  1208               	bcf	8,4
  4897                           
  4898                           ;lcd(16).c: 110: TRISD5 = 0;
  4899  0B89  1288               	bcf	8,5
  4900                           
  4901                           ;lcd(16).c: 111: TRISD6 = 0;
  4902  0B8A  1308               	bcf	8,6
  4903                           
  4904                           ;lcd(16).c: 112: TRISD7 = 0;
  4905  0B8B  1388               	bcf	8,7
  4906                           
  4907                           ;lcd(16).c: 114: RD1 = 0;
  4908  0B8C  1283               	bcf	3,5	;RP0=0, select bank0
  4909  0B8D  1088               	bcf	8,1
  4910                           
  4911                           ;lcd(16).c: 115: if(rs) RD1 = 1;
  4912  0B8E  0875               	movf	lcd_put_byte@rs,w
  4913  0B8F  1D03               	skipz
  4914  0B90  1488               	bsf	8,1
  4915                           
  4916                           ;lcd(16).c: 117: _delay((unsigned long)((20)*(20000000/4000000.0)));
  4917  0B91  3021               	movlw	33
  4918  0B92  00F3               	movwf	??_lcd_put_byte
  4919  0B93                     u3907:	
  4920  0B93  0BF3               	decfsz	??_lcd_put_byte,f
  4921  0B94  2B93               	goto	u3907
  4922  0B95  2451               	call	PL32	;select bank 0
  4923                           
  4924                           ;lcd(16).c: 118: RD2 = 0;
  4925  0B96  3021               	movlw	33
  4926  0B97  1108               	bcf	8,2
  4927                           
  4928                           ;lcd(16).c: 119: _delay((unsigned long)((20)*(20000000/4000000.0)));
  4929  0B98  00F3               	movwf	??_lcd_put_byte
  4930  0B99                     u3917:	
  4931  0B99  0BF3               	decfsz	??_lcd_put_byte,f
  4932  0B9A  2B99               	goto	u3917
  4933  0B9B  2451               	call	PL32	;select bank 0
  4934                           
  4935                           ;lcd(16).c: 120: RD3 = 0;
  4936  0B9C  1188               	bcf	8,3
  4937                           
  4938                           ;lcd(16).c: 122: temp.Val = b;
  4939  0B9D  0872               	movf	lcd_put_byte@b,w
  4940  0B9E  00F6               	movwf	lcd_put_byte@temp
  4941                           
  4942                           ;lcd(16).c: 125: RD4 = temp.bits.b4;
  4943  0B9F  0E76               	swapf	lcd_put_byte@temp,w
  4944  0BA0  3901               	andlw	1
  4945  0BA1  00F3               	movwf	??_lcd_put_byte
  4946  0BA2  0C73               	rrf	??_lcd_put_byte,w
  4947  0BA3  1C03               	btfss	3,0
  4948  0BA4  2BA8               	goto	u2660
  4949  0BA5  2451               	call	PL32	;select bank 0
  4950  0BA6  1608               	bsf	8,4
  4951  0BA7  2BAA               	goto	l6400
  4952  0BA8                     u2660:	
  4953  0BA8  2451               	call	PL32	;select bank 0
  4954  0BA9  1208               	bcf	8,4
  4955  0BAA                     l6400:	
  4956                           
  4957                           ;lcd(16).c: 126: RD5 = temp.bits.b5;
  4958  0BAA  0E76               	swapf	lcd_put_byte@temp,w
  4959  0BAB  00F3               	movwf	??_lcd_put_byte
  4960  0BAC  0C73               	rrf	??_lcd_put_byte,w
  4961  0BAD  3901               	andlw	1
  4962  0BAE  00F4               	movwf	??_lcd_put_byte+1
  4963  0BAF  0C74               	rrf	??_lcd_put_byte+1,w
  4964  0BB0  1C03               	btfss	3,0
  4965  0BB1  2BB5               	goto	u2680
  4966  0BB2  2451               	call	PL32	;select bank 0
  4967  0BB3  1688               	bsf	8,5
  4968  0BB4  2BB7               	goto	l6402
  4969  0BB5                     u2680:	
  4970  0BB5  2451               	call	PL32	;select bank 0
  4971  0BB6  1288               	bcf	8,5
  4972  0BB7                     l6402:	
  4973                           
  4974                           ;lcd(16).c: 127: RD6 = temp.bits.b6;
  4975  0BB7  0E76               	swapf	lcd_put_byte@temp,w
  4976  0BB8  244A  120A  158A   	fcall	PL29	;call to abstracted procedure
  4977  0BBB  1C03               	btfss	3,0
  4978  0BBC  2BC0               	goto	u2700
  4979  0BBD  2451               	call	PL32	;select bank 0
  4980  0BBE  1708               	bsf	8,6
  4981  0BBF  2BC2               	goto	l6404
  4982  0BC0                     u2700:	
  4983  0BC0  2451               	call	PL32	;select bank 0
  4984  0BC1  1308               	bcf	8,6
  4985  0BC2                     l6404:	
  4986                           
  4987                           ;lcd(16).c: 128: RD7 = temp.bits.b7;
  4988  0BC2  0D76               	rlf	lcd_put_byte@temp,w
  4989  0BC3  0D76               	rlf	lcd_put_byte@temp,w
  4990  0BC4  3901               	andlw	1
  4991  0BC5  00F3               	movwf	??_lcd_put_byte
  4992  0BC6  0C73               	rrf	??_lcd_put_byte,w
  4993  0BC7  1C03               	btfss	3,0
  4994  0BC8  2BCC               	goto	u2720
  4995  0BC9  2451               	call	PL32	;select bank 0
  4996  0BCA  1788               	bsf	8,7
  4997  0BCB  2BCE               	goto	u2734
  4998  0BCC                     u2720:	
  4999  0BCC  2451               	call	PL32	;select bank 0
  5000  0BCD  1388               	bcf	8,7
  5001  0BCE                     u2734:	
  5002                           
  5003                           ;lcd(16).c: 129: _delay((unsigned long)((20)*(20000000/4000000.0)));
  5004  0BCE  3021               	movlw	33
  5005  0BCF  00F3               	movwf	??_lcd_put_byte
  5006  0BD0                     u3927:	
  5007  0BD0  0BF3               	decfsz	??_lcd_put_byte,f
  5008  0BD1  2BD0               	goto	u3927
  5009  0BD2  2451               	call	PL32	;select bank 0
  5010                           
  5011                           ;lcd(16).c: 130: RD3 = 1;
  5012  0BD3  3021               	movlw	33
  5013  0BD4  1588               	bsf	8,3
  5014                           
  5015                           ;lcd(16).c: 131: _delay((unsigned long)((20)*(20000000/4000000.0)));
  5016  0BD5  00F3               	movwf	??_lcd_put_byte
  5017  0BD6                     u3937:	
  5018  0BD6  0BF3               	decfsz	??_lcd_put_byte,f
  5019  0BD7  2BD6               	goto	u3937
  5020  0BD8  2451               	call	PL32	;select bank 0
  5021                           
  5022                           ;lcd(16).c: 132: RD3 = 0;
  5023  0BD9  1188               	bcf	8,3
  5024                           
  5025                           ;lcd(16).c: 134: RD4 = temp.bits.b0;
  5026  0BDA  0876               	movf	lcd_put_byte@temp,w
  5027  0BDB  3901               	andlw	1
  5028  0BDC  00F3               	movwf	??_lcd_put_byte
  5029  0BDD  0C73               	rrf	??_lcd_put_byte,w
  5030  0BDE  1C03               	btfss	3,0
  5031  0BDF  2BE3               	goto	u2740
  5032  0BE0  2451               	call	PL32	;select bank 0
  5033  0BE1  1608               	bsf	8,4
  5034  0BE2  2BE5               	goto	l6412
  5035  0BE3                     u2740:	
  5036  0BE3  2451               	call	PL32	;select bank 0
  5037  0BE4  1208               	bcf	8,4
  5038  0BE5                     l6412:	
  5039                           
  5040                           ;lcd(16).c: 135: RD5 = temp.bits.b1;
  5041  0BE5  0C76               	rrf	lcd_put_byte@temp,w
  5042  0BE6  3901               	andlw	1
  5043  0BE7  00F3               	movwf	??_lcd_put_byte
  5044  0BE8  0C73               	rrf	??_lcd_put_byte,w
  5045  0BE9  1C03               	btfss	3,0
  5046  0BEA  2BEE               	goto	u2760
  5047  0BEB  2451               	call	PL32	;select bank 0
  5048  0BEC  1688               	bsf	8,5
  5049  0BED  2BF0               	goto	l6414
  5050  0BEE                     u2760:	
  5051  0BEE  2451               	call	PL32	;select bank 0
  5052  0BEF  1288               	bcf	8,5
  5053  0BF0                     l6414:	
  5054                           
  5055                           ;lcd(16).c: 136: RD6 = temp.bits.b2;
  5056  0BF0  0C76               	rrf	lcd_put_byte@temp,w
  5057  0BF1  00F3               	movwf	??_lcd_put_byte
  5058  0BF2  0C73               	rrf	??_lcd_put_byte,w
  5059  0BF3  3901               	andlw	1
  5060  0BF4  00F4               	movwf	??_lcd_put_byte+1
  5061  0BF5  0C74               	rrf	??_lcd_put_byte+1,w
  5062  0BF6  1C03               	btfss	3,0
  5063  0BF7  2BFB               	goto	u2780
  5064  0BF8  2451               	call	PL32	;select bank 0
  5065  0BF9  1708               	bsf	8,6
  5066  0BFA  2BFD               	goto	l6416
  5067  0BFB                     u2780:	
  5068  0BFB  2451               	call	PL32	;select bank 0
  5069  0BFC  1308               	bcf	8,6
  5070  0BFD                     l6416:	
  5071                           
  5072                           ;lcd(16).c: 137: RD7 = temp.bits.b3;
  5073  0BFD  0C76               	rrf	lcd_put_byte@temp,w
  5074  0BFE  244A  120A  158A   	fcall	PL29	;call to abstracted procedure
  5075  0C01  1C03               	btfss	3,0
  5076  0C02  2C06               	goto	u2800
  5077  0C03  2451               	call	PL32	;select bank 0
  5078  0C04  1788               	bsf	8,7
  5079  0C05  2C08               	goto	u2814
  5080  0C06                     u2800:	
  5081  0C06  2451               	call	PL32	;select bank 0
  5082  0C07  1388               	bcf	8,7
  5083  0C08                     u2814:	
  5084                           
  5085                           ;lcd(16).c: 138: _delay((unsigned long)((20)*(20000000/4000000.0)));
  5086  0C08  3021               	movlw	33
  5087  0C09  00F3               	movwf	??_lcd_put_byte
  5088  0C0A                     u3947:	
  5089  0C0A  0BF3               	decfsz	??_lcd_put_byte,f
  5090  0C0B  2C0A               	goto	u3947
  5091  0C0C  2451               	call	PL32	;select bank 0
  5092                           
  5093                           ;lcd(16).c: 139: RD3 = 1;
  5094  0C0D  3021               	movlw	33
  5095  0C0E  1588               	bsf	8,3
  5096                           
  5097                           ;lcd(16).c: 140: _delay((unsigned long)((20)*(20000000/4000000.0)));
  5098  0C0F  00F3               	movwf	??_lcd_put_byte
  5099  0C10                     u3957:	
  5100  0C10  0BF3               	decfsz	??_lcd_put_byte,f
  5101  0C11  2C10               	goto	u3957
  5102  0C12  2451               	call	PL32	;select bank 0
  5103                           
  5104                           ;lcd(16).c: 141: RD3 = 0;
  5105  0C13  1188               	bcf	8,3
  5106  0C14  0008               	return
  5107  0C15                     __end_of_lcd_put_byte:	
  5108  0C15                     __ptext539:	
  5109 ;; =============== function ___ftadd ends ============
  5110                           
  5111                           
  5112 ;; *************** function _lcd_busy *****************
  5113 ;; Defined at:
  5114 ;;		line 47 in file "C:\Users\DELL\Desktop\baitap_ttvxl\counter\lcd(16).c"
  5115 ;; Parameters:    Size  Location     Type
  5116 ;;		None
  5117 ;; Auto vars:     Size  Location     Type
  5118 ;;  busy            1    3[COMMON] unsigned char 
  5119 ;; Return value:  Size  Location     Type
  5120 ;;                  1    wreg      unsigned char 
  5121 ;; Registers used:
  5122 ;;		wreg
  5123 ;; Tracked objects:
  5124 ;;		On entry : 0/0
  5125 ;;		On exit  : 60/0
  5126 ;;		Unchanged: 0/0
  5127 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5128 ;;      Params:         0       0       0       0       0
  5129 ;;      Locals:         1       0       0       0       0
  5130 ;;      Temps:          1       0       0       0       0
  5131 ;;      Totals:         2       0       0       0       0
  5132 ;;Total ram usage:        2 bytes
  5133 ;; Hardware stack levels used:    1
  5134 ;; Hardware stack levels required when called:    1
  5135 ;; This function calls:
  5136 ;;		Nothing
  5137 ;; This function is called by:
  5138 ;;		_lcd_init
  5139 ;;		_lcd_putc
  5140 ;;		_lcd_gotoxy
  5141 ;; This function uses a non-reentrant model
  5142 ;;
  5143  0C15                     _lcd_busy:	
  5144                           
  5145                           ;lcd(16).c: 48: unsigned char busy;
  5146                           ;lcd(16).c: 50: TRISD4 = 1;
  5147                           
  5148                           ; Regs used in _lcd_busy: [wreg]
  5149  0C15  1683               	bsf	3,5	;RP0=1, select bank1
  5150  0C16  1303               	bcf	3,6	;RP1=0, select bank1
  5151  0C17  1608               	bsf	8,4
  5152                           
  5153                           ;lcd(16).c: 51: TRISD5 = 1;
  5154  0C18  1688               	bsf	8,5
  5155                           
  5156                           ;lcd(16).c: 52: TRISD6 = 1;
  5157  0C19  1708               	bsf	8,6
  5158                           
  5159                           ;lcd(16).c: 53: TRISD7 = 1;
  5160  0C1A  1788               	bsf	8,7
  5161                           
  5162                           ;lcd(16).c: 55: RD2 = 1;
  5163  0C1B  1283               	bcf	3,5	;RP0=0, select bank0
  5164  0C1C  3021               	movlw	33
  5165  0C1D  1508               	bsf	8,2
  5166                           
  5167                           ;lcd(16).c: 56: RD1 = 0;
  5168  0C1E  1088               	bcf	8,1
  5169                           
  5170                           ;lcd(16).c: 57: _delay((unsigned long)((20)*(20000000/4000000.0)));
  5171  0C1F  00F2               	movwf	??_lcd_busy
  5172  0C20                     u3867:	
  5173  0C20  0BF2               	decfsz	??_lcd_busy,f
  5174  0C21  2C20               	goto	u3867
  5175  0C22  2451               	call	PL32	;select bank 0
  5176                           
  5177                           ;lcd(16).c: 58: RD3 = 1;
  5178  0C23  3021               	movlw	33
  5179  0C24  1588               	bsf	8,3
  5180                           
  5181                           ;lcd(16).c: 59: _delay((unsigned long)((20)*(20000000/4000000.0)));
  5182  0C25  00F2               	movwf	??_lcd_busy
  5183  0C26                     u3877:	
  5184  0C26  0BF2               	decfsz	??_lcd_busy,f
  5185  0C27  2C26               	goto	u3877
  5186                           
  5187                           ;lcd(16).c: 61: busy = RD7;
  5188  0C28  3000               	movlw	0
  5189  0C29  2451               	call	PL32	;select bank 0
  5190  0C2A  1B88               	btfsc	8,7
  5191  0C2B  3001               	movlw	1
  5192  0C2C  00F3               	movwf	lcd_busy@busy
  5193  0C2D  3021               	movlw	33
  5194                           
  5195                           ;lcd(16).c: 63: RD3 = 0;
  5196  0C2E  1188               	bcf	8,3
  5197                           
  5198                           ;lcd(16).c: 64: _delay((unsigned long)((20)*(20000000/4000000.0)));
  5199  0C2F  00F2               	movwf	??_lcd_busy
  5200  0C30                     u3887:	
  5201  0C30  0BF2               	decfsz	??_lcd_busy,f
  5202  0C31  2C30               	goto	u3887
  5203  0C32  2451               	call	PL32	;select bank 0
  5204                           
  5205                           ;lcd(16).c: 65: RD3 = 1;
  5206  0C33  3021               	movlw	33
  5207  0C34  1588               	bsf	8,3
  5208                           
  5209                           ;lcd(16).c: 66: _delay((unsigned long)((20)*(20000000/4000000.0)));
  5210  0C35  00F2               	movwf	??_lcd_busy
  5211  0C36                     u3897:	
  5212  0C36  0BF2               	decfsz	??_lcd_busy,f
  5213  0C37  2C36               	goto	u3897
  5214  0C38  2451               	call	PL32	;select bank 0
  5215                           
  5216                           ;lcd(16).c: 67: RD3 = 0;
  5217  0C39  1188               	bcf	8,3
  5218                           
  5219                           ;lcd(16).c: 70: return busy;
  5220  0C3A  0873               	movf	lcd_busy@busy,w
  5221  0C3B  0008               	return
  5222  0C3C                     __end_of_lcd_busy:	
  5223  0C3C                     __ptext556:	
  5224 ;; =============== function _isdigit ends ============
  5225                           
  5226                           
  5227 ;; *************** function _isprint *****************
  5228 ;; Defined at:
  5229 ;;		line 13 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\isprint.c"
  5230 ;; Parameters:    Size  Location     Type
  5231 ;;  c               1    wreg     unsigned char 
  5232 ;; Auto vars:     Size  Location     Type
  5233 ;;  c               1    3[COMMON] unsigned char 
  5234 ;; Return value:  Size  Location     Type
  5235 ;;		None               void
  5236 ;; Registers used:
  5237 ;;		wreg, status,2, status,0
  5238 ;; Tracked objects:
  5239 ;;		On entry : 0/20
  5240 ;;		On exit  : 0/20
  5241 ;;		Unchanged: FFFFF/0
  5242 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5243 ;;      Params:         0       0       0       0       0
  5244 ;;      Locals:         2       0       0       0       0
  5245 ;;      Temps:          0       0       0       0       0
  5246 ;;      Totals:         2       0       0       0       0
  5247 ;;Total ram usage:        2 bytes
  5248 ;; Hardware stack levels used:    1
  5249 ;; Hardware stack levels required when called:    1
  5250 ;; This function calls:
  5251 ;;		Nothing
  5252 ;; This function is called by:
  5253 ;;		_lcd_putc
  5254 ;; This function uses a non-reentrant model
  5255 ;;
  5256  0C3C                     _isprint:	
  5257                           
  5258                           ; Regs used in _isprint: [wreg+status,2+status,0]
  5259                           ;isprint@c stored from wreg
  5260  0C3C  00F3               	movwf	isprint@c
  5261  0C3D  307F               	movlw	127
  5262  0C3E  01F2               	clrf	_isprint$3673
  5263  0C3F  0273               	subwf	isprint@c,w
  5264  0C40  1803               	skipnc
  5265  0C41  2C48               	goto	l5982
  5266  0C42  3020               	movlw	32
  5267  0C43  0273               	subwf	isprint@c,w
  5268  0C44  1C03               	skipc
  5269  0C45  2C48               	goto	l5982
  5270  0C46  01F2               	clrf	_isprint$3673
  5271  0C47  0AF2               	incf	_isprint$3673,f
  5272  0C48                     l5982:	
  5273  0C48  0C72               	rrf	_isprint$3673,w
  5274  0C49  0008               	return
  5275  0C4A                     __end_of_isprint:	
  5276  0C4A                     PL29:	
  5277  0C4A  00F3               	movwf	??_lcd_put_byte
  5278  0C4B  0CF3               	rrf	??_lcd_put_byte,f
  5279  0C4C  0C73               	rrf	??_lcd_put_byte,w
  5280  0C4D  3901               	andlw	1
  5281  0C4E  00F4               	movwf	??_lcd_put_byte+1
  5282  0C4F  0C74               	rrf	??_lcd_put_byte+1,w
  5283  0C50  0008               	return
  5284  0C51                     PL32:	
  5285  0C51  1283               	bcf	3,5	;RP0=0, select bank0
  5286  0C52  1303               	bcf	3,6	;RP1=0, select bank0
  5287  0C53  0008               	return
  5288                           
  5289                           	psect	text535
  5290  0C54                     __ptext535:	
  5291 ;; =============== function ___lltoft ends ============
  5292                           
  5293                           
  5294 ;; *************** function ___awtoft *****************
  5295 ;; Defined at:
  5296 ;;		line 33 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\awtoft.c"
  5297 ;; Parameters:    Size  Location     Type
  5298 ;;  c               2    0[BANK0 ] int 
  5299 ;; Auto vars:     Size  Location     Type
  5300 ;;  sign            1   10[COMMON] unsigned char 
  5301 ;; Return value:  Size  Location     Type
  5302 ;;                  3    0[BANK0 ] float 
  5303 ;; Registers used:
  5304 ;;		wreg, status,2, status,0, pclath, cstack
  5305 ;; Tracked objects:
  5306 ;;		On entry : 60/0
  5307 ;;		On exit  : 60/0
  5308 ;;		Unchanged: FFF9F/0
  5309 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5310 ;;      Params:         0       3       0       0       0
  5311 ;;      Locals:         1       0       0       0       0
  5312 ;;      Temps:          0       0       0       0       0
  5313 ;;      Totals:         1       3       0       0       0
  5314 ;;Total ram usage:        4 bytes
  5315 ;; Hardware stack levels used:    1
  5316 ;; Hardware stack levels required when called:    2
  5317 ;; This function calls:
  5318 ;;		___ftpack
  5319 ;; This function is called by:
  5320 ;;		_main
  5321 ;; This function uses a non-reentrant model
  5322 ;;
  5323  0C54                     ___awtoft:	
  5324                           
  5325                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
  5326  0C54  01FA               	clrf	___awtoft@sign
  5327  0C55  1FA1               	btfss	___awtoft@c+1,7
  5328  0C56  2C5E               	goto	l6622
  5329  0C57  09A0               	comf	___awtoft@c,f
  5330  0C58  09A1               	comf	___awtoft@c+1,f
  5331  0C59  0AA0               	incf	___awtoft@c,f
  5332  0C5A  1903               	skipnz
  5333  0C5B  0AA1               	incf	___awtoft@c+1,f
  5334  0C5C  01FA               	clrf	___awtoft@sign
  5335  0C5D  0AFA               	incf	___awtoft@sign,f
  5336  0C5E                     l6622:	
  5337  0C5E  0820               	movf	___awtoft@c,w
  5338  0C5F  00F2               	movwf	?___ftpack
  5339  0C60  0821               	movf	___awtoft@c+1,w
  5340  0C61  00F3               	movwf	?___ftpack+1
  5341  0C62  308E               	movlw	142
  5342  0C63  01F4               	clrf	?___ftpack+2
  5343  0C64  00F5               	movwf	?___ftpack+3
  5344  0C65  087A               	movf	___awtoft@sign,w
  5345  0C66  00F6               	movwf	?___ftpack+4
  5346  0C67  2769               	fcall	___ftpack
  5347  0C68  0872               	movf	?___ftpack,w
  5348  0C69  00A0               	movwf	?___awtoft
  5349  0C6A  0873               	movf	?___ftpack+1,w
  5350  0C6B  00A1               	movwf	?___awtoft+1
  5351  0C6C  0874               	movf	?___ftpack+2,w
  5352  0C6D  00A2               	movwf	?___awtoft+2
  5353  0C6E  0008               	return
  5354  0C6F                     __end_of___awtoft:	
  5355  0C6F                     __ptext537:	
  5356 ;; =============== function ___ftmul ends ============
  5357                           
  5358                           
  5359 ;; *************** function ___ftdiv *****************
  5360 ;; Defined at:
  5361 ;;		line 50 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\ftdiv.c"
  5362 ;; Parameters:    Size  Location     Type
  5363 ;;  f2              3    3[BANK0 ] float 
  5364 ;;  f1              3    6[BANK0 ] float 
  5365 ;; Auto vars:     Size  Location     Type
  5366 ;;  f3              3   13[BANK0 ] float 
  5367 ;;  sign            1   17[BANK0 ] unsigned char 
  5368 ;;  exp             1   16[BANK0 ] unsigned char 
  5369 ;;  cntr            1   12[BANK0 ] unsigned char 
  5370 ;; Return value:  Size  Location     Type
  5371 ;;                  3    3[BANK0 ] float 
  5372 ;; Registers used:
  5373 ;;		wreg, status,2, status,0, pclath, cstack
  5374 ;; Tracked objects:
  5375 ;;		On entry : 60/0
  5376 ;;		On exit  : 60/0
  5377 ;;		Unchanged: FFF9F/0
  5378 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5379 ;;      Params:         0       6       0       0       0
  5380 ;;      Locals:         0       6       0       0       0
  5381 ;;      Temps:          0       3       0       0       0
  5382 ;;      Totals:         0      15       0       0       0
  5383 ;;Total ram usage:       15 bytes
  5384 ;; Hardware stack levels used:    1
  5385 ;; Hardware stack levels required when called:    2
  5386 ;; This function calls:
  5387 ;;		___ftpack
  5388 ;; This function is called by:
  5389 ;;		_main
  5390 ;; This function uses a non-reentrant model
  5391 ;;
  5392  0C6F                     ___ftdiv:	
  5393                           
  5394                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  5395  0C6F  0826               	movf	___ftdiv@f1,w
  5396  0C70  00A9               	movwf	??___ftdiv
  5397  0C71  0827               	movf	___ftdiv@f1+1,w
  5398  0C72  00AA               	movwf	??___ftdiv+1
  5399  0C73  0828               	movf	___ftdiv@f1+2,w
  5400  0C74  00AB               	movwf	??___ftdiv+2
  5401  0C75  1003               	clrc
  5402  0C76  0D2A               	rlf	??___ftdiv+1,w
  5403  0C77  0D2B               	rlf	??___ftdiv+2,w
  5404  0C78  00B0               	movwf	___ftdiv@exp
  5405  0C79  08B0               	movf	___ftdiv@exp,f
  5406  0C7A  1D03               	skipz
  5407  0C7B  2C80               	goto	l6520
  5408  0C7C  01A3               	clrf	?___ftdiv
  5409  0C7D  01A4               	clrf	?___ftdiv+1
  5410  0C7E  01A5               	clrf	?___ftdiv+2
  5411  0C7F  0008               	return
  5412  0C80                     l6520:	
  5413  0C80  0823               	movf	___ftdiv@f2,w
  5414  0C81  00A9               	movwf	??___ftdiv
  5415  0C82  0824               	movf	___ftdiv@f2+1,w
  5416  0C83  00AA               	movwf	??___ftdiv+1
  5417  0C84  0825               	movf	___ftdiv@f2+2,w
  5418  0C85  00AB               	movwf	??___ftdiv+2
  5419  0C86  1003               	clrc
  5420  0C87  0D2A               	rlf	??___ftdiv+1,w
  5421  0C88  0D2B               	rlf	??___ftdiv+2,w
  5422  0C89  00B1               	movwf	___ftdiv@sign
  5423  0C8A  08B1               	movf	___ftdiv@sign,f
  5424  0C8B  1D03               	skipz
  5425  0C8C  2C91               	goto	l3352
  5426  0C8D  01A3               	clrf	?___ftdiv
  5427  0C8E  01A4               	clrf	?___ftdiv+1
  5428  0C8F  01A5               	clrf	?___ftdiv+2
  5429  0C90  0008               	return
  5430  0C91                     l3352:	
  5431  0C91  3089               	movlw	137
  5432  0C92  01AD               	clrf	___ftdiv@f3
  5433  0C93  01AE               	clrf	___ftdiv@f3+1
  5434  0C94  01AF               	clrf	___ftdiv@f3+2
  5435  0C95  0731               	addwf	___ftdiv@sign,w
  5436  0C96  00A9               	movwf	??___ftdiv
  5437  0C97  02B0               	subwf	___ftdiv@exp,f
  5438  0C98  0828               	movf	___ftdiv@f1+2,w
  5439  0C99  00B1               	movwf	___ftdiv@sign
  5440  0C9A  0825               	movf	___ftdiv@f2+2,w
  5441  0C9B  06B1               	xorwf	___ftdiv@sign,f
  5442  0C9C  3080               	movlw	128
  5443  0C9D  05B1               	andwf	___ftdiv@sign,f
  5444  0C9E  3018               	movlw	24
  5445  0C9F  17A7               	bsf	___ftdiv@f1+1,7
  5446  0CA0  01A8               	clrf	___ftdiv@f1+2
  5447  0CA1  17A4               	bsf	___ftdiv@f2+1,7
  5448  0CA2  01A5               	clrf	___ftdiv@f2+2
  5449  0CA3  00AC               	movwf	___ftdiv@cntr
  5450  0CA4                     l6544:	
  5451  0CA4  1003               	clrc
  5452  0CA5  0DAD               	rlf	___ftdiv@f3,f
  5453  0CA6  0DAE               	rlf	___ftdiv@f3+1,f
  5454  0CA7  0DAF               	rlf	___ftdiv@f3+2,f
  5455  0CA8  0825               	movf	___ftdiv@f2+2,w
  5456  0CA9  0228               	subwf	___ftdiv@f1+2,w
  5457  0CAA  1D03               	skipz
  5458  0CAB  2CB2               	goto	u3045
  5459  0CAC  0824               	movf	___ftdiv@f2+1,w
  5460  0CAD  0227               	subwf	___ftdiv@f1+1,w
  5461  0CAE  1D03               	skipz
  5462  0CAF  2CB2               	goto	u3045
  5463  0CB0  0823               	movf	___ftdiv@f2,w
  5464  0CB1  0226               	subwf	___ftdiv@f1,w
  5465  0CB2                     u3045:	
  5466  0CB2  1C03               	skipc
  5467  0CB3  2CC0               	goto	L6
  5468  0CB4  0823               	movf	___ftdiv@f2,w
  5469  0CB5  02A6               	subwf	___ftdiv@f1,f
  5470  0CB6  0824               	movf	___ftdiv@f2+1,w
  5471  0CB7  1C03               	skipc
  5472  0CB8  0F24               	incfsz	___ftdiv@f2+1,w
  5473  0CB9  02A7               	subwf	___ftdiv@f1+1,f
  5474  0CBA  0825               	movf	___ftdiv@f2+2,w
  5475  0CBB  1C03               	skipc
  5476  0CBC  0A25               	incf	___ftdiv@f2+2,w
  5477  0CBD  02A8               	subwf	___ftdiv@f1+2,f
  5478  0CBE  142D               	bsf	___ftdiv@f3,0
  5479  0CBF  1003               	clrc
  5480  0CC0                     L6:	
  5481  0CC0  0DA6               	rlf	___ftdiv@f1,f
  5482  0CC1  0DA7               	rlf	___ftdiv@f1+1,f
  5483  0CC2  0DA8               	rlf	___ftdiv@f1+2,f
  5484  0CC3  0BAC               	decfsz	___ftdiv@cntr,f
  5485  0CC4  2CA4               	goto	l6544
  5486  0CC5  082D               	movf	___ftdiv@f3,w
  5487  0CC6  00F2               	movwf	?___ftpack
  5488  0CC7  082E               	movf	___ftdiv@f3+1,w
  5489  0CC8  00F3               	movwf	?___ftpack+1
  5490  0CC9  082F               	movf	___ftdiv@f3+2,w
  5491  0CCA  00F4               	movwf	?___ftpack+2
  5492  0CCB  0830               	movf	___ftdiv@exp,w
  5493  0CCC  00F5               	movwf	?___ftpack+3
  5494  0CCD  0831               	movf	___ftdiv@sign,w
  5495  0CCE  00F6               	movwf	?___ftpack+4
  5496  0CCF  2769               	fcall	___ftpack
  5497  0CD0  0872               	movf	?___ftpack,w
  5498  0CD1  00A3               	movwf	?___ftdiv
  5499  0CD2  0873               	movf	?___ftpack+1,w
  5500  0CD3  00A4               	movwf	?___ftdiv+1
  5501  0CD4  0874               	movf	?___ftpack+2,w
  5502  0CD5  00A5               	movwf	?___ftdiv+2
  5503  0CD6  0008               	return
  5504  0CD7                     __end_of___ftdiv:	
  5505  0CD7                     __ptext530:	
  5506 ;; =============== function ___ftsub ends ============
  5507                           
  5508                           
  5509 ;; *************** function _scale *****************
  5510 ;; Defined at:
  5511 ;;		line 422 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\lib\doprnt.c"
  5512 ;; Parameters:    Size  Location     Type
  5513 ;;  scl             1    wreg     char 
  5514 ;; Auto vars:     Size  Location     Type
  5515 ;;  scl             1   43[BANK0 ] char 
  5516 ;; Return value:  Size  Location     Type
  5517 ;;                  3   33[BANK0 ] char 
  5518 ;; Registers used:
  5519 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5520 ;; Tracked objects:
  5521 ;;		On entry : 60/20
  5522 ;;		On exit  : 60/0
  5523 ;;		Unchanged: FFF9F/0
  5524 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5525 ;;      Params:         0       3       0       0       0
  5526 ;;      Locals:         0       4       0       0       0
  5527 ;;      Temps:          0       4       0       0       0
  5528 ;;      Totals:         0      11       0       0       0
  5529 ;;Total ram usage:       11 bytes
  5530 ;; Hardware stack levels used:    1
  5531 ;; Hardware stack levels required when called:    3
  5532 ;; This function calls:
  5533 ;;		___awmod
  5534 ;;		___awdiv
  5535 ;;		___ftmul
  5536 ;;		___bmul
  5537 ;; This function is called by:
  5538 ;;		_printf
  5539 ;; This function uses a non-reentrant model
  5540 ;;
  5541  0CD7                     _scale:	
  5542                           
  5543                           ; Regs used in _scale: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5544                           ;scale@scl stored from wreg
  5545  0CD7  1283               	bcf	3,5	;RP0=0, select bank0
  5546  0CD8  00CB               	movwf	scale@scl
  5547  0CD9  1FCB               	btfss	scale@scl,7
  5548  0CDA  2DA3               	goto	l6730
  5549  0CDB  09CB               	comf	scale@scl,f
  5550  0CDC  0ACB               	incf	scale@scl,f
  5551  0CDD  084B               	movf	scale@scl,w
  5552  0CDE  3A80               	xorlw	128
  5553  0CDF  3E12               	addlw	-238
  5554  0CE0  1C03               	skipc
  5555  0CE1  2D47               	goto	l6720
  5556  0CE2  300A               	movlw	10
  5557  0CE3  27CB  120A  158A   	fcall	PL14	;call to abstracted procedure
  5558  0CE6  26AF  120A  158A   	fcall	___awmod
  5559  0CE9  0873               	movf	?___awmod+1,w
  5560  0CEA  00FB               	movwf	?___awdiv+3
  5561  0CEB  0872               	movf	?___awmod,w
  5562  0CEC  00FA               	movwf	?___awdiv+2
  5563  0CED  2669  120A  158A   	fcall	___awdiv
  5564  0CF0  27E0               	fcall	PL22	;call to abstracted procedure
  5565  0CF1  3E1C               	addlw	low ((__npowers_-__stringbase+27))
  5566  0CF2  0084               	movwf	4
  5567  0CF3  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5568  0CF8  00B2               	movwf	?___ftmul
  5569  0CF9  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5570  0CFE  00B3               	movwf	?___ftmul+1
  5571  0CFF  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5572  0D04  27E8  120A  158A   	fcall	PL23	;call to abstracted procedure
  5573  0D07  1BFA               	btfsc	?___awdiv+2,7
  5574  0D08  03FB               	decf	?___awdiv+3,f
  5575  0D09  2669  120A  158A   	fcall	___awdiv
  5576  0D0C  27AF               	fcall	PL8	;call to abstracted procedure
  5577  0D0D  3E37               	addlw	low ((__npowers_-__stringbase+54))
  5578  0D0E  0084               	movwf	4
  5579  0D0F  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5580  0D14  00B5               	movwf	?___ftmul+3
  5581  0D15  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5582  0D1A  00B6               	movwf	?___ftmul+4
  5583  0D1B  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5584  0D20  00B7               	movwf	?___ftmul+5
  5585  0D21  26EC  120A  158A   	fcall	___ftmul
  5586  0D24  27B7  120A  158A   	fcall	PL9	;call to abstracted procedure
  5587  0D27  1BF4               	btfsc	?___awmod+2,7
  5588  0D28  03F5               	decf	?___awmod+3,f
  5589  0D29  26AF  120A  158A   	fcall	___awmod
  5590  0D2C  27A7               	fcall	PL7	;call to abstracted procedure
  5591  0D2D  3E01               	addlw	low (__npowers_-__stringbase)
  5592  0D2E  0084               	movwf	4
  5593  0D2F  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5594  0D34  00B2               	movwf	?___ftmul
  5595  0D35  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5596  0D3A  00B3               	movwf	?___ftmul+1
  5597  0D3B  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5598  0D40  27F0  120A  158A   	fcall	PL25	;call to abstracted procedure
  5599  0D43  26EC  120A  158A   	fcall	___ftmul
  5600  0D46  2FC4               	ljmp	PL10	;call to abstracted procedure
  5601  0D47                     l6720:	
  5602  0D47  084B               	movf	scale@scl,w
  5603  0D48  3A80               	xorlw	128
  5604  0D49  3E75               	addlw	-139
  5605  0D4A  1C03               	skipc
  5606  0D4B  2D8C               	goto	l6726
  5607  0D4C  300A               	movlw	10
  5608  0D4D  00F2               	movwf	?___awmod
  5609  0D4E  01F3               	clrf	?___awmod+1
  5610  0D4F  084B               	movf	scale@scl,w
  5611  0D50  00F4               	movwf	?___awmod+2
  5612  0D51  01F5               	clrf	?___awmod+3
  5613  0D52  1BF4               	btfsc	?___awmod+2,7
  5614  0D53  03F5               	decf	?___awmod+3,f
  5615  0D54  26AF  120A  158A   	fcall	___awmod
  5616  0D57  27A7               	fcall	PL7	;call to abstracted procedure
  5617  0D58  3E01               	addlw	low (__npowers_-__stringbase)
  5618  0D59  0084               	movwf	4
  5619  0D5A  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5620  0D5F  00B2               	movwf	?___ftmul
  5621  0D60  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5622  0D65  00B3               	movwf	?___ftmul+1
  5623  0D66  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5624  0D6B  27F8  120A  158A   	fcall	PL26	;call to abstracted procedure
  5625  0D6E  1BFA               	btfsc	?___awdiv+2,7
  5626  0D6F  03FB               	decf	?___awdiv+3,f
  5627  0D70  2669  120A  158A   	fcall	___awdiv
  5628  0D73  27AF               	fcall	PL8	;call to abstracted procedure
  5629  0D74  3E1C               	addlw	low ((__npowers_-__stringbase+27))
  5630  0D75  0084               	movwf	4
  5631  0D76  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5632  0D7B  00B5               	movwf	?___ftmul+3
  5633  0D7C  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5634  0D81  00B6               	movwf	?___ftmul+4
  5635  0D82  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5636  0D87  00B7               	movwf	?___ftmul+5
  5637  0D88  26EC  120A  158A   	fcall	___ftmul
  5638  0D8B  2FC4               	ljmp	PL10	;call to abstracted procedure
  5639  0D8C                     l6726:	
  5640  0D8C  3003               	movlw	3
  5641  0D8D  00FB               	movwf	?___bmul
  5642  0D8E  084B               	movf	scale@scl,w
  5643  0D8F  275B               	fcall	___bmul
  5644  0D90  3E01               	addlw	low (__npowers_-__stringbase)
  5645  0D91  0084               	movwf	4
  5646  0D92  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5647  0D97  00C1               	movwf	?_scale
  5648  0D98  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5649  0D9D  00C2               	movwf	?_scale+1
  5650  0D9E  160A  118A  2000   	fcall	stringdir
  5651  0DA1  00C3               	movwf	?_scale+2
  5652  0DA2  0008               	return
  5653  0DA3                     l6730:	
  5654  0DA3  084B               	movf	scale@scl,w
  5655  0DA4  3A80               	xorlw	128
  5656  0DA5  3E12               	addlw	-238
  5657  0DA6  1C03               	skipc
  5658  0DA7  2E0D               	goto	l6738
  5659  0DA8  300A               	movlw	10
  5660  0DA9  27CB  120A  158A   	fcall	PL14	;call to abstracted procedure
  5661  0DAC  26AF  120A  158A   	fcall	___awmod
  5662  0DAF  0873               	movf	?___awmod+1,w
  5663  0DB0  00FB               	movwf	?___awdiv+3
  5664  0DB1  0872               	movf	?___awmod,w
  5665  0DB2  00FA               	movwf	?___awdiv+2
  5666  0DB3  2669  120A  158A   	fcall	___awdiv
  5667  0DB6  27E0               	fcall	PL22	;call to abstracted procedure
  5668  0DB7  3E43               	addlw	low ((__powers_-__stringbase+27))
  5669  0DB8  0084               	movwf	4
  5670  0DB9  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5671  0DBE  00B2               	movwf	?___ftmul
  5672  0DBF  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5673  0DC4  00B3               	movwf	?___ftmul+1
  5674  0DC5  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5675  0DCA  27E8  120A  158A   	fcall	PL23	;call to abstracted procedure
  5676  0DCD  1BFA               	btfsc	?___awdiv+2,7
  5677  0DCE  03FB               	decf	?___awdiv+3,f
  5678  0DCF  2669  120A  158A   	fcall	___awdiv
  5679  0DD2  27AF               	fcall	PL8	;call to abstracted procedure
  5680  0DD3  3E5E               	addlw	low ((__powers_-__stringbase+54))
  5681  0DD4  0084               	movwf	4
  5682  0DD5  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5683  0DDA  00B5               	movwf	?___ftmul+3
  5684  0DDB  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5685  0DE0  00B6               	movwf	?___ftmul+4
  5686  0DE1  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5687  0DE6  00B7               	movwf	?___ftmul+5
  5688  0DE7  26EC  120A  158A   	fcall	___ftmul
  5689  0DEA  27B7  120A  158A   	fcall	PL9	;call to abstracted procedure
  5690  0DED  1BF4               	btfsc	?___awmod+2,7
  5691  0DEE  03F5               	decf	?___awmod+3,f
  5692  0DEF  26AF  120A  158A   	fcall	___awmod
  5693  0DF2  27A7               	fcall	PL7	;call to abstracted procedure
  5694  0DF3  3E28               	addlw	low (__powers_-__stringbase)
  5695  0DF4  0084               	movwf	4
  5696  0DF5  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5697  0DFA  00B2               	movwf	?___ftmul
  5698  0DFB  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5699  0E00  00B3               	movwf	?___ftmul+1
  5700  0E01  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5701  0E06  27F0  120A  158A   	fcall	PL25	;call to abstracted procedure
  5702  0E09  26EC  120A  158A   	fcall	___ftmul
  5703  0E0C  2FC4               	ljmp	PL10	;call to abstracted procedure
  5704  0E0D                     l6738:	
  5705  0E0D  084B               	movf	scale@scl,w
  5706  0E0E  3A80               	xorlw	128
  5707  0E0F  3E75               	addlw	-139
  5708  0E10  1C03               	skipc
  5709  0E11  2E52               	goto	l6744
  5710  0E12  300A               	movlw	10
  5711  0E13  00F2               	movwf	?___awmod
  5712  0E14  01F3               	clrf	?___awmod+1
  5713  0E15  084B               	movf	scale@scl,w
  5714  0E16  00F4               	movwf	?___awmod+2
  5715  0E17  01F5               	clrf	?___awmod+3
  5716  0E18  1BF4               	btfsc	?___awmod+2,7
  5717  0E19  03F5               	decf	?___awmod+3,f
  5718  0E1A  26AF  120A  158A   	fcall	___awmod
  5719  0E1D  27A7               	fcall	PL7	;call to abstracted procedure
  5720  0E1E  3E28               	addlw	low (__powers_-__stringbase)
  5721  0E1F  0084               	movwf	4
  5722  0E20  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5723  0E25  00B2               	movwf	?___ftmul
  5724  0E26  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5725  0E2B  00B3               	movwf	?___ftmul+1
  5726  0E2C  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5727  0E31  27F8  120A  158A   	fcall	PL26	;call to abstracted procedure
  5728  0E34  1BFA               	btfsc	?___awdiv+2,7
  5729  0E35  03FB               	decf	?___awdiv+3,f
  5730  0E36  2669  120A  158A   	fcall	___awdiv
  5731  0E39  27AF               	fcall	PL8	;call to abstracted procedure
  5732  0E3A  3E43               	addlw	low ((__powers_-__stringbase+27))
  5733  0E3B  0084               	movwf	4
  5734  0E3C  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5735  0E41  00B5               	movwf	?___ftmul+3
  5736  0E42  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5737  0E47  00B6               	movwf	?___ftmul+4
  5738  0E48  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5739  0E4D  00B7               	movwf	?___ftmul+5
  5740  0E4E  26EC  120A  158A   	fcall	___ftmul
  5741  0E51  2FC4               	ljmp	PL10	;call to abstracted procedure
  5742  0E52                     l6744:	
  5743  0E52  3003               	movlw	3
  5744  0E53  00FB               	movwf	?___bmul
  5745  0E54  084B               	movf	scale@scl,w
  5746  0E55  275B               	fcall	___bmul
  5747  0E56  3E28               	addlw	low (__powers_-__stringbase)
  5748  0E57  0084               	movwf	4
  5749  0E58  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5750  0E5D  00C1               	movwf	?_scale
  5751  0E5E  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5752  0E63  00C2               	movwf	?_scale+1
  5753  0E64  160A  118A  2000   	fcall	stringdir
  5754  0E67  00C3               	movwf	?_scale+2
  5755  0E68  0008               	return
  5756  0E69                     __end_of_scale:	
  5757  0E69                     __ptext546:	
  5758 ;; =============== function ___llmod ends ============
  5759                           
  5760                           
  5761 ;; *************** function ___awdiv *****************
  5762 ;; Defined at:
  5763 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\awdiv.c"
  5764 ;; Parameters:    Size  Location     Type
  5765 ;;  divisor         2    8[COMMON] int 
  5766 ;;  dividend        2   10[COMMON] int 
  5767 ;; Auto vars:     Size  Location     Type
  5768 ;;  quotient        2    2[BANK0 ] int 
  5769 ;;  sign            1    1[BANK0 ] unsigned char 
  5770 ;;  counter         1    0[BANK0 ] unsigned char 
  5771 ;; Return value:  Size  Location     Type
  5772 ;;                  2    8[COMMON] int 
  5773 ;; Registers used:
  5774 ;;		wreg, status,2, status,0
  5775 ;; Tracked objects:
  5776 ;;		On entry : 40/20
  5777 ;;		On exit  : 60/0
  5778 ;;		Unchanged: FFF9F/0
  5779 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5780 ;;      Params:         4       0       0       0       0
  5781 ;;      Locals:         0       4       0       0       0
  5782 ;;      Temps:          0       0       0       0       0
  5783 ;;      Totals:         4       4       0       0       0
  5784 ;;Total ram usage:        8 bytes
  5785 ;; Hardware stack levels used:    1
  5786 ;; Hardware stack levels required when called:    1
  5787 ;; This function calls:
  5788 ;;		Nothing
  5789 ;; This function is called by:
  5790 ;;		_scale
  5791 ;;		_printf
  5792 ;; This function uses a non-reentrant model
  5793 ;;
  5794  0E69                     ___awdiv:	
  5795                           
  5796                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  5797  0E69  1283               	bcf	3,5	;RP0=0, select bank0
  5798  0E6A  01A1               	clrf	___awdiv@sign
  5799  0E6B  1FF9               	btfss	___awdiv@divisor+1,7
  5800  0E6C  2E74               	goto	l6240
  5801  0E6D  09F8               	comf	___awdiv@divisor,f
  5802  0E6E  09F9               	comf	___awdiv@divisor+1,f
  5803  0E6F  0AF8               	incf	___awdiv@divisor,f
  5804  0E70  1903               	skipnz
  5805  0E71  0AF9               	incf	___awdiv@divisor+1,f
  5806  0E72  01A1               	clrf	___awdiv@sign
  5807  0E73  0AA1               	incf	___awdiv@sign,f
  5808  0E74                     l6240:	
  5809  0E74  1FFB               	btfss	___awdiv@dividend+1,7
  5810  0E75  2E7D               	goto	l6246
  5811  0E76  09FA               	comf	___awdiv@dividend,f
  5812  0E77  09FB               	comf	___awdiv@dividend+1,f
  5813  0E78  0AFA               	incf	___awdiv@dividend,f
  5814  0E79  1903               	skipnz
  5815  0E7A  0AFB               	incf	___awdiv@dividend+1,f
  5816  0E7B  3001               	movlw	1
  5817  0E7C  06A1               	xorwf	___awdiv@sign,f
  5818  0E7D                     l6246:	
  5819  0E7D  01A2               	clrf	___awdiv@quotient
  5820  0E7E  01A3               	clrf	___awdiv@quotient+1
  5821  0E7F  0879               	movf	___awdiv@divisor+1,w
  5822  0E80  0478               	iorwf	___awdiv@divisor,w
  5823  0E81  1903               	skipnz
  5824  0E82  2EA2               	goto	l6268
  5825  0E83  01A0               	clrf	___awdiv@counter
  5826  0E84                     L15:	
  5827  0E84  0AA0               	incf	___awdiv@counter,f
  5828  0E85  1BF9               	btfsc	___awdiv@divisor+1,7
  5829  0E86  2E8B               	goto	l6256
  5830  0E87  1003               	clrc
  5831  0E88  0DF8               	rlf	___awdiv@divisor,f
  5832  0E89  0DF9               	rlf	___awdiv@divisor+1,f
  5833  0E8A  2E84               	goto	L15
  5834  0E8B                     l6256:	
  5835  0E8B  1003               	clrc
  5836  0E8C  0DA2               	rlf	___awdiv@quotient,f
  5837  0E8D  0DA3               	rlf	___awdiv@quotient+1,f
  5838  0E8E  0879               	movf	___awdiv@divisor+1,w
  5839  0E8F  027B               	subwf	___awdiv@dividend+1,w
  5840  0E90  1D03               	skipz
  5841  0E91  2E94               	goto	u2435
  5842  0E92  0878               	movf	___awdiv@divisor,w
  5843  0E93  027A               	subwf	___awdiv@dividend,w
  5844  0E94                     u2435:	
  5845  0E94  1C03               	skipc
  5846  0E95  2E9E               	goto	L16
  5847  0E96  0878               	movf	___awdiv@divisor,w
  5848  0E97  02FA               	subwf	___awdiv@dividend,f
  5849  0E98  0879               	movf	___awdiv@divisor+1,w
  5850  0E99  1C03               	skipc
  5851  0E9A  03FB               	decf	___awdiv@dividend+1,f
  5852  0E9B  02FB               	subwf	___awdiv@dividend+1,f
  5853  0E9C  1422               	bsf	___awdiv@quotient,0
  5854  0E9D  1003               	clrc
  5855  0E9E                     L16:	
  5856  0E9E  0CF9               	rrf	___awdiv@divisor+1,f
  5857  0E9F  0CF8               	rrf	___awdiv@divisor,f
  5858  0EA0  0BA0               	decfsz	___awdiv@counter,f
  5859  0EA1  2E8B               	goto	l6256
  5860  0EA2                     l6268:	
  5861  0EA2  0821               	movf	___awdiv@sign,w
  5862  0EA3  1903               	btfsc	3,2
  5863  0EA4  2EAA               	goto	l6272
  5864  0EA5  09A2               	comf	___awdiv@quotient,f
  5865  0EA6  09A3               	comf	___awdiv@quotient+1,f
  5866  0EA7  0AA2               	incf	___awdiv@quotient,f
  5867  0EA8  1903               	skipnz
  5868  0EA9  0AA3               	incf	___awdiv@quotient+1,f
  5869  0EAA                     l6272:	
  5870  0EAA  0823               	movf	___awdiv@quotient+1,w
  5871  0EAB  00F9               	movwf	?___awdiv+1
  5872  0EAC  0822               	movf	___awdiv@quotient,w
  5873  0EAD  00F8               	movwf	?___awdiv
  5874  0EAE  0008               	return
  5875  0EAF                     __end_of___awdiv:	
  5876  0EAF                     __ptext541:	
  5877 ;; =============== function _lcd_put_byte ends ============
  5878                           
  5879                           
  5880 ;; *************** function ___awmod *****************
  5881 ;; Defined at:
  5882 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\awmod.c"
  5883 ;; Parameters:    Size  Location     Type
  5884 ;;  divisor         2    2[COMMON] int 
  5885 ;;  dividend        2    4[COMMON] int 
  5886 ;; Auto vars:     Size  Location     Type
  5887 ;;  sign            1    7[COMMON] unsigned char 
  5888 ;;  counter         1    6[COMMON] unsigned char 
  5889 ;; Return value:  Size  Location     Type
  5890 ;;                  2    2[COMMON] int 
  5891 ;; Registers used:
  5892 ;;		wreg, status,2, status,0
  5893 ;; Tracked objects:
  5894 ;;		On entry : 60/0
  5895 ;;		On exit  : 60/0
  5896 ;;		Unchanged: FFF9F/0
  5897 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5898 ;;      Params:         4       0       0       0       0
  5899 ;;      Locals:         2       0       0       0       0
  5900 ;;      Temps:          0       0       0       0       0
  5901 ;;      Totals:         6       0       0       0       0
  5902 ;;Total ram usage:        6 bytes
  5903 ;; Hardware stack levels used:    1
  5904 ;; Hardware stack levels required when called:    1
  5905 ;; This function calls:
  5906 ;;		Nothing
  5907 ;; This function is called by:
  5908 ;;		_scale
  5909 ;; This function uses a non-reentrant model
  5910 ;;
  5911  0EAF                     ___awmod:	
  5912                           
  5913                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  5914  0EAF  01F7               	clrf	___awmod@sign
  5915  0EB0  1FF5               	btfss	___awmod@dividend+1,7
  5916  0EB1  2EB9               	goto	l6358
  5917  0EB2  09F4               	comf	___awmod@dividend,f
  5918  0EB3  09F5               	comf	___awmod@dividend+1,f
  5919  0EB4  0AF4               	incf	___awmod@dividend,f
  5920  0EB5  1903               	skipnz
  5921  0EB6  0AF5               	incf	___awmod@dividend+1,f
  5922  0EB7  01F7               	clrf	___awmod@sign
  5923  0EB8  0AF7               	incf	___awmod@sign,f
  5924  0EB9                     l6358:	
  5925  0EB9  1FF3               	btfss	___awmod@divisor+1,7
  5926  0EBA  2EC0               	goto	l6362
  5927  0EBB  09F2               	comf	___awmod@divisor,f
  5928  0EBC  09F3               	comf	___awmod@divisor+1,f
  5929  0EBD  0AF2               	incf	___awmod@divisor,f
  5930  0EBE  1903               	skipnz
  5931  0EBF  0AF3               	incf	___awmod@divisor+1,f
  5932  0EC0                     l6362:	
  5933  0EC0  0873               	movf	___awmod@divisor+1,w
  5934  0EC1  0472               	iorwf	___awmod@divisor,w
  5935  0EC2  1903               	skipnz
  5936  0EC3  2EDF               	goto	l6378
  5937  0EC4  01F6               	clrf	___awmod@counter
  5938  0EC5                     L8:	
  5939  0EC5  0AF6               	incf	___awmod@counter,f
  5940  0EC6  1BF3               	btfsc	___awmod@divisor+1,7
  5941  0EC7  2ECC               	goto	l6370
  5942  0EC8  1003               	clrc
  5943  0EC9  0DF2               	rlf	___awmod@divisor,f
  5944  0ECA  0DF3               	rlf	___awmod@divisor+1,f
  5945  0ECB  2EC5               	goto	L8
  5946  0ECC                     l6370:	
  5947  0ECC  0873               	movf	___awmod@divisor+1,w
  5948  0ECD  0275               	subwf	___awmod@dividend+1,w
  5949  0ECE  1D03               	skipz
  5950  0ECF  2ED2               	goto	u2625
  5951  0ED0  0872               	movf	___awmod@divisor,w
  5952  0ED1  0274               	subwf	___awmod@dividend,w
  5953  0ED2                     u2625:	
  5954  0ED2  1C03               	skipc
  5955  0ED3  2EDB               	goto	L9
  5956  0ED4  0872               	movf	___awmod@divisor,w
  5957  0ED5  02F4               	subwf	___awmod@dividend,f
  5958  0ED6  0873               	movf	___awmod@divisor+1,w
  5959  0ED7  1C03               	skipc
  5960  0ED8  03F5               	decf	___awmod@dividend+1,f
  5961  0ED9  02F5               	subwf	___awmod@dividend+1,f
  5962  0EDA  1003               	clrc
  5963  0EDB                     L9:	
  5964  0EDB  0CF3               	rrf	___awmod@divisor+1,f
  5965  0EDC  0CF2               	rrf	___awmod@divisor,f
  5966  0EDD  0BF6               	decfsz	___awmod@counter,f
  5967  0EDE  2ECC               	goto	l6370
  5968  0EDF                     l6378:	
  5969  0EDF  0877               	movf	___awmod@sign,w
  5970  0EE0  1903               	btfsc	3,2
  5971  0EE1  2EE7               	goto	l6382
  5972  0EE2  09F4               	comf	___awmod@dividend,f
  5973  0EE3  09F5               	comf	___awmod@dividend+1,f
  5974  0EE4  0AF4               	incf	___awmod@dividend,f
  5975  0EE5  1903               	skipnz
  5976  0EE6  0AF5               	incf	___awmod@dividend+1,f
  5977  0EE7                     l6382:	
  5978  0EE7  0875               	movf	___awmod@dividend+1,w
  5979  0EE8  00F3               	movwf	?___awmod+1
  5980  0EE9  0874               	movf	___awmod@dividend,w
  5981  0EEA  00F2               	movwf	?___awmod
  5982  0EEB  0008               	return
  5983  0EEC                     __end_of___awmod:	
  5984  0EEC                     __ptext536:	
  5985 ;; =============== function ___awtoft ends ============
  5986                           
  5987                           
  5988 ;; *************** function ___ftmul *****************
  5989 ;; Defined at:
  5990 ;;		line 52 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\ftmul.c"
  5991 ;; Parameters:    Size  Location     Type
  5992 ;;  f1              3   18[BANK0 ] float 
  5993 ;;  f2              3   21[BANK0 ] float 
  5994 ;; Auto vars:     Size  Location     Type
  5995 ;;  f3_as_produc    3   28[BANK0 ] unsigned um
  5996 ;;  sign            1   32[BANK0 ] unsigned char 
  5997 ;;  cntr            1   31[BANK0 ] unsigned char 
  5998 ;;  exp             1   27[BANK0 ] unsigned char 
  5999 ;; Return value:  Size  Location     Type
  6000 ;;                  3   18[BANK0 ] float 
  6001 ;; Registers used:
  6002 ;;		wreg, status,2, status,0, pclath, cstack
  6003 ;; Tracked objects:
  6004 ;;		On entry : 60/0
  6005 ;;		On exit  : 60/0
  6006 ;;		Unchanged: FFF9F/0
  6007 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6008 ;;      Params:         0       6       0       0       0
  6009 ;;      Locals:         0       6       0       0       0
  6010 ;;      Temps:          0       3       0       0       0
  6011 ;;      Totals:         0      15       0       0       0
  6012 ;;Total ram usage:       15 bytes
  6013 ;; Hardware stack levels used:    1
  6014 ;; Hardware stack levels required when called:    2
  6015 ;; This function calls:
  6016 ;;		___ftpack
  6017 ;; This function is called by:
  6018 ;;		_main
  6019 ;;		_fround
  6020 ;;		_scale
  6021 ;;		_printf
  6022 ;; This function uses a non-reentrant model
  6023 ;;
  6024  0EEC                     ___ftmul:	
  6025                           
  6026                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  6027  0EEC  0832               	movf	___ftmul@f1,w
  6028  0EED  00B8               	movwf	??___ftmul
  6029  0EEE  0833               	movf	___ftmul@f1+1,w
  6030  0EEF  00B9               	movwf	??___ftmul+1
  6031  0EF0  0834               	movf	___ftmul@f1+2,w
  6032  0EF1  00BA               	movwf	??___ftmul+2
  6033  0EF2  1003               	clrc
  6034  0EF3  0D39               	rlf	??___ftmul+1,w
  6035  0EF4  0D3A               	rlf	??___ftmul+2,w
  6036  0EF5  00BB               	movwf	___ftmul@exp
  6037  0EF6  08BB               	movf	___ftmul@exp,f
  6038  0EF7  1D03               	skipz
  6039  0EF8  2EFD               	goto	l6564
  6040  0EF9  01B2               	clrf	?___ftmul
  6041  0EFA  01B3               	clrf	?___ftmul+1
  6042  0EFB  01B4               	clrf	?___ftmul+2
  6043  0EFC  0008               	return
  6044  0EFD                     l6564:	
  6045  0EFD  0835               	movf	___ftmul@f2,w
  6046  0EFE  00B8               	movwf	??___ftmul
  6047  0EFF  0836               	movf	___ftmul@f2+1,w
  6048  0F00  00B9               	movwf	??___ftmul+1
  6049  0F01  0837               	movf	___ftmul@f2+2,w
  6050  0F02  00BA               	movwf	??___ftmul+2
  6051  0F03  1003               	clrc
  6052  0F04  0D39               	rlf	??___ftmul+1,w
  6053  0F05  0D3A               	rlf	??___ftmul+2,w
  6054  0F06  00C0               	movwf	___ftmul@sign
  6055  0F07  08C0               	movf	___ftmul@sign,f
  6056  0F08  1D03               	skipz
  6057  0F09  2F0E               	goto	l6570
  6058  0F0A  01B2               	clrf	?___ftmul
  6059  0F0B  01B3               	clrf	?___ftmul+1
  6060  0F0C  01B4               	clrf	?___ftmul+2
  6061  0F0D  0008               	return
  6062  0F0E                     l6570:	
  6063  0F0E  0840               	movf	___ftmul@sign,w
  6064  0F0F  3E7B               	addlw	123
  6065  0F10  07BB               	addwf	___ftmul@exp,f
  6066  0F11  0834               	movf	___ftmul@f1+2,w
  6067  0F12  00C0               	movwf	___ftmul@sign
  6068  0F13  0837               	movf	___ftmul@f2+2,w
  6069  0F14  06C0               	xorwf	___ftmul@sign,f
  6070  0F15  3080               	movlw	128
  6071  0F16  05C0               	andwf	___ftmul@sign,f
  6072  0F17  3007               	movlw	7
  6073  0F18  17B3               	bsf	___ftmul@f1+1,7
  6074  0F19  17B6               	bsf	___ftmul@f2+1,7
  6075  0F1A  01B7               	clrf	___ftmul@f2+2
  6076  0F1B  01BC               	clrf	___ftmul@f3_as_product
  6077  0F1C  01BD               	clrf	___ftmul@f3_as_product+1
  6078  0F1D  01BE               	clrf	___ftmul@f3_as_product+2
  6079  0F1E  00BF               	movwf	___ftmul@cntr
  6080  0F1F                     l6588:	
  6081  0F1F  1C32               	btfss	___ftmul@f1,0
  6082  0F20  2F29               	goto	l6592
  6083  0F21  0835               	movf	___ftmul@f2,w
  6084  0F22  27D6  120A  158A   	fcall	PL18	;call to abstracted procedure
  6085  0F25  1803               	skipnc
  6086  0F26  0A37               	incf	___ftmul@f2+2,w
  6087  0F27  1D03               	btfss	3,2
  6088  0F28  07BE               	addwf	___ftmul@f3_as_product+2,f
  6089  0F29                     l6592:	
  6090  0F29  1003               	clrc
  6091  0F2A  0CB4               	rrf	___ftmul@f1+2,f
  6092  0F2B  0CB3               	rrf	___ftmul@f1+1,f
  6093  0F2C  0CB2               	rrf	___ftmul@f1,f
  6094  0F2D  1003               	clrc
  6095  0F2E  0DB5               	rlf	___ftmul@f2,f
  6096  0F2F  0DB6               	rlf	___ftmul@f2+1,f
  6097  0F30  0DB7               	rlf	___ftmul@f2+2,f
  6098  0F31  0BBF               	decfsz	___ftmul@cntr,f
  6099  0F32  2F1F               	goto	l6588
  6100  0F33  3009               	movlw	9
  6101  0F34  00BF               	movwf	___ftmul@cntr
  6102  0F35                     l6600:	
  6103  0F35  1C32               	btfss	___ftmul@f1,0
  6104  0F36  2F3F               	goto	l6604
  6105  0F37  0835               	movf	___ftmul@f2,w
  6106  0F38  27D6  120A  158A   	fcall	PL18	;call to abstracted procedure
  6107  0F3B  1803               	skipnc
  6108  0F3C  0A37               	incf	___ftmul@f2+2,w
  6109  0F3D  1D03               	btfss	3,2
  6110  0F3E  07BE               	addwf	___ftmul@f3_as_product+2,f
  6111  0F3F                     l6604:	
  6112  0F3F  1003               	clrc
  6113  0F40  0CB4               	rrf	___ftmul@f1+2,f
  6114  0F41  0CB3               	rrf	___ftmul@f1+1,f
  6115  0F42  0CB2               	rrf	___ftmul@f1,f
  6116  0F43  1003               	clrc
  6117  0F44  0CBE               	rrf	___ftmul@f3_as_product+2,f
  6118  0F45  0CBD               	rrf	___ftmul@f3_as_product+1,f
  6119  0F46  0CBC               	rrf	___ftmul@f3_as_product,f
  6120  0F47  0BBF               	decfsz	___ftmul@cntr,f
  6121  0F48  2F35               	goto	l6600
  6122  0F49  083C               	movf	___ftmul@f3_as_product,w
  6123  0F4A  00F2               	movwf	?___ftpack
  6124  0F4B  083D               	movf	___ftmul@f3_as_product+1,w
  6125  0F4C  00F3               	movwf	?___ftpack+1
  6126  0F4D  083E               	movf	___ftmul@f3_as_product+2,w
  6127  0F4E  00F4               	movwf	?___ftpack+2
  6128  0F4F  083B               	movf	___ftmul@exp,w
  6129  0F50  00F5               	movwf	?___ftpack+3
  6130  0F51  0840               	movf	___ftmul@sign,w
  6131  0F52  00F6               	movwf	?___ftpack+4
  6132  0F53  2769               	fcall	___ftpack
  6133  0F54  0872               	movf	?___ftpack,w
  6134  0F55  00B2               	movwf	?___ftmul
  6135  0F56  0873               	movf	?___ftpack+1,w
  6136  0F57  00B3               	movwf	?___ftmul+1
  6137  0F58  0874               	movf	?___ftpack+2,w
  6138  0F59  00B4               	movwf	?___ftmul+2
  6139  0F5A  0008               	return
  6140  0F5B                     __end_of___ftmul:	
  6141  0F5B                     __ptext552:	
  6142 ;; =============== function ___wmul ends ============
  6143                           
  6144                           
  6145 ;; *************** function ___bmul *****************
  6146 ;; Defined at:
  6147 ;;		line 3 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\bmul.c"
  6148 ;; Parameters:    Size  Location     Type
  6149 ;;  multiplier      1    wreg     unsigned char 
  6150 ;;  multiplicand    1   11[COMMON] unsigned char 
  6151 ;; Auto vars:     Size  Location     Type
  6152 ;;  multiplier      1    1[BANK0 ] unsigned char 
  6153 ;;  product         1    0[BANK0 ] unsigned char 
  6154 ;; Return value:  Size  Location     Type
  6155 ;;                  1    wreg      unsigned char 
  6156 ;; Registers used:
  6157 ;;		wreg, status,2, status,0
  6158 ;; Tracked objects:
  6159 ;;		On entry : 60/0
  6160 ;;		On exit  : 60/0
  6161 ;;		Unchanged: FFF9F/0
  6162 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6163 ;;      Params:         1       0       0       0       0
  6164 ;;      Locals:         0       2       0       0       0
  6165 ;;      Temps:          0       0       0       0       0
  6166 ;;      Totals:         1       2       0       0       0
  6167 ;;Total ram usage:        3 bytes
  6168 ;; Hardware stack levels used:    1
  6169 ;; Hardware stack levels required when called:    1
  6170 ;; This function calls:
  6171 ;;		Nothing
  6172 ;; This function is called by:
  6173 ;;		_fround
  6174 ;;		_scale
  6175 ;; This function uses a non-reentrant model
  6176 ;;
  6177  0F5B                     ___bmul:	
  6178                           
  6179                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  6180                           ;___bmul@multiplier stored from wreg
  6181  0F5B  00A1               	movwf	___bmul@multiplier
  6182  0F5C  01A0               	clrf	___bmul@product
  6183  0F5D                     l6094:	
  6184  0F5D  087B               	movf	___bmul@multiplicand,w
  6185  0F5E  1821               	btfsc	___bmul@multiplier,0
  6186  0F5F  07A0               	addwf	___bmul@product,f
  6187  0F60  1003               	clrc
  6188  0F61  0DFB               	rlf	___bmul@multiplicand,f
  6189  0F62  1003               	clrc
  6190  0F63  0CA1               	rrf	___bmul@multiplier,f
  6191  0F64  08A1               	movf	___bmul@multiplier,f
  6192  0F65  1D03               	skipz
  6193  0F66  2F5D               	goto	l6094
  6194  0F67  0820               	movf	___bmul@product,w
  6195  0F68  0008               	return
  6196  0F69                     __end_of___bmul:	
  6197  0F69                     __ptext548:	
  6198 ;; =============== function ___fttol ends ============
  6199                           
  6200                           
  6201 ;; *************** function ___ftpack *****************
  6202 ;; Defined at:
  6203 ;;		line 63 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\float.c"
  6204 ;; Parameters:    Size  Location     Type
  6205 ;;  arg             3    2[COMMON] unsigned um
  6206 ;;  exp             1    5[COMMON] unsigned char 
  6207 ;;  sign            1    6[COMMON] unsigned char 
  6208 ;; Auto vars:     Size  Location     Type
  6209 ;;		None
  6210 ;; Return value:  Size  Location     Type
  6211 ;;                  3    2[COMMON] float 
  6212 ;; Registers used:
  6213 ;;		wreg, status,2, status,0
  6214 ;; Tracked objects:
  6215 ;;		On entry : 60/0
  6216 ;;		On exit  : 60/0
  6217 ;;		Unchanged: FFF9F/0
  6218 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6219 ;;      Params:         5       0       0       0       0
  6220 ;;      Locals:         0       0       0       0       0
  6221 ;;      Temps:          3       0       0       0       0
  6222 ;;      Totals:         8       0       0       0       0
  6223 ;;Total ram usage:        8 bytes
  6224 ;; Hardware stack levels used:    1
  6225 ;; Hardware stack levels required when called:    1
  6226 ;; This function calls:
  6227 ;;		Nothing
  6228 ;; This function is called by:
  6229 ;;		___ftadd
  6230 ;;		___ftdiv
  6231 ;;		___ftmul
  6232 ;;		___awtoft
  6233 ;;		___lltoft
  6234 ;; This function uses a non-reentrant model
  6235 ;;
  6236  0F69                     ___ftpack:	
  6237                           
  6238                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  6239  0F69  0875               	movf	___ftpack@exp,w
  6240  0F6A  1903               	btfsc	3,2
  6241  0F6B  2F71               	goto	l6170
  6242  0F6C  0874               	movf	___ftpack@arg+2,w
  6243  0F6D  0473               	iorwf	___ftpack@arg+1,w
  6244  0F6E  0472               	iorwf	___ftpack@arg,w
  6245  0F6F  1D03               	skipz
  6246  0F70  2F7A               	goto	l6176
  6247  0F71                     l6170:	
  6248  0F71  01F2               	clrf	?___ftpack
  6249  0F72  01F3               	clrf	?___ftpack+1
  6250  0F73  01F4               	clrf	?___ftpack+2
  6251  0F74  0008               	return
  6252  0F75                     l6174:	
  6253  0F75  0AF5               	incf	___ftpack@exp,f
  6254  0F76  1003               	clrc
  6255  0F77  0CF4               	rrf	___ftpack@arg+2,f
  6256  0F78  0CF3               	rrf	___ftpack@arg+1,f
  6257  0F79  0CF2               	rrf	___ftpack@arg,f
  6258  0F7A                     l6176:	
  6259  0F7A  30FE               	movlw	254
  6260  0F7B  0574               	andwf	___ftpack@arg+2,w
  6261  0F7C  1903               	btfsc	3,2
  6262  0F7D  2F89               	goto	l6180
  6263  0F7E  2F75               	goto	l6174
  6264  0F7F                     l6178:	
  6265  0F7F  0AF5               	incf	___ftpack@exp,f
  6266  0F80  0AF2               	incf	___ftpack@arg,f
  6267  0F81  1903               	skipnz
  6268  0F82  0AF3               	incf	___ftpack@arg+1,f
  6269  0F83  1903               	skipnz
  6270  0F84  0AF4               	incf	___ftpack@arg+2,f
  6271  0F85  1003               	clrc
  6272  0F86  0CF4               	rrf	___ftpack@arg+2,f
  6273  0F87  0CF3               	rrf	___ftpack@arg+1,f
  6274  0F88  0CF2               	rrf	___ftpack@arg,f
  6275  0F89                     l6180:	
  6276  0F89  30FF               	movlw	255
  6277  0F8A  0574               	andwf	___ftpack@arg+2,w
  6278  0F8B  1903               	btfsc	3,2
  6279  0F8C  2F93               	goto	l6184
  6280  0F8D  2F7F               	goto	l6178
  6281  0F8E                     l6182:	
  6282  0F8E  03F5               	decf	___ftpack@exp,f
  6283  0F8F  1003               	clrc
  6284  0F90  0DF2               	rlf	___ftpack@arg,f
  6285  0F91  0DF3               	rlf	___ftpack@arg+1,f
  6286  0F92  0DF4               	rlf	___ftpack@arg+2,f
  6287  0F93                     l6184:	
  6288  0F93  1FF3               	btfss	___ftpack@arg+1,7
  6289  0F94  2F8E               	goto	l6182
  6290  0F95  1C75               	btfss	___ftpack@exp,0
  6291  0F96  13F3               	bcf	___ftpack@arg+1,7
  6292  0F97  1003               	clrc
  6293  0F98  0CF5               	rrf	___ftpack@exp,f
  6294  0F99  0875               	movf	___ftpack@exp,w
  6295  0F9A  00F9               	movwf	??___ftpack+2
  6296  0F9B  01F8               	clrf	??___ftpack+1
  6297  0F9C  01F7               	clrf	??___ftpack
  6298  0F9D  0877               	movf	??___ftpack,w
  6299  0F9E  04F2               	iorwf	___ftpack@arg,f
  6300  0F9F  0878               	movf	??___ftpack+1,w
  6301  0FA0  04F3               	iorwf	___ftpack@arg+1,f
  6302  0FA1  0879               	movf	??___ftpack+2,w
  6303  0FA2  04F4               	iorwf	___ftpack@arg+2,f
  6304  0FA3  0876               	movf	___ftpack@sign,w
  6305  0FA4  1D03               	skipz
  6306  0FA5  17F4               	bsf	___ftpack@arg+2,7
  6307  0FA6  0008               	return
  6308  0FA7                     __end_of___ftpack:	
  6309  0FA7                     PL7:	
  6310  0FA7  0872               	movf	?___awmod,w
  6311  0FA8  00C4               	movwf	??_scale
  6312  0FA9  0873               	movf	?___awmod+1,w
  6313  0FAA  00C5               	movwf	??_scale+1
  6314  0FAB  0844               	movf	??_scale,w
  6315  0FAC  0744               	addwf	??_scale,w
  6316  0FAD  0744               	addwf	??_scale,w
  6317  0FAE  0008               	return
  6318  0FAF                     PL8:	
  6319  0FAF  0878               	movf	?___awdiv,w
  6320  0FB0  00C6               	movwf	??_scale+2
  6321  0FB1  0879               	movf	?___awdiv+1,w
  6322  0FB2  00C7               	movwf	??_scale+3
  6323  0FB3  0846               	movf	??_scale+2,w
  6324  0FB4  0746               	addwf	??_scale+2,w
  6325  0FB5  0746               	addwf	??_scale+2,w
  6326  0FB6  0008               	return
  6327  0FB7                     PL9:	
  6328  0FB7  0832               	movf	?___ftmul,w
  6329  0FB8  00C8               	movwf	_scale$4106
  6330  0FB9  0833               	movf	?___ftmul+1,w
  6331  0FBA  00C9               	movwf	_scale$4106+1
  6332  0FBB  0834               	movf	?___ftmul+2,w
  6333  0FBC  00CA               	movwf	_scale$4106+2
  6334  0FBD  300A               	movlw	10
  6335  0FBE  00F2               	movwf	?___awmod
  6336  0FBF  01F3               	clrf	?___awmod+1
  6337  0FC0  084B               	movf	scale@scl,w
  6338  0FC1  00F4               	movwf	?___awmod+2
  6339  0FC2  01F5               	clrf	?___awmod+3
  6340  0FC3  0008               	return
  6341  0FC4                     PL10:	
  6342  0FC4  0832               	movf	?___ftmul,w
  6343  0FC5  00C1               	movwf	?_scale
  6344  0FC6  0833               	movf	?___ftmul+1,w
  6345  0FC7  00C2               	movwf	?_scale+1
  6346  0FC8  0834               	movf	?___ftmul+2,w
  6347  0FC9  00C3               	movwf	?_scale+2
  6348  0FCA  0008               	return
  6349  0FCB                     PL14:	
  6350  0FCB  00F8               	movwf	?___awdiv
  6351  0FCC  01F9               	clrf	?___awdiv+1
  6352  0FCD  084B               	movf	scale@scl,w
  6353  0FCE  00F4               	movwf	?___awmod+2
  6354  0FCF  01F5               	clrf	?___awmod+3
  6355  0FD0  1BF4               	btfsc	?___awmod+2,7
  6356  0FD1  03F5               	decf	?___awmod+3,f
  6357  0FD2  3064               	movlw	100
  6358  0FD3  00F2               	movwf	?___awmod
  6359  0FD4  01F3               	clrf	?___awmod+1
  6360  0FD5  0008               	return
  6361  0FD6                     PL18:	
  6362  0FD6  07BC               	addwf	___ftmul@f3_as_product,f
  6363  0FD7  0836               	movf	___ftmul@f2+1,w
  6364  0FD8  1103               	clrz
  6365  0FD9  1803               	skipnc
  6366  0FDA  0A36               	incf	___ftmul@f2+1,w
  6367  0FDB  1D03               	btfss	3,2
  6368  0FDC  07BD               	addwf	___ftmul@f3_as_product+1,f
  6369  0FDD  0837               	movf	___ftmul@f2+2,w
  6370  0FDE  1103               	clrz
  6371  0FDF  0008               	return
  6372  0FE0                     PL22:	
  6373  0FE0  0878               	movf	?___awdiv,w
  6374  0FE1  00C4               	movwf	??_scale
  6375  0FE2  0879               	movf	?___awdiv+1,w
  6376  0FE3  00C5               	movwf	??_scale+1
  6377  0FE4  0844               	movf	??_scale,w
  6378  0FE5  0744               	addwf	??_scale,w
  6379  0FE6  0744               	addwf	??_scale,w
  6380  0FE7  0008               	return
  6381  0FE8                     PL23:	
  6382  0FE8  00B4               	movwf	?___ftmul+2
  6383  0FE9  3064               	movlw	100
  6384  0FEA  00F8               	movwf	?___awdiv
  6385  0FEB  01F9               	clrf	?___awdiv+1
  6386  0FEC  084B               	movf	scale@scl,w
  6387  0FED  00FA               	movwf	?___awdiv+2
  6388  0FEE  01FB               	clrf	?___awdiv+3
  6389  0FEF  0008               	return
  6390  0FF0                     PL25:	
  6391  0FF0  00B4               	movwf	?___ftmul+2
  6392  0FF1  0848               	movf	_scale$4106,w
  6393  0FF2  00B5               	movwf	?___ftmul+3
  6394  0FF3  0849               	movf	_scale$4106+1,w
  6395  0FF4  00B6               	movwf	?___ftmul+4
  6396  0FF5  084A               	movf	_scale$4106+2,w
  6397  0FF6  00B7               	movwf	?___ftmul+5
  6398  0FF7  0008               	return
  6399  0FF8                     PL26:	
  6400  0FF8  00B4               	movwf	?___ftmul+2
  6401  0FF9  300A               	movlw	10
  6402  0FFA  00F8               	movwf	?___awdiv
  6403  0FFB  01F9               	clrf	?___awdiv+1
  6404  0FFC  084B               	movf	scale@scl,w
  6405  0FFD  00FA               	movwf	?___awdiv+2
  6406  0FFE  01FB               	clrf	?___awdiv+3
  6407  0FFF  0008               	return
  6408                           
  6409                           	psect	text553
  6410  0866                     __ptext553:	
  6411 ;; =============== function ___bmul ends ============
  6412                           
  6413                           
  6414 ;; *************** function __div_to_l_ *****************
  6415 ;; Defined at:
  6416 ;;		line 61 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\fldivl.c"
  6417 ;; Parameters:    Size  Location     Type
  6418 ;;  f1              3    2[COMMON] unsigned char 
  6419 ;;  f2              3    5[COMMON] unsigned char 
  6420 ;; Auto vars:     Size  Location     Type
  6421 ;;  quot            4    8[BANK0 ] unsigned long 
  6422 ;;  exp1            1   13[BANK0 ] unsigned char 
  6423 ;;  cntr            1   12[BANK0 ] unsigned char 
  6424 ;; Return value:  Size  Location     Type
  6425 ;;                  4    2[COMMON] unsigned long 
  6426 ;; Registers used:
  6427 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  6428 ;; Tracked objects:
  6429 ;;		On entry : 0/0
  6430 ;;		On exit  : 60/0
  6431 ;;		Unchanged: FFF9F/0
  6432 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6433 ;;      Params:         6       0       0       0       0
  6434 ;;      Locals:         0       6       0       0       0
  6435 ;;      Temps:          0       8       0       0       0
  6436 ;;      Totals:         6      14       0       0       0
  6437 ;;Total ram usage:       20 bytes
  6438 ;; Hardware stack levels used:    1
  6439 ;; Hardware stack levels required when called:    1
  6440 ;; This function calls:
  6441 ;;		Nothing
  6442 ;; This function is called by:
  6443 ;;		_printf
  6444 ;; This function uses a non-reentrant model
  6445 ;;
  6446  0866                     __div_to_l_:	
  6447                           
  6448                           ; Regs used in __div_to_l_: [wreg-fsr0h+status,2+status,0]
  6449  0866  3072               	movlw	low __div_to_l_@f1
  6450  0867  0084               	movwf	4
  6451  0868  0800               	movf	0,w
  6452  0869  1283               	bcf	3,5	;RP0=0, select bank0
  6453  086A  1303               	bcf	3,6	;RP1=0, select bank0
  6454  086B  00A0               	movwf	??__div_to_l_
  6455  086C  0A84               	incf	4,f
  6456  086D  0800               	movf	0,w
  6457  086E  00A1               	movwf	??__div_to_l_+1
  6458  086F  0A84               	incf	4,f
  6459  0870  0800               	movf	0,w
  6460  0871  00A2               	movwf	??__div_to_l_+2
  6461  0872  0A84               	incf	4,f
  6462  0873  0800               	movf	0,w
  6463  0874  00A3               	movwf	??__div_to_l_+3
  6464  0875  1003               	clrc
  6465  0876  0D22               	rlf	??__div_to_l_+2,w
  6466  0877  0D23               	rlf	??__div_to_l_+3,w
  6467  0878  00AD               	movwf	__div_to_l_@exp1
  6468  0879  08AD               	movf	__div_to_l_@exp1,f
  6469  087A  1D03               	skipz
  6470  087B  2881               	goto	l6050
  6471  087C                     l6048:	
  6472  087C  01F2               	clrf	?__div_to_l_
  6473  087D  01F3               	clrf	?__div_to_l_+1
  6474  087E  01F4               	clrf	?__div_to_l_+2
  6475  087F  01F5               	clrf	?__div_to_l_+3
  6476  0880  0008               	return
  6477  0881                     l6050:	
  6478  0881  3075               	movlw	low __div_to_l_@f2
  6479  0882  2124  120A  158A   	fcall	PL2	;call to abstracted procedure
  6480  0885  1003               	clrc
  6481  0886  0D22               	rlf	??__div_to_l_+2,w
  6482  0887  0D23               	rlf	??__div_to_l_+3,w
  6483  0888  00AC               	movwf	__div_to_l_@cntr
  6484  0889  08AC               	movf	__div_to_l_@cntr,f
  6485  088A  1903               	btfsc	3,2
  6486  088B  287C               	goto	l6048
  6487  088C  3072               	movlw	low __div_to_l_@f1
  6488  088D  0084               	movwf	4
  6489  088E  3080               	movlw	128
  6490  088F  0A84               	incf	4,f
  6491  0890  0A84               	incf	4,f
  6492  0891  0480               	iorwf	0,f
  6493  0892  3072               	movlw	low __div_to_l_@f1
  6494  0893  0A84               	incf	4,f
  6495  0894  0084               	movwf	4
  6496  0895  3075               	movlw	low __div_to_l_@f2
  6497  0896  0A84               	incf	4,f
  6498  0897  0A84               	incf	4,f
  6499  0898  0A84               	incf	4,f
  6500  0899  0180               	clrf	0
  6501  089A  0084               	movwf	4
  6502  089B  3080               	movlw	128
  6503  089C  0A84               	incf	4,f
  6504  089D  0A84               	incf	4,f
  6505  089E  0480               	iorwf	0,f
  6506  089F  3075               	movlw	low __div_to_l_@f2
  6507  08A0  0A84               	incf	4,f
  6508  08A1  0084               	movwf	4
  6509  08A2  307F               	movlw	127
  6510  08A3  0A84               	incf	4,f
  6511  08A4  0A84               	incf	4,f
  6512  08A5  0A84               	incf	4,f
  6513  08A6  0180               	clrf	0
  6514  08A7  01A8               	clrf	__div_to_l_@quot
  6515  08A8  01A9               	clrf	__div_to_l_@quot+1
  6516  08A9  01AA               	clrf	__div_to_l_@quot+2
  6517  08AA  01AB               	clrf	__div_to_l_@quot+3
  6518  08AB  02AD               	subwf	__div_to_l_@exp1,f
  6519  08AC  30A0               	movlw	160
  6520  08AD  072C               	addwf	__div_to_l_@cntr,w
  6521  08AE  00A0               	movwf	??__div_to_l_
  6522  08AF  02AD               	subwf	__div_to_l_@exp1,f
  6523  08B0  3020               	movlw	32
  6524  08B1  00AC               	movwf	__div_to_l_@cntr
  6525  08B2                     l6064:	
  6526  08B2  3075               	movlw	low __div_to_l_@f2
  6527  08B3  1003               	clrc
  6528  08B4  0DA8               	rlf	__div_to_l_@quot,f
  6529  08B5  0DA9               	rlf	__div_to_l_@quot+1,f
  6530  08B6  0DAA               	rlf	__div_to_l_@quot+2,f
  6531  08B7  0DAB               	rlf	__div_to_l_@quot+3,f
  6532  08B8  2124  120A  158A   	fcall	PL2	;call to abstracted procedure
  6533  08BB  3072               	movlw	low __div_to_l_@f1
  6534  08BC  0084               	movwf	4
  6535  08BD  0800               	movf	0,w
  6536  08BE  00A4               	movwf	??__div_to_l_+4
  6537  08BF  0A84               	incf	4,f
  6538  08C0  0800               	movf	0,w
  6539  08C1  00A5               	movwf	??__div_to_l_+5
  6540  08C2  0A84               	incf	4,f
  6541  08C3  0800               	movf	0,w
  6542  08C4  00A6               	movwf	??__div_to_l_+6
  6543  08C5  0A84               	incf	4,f
  6544  08C6  0800               	movf	0,w
  6545  08C7  00A7               	movwf	??__div_to_l_+7
  6546  08C8  0823               	movf	??__div_to_l_+3,w
  6547  08C9  0227               	subwf	??__div_to_l_+7,w
  6548  08CA  1D03               	skipz
  6549  08CB  28D6               	goto	u2065
  6550  08CC  0822               	movf	??__div_to_l_+2,w
  6551  08CD  0226               	subwf	??__div_to_l_+6,w
  6552  08CE  1D03               	skipz
  6553  08CF  28D6               	goto	u2065
  6554  08D0  0821               	movf	??__div_to_l_+1,w
  6555  08D1  0225               	subwf	??__div_to_l_+5,w
  6556  08D2  1D03               	skipz
  6557  08D3  28D6               	goto	u2065
  6558  08D4  0820               	movf	??__div_to_l_,w
  6559  08D5  0224               	subwf	??__div_to_l_+4,w
  6560  08D6                     u2065:	
  6561  08D6  1C03               	skipc
  6562  08D7  28F2               	goto	l3552
  6563  08D8  3075               	movlw	low __div_to_l_@f2
  6564  08D9  2124  120A  158A   	fcall	PL2	;call to abstracted procedure
  6565  08DC  3072               	movlw	low __div_to_l_@f1
  6566  08DD  0084               	movwf	4
  6567  08DE  0820               	movf	??__div_to_l_,w
  6568  08DF  0280               	subwf	0,f
  6569  08E0  0A84               	incf	4,f
  6570  08E1  0821               	movf	??__div_to_l_+1,w
  6571  08E2  1C03               	skipc
  6572  08E3  0F21               	incfsz	??__div_to_l_+1,w
  6573  08E4  0280               	subwf	0,f
  6574  08E5  0A84               	incf	4,f
  6575  08E6  0822               	movf	??__div_to_l_+2,w
  6576  08E7  1C03               	skipc
  6577  08E8  0F22               	incfsz	??__div_to_l_+2,w
  6578  08E9  0280               	subwf	0,f
  6579  08EA  0A84               	incf	4,f
  6580  08EB  0823               	movf	??__div_to_l_+3,w
  6581  08EC  1C03               	skipc
  6582  08ED  0A23               	incf	??__div_to_l_+3,w
  6583  08EE  0280               	subwf	0,f
  6584  08EF  3003               	movlw	3
  6585  08F0  0284               	subwf	4,f
  6586  08F1  1428               	bsf	__div_to_l_@quot,0
  6587  08F2                     l3552:	
  6588  08F2  3072               	movlw	low __div_to_l_@f1
  6589  08F3  0084               	movwf	4
  6590  08F4  1003               	clrc
  6591  08F5  0D80               	rlf	0,f
  6592  08F6  0A84               	incf	4,f
  6593  08F7  0D80               	rlf	0,f
  6594  08F8  0A84               	incf	4,f
  6595  08F9  0D80               	rlf	0,f
  6596  08FA  0A84               	incf	4,f
  6597  08FB  0D80               	rlf	0,f
  6598  08FC  0BAC               	decfsz	__div_to_l_@cntr,f
  6599  08FD  28B2               	goto	l6064
  6600  08FE  1FAD               	btfss	__div_to_l_@exp1,7
  6601  08FF  290D               	goto	l6082
  6602  0900  082D               	movf	__div_to_l_@exp1,w
  6603  0901  3A80               	xorlw	128
  6604  0902  3E9F               	addlw	159
  6605  0903  1C03               	btfss	3,0
  6606  0904  287C               	goto	l6048
  6607  0905                     l6078:	
  6608  0905  1003               	clrc
  6609  0906  0CAB               	rrf	__div_to_l_@quot+3,f
  6610  0907  0CAA               	rrf	__div_to_l_@quot+2,f
  6611  0908  0CA9               	rrf	__div_to_l_@quot+1,f
  6612  0909  0CA8               	rrf	__div_to_l_@quot,f
  6613  090A  0FAD               	incfsz	__div_to_l_@exp1,f
  6614  090B  2905               	goto	l6078
  6615  090C  291B               	goto	l6088
  6616  090D                     l6082:	
  6617  090D  3020               	movlw	32
  6618  090E  022D               	subwf	__div_to_l_@exp1,w
  6619  090F  1803               	btfsc	3,0
  6620  0910  287C               	goto	l6048
  6621  0911                     l3560:	
  6622  0911  08AD               	movf	__div_to_l_@exp1,f
  6623  0912  1903               	btfsc	3,2
  6624  0913  291B               	goto	l6088
  6625  0914  1003               	clrc
  6626  0915  0DA8               	rlf	__div_to_l_@quot,f
  6627  0916  0DA9               	rlf	__div_to_l_@quot+1,f
  6628  0917  0DAA               	rlf	__div_to_l_@quot+2,f
  6629  0918  0DAB               	rlf	__div_to_l_@quot+3,f
  6630  0919  03AD               	decf	__div_to_l_@exp1,f
  6631  091A  2911               	goto	l3560
  6632  091B                     l6088:	
  6633  091B  082B               	movf	__div_to_l_@quot+3,w
  6634  091C  00F5               	movwf	?__div_to_l_+3
  6635  091D  082A               	movf	__div_to_l_@quot+2,w
  6636  091E  00F4               	movwf	?__div_to_l_+2
  6637  091F  0829               	movf	__div_to_l_@quot+1,w
  6638  0920  00F3               	movwf	?__div_to_l_+1
  6639  0921  0828               	movf	__div_to_l_@quot,w
  6640  0922  00F2               	movwf	?__div_to_l_
  6641  0923  0008               	return
  6642  0924                     __end_of__div_to_l_:	
  6643  0924                     PL2:	
  6644  0924  0084               	movwf	4
  6645  0925  0800               	movf	0,w
  6646  0926  00A0               	movwf	??__div_to_l_
  6647  0927  0A84               	incf	4,f
  6648  0928  0800               	movf	0,w
  6649  0929  00A1               	movwf	??__div_to_l_+1
  6650  092A  0A84               	incf	4,f
  6651  092B  0800               	movf	0,w
  6652  092C  00A2               	movwf	??__div_to_l_+2
  6653  092D  0A84               	incf	4,f
  6654  092E  0800               	movf	0,w
  6655  092F  00A3               	movwf	??__div_to_l_+3
  6656  0930  0008               	return
  6657                           
  6658                           	psect	text557
  6659  07B8                     __ptext557:	
  6660 ;; =============== function _isprint ends ============
  6661                           
  6662                           
  6663 ;; *************** function _ngat *****************
  6664 ;; Defined at:
  6665 ;;		line 41 in file "C:\Users\DELL\Desktop\baitap_ttvxl\counter\counter.c"
  6666 ;; Parameters:    Size  Location     Type
  6667 ;;		None
  6668 ;; Auto vars:     Size  Location     Type
  6669 ;;		None
  6670 ;; Return value:  Size  Location     Type
  6671 ;;		None               void
  6672 ;; Registers used:
  6673 ;;		status,2, status,0
  6674 ;; Tracked objects:
  6675 ;;		On entry : 0/0
  6676 ;;		On exit  : 0/0
  6677 ;;		Unchanged: FFF9F/0
  6678 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6679 ;;      Params:         0       0       0       0       0
  6680 ;;      Locals:         0       0       0       0       0
  6681 ;;      Temps:          2       0       0       0       0
  6682 ;;      Totals:         2       0       0       0       0
  6683 ;;Total ram usage:        2 bytes
  6684 ;; Hardware stack levels used:    1
  6685 ;; This function calls:
  6686 ;;		Nothing
  6687 ;; This function is called by:
  6688 ;;		Interrupt level 1
  6689 ;; This function uses a non-reentrant model
  6690 ;;
  6691  07B8                     _ngat:	
  6692                           
  6693                           ;counter.c: 43: if(T0IF)
  6694  07B8  1D0B               	btfss	11,2
  6695  07B9  2FC0               	goto	L20
  6696                           
  6697                           ;counter.c: 44: {
  6698                           ;counter.c: 45: dem++;
  6699  07BA  1283               	bcf	3,5	;RP0=0, select bank0
  6700  07BB  1303               	bcf	3,6	;RP1=0, select bank0
  6701  07BC  0AEB               	incf	_dem,f
  6702  07BD  1903               	skipnz
  6703  07BE  0AEC               	incf	_dem+1,f
  6704                           
  6705                           ;counter.c: 46: }
  6706                           ;counter.c: 47: T0IF= 0;
  6707  07BF  110B               	bcf	11,2
  6708  07C0                     L20:	
  6709  07C0  0871               	movf	??_ngat+1,w
  6710  07C1  008A               	movwf	10
  6711  07C2  0E70               	swapf	??_ngat^(0+-128),w
  6712  07C3  0083               	movwf	3
  6713  07C4  0EFE               	swapf	126,f
  6714  07C5  0E7E               	swapf	126,w
  6715  07C6  0009               	retfie
  6716  07C7                     __end_of_ngat:	
  6717                           
  6718                           	psect	intentry
  6719  0004                     __pintentry:	
  6720                           ; Regs used in _ngat: [status]
  6721                           
  6722  0004                     interrupt_function:	
  6723  007E                     saved_w	set	btemp
  6724  0004  00FE               	movwf	btemp
  6725  0005  0E03               	swapf	3,w
  6726  0006  00F0               	movwf	??_ngat
  6727  0007  080A               	movf	10,w
  6728  0008  00F1               	movwf	??_ngat+1
  6729  0009  120A  118A  2FB8   	ljmp	_ngat
  6730                           
  6731                           	psect	text558
  6732  0000                     __ptext558:	
  6733 ;; =============== function _ngat ends ============
  6734                           
  6735  007E                     btemp	set	126	;btemp
  6736  007E                     wtemp0	set	126


HI-TECH Software PICC Macro Assembler V9.83 build 10920 
Symbol Table                                                                                   Tue Dec 06 10:40:03 2022

                    pc 0002         ___bmul@product 0020           ___awdiv@sign 0021                     fsr 0004  
  ___wmul@multiplicand 0074           ___ftadd@exp1 004C           ___ftadd@exp2 004B          ?_lcd_put_byte 0072  
         ___ftadd@sign 004A                    _GIE 005F                    _RD1 0041                    _RD2 0042  
                  _RD3 0043                    _RD4 0044                    _RD5 0045                    _RD6 0046  
                  _RD7 0047                    _PSA 040B                    _dem 006B                    fsr0 0004  
                  indf 0000           ___awmod@sign 0077           ___ftdiv@cntr 002C           ___ftdiv@sign 0031  
                 l1051 0000                   l2110 0000                   l2107 0000                   l2141 0000  
                 l2118 0000                   l3301 0000                   l2237 0341                   l3323 06AE  
                 l2259 0478                   l3244 0000                   l3412 0000                   l3510 0000  
                 l3422 0000                   l3502 0000                   l2198 0090                   l6000 05C0  
                 l3352 0C91                   l3249 0000                   l3265 0000                   l3441 0000  
                 l3345 0000                   l6010 0000                   l6002 05C5                   l3426 0000  
                 l3259 0000                   l6012 0000                   l6100 0000                   l3292 0A42  
                 l3517 0617                   l6022 0000                   l6014 0000                   l6006 0000  
                 l6102 0000                   l6110 04B9                   l3295 0000                   l6032 060B  
                 l6016 05E2                   l6008 0000                   l3560 0911                   l3552 08F2  
                 l6200 0000                   l3480 0000                   l7000 0013                   l3553 0000  
                 l6042 0621                   l6034 0000                   l6026 0000                   l6018 0000  
                 l6050 0881                   l6114 04C1                   l6130 0A3C                   l6202 0000  
                 l7010 0000                   l7002 0000                   l3379 050A                   l6036 0613  
                 l6060 0000                   l6116 0000                   l6108 0000                   l6124 0000  
                 l6204 0000                   l7020 0000                   l7012 0000                   l7004 0000  
                 l6070 0000                   l6062 0000                   l6046 0000                   l6118 0000  
                 l6142 0000                   l6134 0000                   l6126 0000                   l6150 0000  
                 l6214 04FE                   l6206 0000                   l7030 0000                   l7022 1784  
                 l7014 0000                   l7006 0000                   l3399 0000                   l6080 0000  
                 l6072 0000                   l6064 08B2                   l6056 0000                   l6048 087C  
                 l6128 0000                   l6144 0A4F                   l6160 0A69                   l6152 0A55  
                 l6224 0514                   l6216 0000                   l6208 0000                   l6240 0E74  
                 l6232 0000                   l6312 049B                   l6304 0000                   l6400 0BAA  
                 l7040 0000                   l7032 0000                   l7024 0000                   l7016 0000  
                 l7008 0000                   l6082 090D                   l6066 0000                   l6058 0000  
                 l6138 0000                   l6162 0000                   l6154 0000                   l6170 0F71  
                 l6226 0000                   l6218 0506                   l6234 0000                   l6314 0000  
                 l6410 0000                   l6402 0BB7                   l7034 0000                   l7026 0000  
                 l7018 0000                   l6092 0000                   l6156 0000                   l6148 0000  
                 l6180 0F89                   l6228 0522                   l6244 0000                   l6316 0000  
                 l6308 048C                   l6340 0000                   l6324 0000                   l6420 0000  
                 l6412 0BE5                   l6404 0BC2                   l6500 0000                   l7036 0000  
                 l7028 0000                   l6078 0905                   l6094 0F5D                   l6190 0000  
                 l6182 0F8E                   l6174 0F75                   l6166 0000                   l6270 0000  
                 l6262 0000                   l6246 0E7D                   l6238 0000                   l6334 057E  
                 l6326 0000                   l6350 0000                   l6414 0BF0                   l6406 0000  
                 l6430 0000                   l6422 0000                   l6510 06E0                   l6502 0000  
                 l7038 0000                   l6088 091B                   l6192 0000                   l6184 0F93  
                 l6176 0F7A                   l6168 0000                   l6272 0EAA                   l6256 0E8B  
                 l6248 0000                   l6344 0000                   l6336 0000                   l6352 0000  
                 l6416 0BFD                   l6408 0000                   l6432 0000                   l6424 0000  
                 l6440 0000                   l6520 0C80                   l6600 0F35                   l6178 0F7F  
                 l6194 0000                   l6266 0000                   l6258 0000                   l6290 0000  
                 l6346 05A9                   l6370 0ECC                   l6362 0EC0                   l6418 0000  
                 l6426 0000                   l6506 0000                   l6450 0000                   l6530 0000  
                 l6514 0000                   l6610 0000                   l6188 0000                   l6196 04DA  
                 l6268 0EA2                   l6284 053B                   l6292 0560                   l6276 0000  
                 l6380 0000                   l6356 0000                   l6428 0000                   l6508 0000  
                 l6444 0655                   l6436 0000                   l6540 0000                   l6532 0000  
                 l6604 0F3F                   l6620 0000                   l6700 0000                   l6198 04DF  
                 l6382 0EE7                   l6358 0EB9                   l6390 0000                   l6462 0000  
                 l6454 066B                   l6438 0000                   l6542 0000                   l6534 0000  
                 l6526 0000                   l6606 0000                   l6622 0C5E                   l6614 0000  
                 l6630 06F6                   l6296 0000                   l6376 0000                   l6480 0000  
                 l6472 0688                   l6464 0000                   l6456 0000                   l6448 065C  
                 l6552 0000                   l6544 0CA4                   l6536 0000                   l6528 0000  
                 l6608 0000                   l6616 0000                   l6632 0701                   l6640 0000  
                 l6704 0A10                   l6720 0D47                   l6712 0000                   l6378 0EDF  
                 l6394 0000                   l6386 0000                   l6490 0000                   l6474 068D  
                 l6466 0679                   l6554 0000                   l6538 0000                   l6570 0F0E  
                 l6626 0000                   l6642 0000                   l6730 0DA3                   l6802 0000  
                 l6396 0000                   l6388 0000                   l6492 06B9                   l6484 06A5  
                 l6468 0000                   l6476 0692                   l6548 0000                   l6580 0000  
                 l6572 0000                   l6564 0EFD                   l6660 0B5A                   l6652 0B42  
                 l6644 0000                   l6636 0000                   l6708 0000                   l6900 0259  
                 l6820 00B2                   l6812 0092                   l6804 0067                   l6398 0000  
                 l6486 06AA                   l6478 0696                   l6582 0000                   l6574 0000  
                 l6558 0000                   l6646 0000                   l6638 0000                   l6726 0D8C  
                 l6750 0000                   l6910 0000                   l6830 00DE                   l6822 0000  
                 l6814 00A2                   l6806 008C                   l6496 0000                   l6592 0F29  
                 l6584 0000                   l6576 0000                   l6672 0B7E                   l6664 0B66  
                 l6656 0B4E                   l6648 0B36                   l6680 0A8B                   l6744 0E52  
                 l6760 0AAA                   l6840 0000                   l6832 0000                   l6824 0000  
                 l6808 0000                   l6498 06C4                   l6594 0000                   l6586 0000  
                 l6578 0000                   l6682 0000                   l6674 0000                   l6690 0000  
                 l6738 0E0D                   l6762 0AAE                   l6770 0AC1                   l6754 0000  
                 l6930 0302                   l6922 02BA                   l6914 02B6                   l6906 0000  
                 l6850 012F                   l6842 0000                   l6596 0000                   l6588 0F1F  
                 l6668 0B72                   l6684 0A94                   l6676 0000                   l6748 0000  
                 l6756 0A9D                   l6772 0000                   l6924 02CF                   l6916 02C9  
                 l6908 028D                   l6852 0000                   l6844 0000                   l6836 0000  
                 l6828 0000                   l6780 0025                   l5982 0C48                   l5974 0000  
                 l6598 0000                   l6678 0A8A                   l6686 0000                   l6766 0ABA  
                 l6758 0AA3                   l6942 032A                   l6934 0000                   l6854 0000  
                 l6846 0000                   l6838 0000                   l6862 0178                   l6790 0000  
                 l6782 0000                   l6774 0000                   l5976 0000                   l6696 09BC  
                 l6952 0000                   l6944 0000                   l6936 0306                   l6928 02D6  
                 l6792 0059                   l5994 04B5                   l5986 0000                   l6970 0415  
                 l6962 03E9                   l6954 03CE                   l6946 0363                   l6938 031B  
                 l6890 0216                   l6874 01D5                   l6866 01AA                   l6858 0168  
                 l6786 0037                   l5988 0000                   l6892 0000                   l6884 0000  
                 l6956 03DC                   l6796 0000                   l6788 0000                   l5998 0000  
                 l6990 045E                   l6982 043C                   l6966 03FD                   l6894 0257  
                 l6886 0000                   l6878 01E6                   l6798 0000                   l6992 0462  
                 l6984 043F                   l6976 0422                   l6888 0000                   l6994 0000  
                 l6996 046F                   l6988 045B                   STR_1 107C                   _T0IE 005D  
                 _T0IF 005A                   _T0CS 040D                   _T0SE 040C                   u2320 0000  
                 u2065 08D6                   u2325 04E3                   u3045 0CB2                   u2435 0E94  
                 u2700 0BC0                   u2800 0C06                   u2720 0BCC                   u3440 0000  
                 u2625 0ED2                   u2740 0BE3                   u2660 0BA8                   u2485 0549  
                 u2565 0591                   u3525 01D3                   u3445 00F4                   u2814 0C08  
                 u2734 0BCE                   u3615 030F                   u2760 0BEE                   u2680 0BB5  
                 u3625 0325                   u3545 0286                   u2780 0BFB                   u3485 0181  
                 u1975 05F1                   u3807 0ADC                   u3735 0432                   u3495 01B4  
                 u3817 0AEF                   u3745 044D                   u3585 02C3                   u3907 0B93  
                 u3827 0B02                   u3917 0B99                   u3837 0B15                   u3685 03F7  
                 u3927 0BD0                   u3847 0B22                   u3695 040D                   u3937 0BD6  
                 u3857 0B2F                   u3947 0C0A                   u3867 0C20                   u3957 0C10  
                 u3877 0C26                   u3797 179A                   u3887 0C30                   u3897 0C36  
                 _TMR0 0001                   _main 1771                   _ngat 07B8           ___ftpack@arg 0072  
         ___ftpack@exp 0075           lcd_busy@busy 0073                   btemp 007E                   start 000C  
    ___bmul@multiplier 0021           ___ftmul@cntr 003F           ___ftmul@sign 0040           ___fttol@exp1 0030  
         ___fttol@lval 002C         ??_lcd_put_byte 0073                  ?_main 0070                  ?_ngat 0070  
      __end_of___awdiv 0EAF        __end_of___lbdiv 0A51        __end_of___ftadd 06F4        __end_of___awmod 0EEC  
      __end_of___lbmod 0A6D        __end_of___ftdiv 0CD7        __end_of___ftneg 0632                  _ANSEL 0188  
      __end_of___lldiv 05B2        __end_of___ftmul 0F5B        ___awdiv@divisor 0078        __end_of___llmod 0569  
      __end_of___ftsub 072A        __end_of___fttol 052B        ___awdiv@counter 0020           ___lltoft@exp 007A  
        ___awtoft@sign 007A                  _scale 0CD7        __end_of_isdigit 04B7          ___ftpack@sign 0076  
                _putch 0479                  main@v 0062        __end_of_isprint 0C4A                  pclath 000A  
                status 0003                  wtemp0 007E        ___lbdiv@divisor 0077        ___lbdiv@counter 0079  
         __end_of_main 1800           __end_of_ngat 07C7          lcd_gotoxy@col 0078          lcd_gotoxy@row 0077  
               ??_main 005F          ___fttol@sign1 002B                 ??_ngat 0070   __size_of__tdiv_to_l_ 0078  
     ___llmod@dividend 0029                 ?_scale 0041       ___awdiv@dividend 007A       __end_of___awtoft 0C6F  
               ?_putch 0070       __end_of___ftpack 0FA7                 _ANSELH 0189       __end_of___lltoft 0714  
               i1l1048 0000                 i1l5968 0000                 _TRISD1 0441                 _TRISE0 0448  
               _TRISD2 0442                 _TRISD3 0443                 _TRISD4 0444                 _TRISD5 0445  
               _TRISD6 0446                 _TRISD7 0447       __end_of_lcd_busy 0C3C       __end_of_lcd_init 0B85  
     __end_of_lcd_putc 0ACA                 ___bmul 0F5B                 ___ftge 047D                 ___wmul 04B7  
            ??___awdiv 007C              ??___lbdiv 0078              ??___ftadd 0047              ??___awmod 0076  
            ??___lbmod 0073              ??___ftdiv 0029              ??___ftneg 0075              ??___lldiv 007A  
            ??___ftmul 0038              ??___llmod 007A              ??___ftsub 007C              ??___fttol 0028  
               _fround 0931       ___awdiv@quotient 0022        ___awmod@divisor 0072        ___awmod@counter 0076  
               _printf 000F          lcd_put_byte@b 0072  ___ftmul@f3_as_product 003C              ??_isdigit 0072  
               saved_w 007E              ??_isprint 0072                 putch@c 007B       ___lbdiv@dividend 0078  
      ___lbmod@divisor 0072        ___lbmod@counter 0075   __end_of_lcd_put_byte 0C15             ___ftadd@f1 0041  
           ___ftadd@f2 0044             ___ftge@ff1 0072             ___ftge@ff2 0075             ___ftdiv@f1 0026  
           ___ftdiv@f2 0023             ___ftdiv@f3 002D             ___ftneg@f1 0072             ___awtoft@c 0020  
  ___bmul@multiplicand 007B             ___ftmul@f1 0032             ___ftmul@f2 0035             ___ftsub@f1 0050  
           ___ftsub@f2 004D             ___fttol@f1 0024         __pcstackCOMMON 0070             ___lltoft@c 0020  
        __end_of_scale 0E69          __end_of_putch 047D       ___lbdiv@quotient 007A             __div_to_l_ 0866  
    lcd_gotoxy@address 0079        __div_to_l_@exp1 002D        __div_to_l_@cntr 002C                ??_scale 0044  
      __div_to_l_@quot 0028                ??_putch 007B             __pbssBANK0 006B          __div_to_l_@f1 0072  
        __div_to_l_@f2 0075             __pmaintext 1771                ?___bmul 007B                ?___ftge 0072  
              ?___wmul 0072             __pintentry 0004                ?_fround 004D              ?___awtoft 0020  
            ?___ftpack 0072                ?_printf 0057              ?___lltoft 0020             _lcd_gotoxy 0A83  
            ?_lcd_busy 0070              ?_lcd_init 0070              ?_lcd_putc 0070             _scale$4106 0048  
      __size_of___bmul 000E        __size_of___ftge 002C                ___awdiv 0E69                ___lbdiv 0A36  
              ___ftadd 0632                ___awmod 0EAF                ___lbmod 0A51                ___ftdiv 0C6F  
              ___ftneg 062A                ___lldiv 0569        __size_of___wmul 0019                ___ftmul 0EEC  
              ___llmod 052B                ___ftsub 0714                ___fttol 04D0             ??___awtoft 007A  
           ??___ftpack 0077        __size_of_fround 0105             ??___lltoft 007A        __size_of_printf 046A  
          ?__div_to_l_ 0072                _dpowers 1054                _isdigit 04A9       ___awmod@dividend 0074  
              _isprint 0C3C  __size_of_lcd_put_byte 0090             ??_lcd_busy 0072             ??_lcd_init 0077  
           ??_lcd_putc 007A   end_of_initialization 07C9         lcd_put_byte@rs 0075        ___lldiv@divisor 0072  
      ___lldiv@counter 0024                printf@c 00B8                printf@f 00AE         __tdiv_to_l_@f1 0072  
       __tdiv_to_l_@f2 0075          ??__tdiv_to_l_ 0078           _lcd_put_byte 0B85       ___lbmod@dividend 0074  
          ?_lcd_gotoxy 0077            ___lbmod@rem 0076            printf@integ 00A5            ___ftdiv@exp 0030  
           main@count1 0067             main@count2 0069            printf@width 00AF    __size_of__div_to_l_ 00BE  
          ___ftmul@exp 003B         __end_of___bmul 0F69         __end_of___ftge 04A9         __end_of___wmul 04D0  
       __end_of_fround 0A36         __end_of_printf 0479    start_initialization 07C7    __end_of__tdiv_to_l_ 062A  
      ___llmod@divisor 0025        ___llmod@counter 007A               ??___bmul 007C               ??___ftge 0078  
  __size_of_lcd_gotoxy 0018               ??___wmul 0076               ??_fround 007C               ??_printf 005A  
           fround@prec 0056      __size_of___awtoft 001B      __size_of___ftpack 003E      __size_of___lltoft 0020  
        __pcstackBANK0 0020          __pcstackBANK1 00A0           _isdigit$3670 0072      __size_of_lcd_busy 0027  
    __size_of_lcd_init 00BB      __size_of_lcd_putc 002F               ?___awdiv 0078               ?___lbdiv 0077  
             ?___ftadd 0041              __ptext530 0CD7              __ptext531 0931               ?___awmod 0072  
            __ptext540 0B85              __ptext532 0A83              __ptext541 0EAF              __ptext533 0ACA  
            __ptext550 0A36              __ptext542 0569              __ptext534 06F4              __ptext526 000F  
            __ptext551 04B7              __ptext543 047D              __ptext535 0C54              __ptext527 0479  
            __ptext552 0F5B              __ptext544 062A              __ptext536 0EEC              __ptext528 0A9B  
            __ptext553 0866              __ptext545 052B              __ptext537 0C6F              __ptext529 0714  
            __ptext554 05B2              __ptext546 0E69              __ptext538 0632              __ptext555 04A9  
            __ptext547 04D0              __ptext539 0C15               ?___lbmod 0072              __ptext556 0C3C  
            __ptext548 0F69              __ptext557 07B8              __ptext549 0A51              __ptext558 0000  
             ?___ftdiv 0023               ?___ftneg 0072               ?___lldiv 0072               ?___ftmul 0032  
             ?___llmod 0025               ?___ftsub 004D              __npowers_ 1006               ?___fttol 0024  
            __pstrings 1000            __tdiv_to_l_ 05B2           ??__div_to_l_ 0020               ?_isdigit 0070  
             ?_isprint 0070         __size_of_scale 0192         __size_of_putch 0004      interrupt_function 0004  
       ___wmul@product 0076     __end_of__div_to_l_ 0924            __stringbase 1005      ___wmul@multiplier 0072  
           printf@_val 00A8             printf@flag 00AC             printf@fval 00B3             printf@prec 00B6  
            main@count 0065              lcd_putc@c 007A           ??_lcd_gotoxy 0078       lcd_put_byte@temp 0076  
         _isprint$3673 0072     __end_of_lcd_gotoxy 0A9B       __size_of___awdiv 0046       __size_of___lbdiv 001B  
     __size_of___ftadd 00C2       __size_of___awmod 003D       __size_of___lbmod 001C       __size_of___ftdiv 0068  
     __size_of___ftneg 0008       __size_of___lldiv 0049       __size_of___ftmul 006F       __size_of___llmod 003E  
     __size_of___ftsub 0016       __size_of___fttol 005B               ___awtoft 0C54               ___ftpack 0F69  
          _fround$4104 0053            _fround$4105 0050               ___lltoft 06F4       __size_of_isdigit 000E  
     __size_of_isprint 000E               __powers_ 102D               _lcd_busy 0C15               _lcd_init 0ACA  
             _lcd_putc 0A9B          __size_of_main 008F          __size_of_ngat 000F              printf@exp 00B1  
             isdigit@c 0073               scale@scl 004B               intlevel1 0000       __tdiv_to_l_@exp1 0025  
     __tdiv_to_l_@cntr 0024       __tdiv_to_l_@quot 0020       ___lldiv@dividend 0076               isprint@c 0073  
            stringcode 1000               printf@ap 00A4           ?__tdiv_to_l_ 0072            _printf$3162 00A0  
     ___lldiv@quotient 0020               stringdir 1000               stringtab 1000  
